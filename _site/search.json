[
  {
    "objectID": "take-home/the2.html",
    "href": "take-home/the2.html",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "take-home/the2.html#import-library",
    "href": "take-home/the2.html#import-library",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "2.1 Import Library",
    "text": "2.1 Import Library\nThe following code chunk utilizing pacman will import the required library (and install it if it does not exist in the environment yet).\n\npacman::p_load(tmap, sf, tidyverse, sfdep, knitr, Hmisc, mapview, DT, sp, stplanr, reshape2, skimr, performance, plotly, httr, corrplot, gifski, patchwork)\n\n\n\n\n\n\n\nPackages Explanations\n\n\n\n\n\n\ntmap: Used for creating thematic maps in R, both static and interactive, with extensive mapping capabilities.\nsf: Handles and manipulates geospatial data, enabling operations like reading, writing, transforming, and visualizing spatial data.\ntidyverse: A suite of R packages designed for data science tasks, including data manipulation, exploration, and visualization.\nsfdep: This package provides methods for measuring and diagnosing spatial dependence in linear regression models, particularly when working with spatial econometrics. It is tailored to work with ‘sf’ objects, which are used to handle spatial data in R.\nknitr: Allows for dynamic report generation with R, making it easy to integrate R code into reports and weave together narrative text and code output.\nHmisc: Contains many functions useful for data analysis, high-level graphics, utility operations, and functions for dealing with missing values.\nmapview: Facilitates the interactive viewing of spatial data in R, built on top of Leaflet.js.\nDT: Provides an R interface to the JavaScript library DataTables, useful for creating interactive tables in R markdown documents and Shiny apps.\nsp: Provides classes and methods for spatial data, and has been superseded by sf but is still widely used for compatibility reasons.\nstplanr: Offers sustainable transport planning tools for spatial lines, networks, and movement data.\nreshape2: An R package that allows you to flexibly reshape data, such as melting and casting data frames.\nskimr: Summarizes data in a frictionless way and produces a report with useful summary statistics.\nperformance: Assesses the quality and performance of statistical models, including checks for assumptions.\nplotly: An R package that creates interactive web graphics using the plotly.js library.\nhttr: Simplifies the process of working with HTTP requests, such as API calls.\ngifski: Converts images, plots, or animations into high-quality GIFs using the gifski library."
  },
  {
    "objectID": "take-home/the2.html#data-import-and-minor-wrangling",
    "href": "take-home/the2.html#data-import-and-minor-wrangling",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "2.2 Data Import and Minor Wrangling",
    "text": "2.2 Data Import and Minor Wrangling\nThis section will import the required aspatial and geospatial dataset. The process also involves minor data change like setting the correct reference system, and removing duplicates before going to more complex data wrangling in the next section.\n\nGeospatial\nthe following panel will show how each geospatial dataset is imported, modify the CRS Code to 3414 to standardize, check on the data in general, check for duplicates, and display how the data looks like in Singapore map.\n\n\n\n\n\n\nWhat is CRS Code?\n\n\n\n\n\nA Coordinate Reference System (CRS) Code is a standardized method for locating and describing positions on the Earth’s surface. It helps define how geographic data is represented in maps and digital systems.\n\n\n\n\n\n\n\n\n\nWhy 3414?\n\n\n\n\n\nThe CRS code 3414 specifically refers to the coordinate reference system used for geospatial data in Singapore. It’s a unique identifier assigned to this specific system, allowing geographers and mapping software to accurately interpret and display location-based information for Singapore.\n\n\n\n\nMPSZBus Stop LocationTrain StationTrain ExitBusinessEntertainmentFood & BeverageFinancial ServicesLeisure & RecreationRetails\n\n\nthe following code will import the masterplan subzone 2019 dataset and assign the correct coordinate reference.\n\n\nCode\n# Read spatial data for MPSZ-2019 and transform CRS\nmpsz &lt;- st_read(dsn='../data/geospatial',  # Specify data source directory\n                layer='MPSZ-2019') %&gt;%    # Specify layer to read\n  st_transform(crs=3414)                  # Transform CRS to 3414\n\n\nReading layer `MPSZ-2019' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# View the structure and contents of the mpsz data frame\nglimpse(mpsz)\n\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;chr&gt; \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"JURON…\n$ SUBZONE_C  &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ05\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WESTERN …\n$ PLN_AREA_C &lt;chr&gt; \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\", \"SI\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"WEST…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\", \"CR\",…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_read from sf package imports spatial vector data into R. It specifies the data source (dsn) and layer (layer). Here, it reads the ‘MPSZ-2019’ layer from the specified directory.\nst_transform from sf package transforms the coordinate reference system (CRS) of spatial data. In this case, it transforms the CRS of mpsz to 3414.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\nnext, check for possible duplicates using this code.\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(mpsz$SUBZONE_N) == nrow(mpsz), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nn_distinct from dplyr package calculates the number of unique values in a vector. In this code, it’s used to count the unique values in mpsz$SUBZONE_N.\nnrow from base R returns the number of rows in a data frame. Here, it’s used to get the total number of rows in mpsz.\nif_else from dplyr package performs a vectorized conditional operation. In this context, it checks if the number of unique SUBZONE_N values equals the total number of rows in mpsz. If they are equal, it returns “no duplicates detected”; otherwise, it returns “possible duplicates detected”.\n\n\n\n\nsince no duplicate is found, we can immediately try to visualize how does the master plan looks like in the map using the following code.\n\n\nCode\n# set tmap mode (plot for lighter rendering, view for analysis)\ntmap_mode('plot')\n\n# display the data in a map\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.3) +\n  tm_layout(main.title = 'Singapore Planning Zone', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_mode from tmap package sets the mode for creating maps. The mode 'plot' is chosen here for static map plotting, which is typically lighter and faster for rendering compared to the interactive 'view' mode.\ntm_shape from tmap package prepares spatial data (mpsz in this case) for plotting.\ntm_polygons from tmap package adds a layer of polygons to the map, with an alpha parameter to adjust the transparency of these polygons.\ntm_layout from tmap package customizes the layout of the map, including the title and its position.\nThis code snippet creates a thematic map displaying the Singapore Planning Zone with polygonal areas, each represented with a certain level of transparency.\n\n\n\n\n\n\nthe following code will import the bus stop location dataset and assign the correct coordinate reference.\n\n\nCode\nbusstop &lt;- st_read(dsn = \"../data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\n# check the data\nglimpse(busstop)\n\n\nRows: 5,159\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_read from sf package is used for reading spatial vector data into R. It imports data from a specified data source (dsn) and layer (layer). In this code, it reads the “BusStop” layer from the data source located at \"../data/geospatial\".\nst_transform from sf package transforms the coordinate reference system (CRS) of a spatial object. Here, it transforms the CRS of busstop to 3414.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\nNext, we will check for duplicates using the following code. BUS_STOP_N is used as the basis for duplicate checking because it will be the reference in joining the data\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(busstop$BUS_STOP_N) == nrow(busstop), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\nSince duplicates is found, we will try to check what are the duplicated value using the following code.\n\n\nCode\n# Subset rows where BUS_STOP_N has duplicates and arrange by BUS_STOP_N\nduplicates &lt;- busstop[duplicated(busstop$BUS_STOP_N) | duplicated(busstop$BUS_STOP_N, fromLast = TRUE), ] %&gt;%\n  arrange(BUS_STOP_N)\n\n# show the number of duplicates\nnrow(duplicates)\n\n\n[1] 30\n\n\nCode\n# Display the sorted rows with duplicate BUS_STOP_N\nkable(head(duplicates, n = 32))\n\n\n\n\n\n\n\n\n\n\n\nBUS_STOP_N\nBUS_ROOF_N\nLOC_DESC\ngeometry\n\n\n\n\n22501\nB02\nBlk 662A\nPOINT (13489.09 35536.4)\n\n\n22501\nB02\nBLK 662A\nPOINT (13488.02 35537.88)\n\n\n43709\nB06\nBLK 644\nPOINT (18963.42 36762.8)\n\n\n43709\nB06\nBLK 644\nPOINT (18952.02 36751.83)\n\n\n47201\nUNK\nNA\nPOINT (22616.75 47793.68)\n\n\n47201\nNIL\nW’LANDS NTH STN\nPOINT (22632.92 47934)\n\n\n51071\nB21\nMACRITCHIE RESERVOIR\nPOINT (28300.11 36045.9)\n\n\n51071\nB21\nMACRITCHIE RESERVOIR\nPOINT (28305.37 36036.67)\n\n\n52059\nB03\nOPP BLK 65\nPOINT (30770.3 34460.06)\n\n\n52059\nB09\nBLK 219\nPOINT (30565.45 36133.15)\n\n\n53041\nB05\nUpp Thomson Road\nPOINT (28105.8 37246.76)\n\n\n53041\nB07\nUpp Thomson Road\nPOINT (27956.34 37379.29)\n\n\n58031\nUNK\nOPP CANBERRA DR\nPOINT (27089.69 47570.9)\n\n\n58031\nUNK\nOPP CANBERRA DR\nPOINT (27111.07 47517.77)\n\n\n62251\nB03\nBef Blk 471B\nPOINT (35500.54 39943.41)\n\n\n62251\nB03\nBEF BLK 471B\nPOINT (35500.36 39943.34)\n\n\n67421\nB01\nCHENG LIM STN EXIT B\nPOINT (34548.54 42052.15)\n\n\n67421\nNIL\nCHENG LIM STN EXIT B\nPOINT (34741.77 42004.21)\n\n\n68091\nB01\nAFT BAKER ST\nPOINT (32164.11 42695.98)\n\n\n68091\nB08\nAFT BAKER ST\nPOINT (32038.84 43298.68)\n\n\n68099\nB02\nBEF BAKER ST\nPOINT (32154.9 42742.82)\n\n\n68099\nB07\nBEF BAKER ST\nPOINT (32004.05 43320.34)\n\n\n77329\nB01\nBEF PASIR RIS ST 53\nPOINT (40765.35 39452.18)\n\n\n77329\nB03\nPasir Ris Central\nPOINT (40728.15 39438.15)\n\n\n82221\nB01\nBLK 3A\nPOINT (35323.6 33257.05)\n\n\n82221\nB01\nBlk 3A\nPOINT (35308.74 33335.17)\n\n\n96319\nNA\nYusen Logistics\nPOINT (42187.23 34995.78)\n\n\n96319\nNIL\nYUSEN LOGISTICS\nPOINT (42187.23 34995.78)\n\n\n97079\nB14\nOPP ST. JOHN’S CRES\nPOINT (44144.57 38980.25)\n\n\n97079\nB14\nOPP ST. JOHN’S CRES\nPOINT (44055.75 38908.5)\n\n\n\n\n\nBased on the table, we can see that the duplicates does comes from the same bus stop code. Therefore, the folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 5161 to 5145.\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nbusstop &lt;- busstop[!duplicated(busstop$BUS_STOP_N) | duplicated(busstop$BUS_STOP_N, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(busstop)\n\n\nRows: 5,144\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\nnext, we try to visualize how does the bus stop distributionlooks like in the map using the following code.\n\n\nCode\n# set tmap mode (plot for lighter rendering, view for analysis)\ntmap_mode('plot')\n\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.3)+\n  tm_shape(busstop)+\n  tm_dots() +\n  tm_layout(main.title = 'Bus Stop Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nstation &lt;- st_read(dsn = '../data/geospatial',\n                        layer = 'RapidTransitSystemStation') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `RapidTransitSystemStation' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 220 features and 4 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 6068.209 ymin: 27478.44 xmax: 45377.5 ymax: 47913.58\nProjected CRS: SVY21\n\n\nCode\n# the data contain non closed ring, use st_is_valid to fix\nstation &lt;- station %&gt;%\n  filter(st_is_valid(.))\n         \n# check the data\nglimpse(station)\n\n\nRows: 217\nColumns: 5\n$ TYP_CD     &lt;int&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ STN_NAM    &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ TYP_CD_DES &lt;chr&gt; \"MRT\", \"MRT\", \"MRT\", \"MRT\", \"MRT\", \"LRT\", \"MRT\", \"MRT\", \"LR…\n$ STN_NAM_DE &lt;chr&gt; \"ESPLANADE MRT STATION\", \"PAYA LEBAR MRT STATION\", \"DHOBY G…\n$ geometry   &lt;POLYGON [m]&gt; POLYGON ((30566.07 30621.21..., POLYGON ((34495.6 3…\n\n\nthe duplicate consider geometry as the unique value\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(station$geometry) == nrow(station), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\nall MRT Station location are unique\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(station) +\n  tm_fill(col = 'green',\n          id = 'STN_NAM_DE') +\n  tm_layout(main.title = 'MRT Station Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\ntrainexit &lt;- st_read(dsn = '../data/geospatial',\n                     layer = 'Train_Station_Exit_Layer') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `Train_Station_Exit_Layer' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 565 features and 2 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6134.086 ymin: 27499.7 xmax: 45356.36 ymax: 47865.92\nProjected CRS: SVY21\n\n\nCode\nglimpse(trainexit)\n\n\nRows: 565\nColumns: 3\n$ stn_name  &lt;chr&gt; \"MACPHERSON MRT STATION\", \"MACPHERSON MRT STATION\", \"MACPHER…\n$ exit_code &lt;chr&gt; \"Exit A\", \"Exit B\", \"Exit C\", \"Exit B\", \"Exit A\", \"Exit A\", …\n$ geometry  &lt;POINT [m]&gt; POINT (34285.07 34322.99), POINT (34382.15 34231.9), P…\n\n\nthe duplicate consider geometry as the unique value\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(trainexit$geometry) == nrow(trainexit), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\nall MRT Station Exit location are unique\n\n\nCode\n# visualize the data\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.5)+\n  tm_shape(trainexit)+\n  tm_dots(col = 'blue',\n          id = 'exit_id') +\n  tm_layout(main.title = 'Train Station Exit Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nbiz &lt;- st_read(dsn = \"../data/geospatial\",\n                   layer = \"Business\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `Business' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(biz)\n\n\nRows: 6,550\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"JOHN CHEN\", \"TROPICAL INDUSTRIAL BUILDING\", \"LIAN CHEONG I…\n$ POI_ST_NUM &lt;chr&gt; \"6\", \"14\", \"12\", NA, \"2\", \"21\", \"68\", \"68\", NA, \"14\", \"10\",…\n$ POI_ST_NAM &lt;chr&gt; \"LITTLE RD\", \"LITTLE RD\", \"LITTLE RD\", NA, \"LITTLE RD\", \"LO…\n$ geometry   &lt;POINT [m]&gt; POINT (33818.36 35620.16), POINT (33770.51 35610.2), …\n\n\nconsidering some business might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(biz) == nrow(biz), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\nshow the duplicates\n\n\nCode\n# Subset rows where BUS_STOP_N has duplicates and arrange by BUS_STOP_N\nduplicates &lt;- biz[duplicated(biz) | duplicated(biz, fromLast = TRUE), ] %&gt;%\n  arrange(POI_NAME)\n\n# Display the sorted rows with duplicate BUS_STOP_N\nhead(duplicates)\n\n\nSimple feature collection with 2 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 27455.94 ymin: 28233.69 xmax: 27455.94 ymax: 28233.69\nProjected CRS: SVY21 / Singapore TM\n           POI_NAME POI_ST_NUM  POI_ST_NAM                  geometry\n1 KEPPEL DISTRIPARK        511 KG BAHRU RD POINT (27455.94 28233.69)\n2 KEPPEL DISTRIPARK        511 KG BAHRU RD POINT (27455.94 28233.69)\n\n\nThe output shows that it really is the same business.\nThe folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 6550 to 6549\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nbiz &lt;- biz[!duplicated(biz) | duplicated(biz, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(biz)\n\n\nRows: 6,549\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"JOHN CHEN\", \"TROPICAL INDUSTRIAL BUILDING\", \"LIAN CHEONG I…\n$ POI_ST_NUM &lt;chr&gt; \"6\", \"14\", \"12\", NA, \"2\", \"21\", \"68\", \"68\", NA, \"14\", \"10\",…\n$ POI_ST_NAM &lt;chr&gt; \"LITTLE RD\", \"LITTLE RD\", \"LITTLE RD\", NA, \"LITTLE RD\", \"LO…\n$ geometry   &lt;POINT [m]&gt; POINT (33818.36 35620.16), POINT (33770.51 35610.2), …\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(biz)+\n  tm_dots(col = 'red') +\n  tm_layout(main.title = 'Business Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nentertn &lt;- st_read(dsn = '../data/geospatial',\n                     layer = 'entertn') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `entertn' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 114 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 10809.34 ymin: 26528.63 xmax: 41600.62 ymax: 46375.77\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(entertn)\n\n\nRows: 114\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"TP AUDITORIUM\", \"NP CONVENTION CENTRE\", \"SP AUDITORIUM\", \"…\n$ POI_ST_NUM &lt;chr&gt; NA, NA, NA, \"1\", \"350\", NA, \"201\", NA, \"83\", \"328\", NA, \"5\"…\n$ POI_ST_NAM &lt;chr&gt; NA, NA, NA, \"FULLERTON SQ\", \"BALESTIER RD\", \"TRENGGANU ST\",…\n$ geometry   &lt;POINT [m]&gt; POINT (39115.71 36392.13), POINT (21533.12 34921.34),…\n\n\nconsidering some entertainment might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(entertn) == nrow(entertn), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\nshow the duplicates\n\n\nCode\n# Subset rows where BUS_STOP_N has duplicates and arrange by BUS_STOP_N\nduplicates &lt;- entertn[duplicated(entertn) | duplicated(entertn, fromLast = TRUE), ] %&gt;%\n  arrange(POI_NAME)\n\n# Display the sorted rows with duplicateW\nhead(duplicates)\n\n\nSimple feature collection with 2 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 30063.5 ymin: 30677.41 xmax: 30063.5 ymax: 30677.41\nProjected CRS: SVY21 / Singapore TM\n         POI_NAME POI_ST_NUM  POI_ST_NAM                 geometry\n1 CAPITOL THEATRE         13 STAMFORD RD POINT (30063.5 30677.41)\n2 CAPITOL THEATRE         13 STAMFORD RD POINT (30063.5 30677.41)\n\n\nThe output shows that it really is the same entertainment\nThe folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 114 to 113\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nentertn &lt;- entertn[!duplicated(entertn) | duplicated(entertn, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(entertn)\n\n\nRows: 113\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"TP AUDITORIUM\", \"NP CONVENTION CENTRE\", \"SP AUDITORIUM\", \"…\n$ POI_ST_NUM &lt;chr&gt; NA, NA, NA, \"1\", \"350\", NA, \"201\", NA, \"83\", \"328\", NA, \"5\"…\n$ POI_ST_NAM &lt;chr&gt; NA, NA, NA, \"FULLERTON SQ\", \"BALESTIER RD\", \"TRENGGANU ST\",…\n$ geometry   &lt;POINT [m]&gt; POINT (39115.71 36392.13), POINT (21533.12 34921.34),…\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(entertn)+\n  tm_dots(col = 'cyan',\n          id = 'POI_NAME') +\n  tm_layout(main.title = 'Entertainment Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nfnb &lt;- st_read(dsn = '../data/geospatial',\n                     layer = 'F&B') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `F&B' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1919 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25343.27 xmax: 45462.43 ymax: 48796.21\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(fnb)\n\n\nRows: 1,919\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"KHEL\", \"I PUB\", \"LARK LOUNGE & NITE-CLUB\", \"CHAKRAVARTHY\",…\n$ POI_ST_NUM &lt;chr&gt; \"141\", \"14\", \"195\", \"195\", \"48\", \"36\", \"10\", \"697\", \"11\", \"…\n$ POI_ST_NAM &lt;chr&gt; \"KITCHENER RD\", \"CHUN TIN RD\", \"LAVENDER ST\", \"LAVENDER ST\"…\n$ geometry   &lt;POINT [m]&gt; POINT (30654.44 32466.51), POINT (21515.34 36007.18),…\n\n\nconsidering some F & B might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(fnb) == nrow(fnb), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(fnb)+\n  tm_dots(col = 'magenta',\n          id = 'POI_NAME') +\n  tm_layout(main.title = 'Food & Beverage Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nfinance &lt;- st_read(dsn = '../data/geospatial',\n                   layer = 'FinServ') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `FinServ' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 3320 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4881.527 ymin: 25171.88 xmax: 46526.16 ymax: 49338.02\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(finance)\n\n\nRows: 3,320\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"UOB\", \"POSB\", \"UOB\", \"OCBC\", \"OCBC\", \"MAYBANK\", \"ADPOST MO…\n$ POI_ST_NUM &lt;chr&gt; \"201\", \"375\", \"375\", \"375\", NA, \"707\", \"163\", NA, \"11\", NA,…\n$ POI_ST_NAM &lt;chr&gt; \"YISHUN AVE 2\", \"COMMONWEALTH AVE\", \"COMMONWEALTH AVE\", \"CO…\n$ geometry   &lt;POINT [m]&gt; POINT (27966.77 44304.65), POINT (24163.96 31606.25),…\n\n\nconsidering some financial services might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(finance) == nrow(finance), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\nshow the duplicates\n\n\nCode\n# Subset rows for duplicates and arrange by POI_NAME and POI_ST_NAM\nduplicates &lt;- finance[duplicated(finance) | duplicated(finance, fromLast = TRUE), ] %&gt;%\n  arrange(POI_NAME, POI_ST_NAM)\n\n# Display the sorted rows with duplicatew\nkable(head(duplicates, n=20))\n\n\n\n\n\n\n\n\n\n\n\nPOI_NAME\nPOI_ST_NUM\nPOI_ST_NAM\ngeometry\n\n\n\n\nANZ\nNA\nMARINE PARADE CENTRAL\nPOINT (36195.63 31542.21)\n\n\nANZ\nNA\nMARINE PARADE CENTRAL\nPOINT (36195.63 31542.21)\n\n\nANZ\n87\nMARINE PARADE CENTRAL\nPOINT (36057.62 31668.26)\n\n\nANZ\n87\nMARINE PARADE CENTRAL\nPOINT (36057.62 31668.26)\n\n\nANZ\n360\nORCHARD RD\nPOINT (27714.14 31996.56)\n\n\nANZ\n360\nORCHARD RD\nPOINT (27714.14 31996.56)\n\n\nANZ\n50\nRAFFLES PL\nPOINT (30017.88 29712.09)\n\n\nANZ\n50\nRAFFLES PL\nPOINT (30017.88 29712.09)\n\n\nBANK OF CHINA\n4\nBATTERY RD\nPOINT (30113.59 29758.53)\n\n\nBANK OF CHINA\n4\nBATTERY RD\nPOINT (30113.59 29758.53)\n\n\nBANK OF CHINA\n60\nEU TONG SEN ST\nPOINT (29271.11 29829.29)\n\n\nBANK OF CHINA\n60\nEU TONG SEN ST\nPOINT (29271.11 29829.29)\n\n\nBANK OF CHINA\n133\nMIDDLE RD\nPOINT (30189.25 31295.52)\n\n\nBANK OF CHINA\n133\nMIDDLE RD\nPOINT (30189.25 31295.52)\n\n\nBANK OF CHINA\n83\nPUNGGOL CENTRAL\nPOINT (35606.57 43071.85)\n\n\nBANK OF CHINA\n83\nPUNGGOL CENTRAL\nPOINT (35606.57 43071.85)\n\n\nCIMB BANK\n270\nORCHARD RD\nPOINT (28308.43 31676.99)\n\n\nCIMB BANK\n270\nORCHARD RD\nPOINT (28308.43 31676.99)\n\n\nCIMB BANK\n50\nRAFFLES PL\nPOINT (30017.88 29712.09)\n\n\nCIMB BANK\n50\nRAFFLES PL\nPOINT (30017.88 29712.09)\n\n\n\n\n\nThe output shows that it really is the same financial service\nThe folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 3320 to 3058\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nfinance &lt;- finance[!duplicated(finance) | duplicated(finance, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(finance)\n\n\nRows: 3,058\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"UOB\", \"POSB\", \"UOB\", \"OCBC\", \"OCBC\", \"MAYBANK\", \"ADPOST MO…\n$ POI_ST_NUM &lt;chr&gt; \"201\", \"375\", \"375\", \"375\", NA, \"707\", \"163\", NA, \"11\", NA,…\n$ POI_ST_NAM &lt;chr&gt; \"YISHUN AVE 2\", \"COMMONWEALTH AVE\", \"COMMONWEALTH AVE\", \"CO…\n$ geometry   &lt;POINT [m]&gt; POINT (27966.77 44304.65), POINT (24163.96 31606.25),…\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(finance)+\n  tm_dots(col = 'black',\n          id = 'POI_NAME') +\n  tm_layout(main.title = 'Financial Service Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nlnr &lt;- st_read(dsn = '../data/geospatial',\n                   layer = 'Liesure&Recreation') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `Liesure&Recreation' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 1217 features and 30 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 6010.495 ymin: 25134.28 xmax: 48439.77 ymax: 50078.88\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(lnr)\n\n\nRows: 1,217\nColumns: 31\n$ LINK_ID    &lt;dbl&gt; 914885888, 1046871091, 845355245, 940657500, 940657500, 941…\n$ POI_ID     &lt;dbl&gt; 1192316147, 1132324271, 1132324254, 1110521716, 1110521715,…\n$ SEQ_NUM    &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,…\n$ FAC_TYPE   &lt;int&gt; 8410, 7997, 7997, 7997, 7997, 8410, 7997, 7997, 7997, 7997,…\n$ POI_NAME   &lt;chr&gt; \"NIE ART GALLERY\", \"ASPIRE CONCEPT\", \"SOCCERPUNTER\", \"ANAND…\n$ POI_LANGCD &lt;chr&gt; \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"EN…\n$ POI_NMTYPE &lt;chr&gt; \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"B\", \"J\", \"B\", \"B\", \"B\", \"B\",…\n$ POI_ST_NUM &lt;chr&gt; NA, \"883\", \"14\", \"1\", \"1\", \"39\", NA, NA, \"108\", \"11\", \"11\",…\n$ ST_NUM_FUL &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"169A\", NA, NA,…\n$ ST_NFUL_LC &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, \"ENG\", NA, NA, …\n$ ST_NAME    &lt;chr&gt; \"NANYANG CRES\", \"NORTH BRIDGE RD\", \"ROBINSON RD\", \"MARINE P…\n$ ST_LANGCD  &lt;chr&gt; \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", \"ENG\", NA, NA, \"ENG\", \"E…\n$ POI_ST_SD  &lt;chr&gt; \"R\", \"L\", \"L\", \"R\", \"R\", \"L\", \"R\", \"R\", \"L\", \"L\", \"L\", \"R\",…\n$ ACC_TYPE   &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ PH_NUMBER  &lt;chr&gt; NA, \"66347769\", NA, NA, \"63446164\", \"63327591\", \"67659324\",…\n$ CHAIN_ID   &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ NAT_IMPORT &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ PRIVATE    &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ IN_VICIN   &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\",…\n$ NUM_PARENT &lt;int&gt; 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 2, 0, 0, 0, 0,…\n$ NUM_CHILD  &lt;int&gt; 0, 0, 0, 0, 0, 0, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,…\n$ PERCFRREF  &lt;int&gt; NA, NA, NA, 43, 43, 51, 40, 40, NA, NA, 40, 99, 59, 15, NA,…\n$ VANCITY_ID &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ ACT_ADDR   &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"1 CHOA CHU KANG STREET 53         …\n$ ACT_LANGCD &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"ENG\", \"ENG\", NA, NA, NA, NA, NA, N…\n$ ACT_ST_NAM &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"CHOA CHU KANG STREET 53\", \"CHOA CH…\n$ ACT_ST_NUM &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"1\", \"1\", NA, NA, NA, NA, NA, NA, N…\n$ ACT_ADMIN  &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"SINGAPORE\", \"SINGAPORE\", NA, NA, N…\n$ ACT_POSTAL &lt;chr&gt; NA, NA, NA, NA, NA, NA, \"689236\", \"689236\", NA, NA, NA, NA,…\n$ ENTR_TYPE  &lt;chr&gt; NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ geometry   &lt;POINT [m]&gt; POINT (10664.66 36585.97), POINT (31490.24 32040.81),…\n\n\n\n\nCode\nn_distinct(lnr$LINK_ID)\n\n\n[1] 908\n\n\nCode\nn_distinct(lnr$POI_ID)\n\n\n[1] 1141\n\n\nCode\nn_distinct(lnr$geometry)\n\n\n[1] 988\n\n\nconsidering some leisure & recreation might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(lnr) == nrow(lnr), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\"\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(alpha = 0.01)+\n  tm_shape(lnr)+\n  tm_dots(col = 'coral',\n          id = 'POI_NAME') +\n  tm_layout(main.title = 'Leisure & Recreation Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\nCode\nretails &lt;- st_read(dsn = '../data/geospatial',\n                   layer = 'Retails') %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `Retails' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 37635 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 4737.982 ymin: 25171.88 xmax: 48265.04 ymax: 50135.28\nProjected CRS: SVY21 / Singapore TM\n\n\nCode\nglimpse(retails)\n\n\nRows: 37,635\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"TIAN KEE & CO\", \"PEOPLE TRADITIONAL CHINESE MEDICAL\", \"RIV…\n$ POI_ST_NUM &lt;chr&gt; \"12\", \"12\", NA, NA, \"588\", \"243\", \"208\", \"267\", \"231\", \"158…\n$ POI_ST_NAM &lt;chr&gt; \"DAKOTA CRES\", \"DAKOTA CRES\", NA, NA, \"SERANGOON RD\", \"ALEX…\n$ geometry   &lt;POINT [m]&gt; POINT (33713.83 32023.15), POINT (33713.83 32023.15),…\n\n\nconsidering some financial services might have branches, the duplicate condition here is only if all column value is the same\n\n\nCode\n# check for duplicates based on unique id\nif_else(n_distinct(retails) == nrow(retails), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"possible duplicates detected\"\n\n\nshow the duplicates\n\n\nCode\n# Subset rows for duplicates and arrange by POI_NAME and POI_ST_NAM\nduplicates &lt;- retails[duplicated(retails) | duplicated(retails, fromLast = TRUE), ] %&gt;%\n  arrange(POI_NAME, POI_ST_NAM)\n\n# Display the sorted rows with duplicatew\nkable(head(duplicates, n=20))\n\n\n\n\n\n\n\n\n\n\n\nPOI_NAME\nPOI_ST_NUM\nPOI_ST_NAM\ngeometry\n\n\n\n\n10 & 10 SPORTING CO.\n28\nKALLANG PL\nPOINT (31757.32 33054.78)\n\n\n10 & 10 SPORTING CO.\n28\nKALLANG PL\nPOINT (31757.32 33054.78)\n\n\n123 SALES\n662\nBUFFALO RD\nPOINT (29895.44 32149.16)\n\n\n123 SALES\n662\nBUFFALO RD\nPOINT (29895.44 32149.16)\n\n\nAIK BAN HENG & TRADING\n456\nANG MO KIO AVE 10\nPOINT (30820.2 38832.31)\n\n\nAIK BAN HENG & TRADING\n456\nANG MO KIO AVE 10\nPOINT (30820.2 38832.31)\n\n\nAIK KIONG ENGINEERING CO\n90\nDUNLOP ST\nPOINT (30182.57 31993.25)\n\n\nAIK KIONG ENGINEERING CO\n90\nDUNLOP ST\nPOINT (30182.57 31993.25)\n\n\nALEXANDRA CENTRAL\n321\nALEXANDRA RD\nPOINT (24837.25 30020.6)\n\n\nALEXANDRA CENTRAL\n321\nALEXANDRA RD\nPOINT (24837.25 30020.6)\n\n\nANACAONA\n128\nDUNLOP ST\nPOINT (30113.57 32037.48)\n\n\nANACAONA\n128\nDUNLOP ST\nPOINT (30113.57 32037.48)\n\n\nANTECH INTERNET CAFE\n44\nUPP DICKSON RD\nPOINT (30170.33 32060.7)\n\n\nANTECH INTERNET CAFE\n44\nUPP DICKSON RD\nPOINT (30170.33 32060.7)\n\n\nBABY GUESS\n290\nORCHARD RD\nPOINT (28306.21 31787.57)\n\n\nBABY GUESS\n290\nORCHARD RD\nPOINT (28306.21 31787.57)\n\n\nBAN CHOON MEDICAL STORE\n130\nTELOK AYER ST\nPOINT (29649.5 29342.76)\n\n\nBAN CHOON MEDICAL STORE\n130\nTELOK AYER ST\nPOINT (29649.5 29342.76)\n\n\nBANG & OLUFSEN\n10\nSCOTTS RD\nPOINT (27957.87 32092.76)\n\n\nBANG & OLUFSEN\n10\nSCOTTS RD\nPOINT (27957.87 32092.76)\n\n\n\n\n\nThe output indicates that it really is the same retail business\nThe folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 37635 to 37463\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nretails &lt;- retails[!duplicated(retails) | duplicated(retails, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(retails)\n\n\nRows: 37,463\nColumns: 4\n$ POI_NAME   &lt;chr&gt; \"TIAN KEE & CO\", \"PEOPLE TRADITIONAL CHINESE MEDICAL\", \"RIV…\n$ POI_ST_NUM &lt;chr&gt; \"12\", \"12\", NA, NA, \"588\", \"243\", \"208\", \"267\", \"231\", \"158…\n$ POI_ST_NAM &lt;chr&gt; \"DAKOTA CRES\", \"DAKOTA CRES\", NA, NA, \"SERANGOON RD\", \"ALEX…\n$ geometry   &lt;POINT [m]&gt; POINT (33713.83 32023.15), POINT (33713.83 32023.15),…\n\n\nvisualize the distribution on the map\n\n\nCode\n# visualize the output\ntm_shape(mpsz) +\n  tm_polygons(alpha = 0.01) +\n  tm_shape(finance) +\n  tm_dots(col = 'lightcoral', id = 'POI_NAME') +\n  tm_layout(main.title=\"Retail Distribution Map\", main.title.position = \"center\")\n\n\n\n\n\n\n\n\n\n\nAspatial\nThis subsection will import the aspatial data used in this project and check it. The data includes Passenger Volume by Origin Destination Bus Stops and HDB data which explanations can be found in previous section.\n\nPassenger Volume\nFirstly, the following code will import the Passenger Volume by Origin Destination Bus Stops dataset. At the same time, it will also set the reference bus stop code data type to factor for easing compatibility issue and more efficient processing. As previously mentioned, this project will focus on weekday morning peak, so the code will also filter the data by that criteria, grouping it using the reference column, while summing the total trip for each unique grouped reference value. Finally, the code will generate output of summary statistics of the resulting dataset.\n\n\nCode\n# Load csv file\nodb10 &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202310.csv.gz\")\n\n# change georeference data type into factors\nodb10 &lt;- odb10 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n# filter and group the data\nodb10 &lt;- odb10 %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\", \n         TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n# check the summary statistics of resulting dataframe\ndescribe(odb10)\n\n\nodb10 \n\n 3  Variables      242208  Observations\n--------------------------------------------------------------------------------\nORIGIN_PT_CODE \n       n  missing distinct \n  242208        0     5029 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nDESTINATION_PT_CODE \n       n  missing distinct \n  242208        0     5043 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nTRIPS \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n  242208        0     3335    0.997    107.2    180.8        1        1 \n     .25      .50      .75      .90      .95 \n       3       15       57      187      373 \n\nlowest :     1     2     3     4     5, highest: 41201 46505 72829 74796 97600\n--------------------------------------------------------------------------------\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nread_csv from readr package reads a CSV file into R, converting it to a data frame.\nmutate from dplyr package is used to add new variables to a data frame or modify existing ones. Here, it converts ORIGIN_PT_CODE and DESTINATION_PT_CODE to factors.\nfilter from dplyr package is used to subset rows based on specified conditions. In this code, it filters data for weekdays during morning peak hours (6 to 9 AM).\ngroup_by from dplyr package groups the data by specified columns, here by ORIGIN_PT_CODE and DESTINATION_PT_CODE.\nsummarise from dplyr package calculates summary statistics for each group, in this case summing up TOTAL_TRIPS.\ndescribe from Hmisc package provides a detailed summary of an object’s contents, typically offering statistics like mean, standard deviation, frequency, and others.\n\n\n\n\n\n\n\n\n\n\nHow to Read the Output?\n\n\n\n\n\nThe data provides details about the origin and destination points, along with the corresponding number of total trips, time information, and categorization based on day types. The variable summaries indicate the data distribution, with details such as the unique values, frequency, and descriptive statistics for each column.\n\n\n\n\n\nHDB\nFor the HDB dataset\n\n\nCode\n# Load csv file\nhdb &lt;- read_csv(\"../data/aspatial/hdb.csv\")\n\n# check the data\nglimpse(hdb)\n\n\nRows: 12,442\nColumns: 37\n$ ...1                  &lt;dbl&gt; 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14…\n$ blk_no                &lt;chr&gt; \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"…\n$ street                &lt;chr&gt; \"BEACH RD\", \"BEDOK STH AVE 1\", \"CANTONMENT RD\", …\n$ max_floor_lvl         &lt;dbl&gt; 16, 14, 2, 15, 4, 25, 12, 14, 12, 2, 15, 15, 13,…\n$ year_completed        &lt;dbl&gt; 1970, 1975, 2010, 1982, 1975, 1982, 1975, 1977, …\n$ residential           &lt;chr&gt; \"Y\", \"Y\", \"N\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"N\"…\n$ commercial            &lt;chr&gt; \"Y\", \"N\", \"Y\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"Y\", \"Y\"…\n$ market_hawker         &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ miscellaneous         &lt;chr&gt; \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"Y\", \"N\", \"N\"…\n$ multistorey_carpark   &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ precinct_pavilion     &lt;chr&gt; \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\", \"N\"…\n$ bldg_contract_town    &lt;chr&gt; \"KWN\", \"BD\", \"CT\", \"BD\", \"PRC\", \"BM\", \"QT\", \"GL\"…\n$ total_dwelling_units  &lt;dbl&gt; 142, 206, 0, 102, 55, 96, 125, 247, 95, 0, 220, …\n$ `1room_sold`          &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `2room_sold`          &lt;dbl&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `3room_sold`          &lt;dbl&gt; 138, 204, 0, 0, 54, 0, 118, 0, 62, 0, 216, 214, …\n$ `4room_sold`          &lt;dbl&gt; 1, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,…\n$ `5room_sold`          &lt;dbl&gt; 2, 2, 0, 92, 1, 96, 7, 0, 33, 0, 4, 5, 0, 4, 0, …\n$ exec_sold             &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ multigen_sold         &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ studio_apartment_sold &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ `1room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 319, 0, 0, 0…\n$ `2room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 247, 0, 0, 0, 0, 0, 0, 56, …\n$ `3room_rental`        &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 1,…\n$ other_room_rental     &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 14, 0,…\n$ lat                   &lt;dbl&gt; 1.295097, 1.320852, 1.275488, 1.327969, 1.388610…\n$ lng                   &lt;dbl&gt; 103.8541, 103.9337, 103.8414, 103.9227, 103.9881…\n$ building              &lt;chr&gt; \"RAFFLES HOTEL\", \"NIL\", \"PINNACLE @ DUXTON\", \"PI…\n$ addr                  &lt;chr&gt; \"1 BEACH ROAD RAFFLES HOTEL SINGAPORE 189673\", \"…\n$ postal                &lt;chr&gt; \"189673\", \"460001\", \"080001\", \"461001\", \"500001\"…\n$ SUBZONE_NO            &lt;dbl&gt; 2, 6, 3, 3, 1, 9, 10, 5, 3, 5, 1, 5, 2, 2, 1, 7,…\n$ SUBZONE_N             &lt;chr&gt; \"CITY HALL\", \"BEDOK SOUTH\", \"CHINATOWN\", \"KEMBAN…\n$ SUBZONE_C             &lt;chr&gt; \"DTSZ02\", \"BDSZ06\", \"OTSZ03\", \"BDSZ03\", \"CHSZ01\"…\n$ PLN_AREA_N            &lt;chr&gt; \"DOWNTOWN CORE\", \"BEDOK\", \"OUTRAM\", \"BEDOK\", \"CH…\n$ PLN_AREA_C            &lt;chr&gt; \"DT\", \"BD\", \"OT\", \"BD\", \"CH\", \"BM\", \"QT\", \"GL\", …\n$ REGION_N              &lt;chr&gt; \"CENTRAL REGION\", \"EAST REGION\", \"CENTRAL REGION…\n$ REGION_C              &lt;chr&gt; \"CR\", \"ER\", \"CR\", \"ER\", \"ER\", \"CR\", \"CR\", \"CR\", …\n\n\nvisualize the distribution\n\n\nCode\nhdb_sf &lt;- st_as_sf(hdb,\n                   coords = c(\"lng\", \"lat\"),\n                   crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(hdb_sf) +\n  tm_dots(col = 'lightblue',\n          id = 'building') +\n  tm_layout(main.title = 'HDB Distribution Map', main.title.position = \"center\")\n\n\n\n\n\n\n\nSchools\nFor the School dataset\nGeocoding is the conversion of an address or postal code into geographic coordinates, typically latitude and longitude. The Singapore Land Authority offers the OneMap API, specifically the Search API, which retrieves latitude, longitude, and x,y coordinates for a given address or postal code.\nTo perform geocoding using the SLA OneMap API, the provided code, written in R, reads input data from a CSV file using the read_csv function from the readr package. The httr package’s HTTP call functions are then used to send individual records to the OneMap geocoding server.\nThe geocoding process creates two data frames: found for successfully geocoded records and not_found for those that failed. The found data table is joined with the initial CSV data table using a unique identifier (POSTAL) and saved as a new CSV file named found.\n\n\nCode\nurl &lt;- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv &lt;- read_csv(\"../data/aspatial/Generalinformationofschools.csv\")\npostcodes &lt;- csv$postal_code\n\nfound &lt;- data.frame()\nnot_found &lt;- data.frame()\n\nfor(postcode in postcodes){\n  query &lt;-list('searchVal' = postcode, 'returnGeom'='Y', 'getAddrDetails'='Y', 'pageNum' = '1')\n  res  &lt;- GET(url, query=query)\n  \n  if((content(res)$found)!=0)\n    found&lt;-rbind(found, data.frame(content(res))[4:13])\n  else {\n  not_found = data.frame(postcode)\n  }\n}\n\nglimpse(found)\n\n\nRows: 345\nColumns: 10\n$ results.SEARCHVAL &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.BLK_NO    &lt;chr&gt; \"11\", \"31\", \"10\", \"751\", \"100\", \"2A\", \"31\", \"19\", \"1…\n$ results.ROAD_NAME &lt;chr&gt; \"WOODLANDS CIRCLE\", \"WOODLANDS CRESCENT\", \"YISHUN ST…\n$ results.BUILDING  &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.ADDRESS   &lt;chr&gt; \"11 WOODLANDS CIRCLE THE LEARNING HARBOUR @ ADMIRALT…\n$ results.POSTAL    &lt;chr&gt; \"738907\", \"737916\", \"768643\", \"768928\", \"579646\", \"1…\n$ results.X         &lt;chr&gt; \"24315.9398124339\", \"24559.0472937012\", \"27958.13714…\n$ results.Y         &lt;chr&gt; \"47135.3542042952\", \"47504.7873554379\", \"46096.26276…\n$ results.LATITUDE  &lt;chr&gt; \"1.44254963931583\", \"1.44589068910993\", \"1.433152715…\n$ results.LONGITUDE &lt;chr&gt; \"103.800213682734\", \"103.802398196596\", \"103.8329424…\n\n\n\n\nCode\nschools = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\n\n# manually add the Zhenghua Secondary School data\nschools[schools$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LATITUDE\"] &lt;- 1.3887\nschools[schools$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LONGITUDE\"] &lt;- 103.7652\n\n# check the output\nglimpse(schools)\n\n\nRows: 350\nColumns: 40\n$ postal_code        &lt;chr&gt; \"088256\", \"099138\", \"099757\", \"099840\", \"109100\", \"…\n$ school_name        &lt;chr&gt; \"CANTONMENT PRIMARY SCHOOL\", \"CHIJ ST. THERESA'S CO…\n$ url_address        &lt;chr&gt; \"http://www.cantonmentpri.moe.edu.sg\", \"http://www.…\n$ address            &lt;chr&gt; \"1    Cantonment Close\", \"160  LOWER DELTA ROAD\", \"…\n$ telephone_no       &lt;chr&gt; \"65119555\", \"64775777\", \"62730096\", \"62733937\", \"62…\n$ telephone_no_2     &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ fax_no             &lt;chr&gt; \"65119556\", \"64775700\", \"62731710\", \"62763083\", \"62…\n$ fax_no_2           &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ email_address      &lt;chr&gt; \"cantonment_ps@moe.edu.sg\", \"CHIJSTCS@MOE.EDU.SG\", …\n$ mrt_desc           &lt;chr&gt; \"Tanjong Pagar Outram Park\", \"HARBOURFRONT MRT, TIO…\n$ bus_desc           &lt;chr&gt; \"75, 167, 196\", \"65, 121, 123, 123M, 124, 131, 131M…\n$ principal_name     &lt;chr&gt; \"MRS MANOKARA SUGUNAVATHI\", \"MDM TAN MEI MEI JENNY\"…\n$ first_vp_name      &lt;chr&gt; \"MRS AUDREA CHIN\", \"MDM ONG LEE LEE\", \"MS NG CHIOU …\n$ second_vp_name     &lt;chr&gt; \"MISS CHENG SHIN MIIN\", \"MISS KUO ZHAOYAN, FELICIA\"…\n$ third_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fourth_vp_name     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fifth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ sixth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ dgp_code           &lt;chr&gt; \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT…\n$ zone_code          &lt;chr&gt; \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH…\n$ type_code          &lt;chr&gt; \"GOVERNMENT SCHOOL\", \"GOVERNMENT-AIDED SCH\", \"GOVER…\n$ nature_code        &lt;chr&gt; \"CO-ED SCHOOL\", \"GIRLS' SCHOOL\", \"GIRLS' SCHOOL\", \"…\n$ session_code       &lt;chr&gt; \"SINGLE SESSION\", \"SINGLE SESSION\", \"SINGLE SESSION…\n$ mainlevel_code     &lt;chr&gt; \"PRIMARY\", \"SECONDARY\", \"PRIMARY\", \"PRIMARY\", \"PRIM…\n$ sap_ind            &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ autonomous_ind     &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ gifted_ind         &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ ip_ind             &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ mothertongue1_code &lt;chr&gt; \"Chinese\", \"Chinese\", \"Chinese\", \"Chinese\", \"Chines…\n$ mothertongue2_code &lt;chr&gt; \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay…\n$ mothertongue3_code &lt;chr&gt; \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"na\", …\n$ results.SEARCHVAL  &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.BLK_NO     &lt;chr&gt; \"1\", \"160\", \"1\", \"1\", \"91\", \"147\", \"301\", \"50\", \"30…\n$ results.ROAD_NAME  &lt;chr&gt; \"CANTONMENT CLOSE\", \"LOWER DELTA ROAD\", \"BUKIT TERE…\n$ results.BUILDING   &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.ADDRESS    &lt;chr&gt; \"1 CANTONMENT CLOSE KIDZ TREEHOUSE @ CANTONMENT SIN…\n$ results.X          &lt;chr&gt; \"28748.1620587641\", \"26789.3781491434\", \"27402.9654…\n$ results.Y          &lt;chr&gt; \"28659.9995642845\", \"28647.4426490944\", \"28579.8478…\n$ results.LATITUDE   &lt;chr&gt; \"1.27546534984202\", \"1.27535177510054\", \"1.27474048…\n$ results.LONGITUDE  &lt;chr&gt; \"103.840041087946\", \"103.822440701642\", \"103.827954…\n\n\nvisualize the distribution\n\n\nCode\nschools_sf &lt;- schools %&gt;%\n  rename(\n    latitude = \"results.LATITUDE\",\n    longitude = \"results.LONGITUDE\"\n  ) %&gt;%\n  select(\n    postal_code, \n    school_name, \n    latitude, \n    longitude\n  ) %&gt;%\n  st_as_sf(\n    coords = c(\"longitude\", \"latitude\"),\n    crs=4326\n  ) %&gt;%\n  st_transform(\n    crs = 3414\n  )\n\n# visualize the output\ntm_shape(mpsz)+\n  tm_polygons(col = 'white', alpha = 0.01) +\n  tm_shape(schools_sf) +\n  tm_dots(col = 'lightgreen',\n          id = 'building') +\n  tm_layout(main.title = 'Schools Distribution Map', main.title.position = \"center\")"
  },
  {
    "objectID": "take-home/the2.html#create-hexagon-layer",
    "href": "take-home/the2.html#create-hexagon-layer",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.1 Create Hexagon Layer",
    "text": "3.1 Create Hexagon Layer\n\n\nCode\n# Create hexagonal grid based on bus stop locations\nhexagonal_grid &lt;- st_make_grid(busstop,\n                               cellsize = 750,\n                               what = \"polygons\",\n                               square = FALSE)\n\n# Convert hexagonal grid to spatial dataframe\nhex_grid_sf &lt;- st_sf(hex_grid = hexagonal_grid) %&gt;%\n  mutate(hexagon_id = 1:length(lengths(hexagonal_grid)))\n\n# Count the number of bus stops within each hexagon\nhex_grid_sf$num_bus_stops = lengths(st_intersects(hex_grid_sf, busstop))\n\n# Filter hexagons with at least one bus stop\nhexagons_with_bus_stops &lt;- filter(hex_grid_sf, num_bus_stops &gt; 0)\n\n# check the output\nglimpse(hexagons_with_bus_stops)\n\n\nRows: 834\nColumns: 3\n$ hex_grid      &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLYGON ((4345.1…\n$ hexagon_id    &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, 110, 11…\n$ num_bus_stops &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2, 1, 1, 5, 3,…\n\n\nvisualize the output\n\n\nCode\n# Plot the number of bus stops per hexagon with a color gradient and legend\ntm_shape(hexagons_with_bus_stops) +\n  tm_borders() +\n  tm_fill(\"num_bus_stops\",\n          title = \"Bus Stop Density\",\n          style = \"jenks\",\n          palette = \"YlOrRd\",\n          legend.show = TRUE) +\n  tm_layout(main.title = 'Bus Stop Density in Hexagonal Grid',\n            main.title.position = \"center\",\n            legend.position = c(\"right\", \"top\"))"
  },
  {
    "objectID": "take-home/the2.html#combine-bus-stop-and-hexagon",
    "href": "take-home/the2.html#combine-bus-stop-and-hexagon",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.2 Combine Bus Stop and Hexagon",
    "text": "3.2 Combine Bus Stop and Hexagon\n\n\nCode\n# Perform a spatial join\nbusstop_with_hex_info &lt;- st_join(busstop, hexagons_with_bus_stops, by = NULL, join = st_within)\n\n# Select the relevant columns\nbusstop_with_hex_info &lt;- busstop_with_hex_info %&gt;%\n  select(BUS_STOP_N, BUS_ROOF_N, LOC_DESC, hexagon_id, geometry) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N)\n  )\n\n# Display the resulting data\nglimpse(busstop_with_hex_info)\n\n\nRows: 5,144\nColumns: 5\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ hexagon_id &lt;int&gt; 573, 560, 977, 2129, 1159, 1543, 509, 1502, 660, 2150, 448,…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…"
  },
  {
    "objectID": "take-home/the2.html#combine-trips-and-hexagon",
    "href": "take-home/the2.html#combine-trips-and-hexagon",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.3 Combine Trips and Hexagon",
    "text": "3.3 Combine Trips and Hexagon\n\n\nCode\n# Add origin_hex to odb10\nodb_hex &lt;- odb10 %&gt;%\n  left_join(busstop_with_hex_info %&gt;% select(BUS_STOP_N, hexagon_id), \n            by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(origin_hex = hexagon_id)\n\n# Add destination_hex to odb10\nodb_hex &lt;- odb_hex %&gt;%\n  left_join(busstop_with_hex_info %&gt;% select(BUS_STOP_N, hexagon_id), \n            by = c(\"DESTINATION_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(destination_hex = hexagon_id)\n\n# Remove additional geometry columns\nodb_hex &lt;- odb_hex %&gt;%\n  select(-contains(\"geometry.\"))\n\n# Convert hex id to factor\nodb_hex &lt;- odb_hex %&gt;%\n  mutate(\n    origin_hex = as.factor(origin_hex),\n    destination_hex = as.factor(destination_hex)\n  )\n\n# check the output\nglimpse(odb_hex)\n\n\nRows: 242,208\nColumns: 5\nGroups: ORIGIN_PT_CODE [5,029]\n$ ORIGIN_PT_CODE      &lt;fct&gt; 01012, 01012, 01012, 01012, 01012, 01012, 01012, 0…\n$ DESTINATION_PT_CODE &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 6…\n$ TRIPS               &lt;dbl&gt; 290, 118, 77, 118, 165, 14, 30, 16, 35, 26, 2, 8, …\n$ origin_hex          &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 14…\n$ destination_hex     &lt;fct&gt; 1496, 1496, 1538, 1538, 1559, 1559, 1539, 1581, 16…"
  },
  {
    "objectID": "take-home/the2.html#final-duplicate-checking",
    "href": "take-home/the2.html#final-duplicate-checking",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.4 Final Duplicate Checking",
    "text": "3.4 Final Duplicate Checking\n\n\nCode\nif_else(n_distinct(odb_hex) == nrow(odb_hex), \"no duplicates detected\", \"possible duplicates detected\")\n\n\n[1] \"no duplicates detected\""
  },
  {
    "objectID": "take-home/the2.html#construct-o-d-matrix",
    "href": "take-home/the2.html#construct-o-d-matrix",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.5 Construct O-D Matrix",
    "text": "3.5 Construct O-D Matrix\n\n\nCode\n# Remove rows with missing values\nclean_odb &lt;- odb_hex[complete.cases(odb_hex), ]\n\n# Aggregate data based on origin_hex and destination_hex\nodb_flow &lt;- clean_odb %&gt;%\n  group_by(origin_hex, destination_hex) %&gt;%\n  summarise(trips = sum(TRIPS),\n            origin_hex = unique(origin_hex),\n            destination_hex = unique(destination_hex)) %&gt;%\n  ungroup()\n\n# check the output\nglimpse(odb_flow)\n\n\nRows: 65,510\nColumns: 3\n$ origin_hex      &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, 1603, …\n$ trips           &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 218, 15…"
  },
  {
    "objectID": "take-home/the2.html#create-distance-variable",
    "href": "take-home/the2.html#create-distance-variable",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.6 Create Distance Variable",
    "text": "3.6 Create Distance Variable\n\n\nCode\n# set busstop to spatial\nbusstop_sp &lt;- as(busstop_with_hex_info, \"Spatial\")\n\n# calculate the distance\ntp_dist &lt;- sp::spDists(busstop_sp, longlat = FALSE)\n\n# add column names to the variable\nhex_id_names &lt;- busstop_sp$hexagon_id\ncolnames(tp_dist) &lt;- paste0(hex_id_names)\nrownames(tp_dist) &lt;- paste0(hex_id_names)\n\n# melt the table\ndist &lt;- reshape2::melt(tp_dist) %&gt;%\n  rename(origin_hex = Var1,\n         destination_hex = Var2,\n         distance = value) %&gt;%\n  mutate(origin_hex = as.factor(origin_hex),\n         destination_hex = as.factor(destination_hex))\n\n# remove duplicates\ndist &lt;- distinct(dist, origin_hex, destination_hex, .keep_all = TRUE)\n\n# Perform left join to odb_flow with factor conversion\nodb_flow &lt;- odb_flow %&gt;%\n  left_join(\n    dist %&gt;% select(origin_hex, destination_hex, distance) %&gt;%\n      mutate(across(c(origin_hex, destination_hex), as.character)),\n    by = c(\"origin_hex\", \"destination_hex\")\n  ) %&gt;%\n  mutate(across(c(origin_hex, destination_hex), as.factor))\n\n# check the output\nglimpse(odb_flow)\n\n\nRows: 65,510\nColumns: 4\n$ origin_hex      &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, 1603, …\n$ trips           &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 218, 15…\n$ distance        &lt;dbl&gt; 337.7979, 1089.6612, 1816.6628, 1553.0464, 2308.2822, …"
  },
  {
    "objectID": "take-home/the2.html#remove-intra-zonal-flows",
    "href": "take-home/the2.html#remove-intra-zonal-flows",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "3.7 Remove Intra-Zonal Flows",
    "text": "3.7 Remove Intra-Zonal Flows\nthe following code chunk will remove intra-zonal flows\n\n\nCode\nodb_flow &lt;- odb_flow %&gt;%\n  filter(as.character(origin_hex) != as.character(destination_hex))\n\n# check the output\nglimpse(odb_flow)\n\n\nRows: 64,885\nColumns: 4\n$ origin_hex      &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, 1603, …\n$ trips           &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 218, 15…\n$ distance        &lt;dbl&gt; 337.7979, 1089.6612, 1816.6628, 1553.0464, 2308.2822, …\n\n\n\n\n\n\n\n\nWhy intra-zonal flows is removed?\n\n\n\n\n\nThe exclusion of intra-zonal flows from the Spatial Interaction Model calibration process is likely driven by the desire to focus on modeling and understanding interactions between different zones, without interference from flows within the same zone.\nIntra-zonal flows, representing movements within a single zone, may not contribute significantly to the overall spatial interaction patterns that the model aims to capture. By removing intra-zonal flows, the analysis can concentrate on the dynamics and factors influencing interactions between distinct zones, providing a clearer and more interpretable representation of spatial relationships.\nIncluding intra-zonal flows in the model might introduce unnecessary complexity or noise, potentially affecting the accuracy and interpretability of the model’s results. Therefore, excluding intra-zonal flows is a methodological choice to streamline the analysis and enhance the model’s ability to capture meaningful inter-zonal interactions."
  },
  {
    "objectID": "take-home/the2.html#rd-quantile-trips-175",
    "href": "take-home/the2.html#rd-quantile-trips-175",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.1 3rd Quantile Trips (175)",
    "text": "4.1 3rd Quantile Trips (175)\n\n\nCode\nsummary(flowline$trips)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n    1.0     7.0    38.0   375.7   175.0 97602.0 \n\n\nsince trips without filter will be too messy, first trial will use the third quantile\n\n\nCode\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons(col = 'white') +\ntm_shape(hexagons_with_bus_stops) +\n  tm_polygons(alpha = 0.4,\n              col = 'gray') +\nflowline %&gt;%\n  filter(trips &gt;= 175) %&gt;%\n  tm_shape() +\n  tm_lines(col = 'coral',\n           lwd = \"trips\",\n           scale = c(0.1, 1, 2, 3, 4, 5, 6, 7),\n           alpha = 0.2)+\n  tm_layout(main.title = 'Weekday Morning Peak Flow for 3rd Quantile Trips', main.title.position = 'center')\n\n\n\n\n\nbusier in central and east"
  },
  {
    "objectID": "take-home/the2.html#th-quantile-trips-6082",
    "href": "take-home/the2.html#th-quantile-trips-6082",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.2 99th Quantile Trips (6082)",
    "text": "4.2 99th Quantile Trips (6082)\n\n\nCode\nquantile(flowline$trips, probs = seq(0, 1, 0.01), na.rm = TRUE)\n\n\n      0%       1%       2%       3%       4%       5%       6%       7% \n    1.00     1.00     1.00     1.00     1.00     1.00     1.00     1.00 \n      8%       9%      10%      11%      12%      13%      14%      15% \n    2.00     2.00     2.00     2.00     2.00     2.00     3.00     3.00 \n     16%      17%      18%      19%      20%      21%      22%      23% \n    3.00     4.00     4.00     4.00     5.00     5.00     6.00     6.00 \n     24%      25%      26%      27%      28%      29%      30%      31% \n    7.00     7.00     8.00     8.00     9.00    10.00    11.00    12.00 \n     32%      33%      34%      35%      36%      37%      38%      39% \n   13.00    13.00    14.00    15.00    16.00    18.00    19.00    20.00 \n     40%      41%      42%      43%      44%      45%      46%      47% \n   21.00    22.00    24.00    25.00    27.00    28.00    30.00    32.00 \n     48%      49%      50%      51%      52%      53%      54%      55% \n   33.00    35.00    38.00    40.00    42.00    45.00    47.00    50.00 \n     56%      57%      58%      59%      60%      61%      62%      63% \n   53.00    57.00    60.00    64.00    67.00    71.00    76.00    81.00 \n     64%      65%      66%      67%      68%      69%      70%      71% \n   86.00    91.00    97.00   103.00   110.00   117.00   125.00   134.00 \n     72%      73%      74%      75%      76%      77%      78%      79% \n  143.00   153.00   163.00   175.00   188.00   202.00   217.00   233.00 \n     80%      81%      82%      83%      84%      85%      86%      87% \n  254.00   276.00   301.00   327.00   357.00   391.00   429.24   475.00 \n     88%      89%      90%      91%      92%      93%      94%      95% \n  523.00   586.00   661.00   747.44   854.00   998.00  1170.00  1413.80 \n     96%      97%      98%      99%     100% \n 1766.00  2335.44  3384.32  6082.16 97602.00 \n\n\n\n\nCode\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons(col = 'white') +\ntm_shape(hexagons_with_bus_stops) +\n  tm_polygons(alpha = 0.4,\n              col = 'gray') +\nflowline %&gt;%\n  filter(trips &gt;= 6082) %&gt;%\n  tm_shape() +\n  tm_lines(col = 'coral',\n           lwd = \"trips\",\n           scale = c(0.1, 1, 2, 3, 4, 5, 6, 7))+\n  tm_layout(main.title = 'Weekday Morning Peak Flow for 99th Percentile Trips', main.title.position = 'center',\n            main.title.size = 1.2)\n\n\n\n\n\nnorth-downtown, west-downton, north-east, and short trip becomes more visible"
  },
  {
    "objectID": "take-home/the2.html#rd-quantile-distance-8923",
    "href": "take-home/the2.html#rd-quantile-distance-8923",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.3 3rd Quantile Distance (8923)",
    "text": "4.3 3rd Quantile Distance (8923)\n\n\nCode\nsummary(flowline$distance)\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n   36.87  2975.46  5478.89  6347.13  8923.04 25292.04 \n\n\nsince trips without filter will be too messy, first trial will use the third quantile\n\n\nCode\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons(col = 'white') +\ntm_shape(hexagons_with_bus_stops) +\n  tm_polygons(alpha = 0.4,\n              col = 'gray') +\nflowline %&gt;%\n  filter(distance &gt;= 8923) %&gt;%\n  tm_shape() +\n  tm_lines(col = 'coral',\n           lwd = \"trips\",\n           scale = c(0.1, 1, 2, 3, 4, 5, 6, 7),\n           alpha = 0.2)+\n  tm_layout(main.title = 'Weekday Morning Peak Flowline for 3rd Quantile Distance', main.title.position = 'center',\n            main.title.size = 1.2)\n\n\n\n\n\ntoo messy"
  },
  {
    "objectID": "take-home/the2.html#th-quantile-distance-18587",
    "href": "take-home/the2.html#th-quantile-distance-18587",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.4 99th Quantile Distance (18587)",
    "text": "4.4 99th Quantile Distance (18587)\n\n\nCode\nquantile(flowline$distance, probs = seq(0, 1, 0.01), na.rm = TRUE)\n\n\n         0%          1%          2%          3%          4%          5% \n   36.87007   522.53556   703.08425   842.92091   957.30393  1076.69574 \n         6%          7%          8%          9%         10%         11% \n 1191.59355  1294.46529  1395.65614  1489.93693  1590.51016  1692.12325 \n        12%         13%         14%         15%         16%         17% \n 1788.92064  1884.42267  1968.51790  2066.41607  2153.43370  2248.29253 \n        18%         19%         20%         21%         22%         23% \n 2338.39987  2428.43872  2528.60989  2612.44437  2706.87957  2792.76077 \n        24%         25%         26%         27%         28%         29% \n 2875.97264  2975.46354  3062.97268  3156.09125  3248.58762  3341.38852 \n        30%         31%         32%         33%         34%         35% \n 3436.60368  3532.15466  3619.70478  3714.09747  3821.74327  3915.36034 \n        36%         37%         38%         39%         40%         41% \n 4013.05342  4111.42886  4211.00286  4309.25745  4407.09453  4506.11532 \n        42%         43%         44%         45%         46%         47% \n 4606.54736  4724.02732  4829.68679  4923.53519  5029.76657  5148.01533 \n        48%         49%         50%         51%         52%         53% \n 5256.28523  5366.38472  5478.89233  5590.89734  5703.79373  5819.80587 \n        54%         55%         56%         57%         58%         59% \n 5944.54472  6059.26949  6179.22714  6300.95726  6428.67668  6545.52174 \n        60%         61%         62%         63%         64%         65% \n 6669.27414  6806.63320  6922.99694  7069.83774  7213.24856  7348.42508 \n        66%         67%         68%         69%         70%         71% \n 7493.32313  7632.98202  7789.55420  7938.62851  8100.13558  8257.52288 \n        72%         73%         74%         75%         76%         77% \n 8421.55252  8580.78061  8745.64754  8923.04164  9097.35752  9283.90751 \n        78%         79%         80%         81%         82%         83% \n 9487.10764  9677.10337  9869.40942 10077.52431 10281.94764 10486.38616 \n        84%         85%         86%         87%         88%         89% \n10700.11506 10930.16294 11188.95602 11451.48411 11717.97156 12036.64141 \n        90%         91%         92%         93%         94%         95% \n12378.97126 12746.11568 13121.55663 13560.13147 13987.01526 14526.64946 \n        96%         97%         98%         99%        100% \n15194.10259 15983.84859 17018.69635 18587.39427 25292.03624 \n\n\n\n\nCode\ntmap_mode('plot')\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons(col = 'white') +\ntm_shape(hexagons_with_bus_stops) +\n  tm_polygons(alpha = 0.4,\n              col = 'gray') +\nflowline %&gt;%\n  filter(distance &gt;= 18587) %&gt;%\n  tm_shape() +\n  tm_lines(col = 'coral',\n           lwd = \"trips\",\n           scale = c(0.1, 1, 2, 3, 4, 5, 6, 7))+\n  tm_layout(main.title = 'Weekday Morning Peak Flowline for 99th Percentile Distance', main.title.position = 'center',\n            main.title.size = 1.2)\n\n\n\n\n\nmore dense from all directions to downtown, and also slightly dense between north and east"
  },
  {
    "objectID": "take-home/the2.html#spread-across-decile-of-trips",
    "href": "take-home/the2.html#spread-across-decile-of-trips",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "4.5 Spread Across Decile of Trips",
    "text": "4.5 Spread Across Decile of Trips\n\n\nCode\nquantile(flowline$trips, probs = seq(0, 1, 0.1), na.rm = TRUE)\n\n\n   0%   10%   20%   30%   40%   50%   60%   70%   80%   90%  100% \n    1     2     5    11    21    38    67   125   254   661 97602 \n\n\n\n\nCode\nflowline &lt;- flowline %&gt;%\n  mutate(\n    decile = cut(trips, \n                         breaks = c(0, 2, 5, 11, 21, 38, 67, 125, 254, 661, 5000, Inf),\n                         labels = c(\"&lt;2\", \"2-5\", \"5-11\", \"11-21\",\n                                    \"21-38\", \"38-67\", \"67-125\", \"125-254\",\n                                    \"254-661\", \"661-5000\", \"&gt;5000\"),\n                         ordered_result=TRUE\n))\n\n# check the output\nglimpse(flowline)\n\n\nRows: 64,885\nColumns: 6\n$ origin_hex      &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, 1603, …\n$ trips           &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 218, 15…\n$ distance        &lt;dbl&gt; 337.7979, 1089.6612, 1816.6628, 1553.0464, 2308.2822, …\n$ geometry        &lt;LINESTRING [m]&gt; LINESTRING (29845.12 31028...., LINESTRING …\n$ decile          &lt;ord&gt; 661-5000, 661-5000, 125-254, 254-661, 21-38, 38-67, 12…\n\n\n\n\nCode\ntrips_spread &lt;- tm_shape(mpsz) +\n  tm_fill(col = \"white\") +\n  tm_borders(col = \"black\", lwd = .5) +\ntm_shape(flowline) +\n  tm_lines(lwd = \"trips\", scale = 1.5, col = \"coral\", alpha = .7) +\n  tm_layout(title = \"Weekday Morning Peak Traffic Flow\", title.position = c(\"right\", \"top\")) +\n  tm_facets(along = \"decile\", free.coords = FALSE)\n\n# Save animation as gif\ntmap_animation(trips_spread, \"../images/trips_spread.gif\", loop = TRUE, delay = 300,\n               outer.margins = NA, restart.delay=500)\n\n\n for the first 8 decile, the trips slightly change but still more dense on central. on the extra category of &gt;5000, north-downtown, west-downtown, north-east, and short trip becomes more visible"
  },
  {
    "objectID": "take-home/the2.html#push-factors",
    "href": "take-home/the2.html#push-factors",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.1 Push Factors",
    "text": "5.1 Push Factors\nHDB, station, trainexit, proxy_pop, busstop\nstation and trainexit that can function as transit are special case where they might be a push and pull factor. people might come from train station to take a bus or take a bus to go to a train station.\n\n\nCode\nfactors_holder &lt;- hexagons_with_bus_stops %&gt;%\n  rename(push_num_bus_stops = num_bus_stops)\n\n# define function to add push poi counts columns\nadd_push_poi_counts &lt;- function(factors_holder, poi_datasets) {\n  # Loop through each POI dataset\n  for (poi_name in poi_datasets) {\n    # Add a new column with the count using st_intersects and lengths\n    factors_holder[[paste0(\"push_\", poi_name, \"_count\")]] &lt;- \n      ifelse(\n        lengths(st_intersects(factors_holder, get(poi_name))) == 0,\n        0.99,\n        lengths(st_intersects(factors_holder, get(poi_name)))\n      )\n  }\n  \n  # Return the updated factors_holder dataframe\n  return(factors_holder)\n}\n\n# List of POI dataset names\npush_poi_datasets &lt;- c(\"station\", \"trainexit\", \"hdb_sf\")\n\n# Call the function\nfactors_holder &lt;- add_push_poi_counts(factors_holder, push_poi_datasets)\n\n# check the output\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 6\n$ hexagon_id           &lt;int&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, …\n$ push_num_bus_stops   &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2, 1, 1…\n$ hex_grid             &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLYGON (…\n$ push_station_count   &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ push_trainexit_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ push_hdb_sf_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n\n\nadd approximate population of the location, based on estimated hdb capacity\n\n\nCode\nhdb_capacity &lt;- hdb_sf %&gt;%\n  mutate(capacity = `1room_sold` *1 +\n           `2room_sold` * 2+\n           `3room_sold` * 3+\n           `4room_sold` * 4+\n           `5room_sold` * 5+\n           exec_sold * 4+\n           multigen_sold * 6+\n           studio_apartment_sold *1+\n           `1room_rental` * 1+\n           `2room_rental` * 2+\n           `3room_rental` * 3+\n           other_room_rental * 2) %&gt;%\n  select(blk_no, geometry, capacity)\n\n# get hexagon_id for hdb, then sum the capacity\nhdb_capacity &lt;- st_join(hdb_capacity, hexagons_with_bus_stops, by = NULL, join = st_within) %&gt;%\n  group_by(hexagon_id) %&gt;%\n  summarise(push_est_pop = sum(capacity)) %&gt;%\n  st_drop_geometry()\n\n# Convert hexagon_id to character in both dataframes\nfactors_holder &lt;- factors_holder %&gt;% mutate(hexagon_id = as.character(hexagon_id))\nhdb_capacity &lt;- hdb_capacity %&gt;% mutate(hexagon_id = as.character(hexagon_id))\n\n# Left join factors_holder and hdb_capacity by hexagon_id\nfactors_holder &lt;- left_join(factors_holder, hdb_capacity, by = \"hexagon_id\") %&gt;%\n  mutate(hexagon_id = as.factor(hexagon_id)) %&gt;%  # Convert back to factor\n  mutate_at(vars(contains(\"push_est_pop\")), list(~coalesce(., 0.99)))  # Fill missing values with 0.99 \n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 7\n$ hexagon_id           &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109, …\n$ push_num_bus_stops   &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2, 1, 1…\n$ push_station_count   &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ push_trainexit_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ push_hdb_sf_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ push_est_pop         &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0…\n$ hex_grid             &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLYGON (…"
  },
  {
    "objectID": "take-home/the2.html#pull-factors",
    "href": "take-home/the2.html#pull-factors",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.2 Pull Factors",
    "text": "5.2 Pull Factors\nstation, trainexit, biz, entertn, fnb, finance, lnr, retails, school\n\n\nCode\n# define function to add pull poi counts columns\nadd_pull_poi_counts &lt;- function(factors_holder, poi_datasets) {\n  # Loop through each POI dataset\n  for (poi_name in poi_datasets) {\n    # Add a new column with the count using st_intersects and lengths\n    factors_holder[[paste0(\"pull_\", poi_name, \"_count\")]] &lt;- \n      ifelse(\n        lengths(st_intersects(factors_holder, get(poi_name))) == 0,\n        0.99,\n        lengths(st_intersects(factors_holder, get(poi_name)))\n      )\n  }\n  \n  # Return the updated factors_holder dataframe\n  return(factors_holder)\n}\n\n# List of POI dataset names\npull_poi_datasets &lt;- c(\"station\", \"trainexit\", \"biz\", \"entertn\", \"fnb\", \"finance\", \"lnr\", \"retails\", \"schools_sf\")\n\n# Call the function\nfactors_holder &lt;- add_pull_poi_counts(factors_holder, pull_poi_datasets)\n\nglimpse(factors_holder)\n\n\nRows: 834\nColumns: 16\n$ hexagon_id            &lt;fct&gt; 23, 44, 46, 66, 67, 68, 86, 87, 88, 89, 90, 109,…\n$ push_num_bus_stops    &lt;int&gt; 1, 1, 2, 1, 4, 1, 1, 1, 4, 2, 1, 3, 2, 5, 2, 1, …\n$ push_station_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ push_trainexit_count  &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ push_hdb_sf_count     &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ push_est_pop          &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ hex_grid              &lt;POLYGON [m]&gt; POLYGON ((3970.122 27348.13..., POLYGON …\n$ pull_station_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_trainexit_count  &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_biz_count        &lt;dbl&gt; 0.99, 5.00, 4.00, 1.00, 50.00, 27.00, 3.00, 3.00…\n$ pull_entertn_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_fnb_count        &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_finance_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 1.00, 0.99, 0.99, 0.99, …\n$ pull_lnr_count        &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_retails_count    &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 5.00, 0.99, 0.99, 0.99, …\n$ pull_schools_sf_count &lt;dbl&gt; 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …"
  },
  {
    "objectID": "take-home/the2.html#final-dataset",
    "href": "take-home/the2.html#final-dataset",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "5.3 Final Dataset",
    "text": "5.3 Final Dataset\n\n\nCode\nglimpse(odb_flow)\n\n\nRows: 64,885\nColumns: 4\n$ origin_hex      &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, 1603, …\n$ trips           &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 218, 15…\n$ distance        &lt;dbl&gt; 337.7979, 1089.6612, 1816.6628, 1553.0464, 2308.2822, …\n\n\n\n\nCode\nfinal_df &lt;- left_join(odb_flow, factors_holder %&gt;% select(starts_with(\"push_\"), hexagon_id), by = c(\"origin_hex\" = \"hexagon_id\"))\n\nfinal_df &lt;- left_join(final_df, factors_holder %&gt;% select(starts_with(\"pull_\"), hexagon_id), by = c(\"destination_hex\" = \"hexagon_id\"))\n\nfinal_df &lt;- final_df %&gt;%\n  select(-hex_grid.x, -hex_grid.y)\n\n# Assuming \"final_df\" is your data frame\nfinal_df &lt;- final_df %&gt;%\n  mutate(push_est_pop = ifelse(push_est_pop == 0, 0.99, push_est_pop))\n\n# Check the output\nglimpse(final_df)\n\n\nRows: 64,885\nColumns: 18\n$ origin_hex            &lt;fct&gt; 1474, 1474, 1474, 1474, 1474, 1474, 1474, 1474, …\n$ destination_hex       &lt;fct&gt; 1496, 1538, 1539, 1559, 1581, 1582, 1601, 1602, …\n$ trips                 &lt;dbl&gt; 1091, 766, 230, 311, 32, 63, 153, 77, 29, 127, 2…\n$ distance              &lt;dbl&gt; 337.7979, 1089.6612, 1816.6628, 1553.0464, 2308.…\n$ push_num_bus_stops    &lt;int&gt; 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, …\n$ push_station_count    &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, …\n$ push_trainexit_count  &lt;dbl&gt; 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, …\n$ push_hdb_sf_count     &lt;dbl&gt; 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, …\n$ push_est_pop          &lt;dbl&gt; 1079, 1079, 1079, 1079, 1079, 1079, 1079, 1079, …\n$ pull_station_count    &lt;dbl&gt; 4.00, 1.00, 2.00, 1.00, 1.00, 0.99, 1.00, 1.00, …\n$ pull_trainexit_count  &lt;dbl&gt; 6.00, 0.99, 3.00, 2.00, 0.99, 0.99, 1.00, 2.00, …\n$ pull_biz_count        &lt;dbl&gt; 19.00, 15.00, 20.00, 25.00, 23.00, 4.00, 2.00, 4…\n$ pull_entertn_count    &lt;dbl&gt; 9.00, 2.00, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n$ pull_fnb_count        &lt;dbl&gt; 56.00, 65.00, 42.00, 1.00, 1.00, 1.00, 0.99, 1.0…\n$ pull_finance_count    &lt;dbl&gt; 43.00, 26.00, 8.00, 16.00, 1.00, 0.99, 2.00, 6.0…\n$ pull_lnr_count        &lt;dbl&gt; 9.00, 13.00, 9.00, 5.00, 1.00, 0.99, 2.00, 1.00,…\n$ pull_retails_count    &lt;dbl&gt; 1669.00, 749.00, 235.00, 334.00, 165.00, 30.00, …\n$ pull_schools_sf_count &lt;dbl&gt; 0.99, 1.00, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, …\n\n\n\n\nCode\nwrite_rds(final_df, \"../data/rds/final_df_the2.rds\")"
  },
  {
    "objectID": "take-home/the2.html#the-4-models-without-elimination",
    "href": "take-home/the2.html#the-4-models-without-elimination",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.2 The 4 Models Without Elimination",
    "text": "6.2 The 4 Models Without Elimination\n\nUnconstrainedOrigin ConstrainedDestination ConstrainedDoubly Constrained\n\n\n\n\nCode\nuncSIM &lt;- glm(formula = trips ~ \n                log(push_num_bus_stops) +\n                log(push_station_count) +\n                log(push_trainexit_count) +\n                log(push_hdb_sf_count) +\n                log(push_est_pop) +\n                log(pull_station_count) +\n                log(pull_trainexit_count) +\n                log(pull_biz_count) +\n                log(pull_entertn_count) +\n                log(pull_fnb_count) +\n                log(pull_finance_count) +\n                log(pull_lnr_count) +\n                log(pull_retails_count) +\n                log(pull_schools_sf_count) +\n                log(distance),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(uncSIM)\n\n\n\nCall:\nglm(formula = trips ~ log(push_num_bus_stops) + log(push_station_count) + \n    log(push_trainexit_count) + log(push_hdb_sf_count) + log(push_est_pop) + \n    log(pull_station_count) + log(pull_trainexit_count) + log(pull_biz_count) + \n    log(pull_entertn_count) + log(pull_fnb_count) + log(pull_finance_count) + \n    log(pull_lnr_count) + log(pull_retails_count) + log(pull_schools_sf_count) + \n    log(distance), family = poisson(link = \"log\"), data = final_df, \n    na.action = na.exclude)\n\nCoefficients:\n                             Estimate Std. Error  z value Pr(&gt;|z|)    \n(Intercept)                13.2357996  0.0016799  7878.76   &lt;2e-16 ***\nlog(push_num_bus_stops)     0.3015501  0.0005084   593.14   &lt;2e-16 ***\nlog(push_station_count)    -0.6001019  0.0009082  -660.75   &lt;2e-16 ***\nlog(push_trainexit_count)   0.3891417  0.0004042   962.64   &lt;2e-16 ***\nlog(push_hdb_sf_count)      0.4539595  0.0004671   971.83   &lt;2e-16 ***\nlog(push_est_pop)          -0.0507382  0.0001888  -268.68   &lt;2e-16 ***\nlog(pull_station_count)    -0.4687275  0.0008102  -578.55   &lt;2e-16 ***\nlog(pull_trainexit_count)   0.6703817  0.0004561  1469.73   &lt;2e-16 ***\nlog(pull_biz_count)         0.0891027  0.0001920   464.14   &lt;2e-16 ***\nlog(pull_entertn_count)    -0.0544500  0.0008472   -64.27   &lt;2e-16 ***\nlog(pull_fnb_count)        -0.1661899  0.0002889  -575.33   &lt;2e-16 ***\nlog(pull_finance_count)     0.2667002  0.0003691   722.64   &lt;2e-16 ***\nlog(pull_lnr_count)        -0.2279931  0.0003982  -572.60   &lt;2e-16 ***\nlog(pull_retails_count)     0.0387865  0.0002130   182.12   &lt;2e-16 ***\nlog(pull_schools_sf_count)  0.2579308  0.0006415   402.10   &lt;2e-16 ***\nlog(distance)              -1.1797209  0.0001870 -6307.65   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 48920321  on 64869  degrees of freedom\nAIC: 49277052\n\nNumber of Fisher Scoring iterations: 7\n\n\nCode\nCalcRSquared(uncSIM$data$trips, uncSIM$fitted.values)\n\n\n[1] 0.1876436\n\n\n\n\n\n\nCode\norcSIM &lt;- glm(formula = trips ~\n                log(pull_station_count) +\n                log(pull_trainexit_count) +\n                log(pull_biz_count) +\n                log(pull_entertn_count) +\n                log(pull_fnb_count) +\n                log(pull_finance_count) +\n                log(pull_lnr_count) +\n                log(pull_retails_count) +\n                log(pull_schools_sf_count) +\n                log(distance) +\n                origin_hex,\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(orcSIM)\n\n\n\nCall:\nglm(formula = trips ~ log(pull_station_count) + log(pull_trainexit_count) + \n    log(pull_biz_count) + log(pull_entertn_count) + log(pull_fnb_count) + \n    log(pull_finance_count) + log(pull_lnr_count) + log(pull_retails_count) + \n    log(pull_schools_sf_count) + log(distance) + origin_hex, \n    family = poisson(link = \"log\"), data = final_df, na.action = na.exclude)\n\nCoefficients:\n                             Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)                13.4439773  0.0243212   552.768  &lt; 2e-16 ***\nlog(pull_station_count)    -0.4031761  0.0008458  -476.695  &lt; 2e-16 ***\nlog(pull_trainexit_count)   0.6617517  0.0004724  1400.713  &lt; 2e-16 ***\nlog(pull_biz_count)         0.1076267  0.0002028   530.631  &lt; 2e-16 ***\nlog(pull_entertn_count)    -0.0888377  0.0008826  -100.655  &lt; 2e-16 ***\nlog(pull_fnb_count)        -0.1342505  0.0002989  -449.140  &lt; 2e-16 ***\nlog(pull_finance_count)     0.2649556  0.0003801   697.086  &lt; 2e-16 ***\nlog(pull_lnr_count)        -0.1656854  0.0004101  -404.041  &lt; 2e-16 ***\nlog(pull_retails_count)     0.0602612  0.0002237   269.418  &lt; 2e-16 ***\nlog(pull_schools_sf_count)  0.2304467  0.0006696   344.132  &lt; 2e-16 ***\nlog(distance)              -1.2389958  0.0002122 -5838.512  &lt; 2e-16 ***\norigin_hex1003              2.4855105  0.0245533   101.229  &lt; 2e-16 ***\norigin_hex1004              3.3001935  0.0243940   135.287  &lt; 2e-16 ***\norigin_hex1011             -0.7843741  0.0386103   -20.315  &lt; 2e-16 ***\norigin_hex1012             -0.8414045  0.0399385   -21.068  &lt; 2e-16 ***\norigin_hex1013             -0.3016287  0.0288954   -10.439  &lt; 2e-16 ***\norigin_hex1014              0.2515593  0.0264026     9.528  &lt; 2e-16 ***\norigin_hex1015             -0.4276372  0.0289114   -14.791  &lt; 2e-16 ***\norigin_hex1016              0.9613026  0.0252059    38.138  &lt; 2e-16 ***\norigin_hex1018              1.4890003  0.0260520    57.155  &lt; 2e-16 ***\norigin_hex1019              2.8799508  0.0246205   116.974  &lt; 2e-16 ***\norigin_hex1023              1.3355897  0.0258783    51.610  &lt; 2e-16 ***\norigin_hex1024              2.6397529  0.0245816   107.387  &lt; 2e-16 ***\norigin_hex1025             -1.8176965  0.0547601   -33.194  &lt; 2e-16 ***\norigin_hex1033              0.4198174  0.0265934    15.787  &lt; 2e-16 ***\norigin_hex1034              1.1740172  0.0252111    46.568  &lt; 2e-16 ***\norigin_hex1035              1.7095382  0.0247827    68.981  &lt; 2e-16 ***\norigin_hex1036             -0.3245307  0.0278612   -11.648  &lt; 2e-16 ***\norigin_hex1037              0.8990567  0.0251644    35.727  &lt; 2e-16 ***\norigin_hex1043             -0.2271987  0.0345369    -6.578 4.75e-11 ***\norigin_hex1045              2.1682387  0.0245928    88.166  &lt; 2e-16 ***\norigin_hex1046              2.3745318  0.0246867    96.187  &lt; 2e-16 ***\norigin_hex1053              1.5082486  0.0248497    60.695  &lt; 2e-16 ***\norigin_hex1054              0.8574729  0.0253915    33.770  &lt; 2e-16 ***\norigin_hex1055              1.7269224  0.0247363    69.813  &lt; 2e-16 ***\norigin_hex1056              0.5839524  0.0258505    22.590  &lt; 2e-16 ***\norigin_hex1064             -3.3008975  0.2511754   -13.142  &lt; 2e-16 ***\norigin_hex1066              2.2496339  0.0246921    91.107  &lt; 2e-16 ***\norigin_hex1067              2.2765589  0.0250518    90.874  &lt; 2e-16 ***\norigin_hex1074              1.0532402  0.0253236    41.591  &lt; 2e-16 ***\norigin_hex1075              0.6181088  0.0261711    23.618  &lt; 2e-16 ***\norigin_hex1076              0.4444315  0.0256665    17.316  &lt; 2e-16 ***\norigin_hex1077              0.5409385  0.0261886    20.656  &lt; 2e-16 ***\norigin_hex1079              1.6800394  0.0247110    67.988  &lt; 2e-16 ***\norigin_hex1085             -2.7240327  0.1434886   -18.984  &lt; 2e-16 ***\norigin_hex1087              1.9089908  0.0248645    76.776  &lt; 2e-16 ***\norigin_hex1088              0.8721078  0.0268984    32.422  &lt; 2e-16 ***\norigin_hex109              -1.5070319  0.1019477   -14.782  &lt; 2e-16 ***\norigin_hex1094             -1.2273748  0.0497934   -24.649  &lt; 2e-16 ***\norigin_hex1095             -1.0705532  0.0407402   -26.278  &lt; 2e-16 ***\norigin_hex1096              0.5044426  0.0315289    15.999  &lt; 2e-16 ***\norigin_hex1097              2.0018581  0.0244911    81.738  &lt; 2e-16 ***\norigin_hex1098             -0.4691930  0.0301181   -15.578  &lt; 2e-16 ***\norigin_hex1099              1.0629911  0.0251124    42.329  &lt; 2e-16 ***\norigin_hex110              -0.5684377  0.0756139    -7.518 5.58e-14 ***\norigin_hex1105             -1.2588102  0.0658353   -19.121  &lt; 2e-16 ***\norigin_hex1106             -2.1179833  0.0948278   -22.335  &lt; 2e-16 ***\norigin_hex1107             -0.7011222  0.0365432   -19.186  &lt; 2e-16 ***\norigin_hex1108              3.5942265  0.0243342   147.703  &lt; 2e-16 ***\norigin_hex1109              1.4052447  0.0262197    53.595  &lt; 2e-16 ***\norigin_hex111               1.7547977  0.0267571    65.583  &lt; 2e-16 ***\norigin_hex1116              0.5650568  0.0256018    22.071  &lt; 2e-16 ***\norigin_hex1117             -0.7851506  0.0297763   -26.368  &lt; 2e-16 ***\norigin_hex1118             -1.0296565  0.0307687   -33.464  &lt; 2e-16 ***\norigin_hex1119              0.3630857  0.0260418    13.942  &lt; 2e-16 ***\norigin_hex112              -2.3842721  0.0685898   -34.761  &lt; 2e-16 ***\norigin_hex1120              0.1224200  0.0274805     4.455 8.40e-06 ***\norigin_hex1129              2.2924941  0.0246436    93.026  &lt; 2e-16 ***\norigin_hex1130              2.7333565  0.0245148   111.498  &lt; 2e-16 ***\norigin_hex1131              1.2441262  0.0261802    47.522  &lt; 2e-16 ***\norigin_hex1136             -0.3773068  0.0285768   -13.203  &lt; 2e-16 ***\norigin_hex1138             -1.1293494  0.0373742   -30.217  &lt; 2e-16 ***\norigin_hex1139              1.2464727  0.0247441    50.374  &lt; 2e-16 ***\norigin_hex1141              1.1867254  0.0249923    47.484  &lt; 2e-16 ***\norigin_hex1148             -1.1264107  0.0569959   -19.763  &lt; 2e-16 ***\norigin_hex1149              0.3598981  0.0296596    12.134  &lt; 2e-16 ***\norigin_hex1150              2.8461458  0.0244670   116.326  &lt; 2e-16 ***\norigin_hex1151              1.4050456  0.0250256    56.144  &lt; 2e-16 ***\norigin_hex1158             -0.1108969  0.0265781    -4.172 3.01e-05 ***\norigin_hex1159              1.0642214  0.0248651    42.800  &lt; 2e-16 ***\norigin_hex1160              2.0530891  0.0245045    83.784  &lt; 2e-16 ***\norigin_hex1171              2.8195936  0.0245096   115.040  &lt; 2e-16 ***\norigin_hex1172              2.7144555  0.0244897   110.841  &lt; 2e-16 ***\norigin_hex1173              0.4505651  0.0271437    16.599  &lt; 2e-16 ***\norigin_hex1174             -2.8444583  0.2683617   -10.599  &lt; 2e-16 ***\norigin_hex1178             -0.0357990  0.0263030    -1.361 0.173506    \norigin_hex1179              0.7598229  0.0251525    30.209  &lt; 2e-16 ***\norigin_hex1180              1.6424971  0.0245961    66.779  &lt; 2e-16 ***\norigin_hex1181              0.8850885  0.0250763    35.296  &lt; 2e-16 ***\norigin_hex1183             -0.0474056  0.0268558    -1.765 0.077531 .  \norigin_hex1190             -0.8772480  0.0536402   -16.354  &lt; 2e-16 ***\norigin_hex1192              2.2377621  0.0249647    89.637  &lt; 2e-16 ***\norigin_hex1193              1.9785082  0.0247482    79.946  &lt; 2e-16 ***\norigin_hex1194              0.2829625  0.0278703    10.153  &lt; 2e-16 ***\norigin_hex1200              0.9957346  0.0251063    39.661  &lt; 2e-16 ***\norigin_hex1201              0.7516893  0.0252239    29.801  &lt; 2e-16 ***\norigin_hex1203              1.2389016  0.0249225    49.710  &lt; 2e-16 ***\norigin_hex1204              0.9981851  0.0251519    39.686  &lt; 2e-16 ***\norigin_hex1211             -1.4624627  0.0923341   -15.839  &lt; 2e-16 ***\norigin_hex1214              2.5723196  0.0245486   104.785  &lt; 2e-16 ***\norigin_hex1215             -0.5422929  0.0464653   -11.671  &lt; 2e-16 ***\norigin_hex1216             -1.4114980  0.0470367   -30.008  &lt; 2e-16 ***\norigin_hex1220              2.0518823  0.0245657    83.526  &lt; 2e-16 ***\norigin_hex1221              1.4173594  0.0246438    57.514  &lt; 2e-16 ***\norigin_hex1222              1.2146452  0.0260562    46.616  &lt; 2e-16 ***\norigin_hex1223             -0.7058728  0.0293867   -24.020  &lt; 2e-16 ***\norigin_hex1224              0.0775920  0.0264263     2.936 0.003323 ** \norigin_hex1231             -3.2757568  0.1905342   -17.192  &lt; 2e-16 ***\norigin_hex1232             -2.0171117  0.1144071   -17.631  &lt; 2e-16 ***\norigin_hex1235              0.0457122  0.0277947     1.645 0.100045    \norigin_hex1236              0.4288767  0.0277541    15.453  &lt; 2e-16 ***\norigin_hex1241              0.1522568  0.0261959     5.812 6.16e-09 ***\norigin_hex1242              0.8126169  0.0251493    32.312  &lt; 2e-16 ***\norigin_hex1243              1.3820442  0.0247064    55.939  &lt; 2e-16 ***\norigin_hex1246              0.1788057  0.0258737     6.911 4.82e-12 ***\norigin_hex1256              1.6311222  0.0254839    64.006  &lt; 2e-16 ***\norigin_hex1257              2.3817944  0.0247443    96.256  &lt; 2e-16 ***\norigin_hex1258              0.1841946  0.0281441     6.545 5.96e-11 ***\norigin_hex1262              0.7654240  0.0255639    29.942  &lt; 2e-16 ***\norigin_hex1263              1.0591523  0.0247800    42.742  &lt; 2e-16 ***\norigin_hex1264              0.1904030  0.0269047     7.077 1.47e-12 ***\norigin_hex1265             -0.5268372  0.0279169   -18.872  &lt; 2e-16 ***\norigin_hex1266              0.8905905  0.0254121    35.046  &lt; 2e-16 ***\norigin_hex1267             -1.1711953  0.0361155   -32.429  &lt; 2e-16 ***\norigin_hex1272             -3.2493270  0.1179930   -27.538  &lt; 2e-16 ***\norigin_hex1273              0.5292696  0.0269653    19.628  &lt; 2e-16 ***\norigin_hex1277              2.2693064  0.0245423    92.465  &lt; 2e-16 ***\norigin_hex1278             -0.0349316  0.0278048    -1.256 0.209002    \norigin_hex128               0.7223397  0.0329278    21.937  &lt; 2e-16 ***\norigin_hex1283              2.2099958  0.0245209    90.127  &lt; 2e-16 ***\norigin_hex1284              1.4789675  0.0246893    59.903  &lt; 2e-16 ***\norigin_hex1285              2.1685664  0.0244634    88.645  &lt; 2e-16 ***\norigin_hex1286              0.3900799  0.0262077    14.884  &lt; 2e-16 ***\norigin_hex1289             -1.7100541  0.0521219   -32.809  &lt; 2e-16 ***\norigin_hex129              -1.9336424  0.1905354   -10.148  &lt; 2e-16 ***\norigin_hex1293             -2.9107369  0.0923342   -31.524  &lt; 2e-16 ***\norigin_hex1294              2.0587110  0.0249328    82.570  &lt; 2e-16 ***\norigin_hex1295             -0.4439498  0.0317701   -13.974  &lt; 2e-16 ***\norigin_hex1298              1.3145305  0.0250462    52.484  &lt; 2e-16 ***\norigin_hex1299              1.8406859  0.0249585    73.750  &lt; 2e-16 ***\norigin_hex130              -1.8673592  0.0649040   -28.771  &lt; 2e-16 ***\norigin_hex1304              2.1748259  0.0245266    88.672  &lt; 2e-16 ***\norigin_hex1305              1.5141444  0.0245807    61.599  &lt; 2e-16 ***\norigin_hex1307             -1.8874079  0.0446967   -42.227  &lt; 2e-16 ***\norigin_hex1308              1.0380173  0.0249832    41.549  &lt; 2e-16 ***\norigin_hex131              -0.6816178  0.0427962   -15.927  &lt; 2e-16 ***\norigin_hex1310             -3.2232502  0.1370066   -23.526  &lt; 2e-16 ***\norigin_hex1316             -1.4776283  0.0410252   -36.018  &lt; 2e-16 ***\norigin_hex1317              0.2317556  0.0266689     8.690  &lt; 2e-16 ***\norigin_hex1318             -0.2452873  0.0286198    -8.571  &lt; 2e-16 ***\norigin_hex1319              2.4974258  0.0245142   101.877  &lt; 2e-16 ***\norigin_hex132              -1.2534734  0.0537430   -23.323  &lt; 2e-16 ***\norigin_hex1320              1.2359134  0.0257697    47.960  &lt; 2e-16 ***\norigin_hex1325             -0.1744563  0.0271347    -6.429 1.28e-10 ***\norigin_hex1326              1.7039295  0.0245700    69.350  &lt; 2e-16 ***\norigin_hex1327              1.4634004  0.0246400    59.391  &lt; 2e-16 ***\norigin_hex1328              0.1875723  0.0259722     7.222 5.12e-13 ***\norigin_hex1329              0.3338163  0.0268275    12.443  &lt; 2e-16 ***\norigin_hex133              -1.4657855  0.0448298   -32.697  &lt; 2e-16 ***\norigin_hex1330              0.1804237  0.0255217     7.069 1.56e-12 ***\norigin_hex1331             -3.8892031  0.3024867   -12.857  &lt; 2e-16 ***\norigin_hex1333             -0.2426770  0.0272247    -8.914  &lt; 2e-16 ***\norigin_hex1334              0.1990879  0.0268907     7.404 1.33e-13 ***\norigin_hex1335             -0.2433650  0.0295157    -8.245  &lt; 2e-16 ***\norigin_hex1336             -2.7663552  0.1099236   -25.166  &lt; 2e-16 ***\norigin_hex1337             -2.1532596  0.0543936   -39.587  &lt; 2e-16 ***\norigin_hex1338             -3.0472530  0.0849208   -35.883  &lt; 2e-16 ***\norigin_hex1339              2.5156481  0.0244941   102.704  &lt; 2e-16 ***\norigin_hex134               0.1972097  0.0336015     5.869 4.38e-09 ***\norigin_hex1340              0.8782192  0.0257735    34.074  &lt; 2e-16 ***\norigin_hex1341             -4.0485215  0.7075234    -5.722 1.05e-08 ***\norigin_hex1346              1.4430774  0.0249829    57.763  &lt; 2e-16 ***\norigin_hex1347              2.3145747  0.0244663    94.603  &lt; 2e-16 ***\norigin_hex1348              0.6561063  0.0250100    26.234  &lt; 2e-16 ***\norigin_hex1349              0.3521877  0.0255297    13.795  &lt; 2e-16 ***\norigin_hex1350              0.5026128  0.0266144    18.885  &lt; 2e-16 ***\norigin_hex1353             -0.0746080  0.0262122    -2.846 0.004423 ** \norigin_hex1354             -0.0853514  0.0272042    -3.137 0.001704 ** \norigin_hex1355              0.7581085  0.0256696    29.533  &lt; 2e-16 ***\norigin_hex1357             -0.1590540  0.0305759    -5.202 1.97e-07 ***\norigin_hex1358              1.1488203  0.0252566    45.486  &lt; 2e-16 ***\norigin_hex1359              1.7538476  0.0247558    70.846  &lt; 2e-16 ***\norigin_hex1360              1.7635408  0.0247850    71.154  &lt; 2e-16 ***\norigin_hex1361              2.7413196  0.0245363   111.725  &lt; 2e-16 ***\norigin_hex1362             -1.3722648  0.0512413   -26.780  &lt; 2e-16 ***\norigin_hex1368              0.3376315  0.0256357    13.170  &lt; 2e-16 ***\norigin_hex1369              0.1056627  0.0257046     4.111 3.95e-05 ***\norigin_hex1370              1.0811003  0.0247370    43.704  &lt; 2e-16 ***\norigin_hex1371              0.4351686  0.0261359    16.650  &lt; 2e-16 ***\norigin_hex1372             -0.2793561  0.0275153   -10.153  &lt; 2e-16 ***\norigin_hex1373             -2.0995833  0.0525189   -39.978  &lt; 2e-16 ***\norigin_hex1374              0.0917024  0.0287265     3.192 0.001412 ** \norigin_hex1375              0.8931920  0.0254232    35.133  &lt; 2e-16 ***\norigin_hex1376              0.6506721  0.0271479    23.968  &lt; 2e-16 ***\norigin_hex1379             -1.2173069  0.0420673   -28.937  &lt; 2e-16 ***\norigin_hex1380              2.7934394  0.0244126   114.426  &lt; 2e-16 ***\norigin_hex1381              2.4221403  0.0244992    98.866  &lt; 2e-16 ***\norigin_hex1382              1.9428799  0.0250016    77.710  &lt; 2e-16 ***\norigin_hex1383             -0.6243729  0.0340936   -18.313  &lt; 2e-16 ***\norigin_hex1388              0.7695726  0.0250794    30.685  &lt; 2e-16 ***\norigin_hex1389              0.0447629  0.0257848     1.736 0.082561 .  \norigin_hex1390              0.3418253  0.0251305    13.602  &lt; 2e-16 ***\norigin_hex1391              0.4835179  0.0255982    18.889  &lt; 2e-16 ***\norigin_hex1392             -0.1207033  0.0288897    -4.178 2.94e-05 ***\norigin_hex1393             -0.8351087  0.0284766   -29.326  &lt; 2e-16 ***\norigin_hex1394              0.4629447  0.0253674    18.250  &lt; 2e-16 ***\norigin_hex1395              0.4066355  0.0254377    15.986  &lt; 2e-16 ***\norigin_hex1396              1.7342509  0.0247361    70.110  &lt; 2e-16 ***\norigin_hex1397              1.3879109  0.0247643    56.045  &lt; 2e-16 ***\norigin_hex1398              0.6454748  0.0265351    24.325  &lt; 2e-16 ***\norigin_hex1400              1.9252166  0.0250545    76.841  &lt; 2e-16 ***\norigin_hex1401              2.0340919  0.0245314    82.918  &lt; 2e-16 ***\norigin_hex1402              2.3150693  0.0245943    94.130  &lt; 2e-16 ***\norigin_hex1404              2.2128511  0.0284288    77.838  &lt; 2e-16 ***\norigin_hex1410              1.1397432  0.0246277    46.279  &lt; 2e-16 ***\norigin_hex1411              0.2469550  0.0254984     9.685  &lt; 2e-16 ***\norigin_hex1412              0.5059181  0.0250216    20.219  &lt; 2e-16 ***\norigin_hex1413              1.3206917  0.0246899    53.491  &lt; 2e-16 ***\norigin_hex1414              0.4162891  0.0250396    16.625  &lt; 2e-16 ***\norigin_hex1415              0.1318114  0.0259050     5.088 3.61e-07 ***\norigin_hex1416              0.8166251  0.0252761    32.308  &lt; 2e-16 ***\norigin_hex1417              0.8212286  0.0250535    32.779  &lt; 2e-16 ***\norigin_hex1418              1.6801791  0.0246895    68.052  &lt; 2e-16 ***\norigin_hex1419              1.0918192  0.0250736    43.545  &lt; 2e-16 ***\norigin_hex1422              2.2863318  0.0247110    92.523  &lt; 2e-16 ***\norigin_hex1423              3.3014575  0.0244396   135.086  &lt; 2e-16 ***\norigin_hex1430              0.9032695  0.0249181    36.250  &lt; 2e-16 ***\norigin_hex1431              1.0269839  0.0247049    41.570  &lt; 2e-16 ***\norigin_hex1432              1.0333342  0.0246928    41.848  &lt; 2e-16 ***\norigin_hex1433             -0.4202313  0.0289213   -14.530  &lt; 2e-16 ***\norigin_hex1434              1.0981275  0.0248118    44.258  &lt; 2e-16 ***\norigin_hex1435              1.6254410  0.0245531    66.201  &lt; 2e-16 ***\norigin_hex1436             -1.3187080  0.0330383   -39.915  &lt; 2e-16 ***\norigin_hex1437              1.8312131  0.0245994    74.441  &lt; 2e-16 ***\norigin_hex1438              2.1251370  0.0244495    86.919  &lt; 2e-16 ***\norigin_hex1439              2.7809703  0.0243954   113.995  &lt; 2e-16 ***\norigin_hex1440             -0.9659255  0.0314694   -30.694  &lt; 2e-16 ***\norigin_hex1442              1.7543233  0.0250779    69.955  &lt; 2e-16 ***\norigin_hex1443              2.9409004  0.0244813   120.129  &lt; 2e-16 ***\norigin_hex1444              2.1270502  0.0252719    84.167  &lt; 2e-16 ***\norigin_hex1452              0.0440742  0.0253850     1.736 0.082523 .  \norigin_hex1453              0.4848512  0.0251221    19.300  &lt; 2e-16 ***\norigin_hex1454             -0.7195099  0.0302573   -23.780  &lt; 2e-16 ***\norigin_hex1455              0.5903097  0.0255264    23.125  &lt; 2e-16 ***\norigin_hex1456              1.1564150  0.0249186    46.408  &lt; 2e-16 ***\norigin_hex1457              1.9853115  0.0245571    80.845  &lt; 2e-16 ***\norigin_hex1458              1.9836572  0.0244974    80.974  &lt; 2e-16 ***\norigin_hex1459              1.6179798  0.0246445    65.653  &lt; 2e-16 ***\norigin_hex1460              0.9156630  0.0249997    36.627  &lt; 2e-16 ***\norigin_hex1461             -0.4079619  0.0293499   -13.900  &lt; 2e-16 ***\norigin_hex1464              2.9896260  0.0244538   122.256  &lt; 2e-16 ***\norigin_hex1465              2.7464298  0.0246451   111.439  &lt; 2e-16 ***\norigin_hex1472             -1.2194267  0.0306989   -39.722  &lt; 2e-16 ***\norigin_hex1473             -0.3279362  0.0260696   -12.579  &lt; 2e-16 ***\norigin_hex1474              0.6256624  0.0247920    25.236  &lt; 2e-16 ***\norigin_hex1475              1.7310842  0.0245647    70.470  &lt; 2e-16 ***\norigin_hex1476              1.1563774  0.0249824    46.288  &lt; 2e-16 ***\norigin_hex1477              2.4527680  0.0243794   100.608  &lt; 2e-16 ***\norigin_hex1478              0.8941965  0.0250077    35.757  &lt; 2e-16 ***\norigin_hex1479              1.0614417  0.0248642    42.690  &lt; 2e-16 ***\norigin_hex1480              2.7598904  0.0243670   113.263  &lt; 2e-16 ***\norigin_hex1481              0.3025476  0.0261592    11.566  &lt; 2e-16 ***\norigin_hex1482              0.2332892  0.0272541     8.560  &lt; 2e-16 ***\norigin_hex1485              1.4646609  0.0246766    59.354  &lt; 2e-16 ***\norigin_hex1494             -0.0192817  0.0268249    -0.719 0.472265    \norigin_hex1495              0.1879398  0.0254092     7.397 1.40e-13 ***\norigin_hex1496              0.6873668  0.0246460    27.890  &lt; 2e-16 ***\norigin_hex1497              1.5066968  0.0247378    60.907  &lt; 2e-16 ***\norigin_hex1498              1.8445564  0.0245449    75.150  &lt; 2e-16 ***\norigin_hex1499              2.0304483  0.0244746    82.961  &lt; 2e-16 ***\norigin_hex150               1.3822071  0.0312688    44.204  &lt; 2e-16 ***\norigin_hex1500              2.0418413  0.0247684    82.437  &lt; 2e-16 ***\norigin_hex1501              2.1452084  0.0244820    87.624  &lt; 2e-16 ***\norigin_hex1502              1.7196426  0.0246306    69.817  &lt; 2e-16 ***\norigin_hex1506             -2.7148033  0.1111474   -24.425  &lt; 2e-16 ***\norigin_hex151              -1.4743675  0.0634483   -23.237  &lt; 2e-16 ***\norigin_hex1515             -1.1438689  0.0321016   -35.633  &lt; 2e-16 ***\norigin_hex1516             -0.1415410  0.0250782    -5.644 1.66e-08 ***\norigin_hex1517              0.8049441  0.0251119    32.054  &lt; 2e-16 ***\norigin_hex1518              0.8929948  0.0252504    35.366  &lt; 2e-16 ***\norigin_hex1519              2.1583588  0.0246654    87.505  &lt; 2e-16 ***\norigin_hex152              -1.4747506  0.0846653   -17.419  &lt; 2e-16 ***\norigin_hex1520              0.7690794  0.0251359    30.597  &lt; 2e-16 ***\norigin_hex1521              0.1018016  0.0265235     3.838 0.000124 ***\norigin_hex1522              2.4280492  0.0244470    99.319  &lt; 2e-16 ***\norigin_hex1523              0.6286390  0.0283780    22.152  &lt; 2e-16 ***\norigin_hex1524              1.0127447  0.0258385    39.195  &lt; 2e-16 ***\norigin_hex1527              0.1874271  0.0289296     6.479 9.25e-11 ***\norigin_hex153              -1.7334813  0.0481018   -36.038  &lt; 2e-16 ***\norigin_hex1535             -1.9963366  0.0759654   -26.280  &lt; 2e-16 ***\norigin_hex1536             -1.6609627  0.0402375   -41.279  &lt; 2e-16 ***\norigin_hex1537             -1.0759143  0.0287454   -37.429  &lt; 2e-16 ***\norigin_hex1538              0.6047826  0.0249289    24.260  &lt; 2e-16 ***\norigin_hex1539              1.0609196  0.0247134    42.929  &lt; 2e-16 ***\norigin_hex154               1.6112574  0.0258249    62.392  &lt; 2e-16 ***\norigin_hex1540              1.7281837  0.0245772    70.316  &lt; 2e-16 ***\norigin_hex1541              2.4157305  0.0246916    97.836  &lt; 2e-16 ***\norigin_hex1542             -0.0320725  0.0281212    -1.141 0.254075    \norigin_hex1543              0.5173108  0.0310787    16.645  &lt; 2e-16 ***\norigin_hex1544              1.4121871  0.0250092    56.467  &lt; 2e-16 ***\norigin_hex1547             -2.0553466  0.0626281   -32.818  &lt; 2e-16 ***\norigin_hex155              -1.3890461  0.0407976   -34.047  &lt; 2e-16 ***\norigin_hex1556             -0.9482858  0.0584301   -16.229  &lt; 2e-16 ***\norigin_hex1557             -1.8801190  0.0391498   -48.024  &lt; 2e-16 ***\norigin_hex1558             -0.2494481  0.0299046    -8.341  &lt; 2e-16 ***\norigin_hex1559              1.2026220  0.0246486    48.791  &lt; 2e-16 ***\norigin_hex156              -0.5660419  0.0455517   -12.426  &lt; 2e-16 ***\norigin_hex1560              2.1065513  0.0244629    86.112  &lt; 2e-16 ***\norigin_hex1561              1.9524514  0.0246097    79.337  &lt; 2e-16 ***\norigin_hex1562             -1.0115384  0.0307725   -32.872  &lt; 2e-16 ***\norigin_hex1563              0.6809143  0.0252043    27.016  &lt; 2e-16 ***\norigin_hex1564             -0.0379621  0.0272847    -1.391 0.164125    \norigin_hex1565             -0.1032857  0.0275858    -3.744 0.000181 ***\norigin_hex1566             -0.5585801  0.0308585   -18.101  &lt; 2e-16 ***\norigin_hex1567             -2.4894831  0.0802303   -31.029  &lt; 2e-16 ***\norigin_hex1568             -1.7014221  0.0658351   -25.844  &lt; 2e-16 ***\norigin_hex1578             -3.9037237  0.7075236    -5.517 3.44e-08 ***\norigin_hex1580             -0.1725988  0.0283428    -6.090 1.13e-09 ***\norigin_hex1581             -1.4414661  0.0311122   -46.331  &lt; 2e-16 ***\norigin_hex1582              1.6795179  0.0244914    68.576  &lt; 2e-16 ***\norigin_hex1583             -0.2485624  0.0311663    -7.975 1.52e-15 ***\norigin_hex1584              0.4313455  0.0261215    16.513  &lt; 2e-16 ***\norigin_hex1585              1.0531369  0.0256959    40.985  &lt; 2e-16 ***\norigin_hex1586              0.0684735  0.0269885     2.537 0.011176 *  \norigin_hex1589             -3.0633912  0.1144069   -26.776  &lt; 2e-16 ***\norigin_hex1590             -1.7928321  0.0623641   -28.748  &lt; 2e-16 ***\norigin_hex1600              1.6324651  0.0258345    63.189  &lt; 2e-16 ***\norigin_hex1601              0.2380260  0.0252338     9.433  &lt; 2e-16 ***\norigin_hex1602              1.3142203  0.0248892    52.803  &lt; 2e-16 ***\norigin_hex1603              1.9179880  0.0245015    78.280  &lt; 2e-16 ***\norigin_hex1604              0.5456347  0.0253410    21.532  &lt; 2e-16 ***\norigin_hex1605              1.6400432  0.0245456    66.816  &lt; 2e-16 ***\norigin_hex1606              1.9164306  0.0257321    74.476  &lt; 2e-16 ***\norigin_hex1607              0.5272615  0.0258572    20.391  &lt; 2e-16 ***\norigin_hex1608              2.1951579  0.0245767    89.319  &lt; 2e-16 ***\norigin_hex1609              1.7815795  0.0247900    71.867  &lt; 2e-16 ***\norigin_hex1610             -1.6220880  0.0668200   -24.275  &lt; 2e-16 ***\norigin_hex1622              0.7326510  0.0312185    23.469  &lt; 2e-16 ***\norigin_hex1623              1.6182124  0.0245192    65.998  &lt; 2e-16 ***\norigin_hex1624              0.6153984  0.0254421    24.188  &lt; 2e-16 ***\norigin_hex1625              1.8387132  0.0246109    74.711  &lt; 2e-16 ***\norigin_hex1626              2.3541217  0.0244207    96.399  &lt; 2e-16 ***\norigin_hex1627              0.9254074  0.0251124    36.851  &lt; 2e-16 ***\norigin_hex1628              2.5605392  0.0244333   104.797  &lt; 2e-16 ***\norigin_hex1629              1.3788377  0.0250809    54.975  &lt; 2e-16 ***\norigin_hex1630              1.3251193  0.0253333    52.307  &lt; 2e-16 ***\norigin_hex1631             -2.2583380  0.0639175   -35.332  &lt; 2e-16 ***\norigin_hex1642             -0.6178627  0.0362756   -17.032  &lt; 2e-16 ***\norigin_hex1643              1.5809538  0.0245770    64.326  &lt; 2e-16 ***\norigin_hex1644             -0.2876204  0.0288866    -9.957  &lt; 2e-16 ***\norigin_hex1645              1.0223149  0.0248925    41.069  &lt; 2e-16 ***\norigin_hex1646              0.9863457  0.0256474    38.458  &lt; 2e-16 ***\norigin_hex1647              1.0661890  0.0248063    42.981  &lt; 2e-16 ***\norigin_hex1648              1.6812396  0.0246325    68.253  &lt; 2e-16 ***\norigin_hex1649              2.4132504  0.0244658    98.638  &lt; 2e-16 ***\norigin_hex1650              2.1490328  0.0247229    86.925  &lt; 2e-16 ***\norigin_hex1664             -3.1948556  0.1684264   -18.969  &lt; 2e-16 ***\norigin_hex1665              1.7775389  0.0245080    72.529  &lt; 2e-16 ***\norigin_hex1666              0.5885727  0.0251137    23.436  &lt; 2e-16 ***\norigin_hex1667              1.7348981  0.0262560    66.076  &lt; 2e-16 ***\norigin_hex1668              1.7615206  0.0246187    71.552  &lt; 2e-16 ***\norigin_hex1670              2.4667330  0.0244302   100.971  &lt; 2e-16 ***\norigin_hex1671              2.9620204  0.0246988   119.926  &lt; 2e-16 ***\norigin_hex1672              2.1155481  0.0248368    85.178  &lt; 2e-16 ***\norigin_hex1684              0.8533253  0.0268528    31.778  &lt; 2e-16 ***\norigin_hex1685              1.5424043  0.0247432    62.336  &lt; 2e-16 ***\norigin_hex1686              1.3339900  0.0247517    53.895  &lt; 2e-16 ***\norigin_hex1687              1.1079358  0.0252213    43.929  &lt; 2e-16 ***\norigin_hex1688              0.5097752  0.0255119    19.982  &lt; 2e-16 ***\norigin_hex1689             -0.0395075  0.0269320    -1.467 0.142393    \norigin_hex1690              1.4007267  0.0250093    56.008  &lt; 2e-16 ***\norigin_hex1691              2.1300460  0.0245730    86.682  &lt; 2e-16 ***\norigin_hex1692              1.2067341  0.0254269    47.459  &lt; 2e-16 ***\norigin_hex1706              1.5201376  0.0249352    60.964  &lt; 2e-16 ***\norigin_hex1707              1.1840232  0.0246875    47.960  &lt; 2e-16 ***\norigin_hex1708              1.8717487  0.0245310    76.301  &lt; 2e-16 ***\norigin_hex1709              0.8742757  0.0250510    34.900  &lt; 2e-16 ***\norigin_hex1710              2.0812021  0.0245423    84.801  &lt; 2e-16 ***\norigin_hex1711              1.7187962  0.0246689    69.675  &lt; 2e-16 ***\norigin_hex1712              2.4207880  0.0244269    99.103  &lt; 2e-16 ***\norigin_hex1713             -0.0069182  0.0271121    -0.255 0.798591    \norigin_hex1714              2.3468670  0.0246126    95.352  &lt; 2e-16 ***\norigin_hex172               0.1161334  0.0796012     1.459 0.144582    \norigin_hex1727              1.5732091  0.0247329    63.608  &lt; 2e-16 ***\norigin_hex1728              1.4821106  0.0246492    60.128  &lt; 2e-16 ***\norigin_hex1729              0.9882227  0.0248174    39.820  &lt; 2e-16 ***\norigin_hex1730             -0.8845089  0.0313720   -28.194  &lt; 2e-16 ***\norigin_hex1731              1.4489884  0.0247760    58.483  &lt; 2e-16 ***\norigin_hex1732              2.1334882  0.0244701    87.188  &lt; 2e-16 ***\norigin_hex1733              1.8711834  0.0245980    76.071  &lt; 2e-16 ***\norigin_hex1734              1.9116159  0.0245640    77.822  &lt; 2e-16 ***\norigin_hex1735              2.8416028  0.0248593   114.307  &lt; 2e-16 ***\norigin_hex174              -1.5703626  0.0522543   -30.052  &lt; 2e-16 ***\norigin_hex1748              0.3965533  0.0258793    15.323  &lt; 2e-16 ***\norigin_hex1749              1.1880256  0.0246972    48.104  &lt; 2e-16 ***\norigin_hex175               0.7234549  0.0262499    27.560  &lt; 2e-16 ***\norigin_hex1750              0.4119589  0.0252264    16.330  &lt; 2e-16 ***\norigin_hex1751              0.1563932  0.0263570     5.934 2.96e-09 ***\norigin_hex1753              2.0452347  0.0245021    83.472  &lt; 2e-16 ***\norigin_hex1754              2.4117265  0.0244263    98.735  &lt; 2e-16 ***\norigin_hex1755              1.8367861  0.0245870    74.706  &lt; 2e-16 ***\norigin_hex1756              1.7049568  0.0247485    68.891  &lt; 2e-16 ***\norigin_hex1757             -0.7660998  0.0343745   -22.287  &lt; 2e-16 ***\norigin_hex176               1.9703382  0.0249596    78.941  &lt; 2e-16 ***\norigin_hex1769              1.1902852  0.0248511    47.897  &lt; 2e-16 ***\norigin_hex1770              0.8392552  0.0260098    32.267  &lt; 2e-16 ***\norigin_hex1771             -0.0352760  0.0261372    -1.350 0.177129    \norigin_hex1772             -0.0655458  0.0336076    -1.950 0.051137 .  \norigin_hex1774              1.8469904  0.0245689    75.176  &lt; 2e-16 ***\norigin_hex1775              1.4068454  0.0247843    56.764  &lt; 2e-16 ***\norigin_hex1776              2.4304206  0.0244383    99.451  &lt; 2e-16 ***\norigin_hex1777              2.4760348  0.0245066   101.035  &lt; 2e-16 ***\norigin_hex1778              1.3766691  0.0259268    53.098  &lt; 2e-16 ***\norigin_hex1790              1.8116241  0.0246674    73.442  &lt; 2e-16 ***\norigin_hex1791              0.9486662  0.0249931    37.957  &lt; 2e-16 ***\norigin_hex1792              1.2774401  0.0250428    51.010  &lt; 2e-16 ***\norigin_hex1793             -0.7065948  0.0276470   -25.558  &lt; 2e-16 ***\norigin_hex1794             -0.1140569  0.0365439    -3.121 0.001802 ** \norigin_hex1795             -1.3352415  0.0407114   -32.798  &lt; 2e-16 ***\norigin_hex1796              2.1720403  0.0245525    88.465  &lt; 2e-16 ***\norigin_hex1797              2.2212371  0.0245058    90.641  &lt; 2e-16 ***\norigin_hex1798              2.3611829  0.0245070    96.347  &lt; 2e-16 ***\norigin_hex1799              1.0686115  0.0255343    41.850  &lt; 2e-16 ***\norigin_hex1800             -1.0264383  0.0361555   -28.390  &lt; 2e-16 ***\norigin_hex1811              1.1335755  0.0252354    44.920  &lt; 2e-16 ***\norigin_hex1812              2.0527259  0.0244683    83.893  &lt; 2e-16 ***\norigin_hex1813              1.7885028  0.0245096    72.971  &lt; 2e-16 ***\norigin_hex1817              1.8639790  0.0247469    75.322  &lt; 2e-16 ***\norigin_hex1818              2.1158525  0.0245797    86.081  &lt; 2e-16 ***\norigin_hex1819              2.4281783  0.0244761    99.206  &lt; 2e-16 ***\norigin_hex1820             -0.5307646  0.0407682   -13.019  &lt; 2e-16 ***\norigin_hex1832              1.6528291  0.0247493    66.783  &lt; 2e-16 ***\norigin_hex1833              1.1880095  0.0248966    47.718  &lt; 2e-16 ***\norigin_hex1834              1.5100423  0.0246213    61.331  &lt; 2e-16 ***\norigin_hex1835              0.8187114  0.0252654    32.404  &lt; 2e-16 ***\norigin_hex1837             -1.5466342  0.0654143   -23.644  &lt; 2e-16 ***\norigin_hex1839              1.5471459  0.0250595    61.739  &lt; 2e-16 ***\norigin_hex1840              3.2366441  0.0243618   132.858  &lt; 2e-16 ***\norigin_hex1841             -0.9197966  0.0420185   -21.890  &lt; 2e-16 ***\norigin_hex1842              1.7248908  0.0263375    65.492  &lt; 2e-16 ***\norigin_hex1853              1.5442291  0.0246937    62.535  &lt; 2e-16 ***\norigin_hex1854              1.9144208  0.0246301    77.727  &lt; 2e-16 ***\norigin_hex1855              1.8937956  0.0245510    77.137  &lt; 2e-16 ***\norigin_hex1858             -0.1201819  0.0349618    -3.438 0.000587 ***\norigin_hex1860              2.6768628  0.0255338   104.836  &lt; 2e-16 ***\norigin_hex1861              2.1697832  0.0246072    88.177  &lt; 2e-16 ***\norigin_hex1874              1.9274085  0.0249046    77.392  &lt; 2e-16 ***\norigin_hex1875              0.0636901  0.0271521     2.346 0.018993 *  \norigin_hex1876              1.9227528  0.0260462    73.821  &lt; 2e-16 ***\norigin_hex1877              1.5955806  0.0246577    64.709  &lt; 2e-16 ***\norigin_hex1880             -1.3771335  0.0560941   -24.550  &lt; 2e-16 ***\norigin_hex1882              2.1613412  0.0246758    87.590  &lt; 2e-16 ***\norigin_hex1883              2.0047289  0.0256659    78.109  &lt; 2e-16 ***\norigin_hex1895              1.8657329  0.0246420    75.713  &lt; 2e-16 ***\norigin_hex1896              0.2370993  0.0260495     9.102  &lt; 2e-16 ***\norigin_hex1897              1.0982683  0.0257172    42.706  &lt; 2e-16 ***\norigin_hex1898             -3.7308026  0.1346590   -27.706  &lt; 2e-16 ***\norigin_hex1901             -1.5210310  0.0636335   -23.903  &lt; 2e-16 ***\norigin_hex1903              1.1235354  0.0256818    43.748  &lt; 2e-16 ***\norigin_hex1917              0.5538608  0.0257911    21.475  &lt; 2e-16 ***\norigin_hex1918              2.4207642  0.0248345    97.476  &lt; 2e-16 ***\norigin_hex1919              1.6777517  0.0247227    67.863  &lt; 2e-16 ***\norigin_hex1922             -0.3239203  0.0371584    -8.717  &lt; 2e-16 ***\norigin_hex1924              0.8583421  0.0258466    33.209  &lt; 2e-16 ***\norigin_hex1937              1.1326561  0.0250946    45.135  &lt; 2e-16 ***\norigin_hex1938              1.8649262  0.0245913    75.837  &lt; 2e-16 ***\norigin_hex1939              2.6507064  0.0245235   108.088  &lt; 2e-16 ***\norigin_hex1942             -1.4377100  0.0527900   -27.235  &lt; 2e-16 ***\norigin_hex195              -2.0608387  0.0844119   -24.414  &lt; 2e-16 ***\norigin_hex1959              0.9073389  0.0256067    35.434  &lt; 2e-16 ***\norigin_hex196              -1.5749251  0.0484118   -32.532  &lt; 2e-16 ***\norigin_hex1960              2.7252876  0.0243731   111.815  &lt; 2e-16 ***\norigin_hex1961              1.3975555  0.0251006    55.678  &lt; 2e-16 ***\norigin_hex1962              2.2676868  0.0245696    92.297  &lt; 2e-16 ***\norigin_hex1964             -2.3288075  0.0913288   -25.499  &lt; 2e-16 ***\norigin_hex197              -2.0035566  0.1124166   -17.823  &lt; 2e-16 ***\norigin_hex1979              1.0640461  0.0253756    41.932  &lt; 2e-16 ***\norigin_hex1980             -0.4320773  0.0277146   -15.590  &lt; 2e-16 ***\norigin_hex1981              2.0854523  0.0245730    84.868  &lt; 2e-16 ***\norigin_hex1982              0.9089485  0.0264452    34.371  &lt; 2e-16 ***\norigin_hex1983              2.4343304  0.0245712    99.073  &lt; 2e-16 ***\norigin_hex1984              1.2417646  0.0252693    49.141  &lt; 2e-16 ***\norigin_hex1985              1.5538997  0.0249607    62.254  &lt; 2e-16 ***\norigin_hex2001              1.4334532  0.0248684    57.642  &lt; 2e-16 ***\norigin_hex2002              2.1112185  0.0244897    86.208  &lt; 2e-16 ***\norigin_hex2003              1.7017923  0.0247042    68.887  &lt; 2e-16 ***\norigin_hex2004              2.6968505  0.0245376   109.907  &lt; 2e-16 ***\norigin_hex2005              2.5001485  0.0245417   101.874  &lt; 2e-16 ***\norigin_hex2006              1.0667163  0.0258241    41.307  &lt; 2e-16 ***\norigin_hex2007             -0.1306307  0.0288421    -4.529 5.92e-06 ***\norigin_hex2022              2.0675309  0.0248470    83.210  &lt; 2e-16 ***\norigin_hex2023              2.3399439  0.0244757    95.603  &lt; 2e-16 ***\norigin_hex2024              1.8123037  0.0246402    73.551  &lt; 2e-16 ***\norigin_hex2025              2.0536191  0.0246183    83.418  &lt; 2e-16 ***\norigin_hex2026              0.6551640  0.0267449    24.497  &lt; 2e-16 ***\norigin_hex2027              1.9245901  0.0245170    78.500  &lt; 2e-16 ***\norigin_hex2043              1.0488691  0.0253083    41.444  &lt; 2e-16 ***\norigin_hex2044              2.0806868  0.0245541    84.739  &lt; 2e-16 ***\norigin_hex2045             -2.4528313  0.0781923   -31.369  &lt; 2e-16 ***\norigin_hex2046              2.0447240  0.0245032    83.447  &lt; 2e-16 ***\norigin_hex2047              2.0218108  0.0247128    81.812  &lt; 2e-16 ***\norigin_hex2048              2.2077052  0.0246168    89.683  &lt; 2e-16 ***\norigin_hex2049             -0.9602557  0.0277203   -34.641  &lt; 2e-16 ***\norigin_hex2064              2.1043739  0.0246584    85.341  &lt; 2e-16 ***\norigin_hex2065              0.6815604  0.0255357    26.690  &lt; 2e-16 ***\norigin_hex2066              0.5659638  0.0317012    17.853  &lt; 2e-16 ***\norigin_hex2067              3.0750299  0.0243510   126.280  &lt; 2e-16 ***\norigin_hex2068              2.2070332  0.0250974    87.939  &lt; 2e-16 ***\norigin_hex2069              1.7363895  0.0247842    70.060  &lt; 2e-16 ***\norigin_hex2085              0.4801934  0.0258742    18.559  &lt; 2e-16 ***\norigin_hex2086              2.2882675  0.0245230    93.311  &lt; 2e-16 ***\norigin_hex2087              1.1414335  0.0251955    45.303  &lt; 2e-16 ***\norigin_hex2088              1.8038627  0.0246097    73.299  &lt; 2e-16 ***\norigin_hex2089              1.1865108  0.0250204    47.422  &lt; 2e-16 ***\norigin_hex2090              2.6571904  0.0244366   108.738  &lt; 2e-16 ***\norigin_hex2091             -2.3706832  0.0720937   -32.883  &lt; 2e-16 ***\norigin_hex2105             -1.4055747  0.1038909   -13.529  &lt; 2e-16 ***\norigin_hex2106             -0.5904103  0.0305473   -19.328  &lt; 2e-16 ***\norigin_hex2107              0.4322031  0.0258326    16.731  &lt; 2e-16 ***\norigin_hex2108              1.8185007  0.0247700    73.415  &lt; 2e-16 ***\norigin_hex2109              1.6392370  0.0246014    66.632  &lt; 2e-16 ***\norigin_hex2110              1.4078177  0.0252014    55.863  &lt; 2e-16 ***\norigin_hex2111             -1.2900263  0.0460754   -27.998  &lt; 2e-16 ***\norigin_hex2128              0.2832964  0.0273886    10.344  &lt; 2e-16 ***\norigin_hex2129             -0.0686405  0.0281300    -2.440 0.014683 *  \norigin_hex2130              1.9203759  0.0245014    78.378  &lt; 2e-16 ***\norigin_hex2131              2.1303189  0.0245865    86.646  &lt; 2e-16 ***\norigin_hex2132              1.6552753  0.0248847    66.518  &lt; 2e-16 ***\norigin_hex2148              0.8384864  0.0265167    31.621  &lt; 2e-16 ***\norigin_hex2149             -0.2510281  0.0286401    -8.765  &lt; 2e-16 ***\norigin_hex215              -1.6557360  0.0859778   -19.258  &lt; 2e-16 ***\norigin_hex2150              1.5312252  0.0246049    62.233  &lt; 2e-16 ***\norigin_hex2151              2.5181218  0.0244366   103.047  &lt; 2e-16 ***\norigin_hex2152              2.7010657  0.0244765   110.353  &lt; 2e-16 ***\norigin_hex2153              1.9016976  0.0247947    76.698  &lt; 2e-16 ***\norigin_hex216               2.6735167  0.0247684   107.941  &lt; 2e-16 ***\norigin_hex217              -0.8425049  0.0316572   -26.613  &lt; 2e-16 ***\norigin_hex2171              1.2562636  0.0251527    49.945  &lt; 2e-16 ***\norigin_hex2172              1.6519476  0.0253576    65.146  &lt; 2e-16 ***\norigin_hex2173              1.7189093  0.0247173    69.543  &lt; 2e-16 ***\norigin_hex2174              2.1050378  0.0247191    85.158  &lt; 2e-16 ***\norigin_hex2191              1.0412213  0.0261374    39.836  &lt; 2e-16 ***\norigin_hex2192              0.5158443  0.0264223    19.523  &lt; 2e-16 ***\norigin_hex2193              1.5767770  0.0248894    63.351  &lt; 2e-16 ***\norigin_hex2194              1.8443982  0.0246942    74.689  &lt; 2e-16 ***\norigin_hex2195              1.6103516  0.0312886    51.468  &lt; 2e-16 ***\norigin_hex2212             -1.2609932  0.0834174   -15.117  &lt; 2e-16 ***\norigin_hex2213             -1.5422344  0.0450780   -34.213  &lt; 2e-16 ***\norigin_hex2214             -0.1923955  0.0341430    -5.635 1.75e-08 ***\norigin_hex2215              1.5574324  0.0250320    62.218  &lt; 2e-16 ***\norigin_hex2216              0.7574532  0.0263746    28.719  &lt; 2e-16 ***\norigin_hex2233             -1.2789626  0.0456498   -28.017  &lt; 2e-16 ***\norigin_hex2234             -0.1989037  0.0309425    -6.428 1.29e-10 ***\norigin_hex2235              0.4993945  0.0273458    18.262  &lt; 2e-16 ***\norigin_hex2236              0.3389846  0.0272244    12.451  &lt; 2e-16 ***\norigin_hex2237             -1.5681504  0.0586358   -26.744  &lt; 2e-16 ***\norigin_hex2256             -2.1659602  0.0556937   -38.891  &lt; 2e-16 ***\norigin_hex2257             -0.0937605  0.0303261    -3.092 0.001990 ** \norigin_hex2258             -0.5265894  0.0298275   -17.654  &lt; 2e-16 ***\norigin_hex2259             -0.7394840  0.0425993   -17.359  &lt; 2e-16 ***\norigin_hex2277             -0.4620386  0.0460485   -10.034  &lt; 2e-16 ***\norigin_hex2278              0.4304280  0.0283670    15.174  &lt; 2e-16 ***\norigin_hex2279             -0.3351217  0.0307185   -10.909  &lt; 2e-16 ***\norigin_hex2280             -2.5109015  0.1033926   -24.285  &lt; 2e-16 ***\norigin_hex2297              1.6770111  0.0257091    65.230  &lt; 2e-16 ***\norigin_hex23               -0.9705951  0.1014788    -9.565  &lt; 2e-16 ***\norigin_hex2300             -1.8683451  0.0642071   -29.099  &lt; 2e-16 ***\norigin_hex2301             -0.2688969  0.0302355    -8.893  &lt; 2e-16 ***\norigin_hex2318             -0.0163542  0.0302094    -0.541 0.588258    \norigin_hex2319              0.9196525  0.0261470    35.172  &lt; 2e-16 ***\norigin_hex2322              0.7227053  0.0269652    26.801  &lt; 2e-16 ***\norigin_hex2337              2.0241564  0.0285318    70.944  &lt; 2e-16 ***\norigin_hex2341              1.4957459  0.0257708    58.040  &lt; 2e-16 ***\norigin_hex2343              0.3989037  0.0278986    14.298  &lt; 2e-16 ***\norigin_hex2361              0.8138944  0.0263334    30.907  &lt; 2e-16 ***\norigin_hex2364             -2.1044980  0.0688356   -30.573  &lt; 2e-16 ***\norigin_hex237              -2.7885369  0.1580492   -17.643  &lt; 2e-16 ***\norigin_hex2379              1.6503018  0.0296016    55.750  &lt; 2e-16 ***\norigin_hex238              -1.4997852  0.0565107   -26.540  &lt; 2e-16 ***\norigin_hex2384              0.9999326  0.0281199    35.560  &lt; 2e-16 ***\norigin_hex239              -2.2888601  0.1599666   -14.308  &lt; 2e-16 ***\norigin_hex2405              0.7561547  0.0280448    26.962  &lt; 2e-16 ***\norigin_hex2406             -0.8011220  0.0410105   -19.535  &lt; 2e-16 ***\norigin_hex2426              1.3677320  0.0356988    38.313  &lt; 2e-16 ***\norigin_hex2427              1.5731451  0.0263300    59.747  &lt; 2e-16 ***\norigin_hex2505              0.9985043  0.0436050    22.899  &lt; 2e-16 ***\norigin_hex257              -1.6751195  0.0614333   -27.267  &lt; 2e-16 ***\norigin_hex258              -0.9836483  0.0363440   -27.065  &lt; 2e-16 ***\norigin_hex259              -1.3295051  0.0470114   -28.280  &lt; 2e-16 ***\norigin_hex278              -0.2889196  0.0453383    -6.373 1.86e-10 ***\norigin_hex279              -1.8000867  0.0492019   -36.586  &lt; 2e-16 ***\norigin_hex280              -1.6200713  0.0512440   -31.615  &lt; 2e-16 ***\norigin_hex298              -3.8011466  0.3342162   -11.373  &lt; 2e-16 ***\norigin_hex299              -1.7558076  0.0551938   -31.812  &lt; 2e-16 ***\norigin_hex300               1.4165057  0.0257116    55.092  &lt; 2e-16 ***\norigin_hex320              -1.7049387  0.0681019   -25.035  &lt; 2e-16 ***\norigin_hex321              -1.2833990  0.0751002   -17.089  &lt; 2e-16 ***\norigin_hex322              -0.6756688  0.0526106   -12.843  &lt; 2e-16 ***\norigin_hex340              -0.3022205  0.0364525    -8.291  &lt; 2e-16 ***\norigin_hex341              -2.0140101  0.0503862   -39.971  &lt; 2e-16 ***\norigin_hex342              -1.3537276  0.0477346   -28.359  &lt; 2e-16 ***\norigin_hex363              -0.5497621  0.0441789   -12.444  &lt; 2e-16 ***\norigin_hex364              -0.2827168  0.0358748    -7.881 3.26e-15 ***\norigin_hex383              -0.7698838  0.0394630   -19.509  &lt; 2e-16 ***\norigin_hex384              -3.7928787  0.0574466   -66.024  &lt; 2e-16 ***\norigin_hex385              -0.6036230  0.0519951   -11.609  &lt; 2e-16 ***\norigin_hex404               0.0117837  0.0417130     0.282 0.777564    \norigin_hex405              -1.4239623  0.0542941   -26.227  &lt; 2e-16 ***\norigin_hex406               2.6964695  0.0243902   110.556  &lt; 2e-16 ***\norigin_hex407              -0.9609592  0.0514044   -18.694  &lt; 2e-16 ***\norigin_hex408               0.0444467  0.0332054     1.339 0.180720    \norigin_hex425              -2.4725645  0.0913294   -27.073  &lt; 2e-16 ***\norigin_hex426              -1.3238033  0.0381381   -34.711  &lt; 2e-16 ***\norigin_hex427              -1.4550817  0.0428844   -33.930  &lt; 2e-16 ***\norigin_hex428              -1.9396608  0.0815455   -23.786  &lt; 2e-16 ***\norigin_hex429               0.4309394  0.0331075    13.016  &lt; 2e-16 ***\norigin_hex44               -3.1352658  0.1407819   -22.270  &lt; 2e-16 ***\norigin_hex446              -1.1016145  0.0635399   -17.337  &lt; 2e-16 ***\norigin_hex447              -1.5231744  0.0506505   -30.072  &lt; 2e-16 ***\norigin_hex448              -0.6402313  0.0368811   -17.359  &lt; 2e-16 ***\norigin_hex449               1.5223865  0.0249846    60.933  &lt; 2e-16 ***\norigin_hex450               0.1213793  0.0310999     3.903 9.51e-05 ***\norigin_hex46               -1.8590699  0.0906807   -20.501  &lt; 2e-16 ***\norigin_hex468              -0.3601401  0.0367142    -9.809  &lt; 2e-16 ***\norigin_hex469              -0.1968023  0.0298607    -6.591 4.38e-11 ***\norigin_hex470               2.2699255  0.0246470    92.098  &lt; 2e-16 ***\norigin_hex471               0.8029461  0.0290087    27.680  &lt; 2e-16 ***\norigin_hex488              -1.6008959  0.0622785   -25.705  &lt; 2e-16 ***\norigin_hex489              -3.5288324  0.2511754   -14.049  &lt; 2e-16 ***\norigin_hex490               0.8778482  0.0267806    32.779  &lt; 2e-16 ***\norigin_hex491               1.1016759  0.0253192    43.511  &lt; 2e-16 ***\norigin_hex493              -3.1077468  0.1407826   -22.075  &lt; 2e-16 ***\norigin_hex494              -1.0849159  0.0636331   -17.050  &lt; 2e-16 ***\norigin_hex509              -0.7845356  0.0415232   -18.894  &lt; 2e-16 ***\norigin_hex510              -0.3819871  0.0345186   -11.066  &lt; 2e-16 ***\norigin_hex511               0.3876989  0.0264395    14.664  &lt; 2e-16 ***\norigin_hex512               2.7473087  0.0244409   112.406  &lt; 2e-16 ***\norigin_hex513              -0.3098870  0.0340649    -9.097  &lt; 2e-16 ***\norigin_hex514              -0.4396772  0.0440076    -9.991  &lt; 2e-16 ***\norigin_hex515              -2.6647497  0.1394879   -19.104  &lt; 2e-16 ***\norigin_hex530              -1.8046363  0.0844099   -21.379  &lt; 2e-16 ***\norigin_hex531              -0.3852144  0.0315015   -12.228  &lt; 2e-16 ***\norigin_hex532              -0.6408790  0.0333653   -19.208  &lt; 2e-16 ***\norigin_hex533               2.6932082  0.0244489   110.156  &lt; 2e-16 ***\norigin_hex534               3.2269770  0.0244900   131.767  &lt; 2e-16 ***\norigin_hex536              -0.1184818  0.0348137    -3.403 0.000666 ***\norigin_hex537              -2.5181301  0.1394879   -18.053  &lt; 2e-16 ***\norigin_hex538              -2.8513953  0.2055619   -13.871  &lt; 2e-16 ***\norigin_hex539              -4.9209071  0.5778602    -8.516  &lt; 2e-16 ***\norigin_hex551              -1.6167546  0.0591278   -27.343  &lt; 2e-16 ***\norigin_hex552               0.1412141  0.0437674     3.226 0.001253 ** \norigin_hex553              -0.8705533  0.0307317   -28.328  &lt; 2e-16 ***\norigin_hex554               2.4678100  0.0244895   100.770  &lt; 2e-16 ***\norigin_hex555               2.2178575  0.0251379    88.228  &lt; 2e-16 ***\norigin_hex559              -1.9368528  0.0963566   -20.101  &lt; 2e-16 ***\norigin_hex560              -0.1824472  0.0531611    -3.432 0.000599 ***\norigin_hex572              -3.8668734  0.2249202   -17.192  &lt; 2e-16 ***\norigin_hex573              -1.1688640  0.0497938   -23.474  &lt; 2e-16 ***\norigin_hex574              -0.8039111  0.0434510   -18.502  &lt; 2e-16 ***\norigin_hex575               3.6081410  0.0243243   148.335  &lt; 2e-16 ***\norigin_hex576               2.3430598  0.0246917    94.892  &lt; 2e-16 ***\norigin_hex578              -2.5681922  0.1099236   -23.363  &lt; 2e-16 ***\norigin_hex582              -2.2860198  0.1093279   -20.910  &lt; 2e-16 ***\norigin_hex583              -2.9959310  0.1976120   -15.161  &lt; 2e-16 ***\norigin_hex584              -0.1660514  0.0601606    -2.760 0.005778 ** \norigin_hex593              -1.5594103  0.0550824   -28.311  &lt; 2e-16 ***\norigin_hex594              -0.2143640  0.0354179    -6.052 1.43e-09 ***\norigin_hex595              -0.7412887  0.0312477   -23.723  &lt; 2e-16 ***\norigin_hex596               2.1103209  0.0245864    85.833  &lt; 2e-16 ***\norigin_hex597              -1.1318485  0.0636333   -17.787  &lt; 2e-16 ***\norigin_hex603              -2.0626689  0.1111470   -18.558  &lt; 2e-16 ***\norigin_hex604              -3.7009468  0.2683609   -13.791  &lt; 2e-16 ***\norigin_hex615              -1.8245108  0.0501211   -36.402  &lt; 2e-16 ***\norigin_hex616              -0.7191504  0.0377793   -19.036  &lt; 2e-16 ***\norigin_hex617              -0.0539424  0.0297904    -1.811 0.070182 .  \norigin_hex618               2.5250244  0.0245028   103.050  &lt; 2e-16 ***\norigin_hex620              -0.6030743  0.0404076   -14.925  &lt; 2e-16 ***\norigin_hex637              -1.4408026  0.0460745   -31.271  &lt; 2e-16 ***\norigin_hex638               2.1903587  0.0245608    89.181  &lt; 2e-16 ***\norigin_hex657              -0.0236013  0.0290922    -0.811 0.417218    \norigin_hex658               1.4308076  0.0250198    57.187  &lt; 2e-16 ***\norigin_hex659               1.8090091  0.0247959    72.956  &lt; 2e-16 ***\norigin_hex66               -2.0507142  0.1273347   -16.105  &lt; 2e-16 ***\norigin_hex660               2.8608993  0.0244327   117.093  &lt; 2e-16 ***\norigin_hex662               2.3594996  0.0252243    93.541  &lt; 2e-16 ***\norigin_hex67               -0.0831442  0.0347133    -2.395 0.016613 *  \norigin_hex677              -0.2450086  0.0329674    -7.432 1.07e-13 ***\norigin_hex678              -1.9482875  0.0498660   -39.070  &lt; 2e-16 ***\norigin_hex679               2.6129720  0.0244772   106.751  &lt; 2e-16 ***\norigin_hex68               -2.5003843  0.1313620   -19.034  &lt; 2e-16 ***\norigin_hex680               2.7921217  0.0244730   114.090  &lt; 2e-16 ***\norigin_hex681               1.9086821  0.0256099    74.529  &lt; 2e-16 ***\norigin_hex699              -0.3651760  0.0327084   -11.165  &lt; 2e-16 ***\norigin_hex700               1.5982676  0.0249503    64.058  &lt; 2e-16 ***\norigin_hex701               1.6272875  0.0249692    65.172  &lt; 2e-16 ***\norigin_hex702               2.6986637  0.0244614   110.324  &lt; 2e-16 ***\norigin_hex704              -0.6343091  0.0400522   -15.837  &lt; 2e-16 ***\norigin_hex722              -0.3366533  0.0300837   -11.191  &lt; 2e-16 ***\norigin_hex725              -1.4100394  0.0498289   -28.298  &lt; 2e-16 ***\norigin_hex741               0.2455293  0.0291753     8.416  &lt; 2e-16 ***\norigin_hex743              -0.1800899  0.0271431    -6.635 3.25e-11 ***\norigin_hex744               2.0923640  0.0246157    85.001  &lt; 2e-16 ***\norigin_hex761              -0.4078059  0.0363398   -11.222  &lt; 2e-16 ***\norigin_hex762               1.6561842  0.0251929    65.740  &lt; 2e-16 ***\norigin_hex763              -1.8341096  0.0366976   -49.979  &lt; 2e-16 ***\norigin_hex764               2.4824942  0.0244542   101.516  &lt; 2e-16 ***\norigin_hex765               1.5064839  0.0255301    59.008  &lt; 2e-16 ***\norigin_hex767               2.9299600  0.0244919   119.630  &lt; 2e-16 ***\norigin_hex772              -1.8411516  0.0759628   -24.238  &lt; 2e-16 ***\norigin_hex784              -1.3199110  0.0337032   -39.163  &lt; 2e-16 ***\norigin_hex785               1.6522304  0.0245989    67.167  &lt; 2e-16 ***\norigin_hex786               1.2463528  0.0249358    49.983  &lt; 2e-16 ***\norigin_hex787               1.7924862  0.0252423    71.011  &lt; 2e-16 ***\norigin_hex788               2.1840683  0.0247680    88.181  &lt; 2e-16 ***\norigin_hex789               0.1923418  0.0263448     7.301 2.86e-13 ***\norigin_hex803              -1.7921396  0.0544465   -32.916  &lt; 2e-16 ***\norigin_hex804               2.4434841  0.0245586    99.496  &lt; 2e-16 ***\norigin_hex805               2.2451476  0.0244546    91.809  &lt; 2e-16 ***\norigin_hex806               1.5906586  0.0245950    64.674  &lt; 2e-16 ***\norigin_hex807               2.4582764  0.0245809   100.007  &lt; 2e-16 ***\norigin_hex808               0.9467177  0.0265246    35.692  &lt; 2e-16 ***\norigin_hex809               2.6404616  0.0244624   107.939  &lt; 2e-16 ***\norigin_hex810               1.9153810  0.0248296    77.141  &lt; 2e-16 ***\norigin_hex814              -0.3174635  0.0366335    -8.666  &lt; 2e-16 ***\norigin_hex819               4.6088181  0.0297317   155.014  &lt; 2e-16 ***\norigin_hex824              -1.1325198  0.0453358   -24.981  &lt; 2e-16 ***\norigin_hex826              -0.1348523  0.0261788    -5.151 2.59e-07 ***\norigin_hex827               2.0755337  0.0245147    84.665  &lt; 2e-16 ***\norigin_hex828               2.2303237  0.0244946    91.054  &lt; 2e-16 ***\norigin_hex829               2.2887108  0.0246261    92.939  &lt; 2e-16 ***\norigin_hex830               2.4019448  0.0247401    97.087  &lt; 2e-16 ***\norigin_hex831               3.0708573  0.0243906   125.903  &lt; 2e-16 ***\norigin_hex832               2.1069748  0.0249433    84.471  &lt; 2e-16 ***\norigin_hex835              -1.0811868  0.0379680   -28.476  &lt; 2e-16 ***\norigin_hex844              -2.5383178  0.0815457   -31.128  &lt; 2e-16 ***\norigin_hex846               1.5306849  0.0247581    61.826  &lt; 2e-16 ***\norigin_hex847               0.3247744  0.0257845    12.596  &lt; 2e-16 ***\norigin_hex848               1.6881586  0.0246761    68.413  &lt; 2e-16 ***\norigin_hex849               0.7050719  0.0254206    27.736  &lt; 2e-16 ***\norigin_hex850               1.6674939  0.0247967    67.247  &lt; 2e-16 ***\norigin_hex851               2.1774709  0.0245627    88.649  &lt; 2e-16 ***\norigin_hex852               1.7689030  0.0249404    70.925  &lt; 2e-16 ***\norigin_hex853               2.8936519  0.0244896   118.159  &lt; 2e-16 ***\norigin_hex854              -0.5929902  0.0354053   -16.749  &lt; 2e-16 ***\norigin_hex855              -1.2592624  0.0497216   -25.326  &lt; 2e-16 ***\norigin_hex856              -0.3188275  0.0301306   -10.582  &lt; 2e-16 ***\norigin_hex86               -1.1606949  0.0774251   -14.991  &lt; 2e-16 ***\norigin_hex866              -0.7877607  0.0399512   -19.718  &lt; 2e-16 ***\norigin_hex867               0.4299775  0.0269246    15.970  &lt; 2e-16 ***\norigin_hex868              -0.4704380  0.0299387   -15.713  &lt; 2e-16 ***\norigin_hex869               2.3225840  0.0248936    93.301  &lt; 2e-16 ***\norigin_hex87               -1.4741663  0.0846664   -17.411  &lt; 2e-16 ***\norigin_hex870               2.6443052  0.0243971   108.386  &lt; 2e-16 ***\norigin_hex871               2.0825569  0.0248864    83.683  &lt; 2e-16 ***\norigin_hex872               0.4420899  0.0264999    16.683  &lt; 2e-16 ***\norigin_hex873               0.7469832  0.0261928    28.519  &lt; 2e-16 ***\norigin_hex874               0.3364649  0.0255001    13.195  &lt; 2e-16 ***\norigin_hex875              -2.4943539  0.0759636   -32.836  &lt; 2e-16 ***\norigin_hex876              -1.0919623  0.0397009   -27.505  &lt; 2e-16 ***\norigin_hex877              -1.8470438  0.0467878   -39.477  &lt; 2e-16 ***\norigin_hex88                0.5418056  0.0305202    17.752  &lt; 2e-16 ***\norigin_hex887               0.1954720  0.0276330     7.074 1.51e-12 ***\norigin_hex888               1.3845864  0.0251444    55.065  &lt; 2e-16 ***\norigin_hex889              -1.5966428  0.0416163   -38.366  &lt; 2e-16 ***\norigin_hex89               -1.0776900  0.0551941   -19.525  &lt; 2e-16 ***\norigin_hex890               2.1797038  0.0244874    89.013  &lt; 2e-16 ***\norigin_hex891               0.4935810  0.0266498    18.521  &lt; 2e-16 ***\norigin_hex893               2.2859950  0.0245250    93.211  &lt; 2e-16 ***\norigin_hex894               0.2912292  0.0265126    10.985  &lt; 2e-16 ***\norigin_hex895              -0.0151099  0.0285229    -0.530 0.596287    \norigin_hex896              -0.5318799  0.0350072   -15.193  &lt; 2e-16 ***\norigin_hex897              -2.2418535  0.0683423   -32.803  &lt; 2e-16 ***\norigin_hex898              -0.7161403  0.0378161   -18.937  &lt; 2e-16 ***\norigin_hex90               -2.2244606  0.1346588   -16.519  &lt; 2e-16 ***\norigin_hex908               1.1549523  0.0269410    42.870  &lt; 2e-16 ***\norigin_hex909               1.3397449  0.0248401    53.935  &lt; 2e-16 ***\norigin_hex910              -0.5660966  0.0296496   -19.093  &lt; 2e-16 ***\norigin_hex911               0.6911371  0.0256725    26.921  &lt; 2e-16 ***\norigin_hex912               1.7897798  0.0245773    72.822  &lt; 2e-16 ***\norigin_hex915               2.1706130  0.0245759    88.323  &lt; 2e-16 ***\norigin_hex917               1.5274897  0.0252461    60.504  &lt; 2e-16 ***\norigin_hex918              -1.5139676  0.0434667   -34.830  &lt; 2e-16 ***\norigin_hex919               1.0283388  0.0257800    39.889  &lt; 2e-16 ***\norigin_hex928               0.3607581  0.0276086    13.067  &lt; 2e-16 ***\norigin_hex929               1.7761029  0.0246164    72.151  &lt; 2e-16 ***\norigin_hex930               2.1336253  0.0244022    87.436  &lt; 2e-16 ***\norigin_hex931              -0.4851803  0.0293047   -16.556  &lt; 2e-16 ***\norigin_hex932               0.0016080  0.0297782     0.054 0.956936    \norigin_hex933               1.9054339  0.0248179    76.777  &lt; 2e-16 ***\norigin_hex934              -0.6421296  0.0296298   -21.672  &lt; 2e-16 ***\norigin_hex935               2.8993519  0.0243954   118.848  &lt; 2e-16 ***\norigin_hex938              -3.9969673  0.2145781   -18.627  &lt; 2e-16 ***\norigin_hex939               2.9342987  0.0244842   119.845  &lt; 2e-16 ***\norigin_hex940              -2.1749441  0.0650028   -33.459  &lt; 2e-16 ***\norigin_hex949               0.2485610  0.0272489     9.122  &lt; 2e-16 ***\norigin_hex950               2.1195182  0.0246659    85.929  &lt; 2e-16 ***\norigin_hex951               2.8811059  0.0243570   118.287  &lt; 2e-16 ***\norigin_hex952              -0.0174483  0.0319341    -0.546 0.584803    \norigin_hex953               0.9357192  0.0259165    36.105  &lt; 2e-16 ***\norigin_hex954              -0.6918352  0.0293027   -23.610  &lt; 2e-16 ***\norigin_hex955               1.5530909  0.0248235    62.565  &lt; 2e-16 ***\norigin_hex956               0.1497703  0.0266938     5.611 2.02e-08 ***\norigin_hex957               2.1401107  0.0248172    86.235  &lt; 2e-16 ***\norigin_hex959              -0.7832966  0.0540871   -14.482  &lt; 2e-16 ***\norigin_hex961              -1.2784075  0.0383517   -33.334  &lt; 2e-16 ***\norigin_hex962               4.8985493  0.0245533   199.506  &lt; 2e-16 ***\norigin_hex970               0.8686056  0.0254299    34.157  &lt; 2e-16 ***\norigin_hex971               2.0385847  0.0244933    83.230  &lt; 2e-16 ***\norigin_hex972               1.4761030  0.0246480    59.887  &lt; 2e-16 ***\norigin_hex974               1.0564787  0.0252472    41.845  &lt; 2e-16 ***\norigin_hex975               0.7779200  0.0257246    30.240  &lt; 2e-16 ***\norigin_hex976              -0.6400586  0.0293632   -21.798  &lt; 2e-16 ***\norigin_hex977               2.5856233  0.0244779   105.631  &lt; 2e-16 ***\norigin_hex978               0.3472719  0.0251430    13.812  &lt; 2e-16 ***\norigin_hex982               0.0844246  0.0280702     3.008 0.002633 ** \norigin_hex983               3.9389477  0.0244624   161.021  &lt; 2e-16 ***\norigin_hex984               4.8387086  0.0244665   197.768  &lt; 2e-16 ***\norigin_hex991               0.5999422  0.0257195    23.326  &lt; 2e-16 ***\norigin_hex992               1.2095545  0.0251177    48.156  &lt; 2e-16 ***\norigin_hex993               0.7642609  0.0252670    30.247  &lt; 2e-16 ***\norigin_hex994               0.1869182  0.0264842     7.058 1.69e-12 ***\norigin_hex995               1.6126169  0.0248068    65.007  &lt; 2e-16 ***\norigin_hex996               0.7385155  0.0253029    29.187  &lt; 2e-16 ***\norigin_hex997              -0.3619558  0.0378250    -9.569  &lt; 2e-16 ***\norigin_hex998               2.4806540  0.0245023   101.242  &lt; 2e-16 ***\norigin_hex999               1.4688060  0.0247783    59.278  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 38774300  on 64059  degrees of freedom\nAIC: 39132651\n\nNumber of Fisher Scoring iterations: 7\n\n\nCode\nCalcRSquared(orcSIM$data$trips, orcSIM$fitted.values)\n\n\n[1] 0.2825061\n\n\n\n\n\n\nCode\ndecSIM &lt;- glm(formula = trips ~ \n                log(push_num_bus_stops) +\n                log(push_station_count) +\n                log(push_trainexit_count) +\n                log(push_hdb_sf_count) +\n                log(push_est_pop) +\n                log(distance) +\n                destination_hex,\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(decSIM)\n\n\n\nCall:\nglm(formula = trips ~ log(push_num_bus_stops) + log(push_station_count) + \n    log(push_trainexit_count) + log(push_hdb_sf_count) + log(push_est_pop) + \n    log(distance) + destination_hex, family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n                            Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)                1.390e+01  1.545e-02   899.410  &lt; 2e-16 ***\nlog(push_num_bus_stops)    3.201e-01  5.263e-04   608.189  &lt; 2e-16 ***\nlog(push_station_count)   -5.477e-01  9.379e-04  -584.008  &lt; 2e-16 ***\nlog(push_trainexit_count)  4.554e-01  4.126e-04  1103.843  &lt; 2e-16 ***\nlog(push_hdb_sf_count)     3.981e-01  4.899e-04   812.648  &lt; 2e-16 ***\nlog(push_est_pop)         -1.942e-02  1.976e-04   -98.262  &lt; 2e-16 ***\nlog(distance)             -1.260e+00  2.167e-04 -5814.120  &lt; 2e-16 ***\ndestination_hex1003        1.793e+00  1.559e-02   114.997  &lt; 2e-16 ***\ndestination_hex1004        8.564e-01  1.595e-02    53.680  &lt; 2e-16 ***\ndestination_hex1011       -4.632e-02  1.931e-02    -2.398 0.016479 *  \ndestination_hex1012        1.545e+00  1.634e-02    94.547  &lt; 2e-16 ***\ndestination_hex1013        1.337e-01  1.700e-02     7.864 3.71e-15 ***\ndestination_hex1014       -1.525e+00  2.192e-02   -69.565  &lt; 2e-16 ***\ndestination_hex1015        1.265e+00  1.583e-02    79.926  &lt; 2e-16 ***\ndestination_hex1016        1.288e+00  1.572e-02    81.897  &lt; 2e-16 ***\ndestination_hex1018       -2.001e-01  1.940e-02   -10.311  &lt; 2e-16 ***\ndestination_hex1019        3.078e-01  1.630e-02    18.883  &lt; 2e-16 ***\ndestination_hex1023       -7.778e-01  2.001e-02   -38.864  &lt; 2e-16 ***\ndestination_hex1024        4.129e-01  1.653e-02    24.979  &lt; 2e-16 ***\ndestination_hex1025       -3.483e+00  6.635e-02   -52.493  &lt; 2e-16 ***\ndestination_hex1033        4.810e-01  1.665e-02    28.888  &lt; 2e-16 ***\ndestination_hex1034        1.102e+00  1.591e-02    69.243  &lt; 2e-16 ***\ndestination_hex1035        8.820e-01  1.598e-02    55.211  &lt; 2e-16 ***\ndestination_hex1036        1.391e+00  1.574e-02    88.358  &lt; 2e-16 ***\ndestination_hex1037        1.597e-01  1.640e-02     9.736  &lt; 2e-16 ***\ndestination_hex1043        5.198e-01  1.867e-02    27.844  &lt; 2e-16 ***\ndestination_hex1045        2.426e-01  1.631e-02    14.877  &lt; 2e-16 ***\ndestination_hex1046        8.477e-01  1.627e-02    52.116  &lt; 2e-16 ***\ndestination_hex1053        1.019e+00  1.597e-02    63.824  &lt; 2e-16 ***\ndestination_hex1054        7.985e-01  1.603e-02    49.800  &lt; 2e-16 ***\ndestination_hex1055       -1.017e-01  1.721e-02    -5.911 3.40e-09 ***\ndestination_hex1056       -7.566e-01  1.875e-02   -40.358  &lt; 2e-16 ***\ndestination_hex1064       -2.833e+00  8.838e-02   -32.055  &lt; 2e-16 ***\ndestination_hex1066        1.362e+00  1.575e-02    86.486  &lt; 2e-16 ***\ndestination_hex1067        1.239e+00  1.652e-02    74.995  &lt; 2e-16 ***\ndestination_hex1074       -1.023e+00  2.034e-02   -50.310  &lt; 2e-16 ***\ndestination_hex1075        6.905e-01  1.639e-02    42.142  &lt; 2e-16 ***\ndestination_hex1076       -5.417e-02  1.665e-02    -3.252 0.001145 ** \ndestination_hex1077       -6.685e-01  1.831e-02   -36.506  &lt; 2e-16 ***\ndestination_hex1079        4.121e-01  1.632e-02    25.251  &lt; 2e-16 ***\ndestination_hex1085       -1.191e+00  5.822e-02   -20.461  &lt; 2e-16 ***\ndestination_hex1087        2.267e-01  1.638e-02    13.839  &lt; 2e-16 ***\ndestination_hex1088        1.061e+00  1.617e-02    65.620  &lt; 2e-16 ***\ndestination_hex109         3.783e-01  2.959e-02    12.784  &lt; 2e-16 ***\ndestination_hex1094       -3.410e+00  5.050e-02   -67.529  &lt; 2e-16 ***\ndestination_hex1095        7.695e-02  2.024e-02     3.802 0.000144 ***\ndestination_hex1096       -6.393e-02  2.118e-02    -3.018 0.002541 ** \ndestination_hex1097        6.845e-01  1.583e-02    43.245  &lt; 2e-16 ***\ndestination_hex1098       -1.614e+00  2.641e-02   -61.130  &lt; 2e-16 ***\ndestination_hex1099       -1.727e-01  1.706e-02   -10.119  &lt; 2e-16 ***\ndestination_hex110        -2.178e+00  1.017e-01   -21.427  &lt; 2e-16 ***\ndestination_hex1105        1.587e+00  1.753e-02    90.536  &lt; 2e-16 ***\ndestination_hex1106       -3.025e+00  8.620e-02   -35.097  &lt; 2e-16 ***\ndestination_hex1107        2.197e-02  1.692e-02     1.299 0.194102    \ndestination_hex1108        2.436e+00  1.542e-02   158.018  &lt; 2e-16 ***\ndestination_hex1109       -1.071e+00  2.583e-02   -41.469  &lt; 2e-16 ***\ndestination_hex111         1.353e+00  1.894e-02    71.463  &lt; 2e-16 ***\ndestination_hex1116       -7.371e-02  1.749e-02    -4.215 2.50e-05 ***\ndestination_hex1117        2.623e-01  1.671e-02    15.694  &lt; 2e-16 ***\ndestination_hex1118       -1.650e+00  2.324e-02   -70.972  &lt; 2e-16 ***\ndestination_hex1119       -7.977e-01  1.834e-02   -43.487  &lt; 2e-16 ***\ndestination_hex112        -1.093e+00  3.367e-02   -32.451  &lt; 2e-16 ***\ndestination_hex1120       -1.147e+00  2.251e-02   -50.945  &lt; 2e-16 ***\ndestination_hex1129       -1.444e-01  1.708e-02    -8.452  &lt; 2e-16 ***\ndestination_hex1130        4.877e-01  1.621e-02    30.088  &lt; 2e-16 ***\ndestination_hex1131        1.796e+00  1.607e-02   111.753  &lt; 2e-16 ***\ndestination_hex1136        1.076e+00  1.596e-02    67.403  &lt; 2e-16 ***\ndestination_hex1138       -1.131e+00  2.253e-02   -50.185  &lt; 2e-16 ***\ndestination_hex1139       -3.823e-01  1.673e-02   -22.856  &lt; 2e-16 ***\ndestination_hex1141       -2.098e-01  1.703e-02   -12.321  &lt; 2e-16 ***\ndestination_hex1148       -9.444e-01  3.293e-02   -28.680  &lt; 2e-16 ***\ndestination_hex1149       -3.512e-01  2.010e-02   -17.473  &lt; 2e-16 ***\ndestination_hex1150       -8.064e-02  1.661e-02    -4.856 1.20e-06 ***\ndestination_hex1151       -2.488e-01  1.654e-02   -15.041  &lt; 2e-16 ***\ndestination_hex1158       -1.247e+00  1.844e-02   -67.649  &lt; 2e-16 ***\ndestination_hex1159       -8.397e-01  1.756e-02   -47.812  &lt; 2e-16 ***\ndestination_hex1160        8.363e-01  1.581e-02    52.905  &lt; 2e-16 ***\ndestination_hex1171        3.593e-01  1.629e-02    22.050  &lt; 2e-16 ***\ndestination_hex1172        1.791e+00  1.554e-02   115.261  &lt; 2e-16 ***\ndestination_hex1173        1.215e+00  1.604e-02    75.781  &lt; 2e-16 ***\ndestination_hex1174       -1.776e+00  4.413e-02   -40.245  &lt; 2e-16 ***\ndestination_hex1178        1.191e+00  1.568e-02    75.930  &lt; 2e-16 ***\ndestination_hex1179        2.404e-01  1.609e-02    14.939  &lt; 2e-16 ***\ndestination_hex1180        3.041e-01  1.601e-02    18.991  &lt; 2e-16 ***\ndestination_hex1181       -6.737e-01  1.763e-02   -38.218  &lt; 2e-16 ***\ndestination_hex1183        9.048e-01  1.598e-02    56.629  &lt; 2e-16 ***\ndestination_hex1190       -9.883e-01  3.245e-02   -30.456  &lt; 2e-16 ***\ndestination_hex1192        8.286e-01  1.613e-02    51.385  &lt; 2e-16 ***\ndestination_hex1193        5.137e-01  1.614e-02    31.828  &lt; 2e-16 ***\ndestination_hex1194        8.413e-01  1.637e-02    51.402  &lt; 2e-16 ***\ndestination_hex1200        1.808e-05  1.674e-02     0.001 0.999138    \ndestination_hex1201       -2.918e-01  1.688e-02   -17.290  &lt; 2e-16 ***\ndestination_hex1203       -2.667e-01  1.716e-02   -15.540  &lt; 2e-16 ***\ndestination_hex1204       -3.597e-01  1.755e-02   -20.497  &lt; 2e-16 ***\ndestination_hex1211       -4.598e+00  2.778e-01   -16.552  &lt; 2e-16 ***\ndestination_hex1214       -4.827e-01  1.741e-02   -27.728  &lt; 2e-16 ***\ndestination_hex1215        1.826e-01  1.872e-02     9.753  &lt; 2e-16 ***\ndestination_hex1216        5.011e-01  1.819e-02    27.546  &lt; 2e-16 ***\ndestination_hex1220        3.290e-01  1.639e-02    20.075  &lt; 2e-16 ***\ndestination_hex1221        5.825e-01  1.581e-02    36.850  &lt; 2e-16 ***\ndestination_hex1222       -6.829e-01  1.953e-02   -34.960  &lt; 2e-16 ***\ndestination_hex1223       -8.207e-01  1.881e-02   -43.642  &lt; 2e-16 ***\ndestination_hex1224       -1.766e-01  1.713e-02   -10.309  &lt; 2e-16 ***\ndestination_hex1231       -1.737e+00  5.919e-02   -29.349  &lt; 2e-16 ***\ndestination_hex1232       -3.030e-01  2.876e-02   -10.534  &lt; 2e-16 ***\ndestination_hex1235        4.485e-01  1.633e-02    27.464  &lt; 2e-16 ***\ndestination_hex1236        2.133e-01  1.728e-02    12.344  &lt; 2e-16 ***\ndestination_hex1241       -1.058e+00  1.910e-02   -55.407  &lt; 2e-16 ***\ndestination_hex1242       -8.474e-01  1.763e-02   -48.071  &lt; 2e-16 ***\ndestination_hex1243        3.250e-01  1.608e-02    20.206  &lt; 2e-16 ***\ndestination_hex1246       -5.109e-01  1.741e-02   -29.349  &lt; 2e-16 ***\ndestination_hex1256       -8.164e-01  1.843e-02   -44.303  &lt; 2e-16 ***\ndestination_hex1257        6.234e-01  1.642e-02    37.965  &lt; 2e-16 ***\ndestination_hex1258        1.196e+00  1.611e-02    74.243  &lt; 2e-16 ***\ndestination_hex1262       -1.117e+00  1.970e-02   -56.711  &lt; 2e-16 ***\ndestination_hex1263        8.512e-01  1.566e-02    54.343  &lt; 2e-16 ***\ndestination_hex1264        1.069e-01  1.692e-02     6.321 2.60e-10 ***\ndestination_hex1265        2.483e-02  1.707e-02     1.455 0.145730    \ndestination_hex1266        2.624e-01  1.666e-02    15.750  &lt; 2e-16 ***\ndestination_hex1267       -1.298e+00  2.218e-02   -58.532  &lt; 2e-16 ***\ndestination_hex1272       -4.103e+00  1.122e-01   -36.583  &lt; 2e-16 ***\ndestination_hex1273        5.160e-01  1.682e-02    30.671  &lt; 2e-16 ***\ndestination_hex1277        6.034e-01  1.588e-02    37.997  &lt; 2e-16 ***\ndestination_hex1278        3.472e-01  1.642e-02    21.147  &lt; 2e-16 ***\ndestination_hex128         7.165e-01  2.680e-02    26.739  &lt; 2e-16 ***\ndestination_hex1283        1.427e+00  1.565e-02    91.190  &lt; 2e-16 ***\ndestination_hex1284        8.501e-01  1.574e-02    53.993  &lt; 2e-16 ***\ndestination_hex1285        4.384e-01  1.591e-02    27.555  &lt; 2e-16 ***\ndestination_hex1286       -4.630e-01  1.804e-02   -25.665  &lt; 2e-16 ***\ndestination_hex1289       -2.761e+00  4.249e-02   -64.992  &lt; 2e-16 ***\ndestination_hex129        -2.283e+00  1.136e-01   -20.110  &lt; 2e-16 ***\ndestination_hex1293       -3.778e+00  7.590e-02   -49.772  &lt; 2e-16 ***\ndestination_hex1294        2.472e-01  1.746e-02    14.159  &lt; 2e-16 ***\ndestination_hex1295       -1.884e+00  2.694e-02   -69.923  &lt; 2e-16 ***\ndestination_hex1298       -1.194e-01  1.650e-02    -7.237 4.60e-13 ***\ndestination_hex1299       -4.405e-01  1.759e-02   -25.041  &lt; 2e-16 ***\ndestination_hex130         2.482e-01  2.661e-02     9.329  &lt; 2e-16 ***\ndestination_hex1304        2.449e-01  1.633e-02    14.992  &lt; 2e-16 ***\ndestination_hex1305        3.816e-01  1.584e-02    24.081  &lt; 2e-16 ***\ndestination_hex1307       -1.179e+00  2.450e-02   -48.132  &lt; 2e-16 ***\ndestination_hex1308        3.049e-01  1.620e-02    18.823  &lt; 2e-16 ***\ndestination_hex131        -2.545e-01  2.875e-02    -8.853  &lt; 2e-16 ***\ndestination_hex1310       -4.862e+00  1.896e-01   -25.642  &lt; 2e-16 ***\ndestination_hex1316       -1.443e+00  2.196e-02   -65.718  &lt; 2e-16 ***\ndestination_hex1317       -1.590e+00  2.010e-02   -79.108  &lt; 2e-16 ***\ndestination_hex1318       -1.607e+00  2.192e-02   -73.340  &lt; 2e-16 ***\ndestination_hex1319        1.206e+00  1.566e-02    77.001  &lt; 2e-16 ***\ndestination_hex132         7.925e-01  2.123e-02    37.335  &lt; 2e-16 ***\ndestination_hex1320       -9.971e-01  2.030e-02   -49.110  &lt; 2e-16 ***\ndestination_hex1324        3.387e-01  2.175e-02    15.573  &lt; 2e-16 ***\ndestination_hex1325       -1.341e+00  2.079e-02   -64.502  &lt; 2e-16 ***\ndestination_hex1326       -2.065e-02  1.623e-02    -1.272 0.203225    \ndestination_hex1327        2.162e-01  1.612e-02    13.410  &lt; 2e-16 ***\ndestination_hex1328        1.058e-01  1.655e-02     6.393 1.63e-10 ***\ndestination_hex1329        1.336e-01  1.749e-02     7.640 2.18e-14 ***\ndestination_hex133         3.071e-01  1.961e-02    15.660  &lt; 2e-16 ***\ndestination_hex1330        1.382e+00  1.611e-02    85.800  &lt; 2e-16 ***\ndestination_hex1331       -5.078e+00  2.587e-01   -19.634  &lt; 2e-16 ***\ndestination_hex1333       -1.663e+00  2.224e-02   -74.773  &lt; 2e-16 ***\ndestination_hex1334       -1.032e+00  2.007e-02   -51.431  &lt; 2e-16 ***\ndestination_hex1335        9.888e-01  1.623e-02    60.941  &lt; 2e-16 ***\ndestination_hex1336       -2.871e+00  5.788e-02   -49.603  &lt; 2e-16 ***\ndestination_hex1337       -2.588e+00  3.307e-02   -78.266  &lt; 2e-16 ***\ndestination_hex1338       -2.478e+00  3.067e-02   -80.788  &lt; 2e-16 ***\ndestination_hex1339        1.025e+00  1.573e-02    65.147  &lt; 2e-16 ***\ndestination_hex134         4.467e-02  1.919e-02     2.328 0.019908 *  \ndestination_hex1340       -4.382e-01  1.777e-02   -24.661  &lt; 2e-16 ***\ndestination_hex1341       -3.768e+00  9.744e-02   -38.670  &lt; 2e-16 ***\ndestination_hex1346        1.925e-01  1.683e-02    11.436  &lt; 2e-16 ***\ndestination_hex1347        1.114e+00  1.570e-02    70.984  &lt; 2e-16 ***\ndestination_hex1348       -1.918e-01  1.656e-02   -11.586  &lt; 2e-16 ***\ndestination_hex1349        7.798e-01  1.614e-02    48.315  &lt; 2e-16 ***\ndestination_hex1350       -3.331e-01  1.972e-02   -16.893  &lt; 2e-16 ***\ndestination_hex1353       -2.409e-01  1.670e-02   -14.430  &lt; 2e-16 ***\ndestination_hex1354       -1.107e+00  1.937e-02   -57.177  &lt; 2e-16 ***\ndestination_hex1355       -8.111e-01  1.883e-02   -43.078  &lt; 2e-16 ***\ndestination_hex1357       -1.393e+00  2.405e-02   -57.932  &lt; 2e-16 ***\ndestination_hex1358        1.025e+00  1.574e-02    65.147  &lt; 2e-16 ***\ndestination_hex1359       -8.030e-02  1.662e-02    -4.832 1.35e-06 ***\ndestination_hex1360       -4.203e-01  1.693e-02   -24.824  &lt; 2e-16 ***\ndestination_hex1361       -3.636e-01  1.756e-02   -20.712  &lt; 2e-16 ***\ndestination_hex1362       -1.897e+00  3.278e-02   -57.875  &lt; 2e-16 ***\ndestination_hex1368       -7.603e-01  1.766e-02   -43.057  &lt; 2e-16 ***\ndestination_hex1369       -7.366e-01  1.747e-02   -42.173  &lt; 2e-16 ***\ndestination_hex1370        9.789e-01  1.571e-02    62.316  &lt; 2e-16 ***\ndestination_hex1371        9.192e-02  1.706e-02     5.390 7.05e-08 ***\ndestination_hex1372        5.837e-02  1.679e-02     3.478 0.000506 ***\ndestination_hex1373       -3.007e+00  3.646e-02   -82.457  &lt; 2e-16 ***\ndestination_hex1374       -1.652e+00  2.289e-02   -72.177  &lt; 2e-16 ***\ndestination_hex1375        3.151e-01  1.691e-02    18.633  &lt; 2e-16 ***\ndestination_hex1376       -1.355e+00  2.273e-02   -59.612  &lt; 2e-16 ***\ndestination_hex1379       -3.688e+00  6.508e-02   -56.665  &lt; 2e-16 ***\ndestination_hex1380        1.795e+00  1.551e-02   115.728  &lt; 2e-16 ***\ndestination_hex1381        2.084e+00  1.546e-02   134.792  &lt; 2e-16 ***\ndestination_hex1382        1.215e+00  1.589e-02    76.461  &lt; 2e-16 ***\ndestination_hex1383       -1.592e+00  2.467e-02   -64.527  &lt; 2e-16 ***\ndestination_hex1388       -3.060e-02  1.653e-02    -1.852 0.064064 .  \ndestination_hex1389       -4.184e-01  1.687e-02   -24.798  &lt; 2e-16 ***\ndestination_hex1390       -6.886e-02  1.661e-02    -4.146 3.38e-05 ***\ndestination_hex1391        7.996e-01  1.604e-02    49.854  &lt; 2e-16 ***\ndestination_hex1392        6.538e-01  1.962e-02    33.330  &lt; 2e-16 ***\ndestination_hex1393       -7.398e-01  1.750e-02   -42.268  &lt; 2e-16 ***\ndestination_hex1394       -2.716e-01  1.650e-02   -16.466  &lt; 2e-16 ***\ndestination_hex1395       -4.029e-01  1.680e-02   -23.982  &lt; 2e-16 ***\ndestination_hex1396        5.410e-01  1.614e-02    33.518  &lt; 2e-16 ***\ndestination_hex1397       -8.059e-01  1.705e-02   -47.277  &lt; 2e-16 ***\ndestination_hex1398       -9.055e-01  2.061e-02   -43.935  &lt; 2e-16 ***\ndestination_hex1400       -9.538e-01  1.886e-02   -50.570  &lt; 2e-16 ***\ndestination_hex1401        9.428e-01  1.564e-02    60.298  &lt; 2e-16 ***\ndestination_hex1402        2.715e-01  1.619e-02    16.765  &lt; 2e-16 ***\ndestination_hex1404       -3.211e-01  2.661e-02   -12.064  &lt; 2e-16 ***\ndestination_hex1410        8.243e-01  1.576e-02    52.307  &lt; 2e-16 ***\ndestination_hex1411       -1.360e-01  1.673e-02    -8.133 4.18e-16 ***\ndestination_hex1412        7.379e-01  1.582e-02    46.631  &lt; 2e-16 ***\ndestination_hex1413        3.905e-01  1.619e-02    24.112  &lt; 2e-16 ***\ndestination_hex1414       -2.458e-01  1.635e-02   -15.035  &lt; 2e-16 ***\ndestination_hex1415        2.129e-01  1.619e-02    13.148  &lt; 2e-16 ***\ndestination_hex1416       -4.761e-01  1.707e-02   -27.897  &lt; 2e-16 ***\ndestination_hex1417       -8.541e-02  1.629e-02    -5.243 1.58e-07 ***\ndestination_hex1418        2.283e-02  1.627e-02     1.403 0.160579    \ndestination_hex1419       -4.680e-01  1.710e-02   -27.364  &lt; 2e-16 ***\ndestination_hex1422        1.115e-01  1.645e-02     6.779 1.21e-11 ***\ndestination_hex1423        6.753e-01  1.610e-02    41.946  &lt; 2e-16 ***\ndestination_hex1430        4.356e-01  1.605e-02    27.136  &lt; 2e-16 ***\ndestination_hex1431        1.035e+00  1.571e-02    65.887  &lt; 2e-16 ***\ndestination_hex1432        6.232e-01  1.583e-02    39.375  &lt; 2e-16 ***\ndestination_hex1433        6.139e-02  1.781e-02     3.447 0.000567 ***\ndestination_hex1434        7.111e-01  1.581e-02    44.989  &lt; 2e-16 ***\ndestination_hex1435        2.650e-01  1.598e-02    16.585  &lt; 2e-16 ***\ndestination_hex1436       -8.254e-01  1.860e-02   -44.381  &lt; 2e-16 ***\ndestination_hex1437       -2.830e-01  1.654e-02   -17.112  &lt; 2e-16 ***\ndestination_hex1438        3.620e-01  1.585e-02    22.837  &lt; 2e-16 ***\ndestination_hex1439        1.131e+00  1.566e-02    72.196  &lt; 2e-16 ***\ndestination_hex1440        4.837e-01  1.643e-02    29.435  &lt; 2e-16 ***\ndestination_hex1442       -1.685e+00  2.246e-02   -75.016  &lt; 2e-16 ***\ndestination_hex1443        1.149e-01  1.633e-02     7.037 1.97e-12 ***\ndestination_hex1444        1.064e+00  1.634e-02    65.132  &lt; 2e-16 ***\ndestination_hex1452        1.008e+00  1.562e-02    64.504  &lt; 2e-16 ***\ndestination_hex1453        4.710e-01  1.606e-02    29.322  &lt; 2e-16 ***\ndestination_hex1454       -6.891e-01  1.889e-02   -36.486  &lt; 2e-16 ***\ndestination_hex1455       -3.585e-02  1.678e-02    -2.136 0.032673 *  \ndestination_hex1456        1.154e-01  1.631e-02     7.076 1.48e-12 ***\ndestination_hex1457        1.059e+00  1.590e-02    66.625  &lt; 2e-16 ***\ndestination_hex1458        1.691e+00  1.549e-02   109.192  &lt; 2e-16 ***\ndestination_hex1459       -8.555e-01  1.727e-02   -49.536  &lt; 2e-16 ***\ndestination_hex1460        4.406e-01  1.588e-02    27.753  &lt; 2e-16 ***\ndestination_hex1461        2.572e-01  1.659e-02    15.499  &lt; 2e-16 ***\ndestination_hex1464       -3.895e-01  1.680e-02   -23.190  &lt; 2e-16 ***\ndestination_hex1465       -6.100e-01  1.848e-02   -33.016  &lt; 2e-16 ***\ndestination_hex1472        2.412e-02  1.682e-02     1.433 0.151772    \ndestination_hex1473        1.029e+00  1.572e-02    65.483  &lt; 2e-16 ***\ndestination_hex1474        7.887e-01  1.566e-02    50.354  &lt; 2e-16 ***\ndestination_hex1475        7.396e-01  1.582e-02    46.736  &lt; 2e-16 ***\ndestination_hex1476       -3.581e-01  1.681e-02   -21.301  &lt; 2e-16 ***\ndestination_hex1477        1.599e+00  1.547e-02   103.369  &lt; 2e-16 ***\ndestination_hex1478        3.561e-02  1.615e-02     2.205 0.027427 *  \ndestination_hex1479       -7.076e-01  1.697e-02   -41.689  &lt; 2e-16 ***\ndestination_hex1480        1.605e+00  1.548e-02   103.627  &lt; 2e-16 ***\ndestination_hex1481        1.540e-01  1.634e-02     9.425  &lt; 2e-16 ***\ndestination_hex1482        1.059e+00  1.600e-02    66.182  &lt; 2e-16 ***\ndestination_hex1485       -1.035e+00  1.966e-02   -52.644  &lt; 2e-16 ***\ndestination_hex1494        6.830e-01  1.586e-02    43.054  &lt; 2e-16 ***\ndestination_hex1495       -5.877e-02  1.636e-02    -3.591 0.000329 ***\ndestination_hex1496        4.609e-01  1.568e-02    29.393  &lt; 2e-16 ***\ndestination_hex1497       -2.518e-01  1.688e-02   -14.920  &lt; 2e-16 ***\ndestination_hex1498       -1.203e-01  1.644e-02    -7.317 2.54e-13 ***\ndestination_hex1499        2.078e-01  1.591e-02    13.056  &lt; 2e-16 ***\ndestination_hex150         3.526e-01  2.932e-02    12.026  &lt; 2e-16 ***\ndestination_hex1500       -2.752e-01  1.739e-02   -15.823  &lt; 2e-16 ***\ndestination_hex1501        6.445e-01  1.577e-02    40.875  &lt; 2e-16 ***\ndestination_hex1502        5.512e-01  1.586e-02    34.753  &lt; 2e-16 ***\ndestination_hex1506       -5.895e+00  6.484e-02   -90.922  &lt; 2e-16 ***\ndestination_hex151         1.969e-01  2.609e-02     7.549 4.38e-14 ***\ndestination_hex1515       -5.665e-01  2.050e-02   -27.638  &lt; 2e-16 ***\ndestination_hex1516        3.663e-01  1.567e-02    23.371  &lt; 2e-16 ***\ndestination_hex1517        5.723e-03  1.655e-02     0.346 0.729500    \ndestination_hex1518       -5.958e-01  1.713e-02   -34.788  &lt; 2e-16 ***\ndestination_hex1519       -3.320e-01  1.718e-02   -19.323  &lt; 2e-16 ***\ndestination_hex152         1.780e+00  2.031e-02    87.647  &lt; 2e-16 ***\ndestination_hex1520       -4.539e-01  1.670e-02   -27.180  &lt; 2e-16 ***\ndestination_hex1521       -4.267e-01  1.695e-02   -25.168  &lt; 2e-16 ***\ndestination_hex1522        3.832e-01  1.600e-02    23.949  &lt; 2e-16 ***\ndestination_hex1523        1.316e+00  1.586e-02    82.993  &lt; 2e-16 ***\ndestination_hex1524       -6.775e-01  1.909e-02   -35.486  &lt; 2e-16 ***\ndestination_hex1527       -2.624e+00  3.236e-02   -81.089  &lt; 2e-16 ***\ndestination_hex153         3.493e-01  1.978e-02    17.659  &lt; 2e-16 ***\ndestination_hex1535       -1.150e+00  5.261e-02   -21.854  &lt; 2e-16 ***\ndestination_hex1536       -1.271e+00  2.646e-02   -48.052  &lt; 2e-16 ***\ndestination_hex1537        2.016e-01  1.633e-02    12.340  &lt; 2e-16 ***\ndestination_hex1538        1.818e-01  1.608e-02    11.304  &lt; 2e-16 ***\ndestination_hex1539        3.010e-01  1.591e-02    18.911  &lt; 2e-16 ***\ndestination_hex154        -9.531e-01  3.063e-02   -31.118  &lt; 2e-16 ***\ndestination_hex1540       -3.304e-01  1.641e-02   -20.134  &lt; 2e-16 ***\ndestination_hex1541       -8.847e-02  1.673e-02    -5.288 1.24e-07 ***\ndestination_hex1542       -5.595e-01  1.796e-02   -31.155  &lt; 2e-16 ***\ndestination_hex1543       -6.523e-01  2.972e-02   -21.945  &lt; 2e-16 ***\ndestination_hex1544       -6.835e-01  1.766e-02   -38.705  &lt; 2e-16 ***\ndestination_hex1547       -6.849e-01  2.123e-02   -32.257  &lt; 2e-16 ***\ndestination_hex155        -2.559e-01  2.294e-02   -11.157  &lt; 2e-16 ***\ndestination_hex1556       -1.861e+00  6.089e-02   -30.564  &lt; 2e-16 ***\ndestination_hex1557       -1.001e+00  2.190e-02   -45.702  &lt; 2e-16 ***\ndestination_hex1558        4.321e-01  1.960e-02    22.053  &lt; 2e-16 ***\ndestination_hex1559        7.442e-01  1.574e-02    47.268  &lt; 2e-16 ***\ndestination_hex156         3.089e-01  2.394e-02    12.901  &lt; 2e-16 ***\ndestination_hex1560        8.169e-01  1.572e-02    51.968  &lt; 2e-16 ***\ndestination_hex1561        1.660e-02  1.652e-02     1.005 0.315016    \ndestination_hex1562       -2.123e+00  2.259e-02   -93.950  &lt; 2e-16 ***\ndestination_hex1563       -1.030e+00  1.774e-02   -58.083  &lt; 2e-16 ***\ndestination_hex1564       -4.310e-01  1.727e-02   -24.954  &lt; 2e-16 ***\ndestination_hex1565        9.250e-02  1.644e-02     5.625 1.86e-08 ***\ndestination_hex1566       -1.553e+00  2.232e-02   -69.559  &lt; 2e-16 ***\ndestination_hex1567       -1.070e+00  2.303e-02   -46.437  &lt; 2e-16 ***\ndestination_hex1568       -3.594e-01  1.941e-02   -18.519  &lt; 2e-16 ***\ndestination_hex1578       -2.016e+00  1.002e-01   -20.124  &lt; 2e-16 ***\ndestination_hex1580       -2.204e+00  2.814e-02   -78.314  &lt; 2e-16 ***\ndestination_hex1581        5.030e-01  1.595e-02    31.532  &lt; 2e-16 ***\ndestination_hex1582        4.717e-01  1.575e-02    29.946  &lt; 2e-16 ***\ndestination_hex1583       -1.526e+00  2.505e-02   -60.930  &lt; 2e-16 ***\ndestination_hex1584       -1.087e+00  1.938e-02   -56.103  &lt; 2e-16 ***\ndestination_hex1585       -6.352e-02  1.698e-02    -3.741 0.000184 ***\ndestination_hex1586        5.320e-01  1.608e-02    33.092  &lt; 2e-16 ***\ndestination_hex1589       -1.485e+00  2.643e-02   -56.179  &lt; 2e-16 ***\ndestination_hex1590       -3.475e-01  2.011e-02   -17.279  &lt; 2e-16 ***\ndestination_hex1600       -2.108e-01  2.071e-02   -10.176  &lt; 2e-16 ***\ndestination_hex1601       -7.604e-01  1.681e-02   -45.238  &lt; 2e-16 ***\ndestination_hex1602        8.902e-02  1.658e-02     5.369 7.93e-08 ***\ndestination_hex1603        8.863e-01  1.575e-02    56.266  &lt; 2e-16 ***\ndestination_hex1604       -1.169e+00  1.834e-02   -63.713  &lt; 2e-16 ***\ndestination_hex1605       -2.505e-01  1.627e-02   -15.401  &lt; 2e-16 ***\ndestination_hex1606       -3.168e-01  2.015e-02   -15.722  &lt; 2e-16 ***\ndestination_hex1607        6.891e-01  1.583e-02    43.535  &lt; 2e-16 ***\ndestination_hex1608        4.849e-02  1.644e-02     2.950 0.003182 ** \ndestination_hex1609        4.770e-01  1.606e-02    29.703  &lt; 2e-16 ***\ndestination_hex1610       -1.365e+00  3.040e-02   -44.904  &lt; 2e-16 ***\ndestination_hex1622        9.288e-01  1.862e-02    49.883  &lt; 2e-16 ***\ndestination_hex1623        4.929e-01  1.583e-02    31.131  &lt; 2e-16 ***\ndestination_hex1624        9.151e-01  1.572e-02    58.213  &lt; 2e-16 ***\ndestination_hex1625        2.211e-01  1.623e-02    13.619  &lt; 2e-16 ***\ndestination_hex1626        1.965e+00  1.544e-02   127.236  &lt; 2e-16 ***\ndestination_hex1627       -9.555e-01  1.757e-02   -54.372  &lt; 2e-16 ***\ndestination_hex1628        1.256e+00  1.565e-02    80.272  &lt; 2e-16 ***\ndestination_hex1629       -1.551e+00  2.067e-02   -75.008  &lt; 2e-16 ***\ndestination_hex1630       -8.771e-01  1.895e-02   -46.284  &lt; 2e-16 ***\ndestination_hex1631       -1.529e+00  2.416e-02   -63.281  &lt; 2e-16 ***\ndestination_hex1642       -1.924e+00  3.516e-02   -54.705  &lt; 2e-16 ***\ndestination_hex1643        4.098e-02  1.630e-02     2.514 0.011924 *  \ndestination_hex1644        5.616e-02  1.718e-02     3.269 0.001080 ** \ndestination_hex1645       -7.722e-02  1.646e-02    -4.693 2.70e-06 ***\ndestination_hex1646        2.520e-01  1.704e-02    14.785  &lt; 2e-16 ***\ndestination_hex1647       -4.604e-01  1.639e-02   -28.097  &lt; 2e-16 ***\ndestination_hex1648       -2.019e-01  1.629e-02   -12.397  &lt; 2e-16 ***\ndestination_hex1649        5.802e-01  1.581e-02    36.705  &lt; 2e-16 ***\ndestination_hex1650       -2.015e-01  1.691e-02   -11.915  &lt; 2e-16 ***\ndestination_hex1664       -3.888e+00  1.173e-01   -33.157  &lt; 2e-16 ***\ndestination_hex1665        6.905e-01  1.578e-02    43.767  &lt; 2e-16 ***\ndestination_hex1666        7.269e-01  1.578e-02    46.079  &lt; 2e-16 ***\ndestination_hex1667       -4.379e-01  2.189e-02   -20.006  &lt; 2e-16 ***\ndestination_hex1668       -3.052e-01  1.664e-02   -18.340  &lt; 2e-16 ***\ndestination_hex1670        2.845e-01  1.591e-02    17.884  &lt; 2e-16 ***\ndestination_hex1671       -2.592e-01  1.843e-02   -14.068  &lt; 2e-16 ***\ndestination_hex1672       -9.304e-01  1.910e-02   -48.701  &lt; 2e-16 ***\ndestination_hex1684        2.610e-01  1.785e-02    14.623  &lt; 2e-16 ***\ndestination_hex1685       -4.604e-01  1.750e-02   -26.305  &lt; 2e-16 ***\ndestination_hex1686        1.349e-01  1.627e-02     8.294  &lt; 2e-16 ***\ndestination_hex1687        4.259e-01  1.664e-02    25.587  &lt; 2e-16 ***\ndestination_hex1688       -2.666e-01  1.663e-02   -16.030  &lt; 2e-16 ***\ndestination_hex1689       -9.312e-01  1.801e-02   -51.707  &lt; 2e-16 ***\ndestination_hex1690       -1.546e+00  1.971e-02   -78.434  &lt; 2e-16 ***\ndestination_hex1691        4.697e-01  1.587e-02    29.597  &lt; 2e-16 ***\ndestination_hex1692       -1.403e+00  2.034e-02   -69.005  &lt; 2e-16 ***\ndestination_hex1706        1.063e-01  1.701e-02     6.250 4.11e-10 ***\ndestination_hex1707       -7.939e-01  1.721e-02   -46.123  &lt; 2e-16 ***\ndestination_hex1708       -1.309e-01  1.644e-02    -7.962 1.70e-15 ***\ndestination_hex1709        5.339e-01  1.593e-02    33.513  &lt; 2e-16 ***\ndestination_hex1710        4.594e-01  1.606e-02    28.611  &lt; 2e-16 ***\ndestination_hex1711        1.146e+00  1.564e-02    73.288  &lt; 2e-16 ***\ndestination_hex1712        2.995e-01  1.584e-02    18.907  &lt; 2e-16 ***\ndestination_hex1713       -1.983e+00  2.146e-02   -92.429  &lt; 2e-16 ***\ndestination_hex1714       -5.144e-01  1.723e-02   -29.855  &lt; 2e-16 ***\ndestination_hex172        -1.493e+00  4.682e-02   -31.879  &lt; 2e-16 ***\ndestination_hex1727        6.123e-01  1.616e-02    37.893  &lt; 2e-16 ***\ndestination_hex1728        5.002e-01  1.589e-02    31.473  &lt; 2e-16 ***\ndestination_hex1729        5.959e-01  1.582e-02    37.665  &lt; 2e-16 ***\ndestination_hex1730       -5.315e-01  1.751e-02   -30.360  &lt; 2e-16 ***\ndestination_hex1731        2.908e-01  1.608e-02    18.088  &lt; 2e-16 ***\ndestination_hex1732        1.411e-01  1.592e-02     8.860  &lt; 2e-16 ***\ndestination_hex1733       -9.192e-01  1.720e-02   -53.444  &lt; 2e-16 ***\ndestination_hex1734        3.531e-02  1.597e-02     2.211 0.027002 *  \ndestination_hex1735       -8.040e-01  2.052e-02   -39.189  &lt; 2e-16 ***\ndestination_hex174         9.761e-02  2.095e-02     4.660 3.16e-06 ***\ndestination_hex1748       -4.244e-01  1.755e-02   -24.182  &lt; 2e-16 ***\ndestination_hex1749        7.103e-01  1.576e-02    45.087  &lt; 2e-16 ***\ndestination_hex175         3.350e-02  1.843e-02     1.818 0.069123 .  \ndestination_hex1750        5.048e-01  1.583e-02    31.892  &lt; 2e-16 ***\ndestination_hex1751        1.785e-01  1.643e-02    10.867  &lt; 2e-16 ***\ndestination_hex1753        4.034e-01  1.589e-02    25.389  &lt; 2e-16 ***\ndestination_hex1754        1.574e+00  1.548e-02   101.652  &lt; 2e-16 ***\ndestination_hex1755        8.523e-01  1.565e-02    54.473  &lt; 2e-16 ***\ndestination_hex1756       -2.396e-01  1.620e-02   -14.794  &lt; 2e-16 ***\ndestination_hex1757       -2.169e+00  2.653e-02   -81.745  &lt; 2e-16 ***\ndestination_hex176        -1.215e+00  3.085e-02   -39.385  &lt; 2e-16 ***\ndestination_hex1769        7.377e-02  1.652e-02     4.467 7.95e-06 ***\ndestination_hex1770       -4.433e-02  1.694e-02    -2.617 0.008863 ** \ndestination_hex1771        5.766e-01  1.601e-02    36.026  &lt; 2e-16 ***\ndestination_hex1772        1.674e+00  1.668e-02   100.398  &lt; 2e-16 ***\ndestination_hex1774       -2.974e-01  1.672e-02   -17.787  &lt; 2e-16 ***\ndestination_hex1775       -8.812e-01  1.715e-02   -51.388  &lt; 2e-16 ***\ndestination_hex1776        1.416e+00  1.549e-02    91.410  &lt; 2e-16 ***\ndestination_hex1777       -2.954e-01  1.669e-02   -17.696  &lt; 2e-16 ***\ndestination_hex1778       -1.061e+00  2.082e-02   -50.955  &lt; 2e-16 ***\ndestination_hex1790        8.062e-01  1.601e-02    50.338  &lt; 2e-16 ***\ndestination_hex1791        1.502e-01  1.629e-02     9.222  &lt; 2e-16 ***\ndestination_hex1792        2.912e-01  1.674e-02    17.396  &lt; 2e-16 ***\ndestination_hex1793        2.318e-01  1.624e-02    14.268  &lt; 2e-16 ***\ndestination_hex1794        1.778e+00  1.685e-02   105.540  &lt; 2e-16 ***\ndestination_hex1795       -2.015e+00  2.628e-02   -76.655  &lt; 2e-16 ***\ndestination_hex1796        1.048e-01  1.616e-02     6.484 8.93e-11 ***\ndestination_hex1797       -8.561e-02  1.618e-02    -5.291 1.22e-07 ***\ndestination_hex1798        8.551e-02  1.608e-02     5.317 1.06e-07 ***\ndestination_hex1799       -1.071e+00  1.824e-02   -58.738  &lt; 2e-16 ***\ndestination_hex1800       -2.149e+00  5.242e-02   -41.001  &lt; 2e-16 ***\ndestination_hex1811        4.999e-02  1.695e-02     2.950 0.003181 ** \ndestination_hex1812        1.127e+00  1.562e-02    72.155  &lt; 2e-16 ***\ndestination_hex1813        1.206e+00  1.560e-02    77.317  &lt; 2e-16 ***\ndestination_hex1817       -1.398e+00  1.925e-02   -72.615  &lt; 2e-16 ***\ndestination_hex1818       -2.960e-01  1.638e-02   -18.075  &lt; 2e-16 ***\ndestination_hex1819        1.593e+00  1.550e-02   102.795  &lt; 2e-16 ***\ndestination_hex1820       -3.005e+00  4.378e-02   -68.652  &lt; 2e-16 ***\ndestination_hex1832        1.240e+00  1.579e-02    78.530  &lt; 2e-16 ***\ndestination_hex1833       -1.113e-01  1.671e-02    -6.665 2.65e-11 ***\ndestination_hex1834       -4.111e-01  1.664e-02   -24.709  &lt; 2e-16 ***\ndestination_hex1835       -2.359e-01  1.694e-02   -13.925  &lt; 2e-16 ***\ndestination_hex1837       -1.834e-01  2.049e-02    -8.954  &lt; 2e-16 ***\ndestination_hex1839       -1.179e+00  1.905e-02   -61.918  &lt; 2e-16 ***\ndestination_hex1840        1.241e+00  1.557e-02    79.754  &lt; 2e-16 ***\ndestination_hex1841       -1.680e+00  2.692e-02   -62.414  &lt; 2e-16 ***\ndestination_hex1842       -5.341e-01  2.093e-02   -25.513  &lt; 2e-16 ***\ndestination_hex1853        1.950e-01  1.630e-02    11.958  &lt; 2e-16 ***\ndestination_hex1854        5.748e-01  1.604e-02    35.848  &lt; 2e-16 ***\ndestination_hex1855        6.549e-01  1.590e-02    41.194  &lt; 2e-16 ***\ndestination_hex1858        6.598e-01  1.742e-02    37.866  &lt; 2e-16 ***\ndestination_hex1860       -3.830e-01  2.346e-02   -16.323  &lt; 2e-16 ***\ndestination_hex1861       -2.003e-01  1.646e-02   -12.167  &lt; 2e-16 ***\ndestination_hex1874        7.317e-02  1.782e-02     4.106 4.03e-05 ***\ndestination_hex1875       -1.792e+00  2.485e-02   -72.096  &lt; 2e-16 ***\ndestination_hex1876       -3.698e-01  2.642e-02   -13.998  &lt; 2e-16 ***\ndestination_hex1877        3.811e-01  1.600e-02    23.818  &lt; 2e-16 ***\ndestination_hex1880       -1.830e-01  2.064e-02    -8.865  &lt; 2e-16 ***\ndestination_hex1882        2.529e-02  1.647e-02     1.536 0.124527    \ndestination_hex1883       -1.270e+00  2.441e-02   -52.019  &lt; 2e-16 ***\ndestination_hex1895        4.840e-01  1.619e-02    29.899  &lt; 2e-16 ***\ndestination_hex1896       -3.229e-01  1.709e-02   -18.891  &lt; 2e-16 ***\ndestination_hex1897       -1.195e+00  1.916e-02   -62.388  &lt; 2e-16 ***\ndestination_hex1898       -1.301e+00  2.823e-02   -46.073  &lt; 2e-16 ***\ndestination_hex1901       -6.706e-01  2.586e-02   -25.930  &lt; 2e-16 ***\ndestination_hex1903       -1.546e+00  2.276e-02   -67.949  &lt; 2e-16 ***\ndestination_hex1917       -3.682e-01  1.755e-02   -20.978  &lt; 2e-16 ***\ndestination_hex1918        1.107e+00  1.643e-02    67.348  &lt; 2e-16 ***\ndestination_hex1919        7.277e-01  1.591e-02    45.743  &lt; 2e-16 ***\ndestination_hex1922        3.899e-01  1.831e-02    21.296  &lt; 2e-16 ***\ndestination_hex1924       -2.182e+00  2.405e-02   -90.702  &lt; 2e-16 ***\ndestination_hex1937       -4.594e-02  1.702e-02    -2.700 0.006942 ** \ndestination_hex1938        7.442e-01  1.587e-02    46.886  &lt; 2e-16 ***\ndestination_hex1939       -2.376e-01  1.722e-02   -13.798  &lt; 2e-16 ***\ndestination_hex1942       -9.871e-01  2.507e-02   -39.367  &lt; 2e-16 ***\ndestination_hex195        -5.480e-01  3.345e-02   -16.384  &lt; 2e-16 ***\ndestination_hex1959       -3.181e-01  1.777e-02   -17.903  &lt; 2e-16 ***\ndestination_hex196         7.533e-01  1.827e-02    41.236  &lt; 2e-16 ***\ndestination_hex1960        1.947e+00  1.545e-02   126.020  &lt; 2e-16 ***\ndestination_hex1961       -7.470e-01  1.820e-02   -41.033  &lt; 2e-16 ***\ndestination_hex1962       -6.647e-02  1.643e-02    -4.047 5.20e-05 ***\ndestination_hex1964        9.388e-01  1.888e-02    49.729  &lt; 2e-16 ***\ndestination_hex197        -1.691e+00  8.774e-02   -19.276  &lt; 2e-16 ***\ndestination_hex1979       -6.202e-02  1.742e-02    -3.560 0.000370 ***\ndestination_hex1980       -1.541e-01  1.661e-02    -9.280  &lt; 2e-16 ***\ndestination_hex1981       -2.495e-01  1.686e-02   -14.794  &lt; 2e-16 ***\ndestination_hex1982        3.123e-01  1.680e-02    18.588  &lt; 2e-16 ***\ndestination_hex1983        7.012e-03  1.642e-02     0.427 0.669385    \ndestination_hex1984        1.642e-01  1.647e-02     9.970  &lt; 2e-16 ***\ndestination_hex1985        2.635e-01  1.625e-02    16.211  &lt; 2e-16 ***\ndestination_hex2001        5.083e-02  1.659e-02     3.064 0.002184 ** \ndestination_hex2002        2.328e-01  1.603e-02    14.527  &lt; 2e-16 ***\ndestination_hex2003        6.943e-01  1.584e-02    43.828  &lt; 2e-16 ***\ndestination_hex2004        9.380e-01  1.580e-02    59.368  &lt; 2e-16 ***\ndestination_hex2005        6.748e-02  1.648e-02     4.094 4.23e-05 ***\ndestination_hex2006        1.165e+00  1.589e-02    73.317  &lt; 2e-16 ***\ndestination_hex2007       -2.763e+00  3.191e-02   -86.594  &lt; 2e-16 ***\ndestination_hex2022        7.133e-01  1.650e-02    43.245  &lt; 2e-16 ***\ndestination_hex2023        4.884e-01  1.595e-02    30.622  &lt; 2e-16 ***\ndestination_hex2024        8.880e-01  1.574e-02    56.435  &lt; 2e-16 ***\ndestination_hex2025       -2.511e-01  1.655e-02   -15.175  &lt; 2e-16 ***\ndestination_hex2026       -9.133e-01  1.892e-02   -48.260  &lt; 2e-16 ***\ndestination_hex2027        3.978e-01  1.586e-02    25.075  &lt; 2e-16 ***\ndestination_hex2043       -8.531e-01  1.868e-02   -45.671  &lt; 2e-16 ***\ndestination_hex2044        1.026e-02  1.643e-02     0.624 0.532401    \ndestination_hex2045       -3.321e-01  1.935e-02   -17.158  &lt; 2e-16 ***\ndestination_hex2046        9.126e-01  1.566e-02    58.284  &lt; 2e-16 ***\ndestination_hex2047       -8.793e-01  1.769e-02   -49.708  &lt; 2e-16 ***\ndestination_hex2048       -5.828e-01  1.734e-02   -33.610  &lt; 2e-16 ***\ndestination_hex2049       -4.446e+00  3.122e-02  -142.423  &lt; 2e-16 ***\ndestination_hex2064        7.229e-02  1.685e-02     4.289 1.80e-05 ***\ndestination_hex2065       -2.063e-01  1.706e-02   -12.095  &lt; 2e-16 ***\ndestination_hex2066       -2.155e+00  3.475e-02   -62.009  &lt; 2e-16 ***\ndestination_hex2067        2.181e+00  1.541e-02   141.474  &lt; 2e-16 ***\ndestination_hex2068       -6.053e-01  1.966e-02   -30.788  &lt; 2e-16 ***\ndestination_hex2069       -5.321e-01  1.725e-02   -30.845  &lt; 2e-16 ***\ndestination_hex2085       -3.113e-01  1.712e-02   -18.187  &lt; 2e-16 ***\ndestination_hex2086        1.353e+00  1.568e-02    86.286  &lt; 2e-16 ***\ndestination_hex2087        1.072e+00  1.575e-02    68.042  &lt; 2e-16 ***\ndestination_hex2088       -1.086e-01  1.625e-02    -6.681 2.37e-11 ***\ndestination_hex2089       -1.067e+00  1.769e-02   -60.338  &lt; 2e-16 ***\ndestination_hex2090        1.956e+00  1.547e-02   126.481  &lt; 2e-16 ***\ndestination_hex2091       -4.011e+00  6.354e-02   -63.119  &lt; 2e-16 ***\ndestination_hex2105        4.140e-01  7.693e-02     5.381 7.39e-08 ***\ndestination_hex2106       -1.255e+00  2.145e-02   -58.477  &lt; 2e-16 ***\ndestination_hex2107        1.313e+00  1.569e-02    83.672  &lt; 2e-16 ***\ndestination_hex2108        9.462e-01  1.592e-02    59.449  &lt; 2e-16 ***\ndestination_hex2109       -4.907e-01  1.653e-02   -29.687  &lt; 2e-16 ***\ndestination_hex2110       -1.105e+00  1.928e-02   -57.322  &lt; 2e-16 ***\ndestination_hex2111       -2.749e+00  3.619e-02   -75.959  &lt; 2e-16 ***\ndestination_hex2128        1.893e-01  1.776e-02    10.658  &lt; 2e-16 ***\ndestination_hex2129        7.024e-02  1.811e-02     3.879 0.000105 ***\ndestination_hex2130       -6.690e-01  1.616e-02   -41.386  &lt; 2e-16 ***\ndestination_hex2131       -4.998e-01  1.686e-02   -29.644  &lt; 2e-16 ***\ndestination_hex2132       -2.532e-01  1.689e-02   -14.993  &lt; 2e-16 ***\ndestination_hex2148       -5.599e-01  2.075e-02   -26.986  &lt; 2e-16 ***\ndestination_hex2149       -5.957e-01  1.864e-02   -31.965  &lt; 2e-16 ***\ndestination_hex215         5.555e-01  3.141e-02    17.685  &lt; 2e-16 ***\ndestination_hex2150       -1.232e+00  1.717e-02   -71.795  &lt; 2e-16 ***\ndestination_hex2151        1.332e+00  1.556e-02    85.600  &lt; 2e-16 ***\ndestination_hex2152        3.854e-01  1.608e-02    23.964  &lt; 2e-16 ***\ndestination_hex2153       -1.146e+00  1.887e-02   -60.731  &lt; 2e-16 ***\ndestination_hex216        -1.302e-02  2.194e-02    -0.594 0.552696    \ndestination_hex217         3.113e-01  1.767e-02    17.613  &lt; 2e-16 ***\ndestination_hex2171        7.064e-01  1.615e-02    43.731  &lt; 2e-16 ***\ndestination_hex2172       -9.157e-01  1.893e-02   -48.377  &lt; 2e-16 ***\ndestination_hex2173       -4.865e-01  1.692e-02   -28.753  &lt; 2e-16 ***\ndestination_hex2174        7.797e-02  1.669e-02     4.671 3.00e-06 ***\ndestination_hex2191        1.019e+00  1.691e-02    60.253  &lt; 2e-16 ***\ndestination_hex2192       -5.054e-01  1.856e-02   -27.224  &lt; 2e-16 ***\ndestination_hex2193        1.165e-01  1.641e-02     7.102 1.23e-12 ***\ndestination_hex2194        7.654e-03  1.631e-02     0.469 0.638913    \ndestination_hex2195       -9.137e-01  3.712e-02   -24.613  &lt; 2e-16 ***\ndestination_hex2212        9.774e-01  2.020e-02    48.395  &lt; 2e-16 ***\ndestination_hex2213        5.195e-01  1.725e-02    30.123  &lt; 2e-16 ***\ndestination_hex2214        1.463e+00  1.671e-02    87.537  &lt; 2e-16 ***\ndestination_hex2215       -4.333e-01  1.782e-02   -24.322  &lt; 2e-16 ***\ndestination_hex2216        4.670e-01  1.635e-02    28.563  &lt; 2e-16 ***\ndestination_hex2233        1.056e+00  1.805e-02    58.504  &lt; 2e-16 ***\ndestination_hex2234        9.081e-01  1.725e-02    52.654  &lt; 2e-16 ***\ndestination_hex2235        2.702e-01  1.770e-02    15.266  &lt; 2e-16 ***\ndestination_hex2236       -1.292e+00  2.034e-02   -63.520  &lt; 2e-16 ***\ndestination_hex2237        3.752e-01  1.906e-02    19.682  &lt; 2e-16 ***\ndestination_hex2256       -8.413e-02  1.971e-02    -4.268 1.97e-05 ***\ndestination_hex2257       -1.955e+00  3.003e-02   -65.117  &lt; 2e-16 ***\ndestination_hex2258        4.420e-02  1.694e-02     2.610 0.009057 ** \ndestination_hex2259        1.084e+00  1.826e-02    59.371  &lt; 2e-16 ***\ndestination_hex2277       -7.297e-01  2.889e-02   -25.255  &lt; 2e-16 ***\ndestination_hex2278       -7.314e-01  2.182e-02   -33.521  &lt; 2e-16 ***\ndestination_hex2279        2.102e-01  1.691e-02    12.424  &lt; 2e-16 ***\ndestination_hex2280       -1.503e+00  3.518e-02   -42.721  &lt; 2e-16 ***\ndestination_hex2297       -6.275e-01  2.210e-02   -28.388  &lt; 2e-16 ***\ndestination_hex23         -3.820e-02  4.843e-02    -0.789 0.430225    \ndestination_hex2300       -8.074e-01  2.495e-02   -32.367  &lt; 2e-16 ***\ndestination_hex2301       -2.781e-01  1.812e-02   -15.345  &lt; 2e-16 ***\ndestination_hex2318        1.338e+00  1.623e-02    82.474  &lt; 2e-16 ***\ndestination_hex2319        1.460e+00  1.607e-02    90.857  &lt; 2e-16 ***\ndestination_hex2322       -2.460e-02  1.789e-02    -1.375 0.169027    \ndestination_hex2337        1.306e+00  2.178e-02    59.952  &lt; 2e-16 ***\ndestination_hex2341        1.705e+00  1.602e-02   106.419  &lt; 2e-16 ***\ndestination_hex2343       -7.603e-01  1.982e-02   -38.368  &lt; 2e-16 ***\ndestination_hex2361        3.600e-01  1.755e-02    20.510  &lt; 2e-16 ***\ndestination_hex2364       -1.738e+00  3.327e-02   -52.226  &lt; 2e-16 ***\ndestination_hex237        -6.276e-01  3.230e-02   -19.431  &lt; 2e-16 ***\ndestination_hex2379        4.909e-01  2.931e-02    16.750  &lt; 2e-16 ***\ndestination_hex238        -8.453e-02  2.117e-02    -3.993 6.53e-05 ***\ndestination_hex2384        1.205e+00  1.661e-02    72.517  &lt; 2e-16 ***\ndestination_hex239        -2.484e-02  3.329e-02    -0.746 0.455519    \ndestination_hex2405        1.833e+00  1.597e-02   114.767  &lt; 2e-16 ***\ndestination_hex2406       -1.319e+00  2.837e-02   -46.486  &lt; 2e-16 ***\ndestination_hex2426        1.260e+00  1.881e-02    67.000  &lt; 2e-16 ***\ndestination_hex2427        1.340e+00  1.664e-02    80.547  &lt; 2e-16 ***\ndestination_hex2505        1.666e+00  2.371e-02    70.273  &lt; 2e-16 ***\ndestination_hex257         6.137e-01  2.124e-02    28.893  &lt; 2e-16 ***\ndestination_hex258        -7.369e-01  2.460e-02   -29.951  &lt; 2e-16 ***\ndestination_hex259         4.969e-01  1.940e-02    25.609  &lt; 2e-16 ***\ndestination_hex278         8.558e-01  2.158e-02    39.653  &lt; 2e-16 ***\ndestination_hex279         3.179e-03  1.976e-02     0.161 0.872198    \ndestination_hex280         5.013e-01  1.942e-02    25.814  &lt; 2e-16 ***\ndestination_hex298        -3.496e+00  1.333e-01   -26.215  &lt; 2e-16 ***\ndestination_hex299         2.286e-01  2.222e-02    10.291  &lt; 2e-16 ***\ndestination_hex300        -3.251e-01  2.266e-02   -14.346  &lt; 2e-16 ***\ndestination_hex320         8.400e-01  2.012e-02    41.743  &lt; 2e-16 ***\ndestination_hex321        -4.596e-01  2.743e-02   -16.755  &lt; 2e-16 ***\ndestination_hex322         1.311e+00  1.910e-02    68.648  &lt; 2e-16 ***\ndestination_hex340         2.011e+00  1.871e-02   107.503  &lt; 2e-16 ***\ndestination_hex341         6.567e-01  1.925e-02    34.115  &lt; 2e-16 ***\ndestination_hex342         1.282e+00  1.826e-02    70.244  &lt; 2e-16 ***\ndestination_hex363         6.773e-01  2.022e-02    33.490  &lt; 2e-16 ***\ndestination_hex364         2.047e+00  1.699e-02   120.496  &lt; 2e-16 ***\ndestination_hex383         1.064e+00  1.758e-02    60.534  &lt; 2e-16 ***\ndestination_hex384        -1.262e-01  1.729e-02    -7.301 2.86e-13 ***\ndestination_hex385         1.109e+00  2.128e-02    52.121  &lt; 2e-16 ***\ndestination_hex404         1.644e+00  2.123e-02    77.438  &lt; 2e-16 ***\ndestination_hex405         1.191e+00  1.831e-02    65.055  &lt; 2e-16 ***\ndestination_hex406         6.367e-01  1.607e-02    39.624  &lt; 2e-16 ***\ndestination_hex407         1.057e+00  1.741e-02    60.709  &lt; 2e-16 ***\ndestination_hex408         2.193e+00  1.591e-02   137.862  &lt; 2e-16 ***\ndestination_hex425        -2.709e-01  2.815e-02    -9.624  &lt; 2e-16 ***\ndestination_hex426         4.248e-01  1.837e-02    23.128  &lt; 2e-16 ***\ndestination_hex427        -1.658e+00  2.770e-02   -59.863  &lt; 2e-16 ***\ndestination_hex428         1.066e-01  1.844e-02     5.784 7.30e-09 ***\ndestination_hex429        -1.362e-01  2.733e-02    -4.981 6.31e-07 ***\ndestination_hex44          1.817e+00  2.604e-02    69.793  &lt; 2e-16 ***\ndestination_hex446         8.015e-02  2.680e-02     2.991 0.002782 ** \ndestination_hex447        -1.848e-01  2.296e-02    -8.048 8.41e-16 ***\ndestination_hex448         1.605e-01  1.909e-02     8.407  &lt; 2e-16 ***\ndestination_hex449        -6.254e-01  1.706e-02   -36.667  &lt; 2e-16 ***\ndestination_hex450        -2.372e-01  1.932e-02   -12.281  &lt; 2e-16 ***\ndestination_hex46          1.588e+00  2.503e-02    63.431  &lt; 2e-16 ***\ndestination_hex468         6.975e-01  1.829e-02    38.144  &lt; 2e-16 ***\ndestination_hex469        -4.930e-01  1.747e-02   -28.227  &lt; 2e-16 ***\ndestination_hex470         2.081e-02  1.669e-02     1.247 0.212533    \ndestination_hex471        -6.293e-02  2.167e-02    -2.904 0.003689 ** \ndestination_hex488        -2.294e-01  2.698e-02    -8.503  &lt; 2e-16 ***\ndestination_hex489        -1.919e+00  4.962e-02   -38.680  &lt; 2e-16 ***\ndestination_hex490         3.976e-01  1.741e-02    22.830  &lt; 2e-16 ***\ndestination_hex491        -1.757e+00  2.127e-02   -82.625  &lt; 2e-16 ***\ndestination_hex493        -2.313e+00  5.166e-02   -44.773  &lt; 2e-16 ***\ndestination_hex494        -5.726e-01  2.660e-02   -21.529  &lt; 2e-16 ***\ndestination_hex509        -2.707e-01  2.109e-02   -12.836  &lt; 2e-16 ***\ndestination_hex510         5.864e-01  1.810e-02    32.394  &lt; 2e-16 ***\ndestination_hex511        -7.972e-02  1.660e-02    -4.803 1.57e-06 ***\ndestination_hex512        -1.719e-01  1.644e-02   -10.456  &lt; 2e-16 ***\ndestination_hex513         1.206e+00  1.689e-02    71.419  &lt; 2e-16 ***\ndestination_hex514         5.568e-01  1.922e-02    28.965  &lt; 2e-16 ***\ndestination_hex515        -4.793e-01  3.279e-02   -14.618  &lt; 2e-16 ***\ndestination_hex530        -9.459e-01  3.328e-02   -28.427  &lt; 2e-16 ***\ndestination_hex531         1.688e+00  1.633e-02   103.355  &lt; 2e-16 ***\ndestination_hex532         3.940e-01  1.760e-02    22.388  &lt; 2e-16 ***\ndestination_hex533         1.502e+00  1.557e-02    96.428  &lt; 2e-16 ***\ndestination_hex534         4.253e-01  1.651e-02    25.759  &lt; 2e-16 ***\ndestination_hex536        -4.274e-01  2.328e-02   -18.358  &lt; 2e-16 ***\ndestination_hex537        -7.822e-01  3.681e-02   -21.247  &lt; 2e-16 ***\ndestination_hex538        -1.507e+00  4.506e-02   -33.444  &lt; 2e-16 ***\ndestination_hex539        -4.597e+00  5.776e-01    -7.959 1.73e-15 ***\ndestination_hex551         1.471e-02  2.336e-02     0.630 0.528891    \ndestination_hex552         1.652e+00  1.847e-02    89.404  &lt; 2e-16 ***\ndestination_hex553        -6.155e-04  1.745e-02    -0.035 0.971868    \ndestination_hex554        -3.117e-01  1.671e-02   -18.651  &lt; 2e-16 ***\ndestination_hex555         6.626e-01  1.698e-02    39.021  &lt; 2e-16 ***\ndestination_hex559        -1.769e+00  5.644e-02   -31.341  &lt; 2e-16 ***\ndestination_hex560         4.471e-01  2.221e-02    20.128  &lt; 2e-16 ***\ndestination_hex561        -1.484e+00  6.899e-02   -21.504  &lt; 2e-16 ***\ndestination_hex572        -4.448e-01  3.580e-02   -12.425  &lt; 2e-16 ***\ndestination_hex573         1.175e+00  1.824e-02    64.409  &lt; 2e-16 ***\ndestination_hex574        -8.264e-01  2.227e-02   -37.105  &lt; 2e-16 ***\ndestination_hex575         2.278e+00  1.543e-02   147.663  &lt; 2e-16 ***\ndestination_hex576         2.336e-01  1.652e-02    14.142  &lt; 2e-16 ***\ndestination_hex578        -3.272e+00  1.077e-01   -30.383  &lt; 2e-16 ***\ndestination_hex582        -2.027e+00  6.756e-02   -30.006  &lt; 2e-16 ***\ndestination_hex583        -3.529e+00  2.188e-01   -16.133  &lt; 2e-16 ***\ndestination_hex584        -5.716e-01  3.803e-02   -15.031  &lt; 2e-16 ***\ndestination_hex593        -1.035e+00  2.818e-02   -36.726  &lt; 2e-16 ***\ndestination_hex594         3.857e-01  2.019e-02    19.102  &lt; 2e-16 ***\ndestination_hex595         9.470e-01  1.632e-02    58.020  &lt; 2e-16 ***\ndestination_hex596         2.690e-01  1.611e-02    16.700  &lt; 2e-16 ***\ndestination_hex597        -3.374e-01  2.164e-02   -15.591  &lt; 2e-16 ***\ndestination_hex603        -1.804e+00  5.329e-02   -33.859  &lt; 2e-16 ***\ndestination_hex604        -5.491e-01  4.699e-02   -11.686  &lt; 2e-16 ***\ndestination_hex615        -5.676e-01  2.106e-02   -26.948  &lt; 2e-16 ***\ndestination_hex616         7.282e-01  1.740e-02    41.842  &lt; 2e-16 ***\ndestination_hex617        -5.010e-01  1.778e-02   -28.187  &lt; 2e-16 ***\ndestination_hex618        -4.302e-02  1.646e-02    -2.613 0.008962 ** \ndestination_hex620         4.534e-01  1.874e-02    24.186  &lt; 2e-16 ***\ndestination_hex637        -1.368e-01  1.863e-02    -7.342 2.10e-13 ***\ndestination_hex638         1.366e-01  1.629e-02     8.385  &lt; 2e-16 ***\ndestination_hex657         9.282e-01  1.672e-02    55.509  &lt; 2e-16 ***\ndestination_hex658         3.670e-01  1.636e-02    22.426  &lt; 2e-16 ***\ndestination_hex659         2.988e-01  1.627e-02    18.363  &lt; 2e-16 ***\ndestination_hex66          1.101e-01  4.607e-02     2.391 0.016819 *  \ndestination_hex660         9.564e-01  1.578e-02    60.605  &lt; 2e-16 ***\ndestination_hex662         4.002e-01  1.884e-02    21.243  &lt; 2e-16 ***\ndestination_hex67          1.069e+00  2.006e-02    53.285  &lt; 2e-16 ***\ndestination_hex677         7.934e-01  1.779e-02    44.611  &lt; 2e-16 ***\ndestination_hex678        -6.176e-01  2.054e-02   -30.073  &lt; 2e-16 ***\ndestination_hex679         7.483e-01  1.604e-02    46.660  &lt; 2e-16 ***\ndestination_hex68          1.054e+00  2.440e-02    43.180  &lt; 2e-16 ***\ndestination_hex680         2.333e+00  1.546e-02   150.845  &lt; 2e-16 ***\ndestination_hex681        -9.840e-01  2.348e-02   -41.910  &lt; 2e-16 ***\ndestination_hex699         4.520e-01  1.755e-02    25.751  &lt; 2e-16 ***\ndestination_hex700         2.749e-01  1.666e-02    16.507  &lt; 2e-16 ***\ndestination_hex701        -1.989e+00  2.440e-02   -81.507  &lt; 2e-16 ***\ndestination_hex702         6.351e-01  1.598e-02    39.743  &lt; 2e-16 ***\ndestination_hex704         5.536e-01  1.829e-02    30.263  &lt; 2e-16 ***\ndestination_hex722        -2.452e-01  1.803e-02   -13.597  &lt; 2e-16 ***\ndestination_hex725        -1.676e+00  3.082e-02   -54.401  &lt; 2e-16 ***\ndestination_hex741         1.081e+00  1.676e-02    64.531  &lt; 2e-16 ***\ndestination_hex743        -2.466e+00  2.587e-02   -95.353  &lt; 2e-16 ***\ndestination_hex744         6.056e-01  1.602e-02    37.813  &lt; 2e-16 ***\ndestination_hex761         1.171e+00  1.725e-02    67.873  &lt; 2e-16 ***\ndestination_hex762        -5.456e-01  1.976e-02   -27.611  &lt; 2e-16 ***\ndestination_hex763        -2.540e+00  2.543e-02   -99.909  &lt; 2e-16 ***\ndestination_hex764         1.131e+00  1.566e-02    72.216  &lt; 2e-16 ***\ndestination_hex765        -1.347e-01  1.779e-02    -7.574 3.63e-14 ***\ndestination_hex767         1.480e-01  1.667e-02     8.879  &lt; 2e-16 ***\ndestination_hex772        -8.686e-01  3.774e-02   -23.014  &lt; 2e-16 ***\ndestination_hex784        -1.829e+00  2.500e-02   -73.169  &lt; 2e-16 ***\ndestination_hex785         9.774e-02  1.622e-02     6.025 1.70e-09 ***\ndestination_hex786         1.975e-01  1.604e-02    12.309  &lt; 2e-16 ***\ndestination_hex787        -1.570e-01  1.793e-02    -8.757  &lt; 2e-16 ***\ndestination_hex788        -1.481e+00  2.063e-02   -71.790  &lt; 2e-16 ***\ndestination_hex789        -1.811e+00  2.263e-02   -80.023  &lt; 2e-16 ***\ndestination_hex803        -4.488e-02  2.046e-02    -2.193 0.028311 *  \ndestination_hex804         2.646e-01  1.662e-02    15.917  &lt; 2e-16 ***\ndestination_hex805         1.627e+00  1.554e-02   104.731  &lt; 2e-16 ***\ndestination_hex806        -2.909e-01  1.633e-02   -17.817  &lt; 2e-16 ***\ndestination_hex807        -2.197e-01  1.674e-02   -13.120  &lt; 2e-16 ***\ndestination_hex808        -1.729e+00  2.488e-02   -69.502  &lt; 2e-16 ***\ndestination_hex809         2.135e-01  1.616e-02    13.211  &lt; 2e-16 ***\ndestination_hex810        -1.845e-01  1.747e-02   -10.566  &lt; 2e-16 ***\ndestination_hex814        -1.421e-01  2.456e-02    -5.787 7.15e-09 ***\ndestination_hex819         4.745e+00  2.020e-02   234.855  &lt; 2e-16 ***\ndestination_hex824         9.860e-02  2.023e-02     4.874 1.10e-06 ***\ndestination_hex826        -3.733e-02  1.640e-02    -2.276 0.022867 *  \ndestination_hex827        -4.299e-01  1.647e-02   -26.105  &lt; 2e-16 ***\ndestination_hex828         1.541e-01  1.600e-02     9.627  &lt; 2e-16 ***\ndestination_hex829        -2.869e-01  1.729e-02   -16.589  &lt; 2e-16 ***\ndestination_hex830        -1.170e+00  1.982e-02   -59.051  &lt; 2e-16 ***\ndestination_hex831         1.982e+00  1.548e-02   128.096  &lt; 2e-16 ***\ndestination_hex832         1.682e+00  1.563e-02   107.613  &lt; 2e-16 ***\ndestination_hex835        -9.312e-01  2.455e-02   -37.927  &lt; 2e-16 ***\ndestination_hex844        -4.655e-01  2.343e-02   -19.867  &lt; 2e-16 ***\ndestination_hex846        -1.201e-01  1.674e-02    -7.177 7.14e-13 ***\ndestination_hex847         7.947e-01  1.589e-02    50.012  &lt; 2e-16 ***\ndestination_hex848        -1.131e-01  1.648e-02    -6.862 6.77e-12 ***\ndestination_hex849        -7.689e-01  1.730e-02   -44.435  &lt; 2e-16 ***\ndestination_hex850         1.313e-01  1.628e-02     8.064 7.36e-16 ***\ndestination_hex851        -1.292e-01  1.643e-02    -7.863 3.76e-15 ***\ndestination_hex852        -2.684e-01  1.736e-02   -15.458  &lt; 2e-16 ***\ndestination_hex853        -1.016e-01  1.719e-02    -5.913 3.36e-09 ***\ndestination_hex854         6.001e-03  2.073e-02     0.289 0.772238    \ndestination_hex855        -4.967e-01  2.473e-02   -20.082  &lt; 2e-16 ***\ndestination_hex856        -1.984e+00  3.477e-02   -57.046  &lt; 2e-16 ***\ndestination_hex86         -4.823e-01  3.769e-02   -12.796  &lt; 2e-16 ***\ndestination_hex866         5.437e-01  1.819e-02    29.893  &lt; 2e-16 ***\ndestination_hex867         1.388e+00  1.591e-02    87.274  &lt; 2e-16 ***\ndestination_hex868         9.386e-01  1.613e-02    58.180  &lt; 2e-16 ***\ndestination_hex869         1.878e+00  1.603e-02   117.103  &lt; 2e-16 ***\ndestination_hex87         -1.582e+00  8.838e-02   -17.904  &lt; 2e-16 ***\ndestination_hex870         1.465e+00  1.553e-02    94.307  &lt; 2e-16 ***\ndestination_hex871         1.496e+00  1.572e-02    95.193  &lt; 2e-16 ***\ndestination_hex872         3.545e-01  1.622e-02    21.853  &lt; 2e-16 ***\ndestination_hex873         7.274e-02  1.715e-02     4.240 2.23e-05 ***\ndestination_hex874        -1.952e+00  2.015e-02   -96.877  &lt; 2e-16 ***\ndestination_hex875        -1.359e+00  3.203e-02   -42.438  &lt; 2e-16 ***\ndestination_hex876        -6.463e-01  2.440e-02   -26.486  &lt; 2e-16 ***\ndestination_hex877         1.916e-01  2.073e-02     9.242  &lt; 2e-16 ***\ndestination_hex88          1.742e-01  2.262e-02     7.700 1.36e-14 ***\ndestination_hex887         1.036e-02  1.732e-02     0.598 0.549518    \ndestination_hex888        -1.131e+00  2.037e-02   -55.545  &lt; 2e-16 ***\ndestination_hex889        -3.511e-01  1.986e-02   -17.679  &lt; 2e-16 ***\ndestination_hex89          6.195e-01  2.624e-02    23.606  &lt; 2e-16 ***\ndestination_hex890         5.546e-01  1.599e-02    34.677  &lt; 2e-16 ***\ndestination_hex891        -1.392e+00  2.084e-02   -66.804  &lt; 2e-16 ***\ndestination_hex893         7.275e-01  1.588e-02    45.796  &lt; 2e-16 ***\ndestination_hex894        -1.080e+00  1.917e-02   -56.329  &lt; 2e-16 ***\ndestination_hex895         9.077e-02  1.786e-02     5.081 3.76e-07 ***\ndestination_hex896        -1.739e+00  3.362e-02   -51.718  &lt; 2e-16 ***\ndestination_hex897        -1.812e+00  3.115e-02   -58.163  &lt; 2e-16 ***\ndestination_hex898        -5.066e-02  2.075e-02    -2.441 0.014654 *  \ndestination_hex90         -3.057e+00  5.002e-01    -6.112 9.85e-10 ***\ndestination_hex908         5.270e-01  1.843e-02    28.596  &lt; 2e-16 ***\ndestination_hex909        -1.396e-01  1.654e-02    -8.441  &lt; 2e-16 ***\ndestination_hex910        -9.137e-01  1.928e-02   -47.388  &lt; 2e-16 ***\ndestination_hex911         1.284e+00  1.575e-02    81.514  &lt; 2e-16 ***\ndestination_hex912        -5.367e-01  1.682e-02   -31.898  &lt; 2e-16 ***\ndestination_hex915         1.452e-01  1.636e-02     8.874  &lt; 2e-16 ***\ndestination_hex917         1.164e+00  1.624e-02    71.666  &lt; 2e-16 ***\ndestination_hex918        -2.278e+00  4.269e-02   -53.352  &lt; 2e-16 ***\ndestination_hex919        -6.788e-01  2.105e-02   -32.243  &lt; 2e-16 ***\ndestination_hex928        -1.134e+00  2.282e-02   -49.710  &lt; 2e-16 ***\ndestination_hex929        -2.098e-01  1.673e-02   -12.545  &lt; 2e-16 ***\ndestination_hex930         5.198e-01  1.571e-02    33.092  &lt; 2e-16 ***\ndestination_hex931        -3.135e-01  1.832e-02   -17.118  &lt; 2e-16 ***\ndestination_hex932        -2.367e+00  2.870e-02   -82.469  &lt; 2e-16 ***\ndestination_hex933         2.160e-01  1.698e-02    12.722  &lt; 2e-16 ***\ndestination_hex934        -2.550e-01  1.727e-02   -14.765  &lt; 2e-16 ***\ndestination_hex935         2.003e+00  1.546e-02   129.519  &lt; 2e-16 ***\ndestination_hex938        -3.984e+00  1.748e-01   -22.798  &lt; 2e-16 ***\ndestination_hex939         2.150e+00  1.564e-02   137.431  &lt; 2e-16 ***\ndestination_hex940        -8.528e-01  2.396e-02   -35.587  &lt; 2e-16 ***\ndestination_hex949        -1.052e+00  2.097e-02   -50.167  &lt; 2e-16 ***\ndestination_hex950         7.346e-01  1.602e-02    45.847  &lt; 2e-16 ***\ndestination_hex951         1.558e+00  1.550e-02   100.544  &lt; 2e-16 ***\ndestination_hex952         8.330e-01  1.707e-02    48.804  &lt; 2e-16 ***\ndestination_hex953         2.038e-01  1.747e-02    11.662  &lt; 2e-16 ***\ndestination_hex954        -1.826e+00  2.288e-02   -79.815  &lt; 2e-16 ***\ndestination_hex955         1.041e+00  1.586e-02    65.634  &lt; 2e-16 ***\ndestination_hex956        -4.923e-01  1.776e-02   -27.711  &lt; 2e-16 ***\ndestination_hex957         8.755e-02  1.743e-02     5.023 5.10e-07 ***\ndestination_hex959        -1.791e-02  2.670e-02    -0.671 0.502322    \ndestination_hex961        -1.389e-01  1.934e-02    -7.184 6.79e-13 ***\ndestination_hex962         1.953e+00  1.597e-02   122.271  &lt; 2e-16 ***\ndestination_hex970         3.794e-01  1.643e-02    23.084  &lt; 2e-16 ***\ndestination_hex971         5.063e-01  1.591e-02    31.823  &lt; 2e-16 ***\ndestination_hex972        -4.922e-01  1.676e-02   -29.370  &lt; 2e-16 ***\ndestination_hex974        -6.685e-01  1.845e-02   -36.232  &lt; 2e-16 ***\ndestination_hex975        -1.462e+00  2.211e-02   -66.120  &lt; 2e-16 ***\ndestination_hex976        -7.820e-01  1.887e-02   -41.437  &lt; 2e-16 ***\ndestination_hex977         8.570e-03  1.653e-02     0.519 0.604079    \ndestination_hex978        -2.313e+00  1.867e-02  -123.914  &lt; 2e-16 ***\ndestination_hex982        -4.716e-01  1.864e-02   -25.306  &lt; 2e-16 ***\ndestination_hex983         6.523e+00  1.568e-02   415.948  &lt; 2e-16 ***\ndestination_hex984         4.312e+00  1.576e-02   273.511  &lt; 2e-16 ***\ndestination_hex991         3.163e-01  1.666e-02    18.985  &lt; 2e-16 ***\ndestination_hex992         5.691e-01  1.616e-02    35.205  &lt; 2e-16 ***\ndestination_hex993        -8.934e-01  1.797e-02   -49.718  &lt; 2e-16 ***\ndestination_hex994        -9.205e-01  1.890e-02   -48.707  &lt; 2e-16 ***\ndestination_hex995        -1.523e-01  1.715e-02    -8.877  &lt; 2e-16 ***\ndestination_hex996        -7.979e-01  1.865e-02   -42.782  &lt; 2e-16 ***\ndestination_hex997         1.192e-02  2.005e-02     0.595 0.552145    \ndestination_hex998         3.023e-01  1.631e-02    18.529  &lt; 2e-16 ***\ndestination_hex999        -1.806e+00  1.809e-02   -99.849  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 36749407  on 64061  degrees of freedom\nAIC: 37107754\n\nNumber of Fisher Scoring iterations: 8\n\n\nCode\nCalcRSquared(decSIM$data$trips, decSIM$fitted.values)\n\n\n[1] 0.3667168\n\n\n\n\n\n\nCode\ndocSIM &lt;- glm(formula = trips ~ \n                origin_hex +\n                destination_hex +\n                log(distance),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(docSIM)\n\n\n\nCall:\nglm(formula = trips ~ origin_hex + destination_hex + log(distance), \n    family = poisson(link = \"log\"), data = final_df, na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)         14.3430520  0.0291417   492.182  &lt; 2e-16 ***\norigin_hex1003       2.5903322  0.0250027   103.602  &lt; 2e-16 ***\norigin_hex1004       3.4121753  0.0248683   137.210  &lt; 2e-16 ***\norigin_hex1011      -1.0631114  0.0389378   -27.303  &lt; 2e-16 ***\norigin_hex1012      -0.9093517  0.0402367   -22.600  &lt; 2e-16 ***\norigin_hex1013      -0.2681447  0.0292831    -9.157  &lt; 2e-16 ***\norigin_hex1014       0.3571280  0.0268315    13.310  &lt; 2e-16 ***\norigin_hex1015      -0.4350234  0.0293031   -14.846  &lt; 2e-16 ***\norigin_hex1016       1.3449090  0.0256486    52.436  &lt; 2e-16 ***\norigin_hex1018       1.9062046  0.0266824    71.441  &lt; 2e-16 ***\norigin_hex1019       3.3716162  0.0250505   134.593  &lt; 2e-16 ***\norigin_hex1023       1.5582844  0.0263390    59.163  &lt; 2e-16 ***\norigin_hex1024       2.7831993  0.0250544   111.086  &lt; 2e-16 ***\norigin_hex1025      -1.9083997  0.0549907   -34.704  &lt; 2e-16 ***\norigin_hex1033       0.2592686  0.0270916     9.570  &lt; 2e-16 ***\norigin_hex1034       1.2878808  0.0256506    50.209  &lt; 2e-16 ***\norigin_hex1035       1.8765649  0.0252289    74.382  &lt; 2e-16 ***\norigin_hex1036      -0.1776623  0.0282643    -6.286 3.26e-10 ***\norigin_hex1037       1.1158226  0.0255936    43.598  &lt; 2e-16 ***\norigin_hex1043      -0.0300218  0.0348369    -0.862 0.388808    \norigin_hex1045       2.1788516  0.0250463    86.993  &lt; 2e-16 ***\norigin_hex1046       2.4951748  0.0251481    99.219  &lt; 2e-16 ***\norigin_hex1053       1.6284491  0.0253318    64.285  &lt; 2e-16 ***\norigin_hex1054       0.8661803  0.0258339    33.529  &lt; 2e-16 ***\norigin_hex1055       1.8106460  0.0251866    71.889  &lt; 2e-16 ***\norigin_hex1056       0.7442746  0.0262855    28.315  &lt; 2e-16 ***\norigin_hex1064      -2.9534132  0.2512310   -11.756  &lt; 2e-16 ***\norigin_hex1066       2.2264538  0.0251525    88.518  &lt; 2e-16 ***\norigin_hex1067       2.2719081  0.0255327    88.980  &lt; 2e-16 ***\norigin_hex1074       1.0124600  0.0257866    39.263  &lt; 2e-16 ***\norigin_hex1075       0.4195257  0.0266182    15.761  &lt; 2e-16 ***\norigin_hex1076       0.4962346  0.0261086    19.007  &lt; 2e-16 ***\norigin_hex1077       0.7393112  0.0266156    27.777  &lt; 2e-16 ***\norigin_hex1079       1.8970026  0.0251525    75.420  &lt; 2e-16 ***\norigin_hex1085      -3.6911898  0.1435210   -25.719  &lt; 2e-16 ***\norigin_hex1087       1.7396384  0.0253359    68.663  &lt; 2e-16 ***\norigin_hex1088       0.6057076  0.0273269    22.165  &lt; 2e-16 ***\norigin_hex109       -1.8749565  0.1026963   -18.257  &lt; 2e-16 ***\norigin_hex1094      -1.2556216  0.0501123   -25.056  &lt; 2e-16 ***\norigin_hex1095      -1.4848496  0.0411105   -36.118  &lt; 2e-16 ***\norigin_hex1096       0.7535192  0.0321237    23.457  &lt; 2e-16 ***\norigin_hex1097       2.3105995  0.0249429    92.635  &lt; 2e-16 ***\norigin_hex1098      -0.0103852  0.0305031    -0.340 0.733507    \norigin_hex1099       1.2438856  0.0255498    48.685  &lt; 2e-16 ***\norigin_hex110       -1.3774252  0.0764818   -18.010  &lt; 2e-16 ***\norigin_hex1105      -1.0155910  0.0659078   -15.409  &lt; 2e-16 ***\norigin_hex1106      -2.7238970  0.0949197   -28.697  &lt; 2e-16 ***\norigin_hex1107      -0.8414605  0.0368788   -22.817  &lt; 2e-16 ***\norigin_hex1108       3.9323157  0.0247914   158.616  &lt; 2e-16 ***\norigin_hex1109       1.0371411  0.0267176    38.819  &lt; 2e-16 ***\norigin_hex111        1.7482750  0.0285230    61.293  &lt; 2e-16 ***\norigin_hex1116       0.9125158  0.0260677    35.006  &lt; 2e-16 ***\norigin_hex1117      -0.6400039  0.0302084   -21.186  &lt; 2e-16 ***\norigin_hex1118      -0.5765555  0.0311796   -18.491  &lt; 2e-16 ***\norigin_hex1119       0.6842023  0.0264703    25.848  &lt; 2e-16 ***\norigin_hex112       -2.6052716  0.0691053   -37.700  &lt; 2e-16 ***\norigin_hex1120       0.5676771  0.0278991    20.348  &lt; 2e-16 ***\norigin_hex1129       1.9758544  0.0251287    78.629  &lt; 2e-16 ***\norigin_hex1130       2.4369687  0.0249925    97.508  &lt; 2e-16 ***\norigin_hex1131       0.9668029  0.0267147    36.190  &lt; 2e-16 ***\norigin_hex1136      -0.4742722  0.0289742   -16.369  &lt; 2e-16 ***\norigin_hex1138      -1.0970718  0.0378298   -29.000  &lt; 2e-16 ***\norigin_hex1139       1.3482846  0.0252012    53.501  &lt; 2e-16 ***\norigin_hex1141       1.4379921  0.0254250    56.558  &lt; 2e-16 ***\norigin_hex1148      -1.2060430  0.0571182   -21.115  &lt; 2e-16 ***\norigin_hex1149       0.2361057  0.0300643     7.853 4.05e-15 ***\norigin_hex1150       2.7846279  0.0249352   111.675  &lt; 2e-16 ***\norigin_hex1151       0.7362468  0.0255392    28.828  &lt; 2e-16 ***\norigin_hex1158      -0.3968568  0.0270501   -14.671  &lt; 2e-16 ***\norigin_hex1159       1.2628707  0.0253060    49.904  &lt; 2e-16 ***\norigin_hex1160       2.3290710  0.0249504    93.348  &lt; 2e-16 ***\norigin_hex1171       3.1851005  0.0249958   127.426  &lt; 2e-16 ***\norigin_hex1172       3.0491950  0.0249922   122.006  &lt; 2e-16 ***\norigin_hex1173       0.0559008  0.0276637     2.021 0.043308 *  \norigin_hex1174      -3.2792088  0.2684651   -12.215  &lt; 2e-16 ***\norigin_hex1178      -0.0174636  0.0267319    -0.653 0.513571    \norigin_hex1179       0.8191122  0.0255933    32.005  &lt; 2e-16 ***\norigin_hex1180       1.8611961  0.0250428    74.321  &lt; 2e-16 ***\norigin_hex1181       1.1944927  0.0255105    46.824  &lt; 2e-16 ***\norigin_hex1183       0.3118311  0.0272599    11.439  &lt; 2e-16 ***\norigin_hex1190      -0.6994399  0.0537874   -13.004  &lt; 2e-16 ***\norigin_hex1192       2.0980558  0.0254522    82.431  &lt; 2e-16 ***\norigin_hex1193       1.9974185  0.0252239    79.187  &lt; 2e-16 ***\norigin_hex1194       0.0987029  0.0283260     3.485 0.000493 ***\norigin_hex1200       0.8826503  0.0255725    34.516  &lt; 2e-16 ***\norigin_hex1201       0.7807828  0.0256612    30.427  &lt; 2e-16 ***\norigin_hex1203       1.6163213  0.0253599    63.735  &lt; 2e-16 ***\norigin_hex1204       1.2349564  0.0255866    48.266  &lt; 2e-16 ***\norigin_hex1211      -1.2695417  0.0924841   -13.727  &lt; 2e-16 ***\norigin_hex1214       2.7376752  0.0250338   109.359  &lt; 2e-16 ***\norigin_hex1215      -0.8350641  0.0467435   -17.865  &lt; 2e-16 ***\norigin_hex1216      -1.5932564  0.0473398   -33.656  &lt; 2e-16 ***\norigin_hex1220       2.0629601  0.0250126    82.477  &lt; 2e-16 ***\norigin_hex1221       1.4896282  0.0250907    59.370  &lt; 2e-16 ***\norigin_hex1222       1.2674748  0.0265280    47.779  &lt; 2e-16 ***\norigin_hex1223      -0.4107184  0.0297633   -13.800  &lt; 2e-16 ***\norigin_hex1224       0.4174536  0.0268419    15.552  &lt; 2e-16 ***\norigin_hex1231      -3.4578881  0.1905817   -18.144  &lt; 2e-16 ***\norigin_hex1232      -1.7274527  0.1144803   -15.090  &lt; 2e-16 ***\norigin_hex1235       0.2406004  0.0282482     8.517  &lt; 2e-16 ***\norigin_hex1236       0.1565051  0.0282595     5.538 3.06e-08 ***\norigin_hex1241       0.1614794  0.0266177     6.067 1.31e-09 ***\norigin_hex1242       0.6614770  0.0255971    25.842  &lt; 2e-16 ***\norigin_hex1243       1.4665244  0.0251524    58.306  &lt; 2e-16 ***\norigin_hex1246       0.4731864  0.0263069    17.987  &lt; 2e-16 ***\norigin_hex1256       1.6729618  0.0259482    64.473  &lt; 2e-16 ***\norigin_hex1257       2.5964352  0.0252632   102.775  &lt; 2e-16 ***\norigin_hex1258       0.2954063  0.0286189    10.322  &lt; 2e-16 ***\norigin_hex1262       0.6916878  0.0260014    26.602  &lt; 2e-16 ***\norigin_hex1263       1.0363958  0.0252272    41.083  &lt; 2e-16 ***\norigin_hex1264       0.3436661  0.0273355    12.572  &lt; 2e-16 ***\norigin_hex1265      -0.1688271  0.0283523    -5.955 2.61e-09 ***\norigin_hex1266       1.1886330  0.0258505    45.981  &lt; 2e-16 ***\norigin_hex1267      -0.8241729  0.0364288   -22.624  &lt; 2e-16 ***\norigin_hex1272      -3.0243630  0.1180921   -25.610  &lt; 2e-16 ***\norigin_hex1273       0.9380934  0.0273402    34.312  &lt; 2e-16 ***\norigin_hex1277       2.5447438  0.0250284   101.674  &lt; 2e-16 ***\norigin_hex1278      -0.0548415  0.0282598    -1.941 0.052304 .  \norigin_hex128        0.4983129  0.0402788    12.372  &lt; 2e-16 ***\norigin_hex1283       2.3719219  0.0249639    95.014  &lt; 2e-16 ***\norigin_hex1284       1.4849357  0.0251401    59.066  &lt; 2e-16 ***\norigin_hex1285       2.1536213  0.0249155    86.437  &lt; 2e-16 ***\norigin_hex1286       0.4718853  0.0266565    17.702  &lt; 2e-16 ***\norigin_hex1289      -1.3661089  0.0523371   -26.102  &lt; 2e-16 ***\norigin_hex129       -2.1870574  0.1912998   -11.433  &lt; 2e-16 ***\norigin_hex1293      -3.0362270  0.0924779   -32.832  &lt; 2e-16 ***\norigin_hex1294       2.4407838  0.0253287    96.364  &lt; 2e-16 ***\norigin_hex1295      -0.0413929  0.0321284    -1.288 0.197620    \norigin_hex1298       1.6076405  0.0255251    62.983  &lt; 2e-16 ***\norigin_hex1299       1.9507024  0.0254509    76.646  &lt; 2e-16 ***\norigin_hex130       -2.2665276  0.0660662   -34.307  &lt; 2e-16 ***\norigin_hex1304       2.2216511  0.0249831    88.926  &lt; 2e-16 ***\norigin_hex1305       1.4955437  0.0250307    59.748  &lt; 2e-16 ***\norigin_hex1307      -1.7027141  0.0449582   -37.873  &lt; 2e-16 ***\norigin_hex1308       1.2818625  0.0254231    50.421  &lt; 2e-16 ***\norigin_hex131       -1.5232337  0.0437542   -34.813  &lt; 2e-16 ***\norigin_hex1310      -2.6105754  0.1371167   -19.039  &lt; 2e-16 ***\norigin_hex1316      -1.0606751  0.0412950   -25.685  &lt; 2e-16 ***\norigin_hex1317       0.4562378  0.0270864    16.844  &lt; 2e-16 ***\norigin_hex1318       0.0069986  0.0290307     0.241 0.809496    \norigin_hex1319       2.7426097  0.0249942   109.730  &lt; 2e-16 ***\norigin_hex132       -1.9791281  0.0546229   -36.233  &lt; 2e-16 ***\norigin_hex1320       1.4778627  0.0262307    56.341  &lt; 2e-16 ***\norigin_hex1325      -0.2112466  0.0275514    -7.667 1.76e-14 ***\norigin_hex1326       1.6965323  0.0250218    67.802  &lt; 2e-16 ***\norigin_hex1327       1.5666456  0.0250899    62.441  &lt; 2e-16 ***\norigin_hex1328       0.3551687  0.0263957    13.456  &lt; 2e-16 ***\norigin_hex1329       0.5467980  0.0272457    20.069  &lt; 2e-16 ***\norigin_hex133       -1.3865798  0.0454571   -30.503  &lt; 2e-16 ***\norigin_hex1330       0.2395731  0.0261921     9.147  &lt; 2e-16 ***\norigin_hex1331      -3.3408762  0.3025464   -11.043  &lt; 2e-16 ***\norigin_hex1333       0.3418904  0.0276452    12.367  &lt; 2e-16 ***\norigin_hex1334       0.6357777  0.0273107    23.279  &lt; 2e-16 ***\norigin_hex1335       0.3009877  0.0298548    10.082  &lt; 2e-16 ***\norigin_hex1336      -2.5717095  0.1100441   -23.370  &lt; 2e-16 ***\norigin_hex1337      -2.2005122  0.0546102   -40.295  &lt; 2e-16 ***\norigin_hex1338      -2.9076901  0.0850588   -34.184  &lt; 2e-16 ***\norigin_hex1339       2.8648024  0.0249429   114.854  &lt; 2e-16 ***\norigin_hex134        1.0813931  0.0376397    28.730  &lt; 2e-16 ***\norigin_hex1340       1.1860083  0.0262177    45.237  &lt; 2e-16 ***\norigin_hex1341      -4.5965220  0.7075408    -6.496 8.22e-11 ***\norigin_hex1346       1.5485808  0.0254218    60.915  &lt; 2e-16 ***\norigin_hex1347       2.4078050  0.0249199    96.622  &lt; 2e-16 ***\norigin_hex1348       0.8715209  0.0254454    34.251  &lt; 2e-16 ***\norigin_hex1349       0.5668537  0.0259618    21.834  &lt; 2e-16 ***\norigin_hex1350       0.7820028  0.0270532    28.906  &lt; 2e-16 ***\norigin_hex1353       0.3446533  0.0267027    12.907  &lt; 2e-16 ***\norigin_hex1354       0.3499215  0.0276138    12.672  &lt; 2e-16 ***\norigin_hex1355       1.1577635  0.0260891    44.377  &lt; 2e-16 ***\norigin_hex1357       0.1813423  0.0309432     5.860 4.61e-09 ***\norigin_hex1358       1.5114503  0.0256918    58.830  &lt; 2e-16 ***\norigin_hex1359       1.9540290  0.0252074    77.518  &lt; 2e-16 ***\norigin_hex1360       1.8999290  0.0252469    75.254  &lt; 2e-16 ***\norigin_hex1361       3.0060797  0.0250238   120.129  &lt; 2e-16 ***\norigin_hex1362      -1.1275824  0.0515010   -21.894  &lt; 2e-16 ***\norigin_hex1368       0.4253016  0.0260629    16.318  &lt; 2e-16 ***\norigin_hex1369       0.1753763  0.0261345     6.711 1.94e-11 ***\norigin_hex1370       1.2074643  0.0251840    47.946  &lt; 2e-16 ***\norigin_hex1371       0.6274363  0.0265621    23.622  &lt; 2e-16 ***\norigin_hex1372      -0.1897837  0.0279162    -6.798 1.06e-11 ***\norigin_hex1373      -1.8255495  0.0527438   -34.612  &lt; 2e-16 ***\norigin_hex1374       0.3466699  0.0291109    11.909  &lt; 2e-16 ***\norigin_hex1375       1.5853201  0.0259236    61.154  &lt; 2e-16 ***\norigin_hex1376       1.0050971  0.0276080    36.406  &lt; 2e-16 ***\norigin_hex1379      -1.3833919  0.0423682   -32.652  &lt; 2e-16 ***\norigin_hex1380       3.2101733  0.0248615   129.122  &lt; 2e-16 ***\norigin_hex1381       2.7504830  0.0249561   110.213  &lt; 2e-16 ***\norigin_hex1382       2.2572616  0.0254612    88.655  &lt; 2e-16 ***\norigin_hex1383      -0.3287207  0.0344664    -9.537  &lt; 2e-16 ***\norigin_hex1388       0.9110740  0.0255151    35.707  &lt; 2e-16 ***\norigin_hex1389       0.1734620  0.0262105     6.618 3.64e-11 ***\norigin_hex1390       0.6207525  0.0255732    24.274  &lt; 2e-16 ***\norigin_hex1391       0.6796850  0.0260289    26.113  &lt; 2e-16 ***\norigin_hex1392       0.0925966  0.0292964     3.161 0.001574 ** \norigin_hex1393      -0.6789458  0.0288651   -23.521  &lt; 2e-16 ***\norigin_hex1394       0.7593429  0.0258010    29.431  &lt; 2e-16 ***\norigin_hex1395       0.8399271  0.0258738    32.463  &lt; 2e-16 ***\norigin_hex1396       2.0996383  0.0251811    83.382  &lt; 2e-16 ***\norigin_hex1397       1.8367623  0.0252335    72.791  &lt; 2e-16 ***\norigin_hex1398       0.8641199  0.0269634    32.048  &lt; 2e-16 ***\norigin_hex1400       2.1179364  0.0255296    82.960  &lt; 2e-16 ***\norigin_hex1401       2.2053815  0.0249878    88.258  &lt; 2e-16 ***\norigin_hex1402       2.4637052  0.0250623    98.303  &lt; 2e-16 ***\norigin_hex1404       2.7503971  0.0289917    94.868  &lt; 2e-16 ***\norigin_hex1410       1.2795883  0.0250753    51.030  &lt; 2e-16 ***\norigin_hex1411       0.5634369  0.0259276    21.731  &lt; 2e-16 ***\norigin_hex1412       0.7170133  0.0254551    28.168  &lt; 2e-16 ***\norigin_hex1413       1.4960962  0.0251404    59.510  &lt; 2e-16 ***\norigin_hex1414       0.4051654  0.0255140    15.880  &lt; 2e-16 ***\norigin_hex1415       0.3108508  0.0263366    11.803  &lt; 2e-16 ***\norigin_hex1416       1.1210642  0.0257160    43.594  &lt; 2e-16 ***\norigin_hex1417       1.1702158  0.0254934    45.903  &lt; 2e-16 ***\norigin_hex1418       1.9644864  0.0251512    78.107  &lt; 2e-16 ***\norigin_hex1419       1.3157300  0.0255201    51.557  &lt; 2e-16 ***\norigin_hex1422       2.6925288  0.0251831   106.918  &lt; 2e-16 ***\norigin_hex1423       3.4189686  0.0249263   137.163  &lt; 2e-16 ***\norigin_hex1430       1.0514550  0.0253580    41.464  &lt; 2e-16 ***\norigin_hex1431       1.2734648  0.0251419    50.651  &lt; 2e-16 ***\norigin_hex1432       1.2886061  0.0251311    51.275  &lt; 2e-16 ***\norigin_hex1433      -0.2074512  0.0293454    -7.069 1.56e-12 ***\norigin_hex1434       1.2736529  0.0252761    50.390  &lt; 2e-16 ***\norigin_hex1435       1.7311743  0.0250014    69.243  &lt; 2e-16 ***\norigin_hex1436      -1.1681736  0.0333824   -34.994  &lt; 2e-16 ***\norigin_hex1437       2.0521918  0.0250484    81.929  &lt; 2e-16 ***\norigin_hex1438       2.3632475  0.0248966    94.922  &lt; 2e-16 ***\norigin_hex1439       2.9680276  0.0248405   119.484  &lt; 2e-16 ***\norigin_hex1440      -0.9100881  0.0318606   -28.565  &lt; 2e-16 ***\norigin_hex1442       2.2814707  0.0255389    89.333  &lt; 2e-16 ***\norigin_hex1443       3.4590638  0.0249623   138.572  &lt; 2e-16 ***\norigin_hex1444       2.3178575  0.0257460    90.028  &lt; 2e-16 ***\norigin_hex1452       0.1493329  0.0258263     5.782 7.37e-09 ***\norigin_hex1453       0.6800212  0.0255530    26.612  &lt; 2e-16 ***\norigin_hex1454      -0.6561630  0.0306316   -21.421  &lt; 2e-16 ***\norigin_hex1455       0.8884835  0.0259563    34.230  &lt; 2e-16 ***\norigin_hex1456       1.2274465  0.0253686    48.385  &lt; 2e-16 ***\norigin_hex1457       2.1437489  0.0250085    85.721  &lt; 2e-16 ***\norigin_hex1458       2.3048084  0.0249449    92.396  &lt; 2e-16 ***\norigin_hex1459       1.7566986  0.0250942    70.004  &lt; 2e-16 ***\norigin_hex1460       1.1063627  0.0254352    43.497  &lt; 2e-16 ***\norigin_hex1461      -0.3894955  0.0297510   -13.092  &lt; 2e-16 ***\norigin_hex1464       3.5171023  0.0249365   141.042  &lt; 2e-16 ***\norigin_hex1465       3.0717497  0.0251214   122.276  &lt; 2e-16 ***\norigin_hex1472      -0.9813180  0.0310765   -31.578  &lt; 2e-16 ***\norigin_hex1473      -0.1579978  0.0264956    -5.963 2.47e-09 ***\norigin_hex1474       0.8192156  0.0252325    32.467  &lt; 2e-16 ***\norigin_hex1475       1.9699440  0.0250063    78.778  &lt; 2e-16 ***\norigin_hex1476       1.2879781  0.0254203    50.667  &lt; 2e-16 ***\norigin_hex1477       2.6826958  0.0248258   108.061  &lt; 2e-16 ***\norigin_hex1478       0.9547368  0.0254565    37.505  &lt; 2e-16 ***\norigin_hex1479       1.3026834  0.0253077    51.474  &lt; 2e-16 ***\norigin_hex1480       3.0073957  0.0248079   121.227  &lt; 2e-16 ***\norigin_hex1481       0.2955533  0.0265930    11.114  &lt; 2e-16 ***\norigin_hex1482       0.3839474  0.0277050    13.858  &lt; 2e-16 ***\norigin_hex1485       3.1671805  0.0251434   125.965  &lt; 2e-16 ***\norigin_hex1494       0.2718640  0.0272672     9.970  &lt; 2e-16 ***\norigin_hex1495       0.4178422  0.0258394    16.171  &lt; 2e-16 ***\norigin_hex1496       0.5838273  0.0251450    23.218  &lt; 2e-16 ***\norigin_hex1497       1.6676448  0.0251850    66.216  &lt; 2e-16 ***\norigin_hex1498       2.0378140  0.0249916    81.540  &lt; 2e-16 ***\norigin_hex1499       2.1735035  0.0249285    87.189  &lt; 2e-16 ***\norigin_hex150        1.5928125  0.0338165    47.102  &lt; 2e-16 ***\norigin_hex1500       2.1318376  0.0252291    84.499  &lt; 2e-16 ***\norigin_hex1501       2.3611720  0.0249308    94.709  &lt; 2e-16 ***\norigin_hex1502       1.7321435  0.0250960    69.021  &lt; 2e-16 ***\norigin_hex1506      -2.3619448  0.1112605   -21.229  &lt; 2e-16 ***\norigin_hex151       -1.5004188  0.0648893   -23.123  &lt; 2e-16 ***\norigin_hex1515      -0.7592251  0.0324455   -23.400  &lt; 2e-16 ***\norigin_hex1516      -0.3169966  0.0255788   -12.393  &lt; 2e-16 ***\norigin_hex1517       1.0542688  0.0255475    41.267  &lt; 2e-16 ***\norigin_hex1518       0.9615910  0.0256936    37.425  &lt; 2e-16 ***\norigin_hex1519       2.1221945  0.0251511    84.378  &lt; 2e-16 ***\norigin_hex152       -1.5909415  0.0855129   -18.605  &lt; 2e-16 ***\norigin_hex1520       0.9274652  0.0255746    36.265  &lt; 2e-16 ***\norigin_hex1521       0.1967295  0.0269384     7.303 2.82e-13 ***\norigin_hex1522       2.5820203  0.0249018   103.688  &lt; 2e-16 ***\norigin_hex1523       0.8292233  0.0288083    28.784  &lt; 2e-16 ***\norigin_hex1524       1.2882669  0.0262739    49.032  &lt; 2e-16 ***\norigin_hex1527       0.9576001  0.0293424    32.635  &lt; 2e-16 ***\norigin_hex153       -2.0115324  0.0501118   -40.141  &lt; 2e-16 ***\norigin_hex1535      -1.4703274  0.0778653   -18.883  &lt; 2e-16 ***\norigin_hex1536      -1.2704347  0.0407747   -31.157  &lt; 2e-16 ***\norigin_hex1537      -0.7171926  0.0291269   -24.623  &lt; 2e-16 ***\norigin_hex1538       0.8955735  0.0253638    35.309  &lt; 2e-16 ***\norigin_hex1539       1.3155969  0.0251550    52.300  &lt; 2e-16 ***\norigin_hex154        1.6163666  0.0271298    59.579  &lt; 2e-16 ***\norigin_hex1540       1.8771968  0.0250235    75.017  &lt; 2e-16 ***\norigin_hex1541       2.3885308  0.0252251    94.689  &lt; 2e-16 ***\norigin_hex1542       0.0131479  0.0285222     0.461 0.644820    \norigin_hex1543       0.7285350  0.0315312    23.105  &lt; 2e-16 ***\norigin_hex1544       1.4013250  0.0254794    54.998  &lt; 2e-16 ***\norigin_hex1547      -1.3946111  0.0628364   -22.194  &lt; 2e-16 ***\norigin_hex155       -1.2458033  0.0414166   -30.080  &lt; 2e-16 ***\norigin_hex1556      -0.8095600  0.0645234   -12.547  &lt; 2e-16 ***\norigin_hex1557      -1.4211076  0.0394367   -36.035  &lt; 2e-16 ***\norigin_hex1558      -0.0113283  0.0302713    -0.374 0.708237    \norigin_hex1559       1.4586106  0.0250883    58.139  &lt; 2e-16 ***\norigin_hex156       -0.2762719  0.0464198    -5.952 2.66e-09 ***\norigin_hex1560       2.3456494  0.0249085    94.171  &lt; 2e-16 ***\norigin_hex1561       2.1125912  0.0250684    84.273  &lt; 2e-16 ***\norigin_hex1562      -0.8957776  0.0311334   -28.772  &lt; 2e-16 ***\norigin_hex1563       0.8278771  0.0256430    32.285  &lt; 2e-16 ***\norigin_hex1564       0.1161516  0.0276925     4.194 2.74e-05 ***\norigin_hex1565       0.0287935  0.0279967     1.028 0.303735    \norigin_hex1566      -0.1439264  0.0312250    -4.609 4.04e-06 ***\norigin_hex1567      -2.0955498  0.0804019   -26.063  &lt; 2e-16 ***\norigin_hex1568      -1.0929263  0.0660382   -16.550  &lt; 2e-16 ***\norigin_hex1578      -3.7265116  0.7075723    -5.267 1.39e-07 ***\norigin_hex1580      -0.0904396  0.0287598    -3.145 0.001663 ** \norigin_hex1581      -1.2195735  0.0314668   -38.757  &lt; 2e-16 ***\norigin_hex1582       1.8417223  0.0249469    73.826  &lt; 2e-16 ***\norigin_hex1583      -0.5054316  0.0317589   -15.915  &lt; 2e-16 ***\norigin_hex1584       0.3977684  0.0265544    14.979  &lt; 2e-16 ***\norigin_hex1585       1.2198772  0.0261641    46.624  &lt; 2e-16 ***\norigin_hex1586       0.1637462  0.0274063     5.975 2.30e-09 ***\norigin_hex1589      -2.7617885  0.1145259   -24.115  &lt; 2e-16 ***\norigin_hex1590      -1.1981588  0.0625560   -19.153  &lt; 2e-16 ***\norigin_hex1600       1.9032722  0.0266106    71.523  &lt; 2e-16 ***\norigin_hex1601       0.3432527  0.0256897    13.361  &lt; 2e-16 ***\norigin_hex1602       1.4341786  0.0253309    56.618  &lt; 2e-16 ***\norigin_hex1603       1.8924183  0.0249667    75.798  &lt; 2e-16 ***\norigin_hex1604       0.7484161  0.0257747    29.037  &lt; 2e-16 ***\norigin_hex1605       1.7007606  0.0250027    68.023  &lt; 2e-16 ***\norigin_hex1606       1.6970394  0.0262087    64.751  &lt; 2e-16 ***\norigin_hex1607       0.5983350  0.0263000    22.750  &lt; 2e-16 ***\norigin_hex1608       2.7355650  0.0250304   109.290  &lt; 2e-16 ***\norigin_hex1609       2.4808691  0.0252521    98.244  &lt; 2e-16 ***\norigin_hex1610      -0.9194034  0.0670438   -13.713  &lt; 2e-16 ***\norigin_hex1622       0.9705860  0.0320628    30.271  &lt; 2e-16 ***\norigin_hex1623       1.8849570  0.0249712    75.485  &lt; 2e-16 ***\norigin_hex1624       0.7452920  0.0258760    28.802  &lt; 2e-16 ***\norigin_hex1625       2.0780321  0.0250571    82.932  &lt; 2e-16 ***\norigin_hex1626       2.6755694  0.0248710   107.578  &lt; 2e-16 ***\norigin_hex1627       1.1794210  0.0255534    46.155  &lt; 2e-16 ***\norigin_hex1628       2.7825871  0.0248883   111.803  &lt; 2e-16 ***\norigin_hex1629       1.7674555  0.0255377    69.210  &lt; 2e-16 ***\norigin_hex1630       1.6765917  0.0258368    64.892  &lt; 2e-16 ***\norigin_hex1631      -1.6456701  0.0641336   -25.660  &lt; 2e-16 ***\norigin_hex1642      -0.6915522  0.0369280   -18.727  &lt; 2e-16 ***\norigin_hex1643       1.8978753  0.0250269    75.833  &lt; 2e-16 ***\norigin_hex1644      -0.1330742  0.0292804    -4.545 5.50e-06 ***\norigin_hex1645       1.1274112  0.0253427    44.487  &lt; 2e-16 ***\norigin_hex1646       1.1283863  0.0260826    43.262  &lt; 2e-16 ***\norigin_hex1647       1.2649984  0.0252557    50.088  &lt; 2e-16 ***\norigin_hex1648       1.9418327  0.0250806    77.424  &lt; 2e-16 ***\norigin_hex1649       2.6823705  0.0249194   107.642  &lt; 2e-16 ***\norigin_hex1650       2.7290278  0.0251929   108.325  &lt; 2e-16 ***\norigin_hex1664      -3.2937067  0.1686522   -19.530  &lt; 2e-16 ***\norigin_hex1665       2.0671203  0.0249553    82.833  &lt; 2e-16 ***\norigin_hex1666       0.8330536  0.0255556    32.598  &lt; 2e-16 ***\norigin_hex1667       1.8369642  0.0267109    68.772  &lt; 2e-16 ***\norigin_hex1668       1.9861343  0.0250672    79.232  &lt; 2e-16 ***\norigin_hex1670       2.6940504  0.0248829   108.269  &lt; 2e-16 ***\norigin_hex1671       3.2131876  0.0251841   127.588  &lt; 2e-16 ***\norigin_hex1672       2.8932691  0.0253282   114.231  &lt; 2e-16 ***\norigin_hex1684       1.0605664  0.0272982    38.851  &lt; 2e-16 ***\norigin_hex1685       1.6732544  0.0251923    66.419  &lt; 2e-16 ***\norigin_hex1686       1.5647060  0.0252002    62.091  &lt; 2e-16 ***\norigin_hex1687       1.1229489  0.0256742    43.738  &lt; 2e-16 ***\norigin_hex1688       0.7111459  0.0259463    27.408  &lt; 2e-16 ***\norigin_hex1689       0.2004757  0.0273515     7.330 2.31e-13 ***\norigin_hex1690       1.5650946  0.0254636    61.464  &lt; 2e-16 ***\norigin_hex1691       2.3819638  0.0250297    95.166  &lt; 2e-16 ***\norigin_hex1692       1.8603529  0.0258838    71.873  &lt; 2e-16 ***\norigin_hex1706       1.6412057  0.0253844    64.654  &lt; 2e-16 ***\norigin_hex1707       1.4243946  0.0251344    56.671  &lt; 2e-16 ***\norigin_hex1708       2.0225996  0.0249800    80.969  &lt; 2e-16 ***\norigin_hex1709       1.1132918  0.0254907    43.674  &lt; 2e-16 ***\norigin_hex1710       2.3390241  0.0249943    93.582  &lt; 2e-16 ***\norigin_hex1711       2.0296225  0.0251276    80.773  &lt; 2e-16 ***\norigin_hex1712       2.7055199  0.0248806   108.740  &lt; 2e-16 ***\norigin_hex1713       0.3656763  0.0275295    13.283  &lt; 2e-16 ***\norigin_hex1714       2.8628437  0.0250793   114.152  &lt; 2e-16 ***\norigin_hex172       -0.1125550  0.0805131    -1.398 0.162122    \norigin_hex1727       1.7605036  0.0251810    69.914  &lt; 2e-16 ***\norigin_hex1728       1.6779836  0.0250978    66.858  &lt; 2e-16 ***\norigin_hex1729       1.1527533  0.0252665    45.624  &lt; 2e-16 ***\norigin_hex1730      -0.7888819  0.0317383   -24.856  &lt; 2e-16 ***\norigin_hex1731       1.6346244  0.0252284    64.793  &lt; 2e-16 ***\norigin_hex1732       2.4490376  0.0249216    98.270  &lt; 2e-16 ***\norigin_hex1733       2.0998771  0.0250504    83.826  &lt; 2e-16 ***\norigin_hex1734       2.3080311  0.0250290    92.214  &lt; 2e-16 ***\norigin_hex1735       3.6620302  0.0254845   143.696  &lt; 2e-16 ***\norigin_hex174       -2.5352929  0.0540534   -46.903  &lt; 2e-16 ***\norigin_hex1748       0.3247978  0.0263314    12.335  &lt; 2e-16 ***\norigin_hex1749       1.4189008  0.0251436    56.432  &lt; 2e-16 ***\norigin_hex175        0.6621930  0.0278931    23.740  &lt; 2e-16 ***\norigin_hex1750       0.6401362  0.0256647    24.942  &lt; 2e-16 ***\norigin_hex1751       0.0208282  0.0268009     0.777 0.437072    \norigin_hex1753       2.2596340  0.0249608    90.527  &lt; 2e-16 ***\norigin_hex1754       2.7505516  0.0248772   110.565  &lt; 2e-16 ***\norigin_hex1755       2.1967435  0.0250406    87.727  &lt; 2e-16 ***\norigin_hex1756       2.1287341  0.0252193    84.409  &lt; 2e-16 ***\norigin_hex1757       0.1936952  0.0348672     5.555 2.77e-08 ***\norigin_hex176        2.0766525  0.0260606    79.685  &lt; 2e-16 ***\norigin_hex1769       1.3306814  0.0252998    52.597  &lt; 2e-16 ***\norigin_hex1770       0.9335395  0.0264543    35.289  &lt; 2e-16 ***\norigin_hex1771      -0.0088957  0.0265801    -0.335 0.737869    \norigin_hex1772      -1.0562745  0.0343155   -30.781  &lt; 2e-16 ***\norigin_hex1774       2.2019279  0.0250192    88.009  &lt; 2e-16 ***\norigin_hex1775       1.7357122  0.0252383    68.773  &lt; 2e-16 ***\norigin_hex1776       2.8744247  0.0248945   115.464  &lt; 2e-16 ***\norigin_hex1777       3.0592795  0.0249808   122.465  &lt; 2e-16 ***\norigin_hex1778       2.6122655  0.0266236    98.119  &lt; 2e-16 ***\norigin_hex1790       1.9756985  0.0251224    78.643  &lt; 2e-16 ***\norigin_hex1791       1.1818428  0.0254413    46.454  &lt; 2e-16 ***\norigin_hex1792       1.4171568  0.0255102    55.552  &lt; 2e-16 ***\norigin_hex1793      -0.7473075  0.0280749   -26.618  &lt; 2e-16 ***\norigin_hex1794      -1.2341257  0.0371927   -33.182  &lt; 2e-16 ***\norigin_hex1795      -1.2947082  0.0410025   -31.576  &lt; 2e-16 ***\norigin_hex1796       2.5796856  0.0250089   103.151  &lt; 2e-16 ***\norigin_hex1797       2.6099445  0.0249615   104.559  &lt; 2e-16 ***\norigin_hex1798       2.7252000  0.0249654   109.159  &lt; 2e-16 ***\norigin_hex1799       1.5640868  0.0260196    60.112  &lt; 2e-16 ***\norigin_hex1800       0.4966604  0.0375769    13.217  &lt; 2e-16 ***\norigin_hex1811       1.1030075  0.0256916    42.933  &lt; 2e-16 ***\norigin_hex1812       2.2308013  0.0249187    89.523  &lt; 2e-16 ***\norigin_hex1813       1.9073687  0.0249726    76.379  &lt; 2e-16 ***\norigin_hex1817       2.3522082  0.0252090    93.308  &lt; 2e-16 ***\norigin_hex1818       2.5391851  0.0250442   101.388  &lt; 2e-16 ***\norigin_hex1819       3.0246644  0.0249369   121.293  &lt; 2e-16 ***\norigin_hex1820      -0.1233590  0.0422744    -2.918 0.003522 ** \norigin_hex1832       1.8039645  0.0252001    71.586  &lt; 2e-16 ***\norigin_hex1833       1.4155688  0.0253471    55.847  &lt; 2e-16 ***\norigin_hex1834       1.6011804  0.0250836    63.834  &lt; 2e-16 ***\norigin_hex1835       0.9065157  0.0257114    35.257  &lt; 2e-16 ***\norigin_hex1837      -2.0385385  0.0657687   -30.996  &lt; 2e-16 ***\norigin_hex1839       2.1396397  0.0255111    83.871  &lt; 2e-16 ***\norigin_hex1840       3.7753514  0.0248210   152.103  &lt; 2e-16 ***\norigin_hex1841      -0.4034219  0.0423848    -9.518  &lt; 2e-16 ***\norigin_hex1842       3.2692673  0.0269510   121.304  &lt; 2e-16 ***\norigin_hex1853       1.6955746  0.0251436    67.436  &lt; 2e-16 ***\norigin_hex1854       1.9948527  0.0250899    79.508  &lt; 2e-16 ***\norigin_hex1855       2.2801490  0.0250089    91.174  &lt; 2e-16 ***\norigin_hex1858       0.0203325  0.0353483     0.575 0.565153    \norigin_hex1860       3.3934607  0.0260495   130.270  &lt; 2e-16 ***\norigin_hex1861       2.4262970  0.0250933    96.691  &lt; 2e-16 ***\norigin_hex1874       2.0085929  0.0253648    79.188  &lt; 2e-16 ***\norigin_hex1875       0.1139840  0.0276250     4.126 3.69e-05 ***\norigin_hex1876       2.3129829  0.0267083    86.602  &lt; 2e-16 ***\norigin_hex1877       1.8761921  0.0251139    74.707  &lt; 2e-16 ***\norigin_hex1880      -1.5098766  0.0563834   -26.779  &lt; 2e-16 ***\norigin_hex1882       2.6159508  0.0251376   104.065  &lt; 2e-16 ***\norigin_hex1883       2.8973496  0.0261998   110.587  &lt; 2e-16 ***\norigin_hex1895       2.0236563  0.0250930    80.646  &lt; 2e-16 ***\norigin_hex1896       0.3154727  0.0264834    11.912  &lt; 2e-16 ***\norigin_hex1897       0.9548835  0.0261997    36.446  &lt; 2e-16 ***\norigin_hex1898      -3.1813914  0.1347557   -23.609  &lt; 2e-16 ***\norigin_hex1901      -1.5517045  0.0638966   -24.285  &lt; 2e-16 ***\norigin_hex1903       1.8929495  0.0261657    72.345  &lt; 2e-16 ***\norigin_hex1917       0.6381010  0.0262294    24.328  &lt; 2e-16 ***\norigin_hex1918       2.4575839  0.0253057    97.116  &lt; 2e-16 ***\norigin_hex1919       1.9298841  0.0251769    76.653  &lt; 2e-16 ***\norigin_hex1922      -0.2950634  0.0375991    -7.848 4.24e-15 ***\norigin_hex1924       1.8034578  0.0263490    68.445  &lt; 2e-16 ***\norigin_hex1937       1.2774075  0.0255479    50.001  &lt; 2e-16 ***\norigin_hex1938       1.8850947  0.0250516    75.248  &lt; 2e-16 ***\norigin_hex1939       2.8494222  0.0249952   113.999  &lt; 2e-16 ***\norigin_hex1942      -1.6806124  0.0531210   -31.637  &lt; 2e-16 ***\norigin_hex195       -2.4704790  0.0850341   -29.053  &lt; 2e-16 ***\norigin_hex1959       0.9482997  0.0260556    36.395  &lt; 2e-16 ***\norigin_hex196       -1.5171420  0.0490463   -30.933  &lt; 2e-16 ***\norigin_hex1960       2.8722302  0.0248322   115.665  &lt; 2e-16 ***\norigin_hex1961       1.3878766  0.0255540    54.312  &lt; 2e-16 ***\norigin_hex1962       2.2180276  0.0250368    88.591  &lt; 2e-16 ***\norigin_hex1964      -2.5091485  0.0915371   -27.411  &lt; 2e-16 ***\norigin_hex197       -2.0946115  0.1127635   -18.575  &lt; 2e-16 ***\norigin_hex1979       1.1680235  0.0258177    45.241  &lt; 2e-16 ***\norigin_hex1980      -0.6666170  0.0281328   -23.695  &lt; 2e-16 ***\norigin_hex1981       2.0499122  0.0250388    81.869  &lt; 2e-16 ***\norigin_hex1982       1.0021533  0.0268795    37.283  &lt; 2e-16 ***\norigin_hex1983       2.2375554  0.0250437    89.346  &lt; 2e-16 ***\norigin_hex1984       1.0897135  0.0257383    42.338  &lt; 2e-16 ***\norigin_hex1985       1.5753692  0.0254257    61.960  &lt; 2e-16 ***\norigin_hex2001       1.5495666  0.0253231    61.192  &lt; 2e-16 ***\norigin_hex2002       2.0664455  0.0249498    82.824  &lt; 2e-16 ***\norigin_hex2003       1.6995711  0.0251663    67.534  &lt; 2e-16 ***\norigin_hex2004       2.5608430  0.0250126   102.382  &lt; 2e-16 ***\norigin_hex2005       2.3884590  0.0250102    95.499  &lt; 2e-16 ***\norigin_hex2006       0.9733600  0.0262697    37.053  &lt; 2e-16 ***\norigin_hex2007      -0.3053902  0.0292959   -10.424  &lt; 2e-16 ***\norigin_hex2022       1.8561347  0.0253127    73.328  &lt; 2e-16 ***\norigin_hex2023       2.3226631  0.0249371    93.141  &lt; 2e-16 ***\norigin_hex2024       1.7750985  0.0251020    70.715  &lt; 2e-16 ***\norigin_hex2025       1.8924984  0.0250841    75.446  &lt; 2e-16 ***\norigin_hex2026       0.4668340  0.0271821    17.174  &lt; 2e-16 ***\norigin_hex2027       2.6709423  0.0249842   106.905  &lt; 2e-16 ***\norigin_hex2043       1.0942740  0.0257791    42.448  &lt; 2e-16 ***\norigin_hex2044       1.9658649  0.0250159    78.585  &lt; 2e-16 ***\norigin_hex2045      -3.0341643  0.0783753   -38.713  &lt; 2e-16 ***\norigin_hex2046       2.0045183  0.0249643    80.295  &lt; 2e-16 ***\norigin_hex2047       1.7916592  0.0251811    71.151  &lt; 2e-16 ***\norigin_hex2048       2.0942601  0.0250857    83.484  &lt; 2e-16 ***\norigin_hex2049      -1.7376753  0.0284200   -61.143  &lt; 2e-16 ***\norigin_hex2064       2.0542074  0.0251278    81.750  &lt; 2e-16 ***\norigin_hex2065       0.4133106  0.0259954    15.899  &lt; 2e-16 ***\norigin_hex2066       0.2332743  0.0320811     7.271 3.56e-13 ***\norigin_hex2067       3.1381282  0.0248151   126.460  &lt; 2e-16 ***\norigin_hex2068       1.6871573  0.0255712    65.979  &lt; 2e-16 ***\norigin_hex2069       1.7627432  0.0252652    69.770  &lt; 2e-16 ***\norigin_hex2085       0.5502362  0.0263296    20.898  &lt; 2e-16 ***\norigin_hex2086       2.2052759  0.0249937    88.233  &lt; 2e-16 ***\norigin_hex2087       1.0266839  0.0256521    40.023  &lt; 2e-16 ***\norigin_hex2088       1.8007129  0.0250720    71.822  &lt; 2e-16 ***\norigin_hex2089       1.1908155  0.0254962    46.706  &lt; 2e-16 ***\norigin_hex2090       2.8358892  0.0249024   113.880  &lt; 2e-16 ***\norigin_hex2091      -2.6997015  0.0723071   -37.337  &lt; 2e-16 ***\norigin_hex2105      -1.3700732  0.1040112   -13.172  &lt; 2e-16 ***\norigin_hex2106      -0.5705434  0.0309287   -18.447  &lt; 2e-16 ***\norigin_hex2107       0.3121434  0.0262836    11.876  &lt; 2e-16 ***\norigin_hex2108       1.7621918  0.0252380    69.823  &lt; 2e-16 ***\norigin_hex2109       1.3656809  0.0250720    54.470  &lt; 2e-16 ***\norigin_hex2110       1.2995969  0.0256579    50.651  &lt; 2e-16 ***\norigin_hex2111      -1.7423598  0.0463856   -37.563  &lt; 2e-16 ***\norigin_hex2128       0.0434532  0.0278351     1.561 0.118502    \norigin_hex2129      -0.2804246  0.0285459    -9.824  &lt; 2e-16 ***\norigin_hex2130       2.0853799  0.0249933    83.438  &lt; 2e-16 ***\norigin_hex2131       2.1026744  0.0250727    83.863  &lt; 2e-16 ***\norigin_hex2132       1.5337436  0.0253514    60.499  &lt; 2e-16 ***\norigin_hex2148       0.6942954  0.0269803    25.733  &lt; 2e-16 ***\norigin_hex2149      -0.5861300  0.0290710   -20.162  &lt; 2e-16 ***\norigin_hex215       -1.4496231  0.0864291   -16.772  &lt; 2e-16 ***\norigin_hex2150       1.6575101  0.0251479    65.911  &lt; 2e-16 ***\norigin_hex2151       2.4882457  0.0249073    99.900  &lt; 2e-16 ***\norigin_hex2152       2.7187916  0.0249431   109.000  &lt; 2e-16 ***\norigin_hex2153       1.7679409  0.0252786    69.938  &lt; 2e-16 ***\norigin_hex216        2.9492471  0.0259721   113.554  &lt; 2e-16 ***\norigin_hex217       -0.8052628  0.0331182   -24.315  &lt; 2e-16 ***\norigin_hex2171       1.0851265  0.0256530    42.300  &lt; 2e-16 ***\norigin_hex2172       1.5519420  0.0258216    60.103  &lt; 2e-16 ***\norigin_hex2173       1.7258932  0.0251857    68.527  &lt; 2e-16 ***\norigin_hex2174       2.0127024  0.0252008    79.867  &lt; 2e-16 ***\norigin_hex2191       0.6204281  0.0267610    23.184  &lt; 2e-16 ***\norigin_hex2192       0.3756401  0.0268734    13.978  &lt; 2e-16 ***\norigin_hex2193       1.4056656  0.0253843    55.375  &lt; 2e-16 ***\norigin_hex2194       1.7909740  0.0251624    71.177  &lt; 2e-16 ***\norigin_hex2195       1.3151932  0.0317265    41.454  &lt; 2e-16 ***\norigin_hex2212      -1.7789521  0.0836230   -21.273  &lt; 2e-16 ***\norigin_hex2213      -1.7430523  0.0453729   -38.416  &lt; 2e-16 ***\norigin_hex2214      -1.2299517  0.0349757   -35.166  &lt; 2e-16 ***\norigin_hex2215       1.4743349  0.0255994    57.593  &lt; 2e-16 ***\norigin_hex2216       0.5481960  0.0268511    20.416  &lt; 2e-16 ***\norigin_hex2233      -1.5874487  0.0460710   -34.457  &lt; 2e-16 ***\norigin_hex2234      -1.2174328  0.0321721   -37.841  &lt; 2e-16 ***\norigin_hex2235       0.3233091  0.0278865    11.594  &lt; 2e-16 ***\norigin_hex2236       0.1448023  0.0276686     5.233 1.66e-07 ***\norigin_hex2237      -1.7859262  0.0589094   -30.317  &lt; 2e-16 ***\norigin_hex2256      -3.9752920  0.0563301   -70.571  &lt; 2e-16 ***\norigin_hex2257      -0.0972844  0.0308607    -3.152 0.001620 ** \norigin_hex2258      -0.7929278  0.0302930   -26.175  &lt; 2e-16 ***\norigin_hex2259      -1.1162213  0.0432457   -25.811  &lt; 2e-16 ***\norigin_hex2277      -0.3242203  0.0463780    -6.991 2.73e-12 ***\norigin_hex2278       0.6085843  0.0288388    21.103  &lt; 2e-16 ***\norigin_hex2279      -0.7448597  0.0311868   -23.884  &lt; 2e-16 ***\norigin_hex2280      -2.9325861  0.1036302   -28.299  &lt; 2e-16 ***\norigin_hex2297       1.7233281  0.0261552    65.889  &lt; 2e-16 ***\norigin_hex23        -2.0553266  0.1033543   -19.886  &lt; 2e-16 ***\norigin_hex2300      -1.8281005  0.0644228   -28.377  &lt; 2e-16 ***\norigin_hex2301      -0.5032005  0.0307196   -16.380  &lt; 2e-16 ***\norigin_hex2318      -0.0826860  0.0306512    -2.698 0.006983 ** \norigin_hex2319       0.5923877  0.0267453    22.149  &lt; 2e-16 ***\norigin_hex2322       0.5351529  0.0275015    19.459  &lt; 2e-16 ***\norigin_hex2337       1.5573818  0.0299291    52.036  &lt; 2e-16 ***\norigin_hex2341       1.2871881  0.0262751    48.989  &lt; 2e-16 ***\norigin_hex2343       0.0139103  0.0283759     0.490 0.623982    \norigin_hex2361      -0.0026747  0.0269361    -0.099 0.920901    \norigin_hex2364      -2.7004924  0.0690482   -39.110  &lt; 2e-16 ***\norigin_hex237       -2.8710984  0.1582483   -18.143  &lt; 2e-16 ***\norigin_hex2379       0.8519766  0.0316799    26.893  &lt; 2e-16 ***\norigin_hex238       -1.2031069  0.0569249   -21.135  &lt; 2e-16 ***\norigin_hex2384       0.3224301  0.0286278    11.263  &lt; 2e-16 ***\norigin_hex239       -1.9796779  0.1601840   -12.359  &lt; 2e-16 ***\norigin_hex2405      -0.2121042  0.0287121    -7.387 1.50e-13 ***\norigin_hex2406      -1.7077806  0.0413989   -41.252  &lt; 2e-16 ***\norigin_hex2426      -0.3249976  0.0362705    -8.960  &lt; 2e-16 ***\norigin_hex2427       0.4714389  0.0269939    17.465  &lt; 2e-16 ***\norigin_hex2505       0.6723879  0.0443492    15.161  &lt; 2e-16 ***\norigin_hex257       -2.2439028  0.0621331   -36.114  &lt; 2e-16 ***\norigin_hex258       -0.5668883  0.0370469   -15.302  &lt; 2e-16 ***\norigin_hex259       -1.4489027  0.0478306   -30.292  &lt; 2e-16 ***\norigin_hex278       -1.0949131  0.0464025   -23.596  &lt; 2e-16 ***\norigin_hex279       -1.8422408  0.0497338   -37.042  &lt; 2e-16 ***\norigin_hex280       -1.8347489  0.0519875   -35.292  &lt; 2e-16 ***\norigin_hex298       -4.7108653  0.3345373   -14.082  &lt; 2e-16 ***\norigin_hex299       -2.2280707  0.0558070   -39.925  &lt; 2e-16 ***\norigin_hex300        1.5792650  0.0264729    59.656  &lt; 2e-16 ***\norigin_hex320       -2.9026051  0.0686628   -42.273  &lt; 2e-16 ***\norigin_hex321       -1.3395409  0.0757579   -17.682  &lt; 2e-16 ***\norigin_hex322       -0.7957469  0.0529790   -15.020  &lt; 2e-16 ***\norigin_hex340       -0.6582619  0.0376092   -17.503  &lt; 2e-16 ***\norigin_hex341       -2.3351528  0.0509744   -45.810  &lt; 2e-16 ***\norigin_hex342       -1.1614241  0.0482308   -24.081  &lt; 2e-16 ***\norigin_hex363       -0.8900518  0.0448055   -19.865  &lt; 2e-16 ***\norigin_hex364       -0.3220265  0.0365207    -8.818  &lt; 2e-16 ***\norigin_hex383       -1.1754181  0.0401061   -29.308  &lt; 2e-16 ***\norigin_hex384       -4.2210755  0.0578406   -72.978  &lt; 2e-16 ***\norigin_hex385       -0.4976245  0.0524180    -9.493  &lt; 2e-16 ***\norigin_hex404       -0.2109085  0.0425004    -4.963 6.96e-07 ***\norigin_hex405       -1.9156970  0.0547396   -34.997  &lt; 2e-16 ***\norigin_hex406        3.3592633  0.0250846   133.917  &lt; 2e-16 ***\norigin_hex407       -0.8182729  0.0517607   -15.809  &lt; 2e-16 ***\norigin_hex408       -0.0792948  0.0336953    -2.353 0.018608 *  \norigin_hex425       -2.8184540  0.0916255   -30.761  &lt; 2e-16 ***\norigin_hex426       -1.6408258  0.0386065   -42.501  &lt; 2e-16 ***\norigin_hex427       -1.3230052  0.0432551   -30.586  &lt; 2e-16 ***\norigin_hex428       -1.9167648  0.0817115   -23.458  &lt; 2e-16 ***\norigin_hex429       -0.5903488  0.0336292   -17.555  &lt; 2e-16 ***\norigin_hex44        -4.4574883  0.1425948   -31.260  &lt; 2e-16 ***\norigin_hex446       -1.9192679  0.0639389   -30.017  &lt; 2e-16 ***\norigin_hex447       -2.0525796  0.0510140   -40.236  &lt; 2e-16 ***\norigin_hex448       -0.5167058  0.0372461   -13.873  &lt; 2e-16 ***\norigin_hex449        2.1306831  0.0255282    83.464  &lt; 2e-16 ***\norigin_hex450       -0.5251122  0.0315811   -16.627  &lt; 2e-16 ***\norigin_hex46        -2.6252524  0.0914100   -28.720  &lt; 2e-16 ***\norigin_hex468       -0.2473540  0.0371650    -6.656 2.82e-11 ***\norigin_hex469        0.0166682  0.0302675     0.551 0.581842    \norigin_hex470        2.4206739  0.0251870    96.108  &lt; 2e-16 ***\norigin_hex471       -0.0196792  0.0297519    -0.661 0.508329    \norigin_hex488       -2.6265282  0.0628427   -41.795  &lt; 2e-16 ***\norigin_hex489       -3.4423434  0.2512552   -13.701  &lt; 2e-16 ***\norigin_hex490        1.0408735  0.0272591    38.184  &lt; 2e-16 ***\norigin_hex491        1.4339863  0.0258713    55.428  &lt; 2e-16 ***\norigin_hex493       -3.1678646  0.1409181   -22.480  &lt; 2e-16 ***\norigin_hex494       -1.2085535  0.0639431   -18.900  &lt; 2e-16 ***\norigin_hex509       -1.7985236  0.0420673   -42.754  &lt; 2e-16 ***\norigin_hex510       -1.4605311  0.0351340   -41.570  &lt; 2e-16 ***\norigin_hex511        0.4771824  0.0269164    17.728  &lt; 2e-16 ***\norigin_hex512        2.7446353  0.0249476   110.016  &lt; 2e-16 ***\norigin_hex513       -0.4685181  0.0347675   -13.476  &lt; 2e-16 ***\norigin_hex514       -0.4531580  0.0443819   -10.210  &lt; 2e-16 ***\norigin_hex515       -1.9801222  0.1396492   -14.179  &lt; 2e-16 ***\norigin_hex530       -3.0492497  0.0846963   -36.002  &lt; 2e-16 ***\norigin_hex531       -0.6602182  0.0321565   -20.531  &lt; 2e-16 ***\norigin_hex532       -0.9247808  0.0338119   -27.351  &lt; 2e-16 ***\norigin_hex533        2.8716066  0.0249438   115.123  &lt; 2e-16 ***\norigin_hex534        3.4714904  0.0249665   139.046  &lt; 2e-16 ***\norigin_hex536        0.2155358  0.0352907     6.107 1.01e-09 ***\norigin_hex537       -1.9547052  0.1396238   -14.000  &lt; 2e-16 ***\norigin_hex538       -2.1490335  0.2056583   -10.450  &lt; 2e-16 ***\norigin_hex539       -3.2253115  0.5788545    -5.572 2.52e-08 ***\norigin_hex551       -2.7909584  0.0595192   -46.892  &lt; 2e-16 ***\norigin_hex552       -0.3382139  0.0442911    -7.636 2.24e-14 ***\norigin_hex553       -0.7902179  0.0313345   -25.219  &lt; 2e-16 ***\norigin_hex554        2.2884381  0.0249771    91.621  &lt; 2e-16 ***\norigin_hex555        2.1324431  0.0256412    83.165  &lt; 2e-16 ***\norigin_hex559       -1.3679796  0.0967863   -14.134  &lt; 2e-16 ***\norigin_hex560        0.7531582  0.0535429    14.066  &lt; 2e-16 ***\norigin_hex572       -4.0794129  0.2252573   -18.110  &lt; 2e-16 ***\norigin_hex573       -2.0435180  0.0501971   -40.710  &lt; 2e-16 ***\norigin_hex574       -0.9775258  0.0437499   -22.343  &lt; 2e-16 ***\norigin_hex575        3.8067958  0.0247964   153.522  &lt; 2e-16 ***\norigin_hex576        2.3957950  0.0251773    95.157  &lt; 2e-16 ***\norigin_hex578       -2.3558224  0.1101212   -21.393  &lt; 2e-16 ***\norigin_hex582       -2.0883194  0.1101068   -18.966  &lt; 2e-16 ***\norigin_hex583       -2.1577969  0.1979927   -10.898  &lt; 2e-16 ***\norigin_hex584        0.7871959  0.0604994    13.012  &lt; 2e-16 ***\norigin_hex593       -1.3823946  0.0553964   -24.955  &lt; 2e-16 ***\norigin_hex594       -0.8443990  0.0359332   -23.499  &lt; 2e-16 ***\norigin_hex595       -0.8081952  0.0316431   -25.541  &lt; 2e-16 ***\norigin_hex596        2.1898030  0.0250448    87.435  &lt; 2e-16 ***\norigin_hex597       -0.8960247  0.0638800   -14.027  &lt; 2e-16 ***\norigin_hex603       -1.5241760  0.1116356   -13.653  &lt; 2e-16 ***\norigin_hex604       -3.0756554  0.2688572   -11.440  &lt; 2e-16 ***\norigin_hex615       -2.3198364  0.0504477   -45.985  &lt; 2e-16 ***\norigin_hex616       -1.2597719  0.0382071   -32.972  &lt; 2e-16 ***\norigin_hex617       -0.2984404  0.0301950    -9.884  &lt; 2e-16 ***\norigin_hex618        2.6719436  0.0249634   107.034  &lt; 2e-16 ***\norigin_hex620       -0.3806567  0.0408754    -9.313  &lt; 2e-16 ***\norigin_hex637       -1.5605444  0.0463545   -33.665  &lt; 2e-16 ***\norigin_hex638        2.2161466  0.0250200    88.575  &lt; 2e-16 ***\norigin_hex657        0.0433521  0.0296160     1.464 0.143247    \norigin_hex658        1.5803948  0.0254756    62.036  &lt; 2e-16 ***\norigin_hex659        1.8395570  0.0252532    72.845  &lt; 2e-16 ***\norigin_hex66        -3.6380285  0.1292088   -28.156  &lt; 2e-16 ***\norigin_hex660        3.0389586  0.0248917   122.087  &lt; 2e-16 ***\norigin_hex662        2.8150013  0.0258217   109.017  &lt; 2e-16 ***\norigin_hex67        -0.7686427  0.0367413   -20.920  &lt; 2e-16 ***\norigin_hex677       -0.4177704  0.0335382   -12.457  &lt; 2e-16 ***\norigin_hex678       -2.0444370  0.0501396   -40.775  &lt; 2e-16 ***\norigin_hex679        2.8273720  0.0249405   113.365  &lt; 2e-16 ***\norigin_hex68        -2.9531333  0.1319041   -22.388  &lt; 2e-16 ***\norigin_hex680        3.1369497  0.0249316   125.822  &lt; 2e-16 ***\norigin_hex681        1.8772469  0.0260696    72.009  &lt; 2e-16 ***\norigin_hex699       -0.3644232  0.0331482   -10.994  &lt; 2e-16 ***\norigin_hex700        1.8220764  0.0253965    71.745  &lt; 2e-16 ***\norigin_hex701        1.5392594  0.0254346    60.518  &lt; 2e-16 ***\norigin_hex702        2.9629993  0.0249126   118.936  &lt; 2e-16 ***\norigin_hex704       -0.1806673  0.0403632    -4.476 7.60e-06 ***\norigin_hex722       -0.1343072  0.0304684    -4.408 1.04e-05 ***\norigin_hex725       -1.0000782  0.0500741   -19.972  &lt; 2e-16 ***\norigin_hex741        0.2202188  0.0296805     7.420 1.17e-13 ***\norigin_hex743        0.1224351  0.0275661     4.442 8.93e-06 ***\norigin_hex744        2.4588699  0.0250596    98.121  &lt; 2e-16 ***\norigin_hex761       -0.5030750  0.0369675   -13.609  &lt; 2e-16 ***\norigin_hex762        1.6735822  0.0256792    65.173  &lt; 2e-16 ***\norigin_hex763       -1.4979987  0.0370276   -40.456  &lt; 2e-16 ***\norigin_hex764        2.9141102  0.0248999   117.033  &lt; 2e-16 ***\norigin_hex765        1.8594042  0.0259805    71.569  &lt; 2e-16 ***\norigin_hex767        3.5908317  0.0249496   143.923  &lt; 2e-16 ***\norigin_hex772       -1.2348951  0.0762644   -16.192  &lt; 2e-16 ***\norigin_hex784       -1.0592556  0.0340369   -31.121  &lt; 2e-16 ***\norigin_hex785        1.9511553  0.0250461    77.903  &lt; 2e-16 ***\norigin_hex786        1.6861207  0.0253742    66.450  &lt; 2e-16 ***\norigin_hex787        2.1993682  0.0256974    85.587  &lt; 2e-16 ***\norigin_hex788        2.8433915  0.0252378   112.664  &lt; 2e-16 ***\norigin_hex789        0.4686303  0.0268078    17.481  &lt; 2e-16 ***\norigin_hex803       -2.2951423  0.0548750   -41.825  &lt; 2e-16 ***\norigin_hex804        2.5600135  0.0250332   102.265  &lt; 2e-16 ***\norigin_hex805        2.4409318  0.0249091    97.994  &lt; 2e-16 ***\norigin_hex806        2.1983667  0.0250613    87.719  &lt; 2e-16 ***\norigin_hex807        2.9894244  0.0250735   119.226  &lt; 2e-16 ***\norigin_hex808        1.2891261  0.0269740    47.791  &lt; 2e-16 ***\norigin_hex809        3.2620616  0.0249034   130.989  &lt; 2e-16 ***\norigin_hex810        2.3243786  0.0253074    91.846  &lt; 2e-16 ***\norigin_hex814        0.4938718  0.0371753    13.285  &lt; 2e-16 ***\norigin_hex819        1.0755606  0.0313579    34.300  &lt; 2e-16 ***\norigin_hex824       -1.2726305  0.0457226   -27.834  &lt; 2e-16 ***\norigin_hex826        0.0405204  0.0266063     1.523 0.127768    \norigin_hex827        2.2528295  0.0249878    90.157  &lt; 2e-16 ***\norigin_hex828        2.6177391  0.0249456   104.938  &lt; 2e-16 ***\norigin_hex829        2.7539596  0.0250725   109.840  &lt; 2e-16 ***\norigin_hex830        3.0229391  0.0251985   119.965  &lt; 2e-16 ***\norigin_hex831        3.8106607  0.0247900   153.718  &lt; 2e-16 ***\norigin_hex832        2.8598206  0.0255311   112.013  &lt; 2e-16 ***\norigin_hex835       -0.2462981  0.0388203    -6.345 2.23e-10 ***\norigin_hex844       -2.7661654  0.0818111   -33.812  &lt; 2e-16 ***\norigin_hex846        1.7018341  0.0252208    67.477  &lt; 2e-16 ***\norigin_hex847        0.6107017  0.0262194    23.292  &lt; 2e-16 ***\norigin_hex848        2.0174052  0.0251184    80.316  &lt; 2e-16 ***\norigin_hex849        1.0535112  0.0258841    40.701  &lt; 2e-16 ***\norigin_hex850        2.0959971  0.0252445    83.028  &lt; 2e-16 ***\norigin_hex851        2.7455729  0.0250016   109.816  &lt; 2e-16 ***\norigin_hex852        2.4574092  0.0254189    96.676  &lt; 2e-16 ***\norigin_hex853        3.6875122  0.0250743   147.063  &lt; 2e-16 ***\norigin_hex854        0.3335798  0.0360354     9.257  &lt; 2e-16 ***\norigin_hex855       -0.7468777  0.0500242   -14.930  &lt; 2e-16 ***\norigin_hex856        0.2463104  0.0314437     7.833 4.75e-15 ***\norigin_hex86        -2.4243504  0.0796781   -30.427  &lt; 2e-16 ***\norigin_hex866       -0.7465489  0.0404565   -18.453  &lt; 2e-16 ***\norigin_hex867        0.6513656  0.0273394    23.825  &lt; 2e-16 ***\norigin_hex868       -0.2035735  0.0303059    -6.717 1.85e-11 ***\norigin_hex869        2.6010365  0.0253607   102.562  &lt; 2e-16 ***\norigin_hex87        -2.3769453  0.0861209   -27.600  &lt; 2e-16 ***\norigin_hex870        3.0803143  0.0248379   124.017  &lt; 2e-16 ***\norigin_hex871        2.9109974  0.0254121   114.552  &lt; 2e-16 ***\norigin_hex872        0.9055614  0.0269022    33.661  &lt; 2e-16 ***\norigin_hex873        1.2449190  0.0266073    46.789  &lt; 2e-16 ***\norigin_hex874        0.8917086  0.0259596    34.350  &lt; 2e-16 ***\norigin_hex875       -1.9651878  0.0765542   -25.671  &lt; 2e-16 ***\norigin_hex876       -0.5537333  0.0400706   -13.819  &lt; 2e-16 ***\norigin_hex877       -1.0847833  0.0473861   -22.892  &lt; 2e-16 ***\norigin_hex88         0.0294941  0.0323970     0.910 0.362614    \norigin_hex887        0.1232646  0.0280707     4.391 1.13e-05 ***\norigin_hex888        1.6062931  0.0255797    62.796  &lt; 2e-16 ***\norigin_hex889       -1.5689296  0.0419142   -37.432  &lt; 2e-16 ***\norigin_hex89        -1.4533088  0.0563875   -25.774  &lt; 2e-16 ***\norigin_hex890        2.5493098  0.0249343   102.241  &lt; 2e-16 ***\norigin_hex891        0.6135031  0.0272081    22.549  &lt; 2e-16 ***\norigin_hex893        2.8034087  0.0249535   112.345  &lt; 2e-16 ***\norigin_hex894        0.8336945  0.0268578    31.041  &lt; 2e-16 ***\norigin_hex895        0.3654712  0.0288250    12.679  &lt; 2e-16 ***\norigin_hex896       -0.4528823  0.0352409   -12.851  &lt; 2e-16 ***\norigin_hex897       -2.2075413  0.0685450   -32.206  &lt; 2e-16 ***\norigin_hex898       -0.3601007  0.0383412    -9.392  &lt; 2e-16 ***\norigin_hex90        -1.5022064  0.1351815   -11.113  &lt; 2e-16 ***\norigin_hex908        1.3739696  0.0274663    50.024  &lt; 2e-16 ***\norigin_hex909        1.4555470  0.0252826    57.571  &lt; 2e-16 ***\norigin_hex910       -0.4539771  0.0300237   -15.121  &lt; 2e-16 ***\norigin_hex911        0.8968683  0.0261143    34.344  &lt; 2e-16 ***\norigin_hex912        2.1406519  0.0250209    85.554  &lt; 2e-16 ***\norigin_hex915        2.6270542  0.0250007   105.079  &lt; 2e-16 ***\norigin_hex917        1.9661808  0.0255503    76.953  &lt; 2e-16 ***\norigin_hex918       -1.0599611  0.0437474   -24.229  &lt; 2e-16 ***\norigin_hex919        1.1445662  0.0262591    43.587  &lt; 2e-16 ***\norigin_hex928        0.2364953  0.0282634     8.368  &lt; 2e-16 ***\norigin_hex929        1.7652526  0.0250994    70.330  &lt; 2e-16 ***\norigin_hex930        2.2289033  0.0248665    89.635  &lt; 2e-16 ***\norigin_hex931       -0.3076142  0.0297157   -10.352  &lt; 2e-16 ***\norigin_hex932       -0.1228697  0.0301952    -4.069 4.72e-05 ***\norigin_hex933        2.3050872  0.0252579    91.262  &lt; 2e-16 ***\norigin_hex934       -0.2532802  0.0299885    -8.446  &lt; 2e-16 ***\norigin_hex935        3.4593310  0.0248126   139.418  &lt; 2e-16 ***\norigin_hex938       -4.3774872  0.2146487   -20.394  &lt; 2e-16 ***\norigin_hex939        3.4268863  0.0249541   137.328  &lt; 2e-16 ***\norigin_hex940       -2.2772345  0.0652028   -34.925  &lt; 2e-16 ***\norigin_hex949        0.2512705  0.0276718     9.080  &lt; 2e-16 ***\norigin_hex950        2.1844199  0.0251430    86.880  &lt; 2e-16 ***\norigin_hex951        2.9644348  0.0248148   119.462  &lt; 2e-16 ***\norigin_hex952        0.1925868  0.0322895     5.964 2.46e-09 ***\norigin_hex953        1.2153535  0.0263572    46.111  &lt; 2e-16 ***\norigin_hex954       -0.2990816  0.0296858   -10.075  &lt; 2e-16 ***\norigin_hex955        2.0271218  0.0252556    80.264  &lt; 2e-16 ***\norigin_hex956        0.5303766  0.0270905    19.578  &lt; 2e-16 ***\norigin_hex957        2.5339591  0.0252618   100.308  &lt; 2e-16 ***\norigin_hex959       -0.9664793  0.0542066   -17.830  &lt; 2e-16 ***\norigin_hex961       -1.2914520  0.0386726   -33.394  &lt; 2e-16 ***\norigin_hex962        4.0799461  0.0254129   160.547  &lt; 2e-16 ***\norigin_hex970        0.7785543  0.0258758    30.088  &lt; 2e-16 ***\norigin_hex971        2.1085031  0.0249427    84.534  &lt; 2e-16 ***\norigin_hex972        1.5743764  0.0251050    62.712  &lt; 2e-16 ***\norigin_hex974        1.4676487  0.0256828    57.145  &lt; 2e-16 ***\norigin_hex975        1.1767612  0.0261432    45.012  &lt; 2e-16 ***\norigin_hex976       -0.3260703  0.0297400   -10.964  &lt; 2e-16 ***\norigin_hex977        3.0513676  0.0248926   122.581  &lt; 2e-16 ***\norigin_hex978        2.2846010  0.0260040    87.856  &lt; 2e-16 ***\norigin_hex982        0.1495075  0.0284875     5.248 1.54e-07 ***\norigin_hex983        4.4970374  0.0249349   180.351  &lt; 2e-16 ***\norigin_hex984        2.8111675  0.0269333   104.375  &lt; 2e-16 ***\norigin_hex991        0.5854982  0.0262300    22.322  &lt; 2e-16 ***\norigin_hex992        1.1385430  0.0255670    44.532  &lt; 2e-16 ***\norigin_hex993        0.8632560  0.0257015    33.588  &lt; 2e-16 ***\norigin_hex994        0.2468573  0.0269027     9.176  &lt; 2e-16 ***\norigin_hex995        1.8095176  0.0252546    71.651  &lt; 2e-16 ***\norigin_hex996        0.8935613  0.0257789    34.663  &lt; 2e-16 ***\norigin_hex997       -0.0620752  0.0383745    -1.618 0.105746    \norigin_hex998        2.9530337  0.0249230   118.486  &lt; 2e-16 ***\norigin_hex999        3.1343886  0.0253276   123.754  &lt; 2e-16 ***\ndestination_hex1003  1.3172108  0.0158057    83.338  &lt; 2e-16 ***\ndestination_hex1004  0.2079548  0.0162218    12.819  &lt; 2e-16 ***\ndestination_hex1011  0.3169846  0.0195156    16.243  &lt; 2e-16 ***\ndestination_hex1012  1.9171402  0.0165603   115.767  &lt; 2e-16 ***\ndestination_hex1013  0.5506188  0.0172064    32.001  &lt; 2e-16 ***\ndestination_hex1014 -1.1349626  0.0220730   -51.419  &lt; 2e-16 ***\ndestination_hex1015  1.5404336  0.0160087    96.225  &lt; 2e-16 ***\ndestination_hex1016  1.3402299  0.0159157    84.208  &lt; 2e-16 ***\ndestination_hex1018 -0.5029292  0.0196054   -25.653  &lt; 2e-16 ***\ndestination_hex1019 -0.0482940  0.0164554    -2.935 0.003337 ** \ndestination_hex1023 -0.8579469  0.0202115   -42.448  &lt; 2e-16 ***\ndestination_hex1024 -0.1823773  0.0167871   -10.864  &lt; 2e-16 ***\ndestination_hex1025 -3.9664956  0.0664202   -59.718  &lt; 2e-16 ***\ndestination_hex1033  0.8989300  0.0169004    53.190  &lt; 2e-16 ***\ndestination_hex1034  1.5837647  0.0160959    98.396  &lt; 2e-16 ***\ndestination_hex1035  1.3554043  0.0161697    83.824  &lt; 2e-16 ***\ndestination_hex1036  1.7366393  0.0159241   109.057  &lt; 2e-16 ***\ndestination_hex1037  0.3844110  0.0165621    23.210  &lt; 2e-16 ***\ndestination_hex1043  0.6599528  0.0188049    35.095  &lt; 2e-16 ***\ndestination_hex1045 -0.0705508  0.0165042    -4.275 1.91e-05 ***\ndestination_hex1046  0.5406780  0.0165168    32.735  &lt; 2e-16 ***\ndestination_hex1053  1.6691200  0.0161681   103.236  &lt; 2e-16 ***\ndestination_hex1054  1.3762195  0.0162234    84.829  &lt; 2e-16 ***\ndestination_hex1055  0.3553220  0.0173904    20.432  &lt; 2e-16 ***\ndestination_hex1056 -0.3179141  0.0189177   -16.805  &lt; 2e-16 ***\ndestination_hex1064 -2.9308125  0.0884371   -33.140  &lt; 2e-16 ***\ndestination_hex1066  1.0792850  0.0159771    67.552  &lt; 2e-16 ***\ndestination_hex1067  0.9412921  0.0167716    56.124  &lt; 2e-16 ***\ndestination_hex1074 -0.4907938  0.0205279   -23.909  &lt; 2e-16 ***\ndestination_hex1075  1.2208454  0.0165885    73.596  &lt; 2e-16 ***\ndestination_hex1076  0.5176698  0.0168495    30.723  &lt; 2e-16 ***\ndestination_hex1077 -0.2116456  0.0184787   -11.453  &lt; 2e-16 ***\ndestination_hex1079  0.6587363  0.0164929    39.941  &lt; 2e-16 ***\ndestination_hex1085 -1.1246061  0.0582993   -19.290  &lt; 2e-16 ***\ndestination_hex1087 -0.0039013  0.0166125    -0.235 0.814334    \ndestination_hex1088  0.7278843  0.0163934    44.401  &lt; 2e-16 ***\ndestination_hex109   0.4923252  0.0302066    16.299  &lt; 2e-16 ***\ndestination_hex1094 -3.3707259  0.0509734   -66.127  &lt; 2e-16 ***\ndestination_hex1095  0.2437758  0.0206516    11.804  &lt; 2e-16 ***\ndestination_hex1096  1.3338063  0.0215655    61.849  &lt; 2e-16 ***\ndestination_hex1097  1.3964626  0.0160338    87.095  &lt; 2e-16 ***\ndestination_hex1098 -1.2180701  0.0265562   -45.868  &lt; 2e-16 ***\ndestination_hex1099  0.0007190  0.0172372     0.042 0.966729    \ndestination_hex110  -2.0266151  0.1020771   -19.854  &lt; 2e-16 ***\ndestination_hex1105  2.0241651  0.0176428   114.731  &lt; 2e-16 ***\ndestination_hex1106 -3.1201209  0.0862094   -36.192  &lt; 2e-16 ***\ndestination_hex1107  0.0065874  0.0171668     0.384 0.701180    \ndestination_hex1108  2.6253695  0.0156301   167.969  &lt; 2e-16 ***\ndestination_hex1109 -1.4791006  0.0260284   -56.827  &lt; 2e-16 ***\ndestination_hex111   2.3461319  0.0199082   117.847  &lt; 2e-16 ***\ndestination_hex1116  0.4465740  0.0176835    25.254  &lt; 2e-16 ***\ndestination_hex1117  1.0424255  0.0169314    61.568  &lt; 2e-16 ***\ndestination_hex1118 -0.8042104  0.0234164   -34.344  &lt; 2e-16 ***\ndestination_hex1119 -0.2195258  0.0185140   -11.857  &lt; 2e-16 ***\ndestination_hex112  -1.1207427  0.0343267   -32.649  &lt; 2e-16 ***\ndestination_hex1120 -0.7882050  0.0226765   -34.759  &lt; 2e-16 ***\ndestination_hex1129 -0.6090635  0.0173178   -35.170  &lt; 2e-16 ***\ndestination_hex1130  0.3173352  0.0164604    19.279  &lt; 2e-16 ***\ndestination_hex1131  1.7720930  0.0163428   108.432  &lt; 2e-16 ***\ndestination_hex1136  1.6852748  0.0161546   104.321  &lt; 2e-16 ***\ndestination_hex1138 -0.4399415  0.0227667   -19.324  &lt; 2e-16 ***\ndestination_hex1139  0.0753753  0.0169345     4.451 8.55e-06 ***\ndestination_hex1141  0.1618463  0.0171884     9.416  &lt; 2e-16 ***\ndestination_hex1148 -0.9569830  0.0329855   -29.012  &lt; 2e-16 ***\ndestination_hex1149 -0.7383973  0.0203063   -36.363  &lt; 2e-16 ***\ndestination_hex1150 -0.2514302  0.0168286   -14.941  &lt; 2e-16 ***\ndestination_hex1151 -0.5260823  0.0169011   -31.127  &lt; 2e-16 ***\ndestination_hex1158 -0.4469547  0.0186631   -23.949  &lt; 2e-16 ***\ndestination_hex1159 -0.0793832  0.0177345    -4.476 7.60e-06 ***\ndestination_hex1160  1.5012552  0.0159937    93.866  &lt; 2e-16 ***\ndestination_hex1171  0.5421685  0.0165517    32.756  &lt; 2e-16 ***\ndestination_hex1172  1.8767980  0.0157933   118.835  &lt; 2e-16 ***\ndestination_hex1173  1.3122368  0.0162966    80.522  &lt; 2e-16 ***\ndestination_hex1174 -1.0596826  0.0443186   -23.911  &lt; 2e-16 ***\ndestination_hex1178  1.8795700  0.0158727   118.415  &lt; 2e-16 ***\ndestination_hex1179  0.9862717  0.0162822    60.574  &lt; 2e-16 ***\ndestination_hex1180  1.0094120  0.0162078    62.279  &lt; 2e-16 ***\ndestination_hex1181 -0.0830573  0.0177945    -4.668 3.05e-06 ***\ndestination_hex1183  1.2530177  0.0161535    77.569  &lt; 2e-16 ***\ndestination_hex1190 -0.9972057  0.0325319   -30.653  &lt; 2e-16 ***\ndestination_hex1192  0.5208361  0.0164116    31.736  &lt; 2e-16 ***\ndestination_hex1193  0.5307619  0.0164021    32.359  &lt; 2e-16 ***\ndestination_hex1194  1.0630318  0.0165960    64.054  &lt; 2e-16 ***\ndestination_hex1200  0.7514271  0.0169703    44.279  &lt; 2e-16 ***\ndestination_hex1201  0.4040041  0.0170659    23.673  &lt; 2e-16 ***\ndestination_hex1203  0.3316206  0.0173357    19.129  &lt; 2e-16 ***\ndestination_hex1204  0.0324797  0.0177078     1.834 0.066624 .  \ndestination_hex1211 -4.1449942  0.2779782   -14.911  &lt; 2e-16 ***\ndestination_hex1214 -0.4077865  0.0176497   -23.104  &lt; 2e-16 ***\ndestination_hex1215  0.0048988  0.0190203     0.258 0.796751    \ndestination_hex1216  0.6367410  0.0184180    34.572  &lt; 2e-16 ***\ndestination_hex1220  0.9694596  0.0165684    58.513  &lt; 2e-16 ***\ndestination_hex1221  1.3319284  0.0160013    83.239  &lt; 2e-16 ***\ndestination_hex1222  0.1039030  0.0197508     5.261 1.44e-07 ***\ndestination_hex1223 -0.2342446  0.0189730   -12.346  &lt; 2e-16 ***\ndestination_hex1224  0.3160104  0.0173102    18.256  &lt; 2e-16 ***\ndestination_hex1231 -1.8407455  0.0593230   -31.029  &lt; 2e-16 ***\ndestination_hex1232 -0.3564051  0.0288571   -12.351  &lt; 2e-16 ***\ndestination_hex1235  0.4781354  0.0165820    28.835  &lt; 2e-16 ***\ndestination_hex1236  0.3572096  0.0175400    20.365  &lt; 2e-16 ***\ndestination_hex1241 -0.5465714  0.0192637   -28.373  &lt; 2e-16 ***\ndestination_hex1242 -0.0844833  0.0178221    -4.740 2.13e-06 ***\ndestination_hex1243  1.0599264  0.0162827    65.095  &lt; 2e-16 ***\ndestination_hex1246 -0.0995321  0.0175885    -5.659 1.52e-08 ***\ndestination_hex1256 -0.7930401  0.0186627   -42.493  &lt; 2e-16 ***\ndestination_hex1257  0.8535783  0.0166736    51.193  &lt; 2e-16 ***\ndestination_hex1258  1.4559855  0.0163652    88.968  &lt; 2e-16 ***\ndestination_hex1262 -0.4877317  0.0198755   -24.539  &lt; 2e-16 ***\ndestination_hex1263  1.4875933  0.0158608    93.790  &lt; 2e-16 ***\ndestination_hex1264  0.8941163  0.0171290    52.199  &lt; 2e-16 ***\ndestination_hex1265  0.6505100  0.0172488    37.713  &lt; 2e-16 ***\ndestination_hex1266  0.6966917  0.0168437    41.362  &lt; 2e-16 ***\ndestination_hex1267 -0.7700419  0.0223204   -34.499  &lt; 2e-16 ***\ndestination_hex1272 -4.3919586  0.1122205   -39.137  &lt; 2e-16 ***\ndestination_hex1273  0.5332166  0.0170718    31.234  &lt; 2e-16 ***\ndestination_hex1277  0.7372219  0.0161450    45.662  &lt; 2e-16 ***\ndestination_hex1278  0.3975875  0.0167002    23.807  &lt; 2e-16 ***\ndestination_hex128   2.3096004  0.0291022    79.362  &lt; 2e-16 ***\ndestination_hex1283  2.0754089  0.0158419   131.008  &lt; 2e-16 ***\ndestination_hex1284  1.5350397  0.0159534    96.220  &lt; 2e-16 ***\ndestination_hex1285  1.2312035  0.0161125    76.413  &lt; 2e-16 ***\ndestination_hex1286  0.3342341  0.0182323    18.332  &lt; 2e-16 ***\ndestination_hex1289 -2.1228406  0.0425684   -49.869  &lt; 2e-16 ***\ndestination_hex129  -2.6267368  0.1148684   -22.867  &lt; 2e-16 ***\ndestination_hex1293 -3.5505997  0.0759551   -46.746  &lt; 2e-16 ***\ndestination_hex1294  0.5546188  0.0176717    31.385  &lt; 2e-16 ***\ndestination_hex1295 -1.8086447  0.0270727   -66.807  &lt; 2e-16 ***\ndestination_hex1298  0.0662529  0.0167583     3.953 7.70e-05 ***\ndestination_hex1299 -0.3421591  0.0178784   -19.138  &lt; 2e-16 ***\ndestination_hex130   0.4919173  0.0273925    17.958  &lt; 2e-16 ***\ndestination_hex1304  0.9716094  0.0165467    58.719  &lt; 2e-16 ***\ndestination_hex1305  1.0213193  0.0160442    63.657  &lt; 2e-16 ***\ndestination_hex1307 -0.5687351  0.0247204   -23.007  &lt; 2e-16 ***\ndestination_hex1308  0.6603625  0.0165399    39.925  &lt; 2e-16 ***\ndestination_hex131   0.0886912  0.0295248     3.004 0.002665 ** \ndestination_hex1310 -4.2544601  0.1896237   -22.436  &lt; 2e-16 ***\ndestination_hex1316 -1.4306618  0.0221041   -64.724  &lt; 2e-16 ***\ndestination_hex1317 -1.5676836  0.0202822   -77.293  &lt; 2e-16 ***\ndestination_hex1318 -1.4384370  0.0220989   -65.091  &lt; 2e-16 ***\ndestination_hex1319  1.2620996  0.0159223    79.266  &lt; 2e-16 ***\ndestination_hex132   0.9104291  0.0224734    40.511  &lt; 2e-16 ***\ndestination_hex1320 -0.7631132  0.0205042   -37.217  &lt; 2e-16 ***\ndestination_hex1324  1.1453366  0.0219459    52.189  &lt; 2e-16 ***\ndestination_hex1325 -0.8609091  0.0209582   -41.077  &lt; 2e-16 ***\ndestination_hex1326  0.6158175  0.0164334    37.473  &lt; 2e-16 ***\ndestination_hex1327  0.9148328  0.0163217    56.050  &lt; 2e-16 ***\ndestination_hex1328  0.7732251  0.0167311    46.215  &lt; 2e-16 ***\ndestination_hex1329  0.6168082  0.0176648    34.917  &lt; 2e-16 ***\ndestination_hex133   0.4461823  0.0205380    21.725  &lt; 2e-16 ***\ndestination_hex1330  1.8115970  0.0162717   111.334  &lt; 2e-16 ***\ndestination_hex1331 -4.3491945  0.2586735   -16.813  &lt; 2e-16 ***\ndestination_hex1333 -1.0403194  0.0223952   -46.453  &lt; 2e-16 ***\ndestination_hex1334 -0.5981769  0.0202536   -29.534  &lt; 2e-16 ***\ndestination_hex1335  1.2809716  0.0164298    77.966  &lt; 2e-16 ***\ndestination_hex1336 -2.7496744  0.0579629   -47.439  &lt; 2e-16 ***\ndestination_hex1337 -2.4034905  0.0331812   -72.435  &lt; 2e-16 ***\ndestination_hex1338 -2.4312423  0.0307824   -78.982  &lt; 2e-16 ***\ndestination_hex1339  1.0827466  0.0159519    67.876  &lt; 2e-16 ***\ndestination_hex134  -0.4063735  0.0205640   -19.761  &lt; 2e-16 ***\ndestination_hex1340 -0.2310439  0.0179772   -12.852  &lt; 2e-16 ***\ndestination_hex1341 -3.7008716  0.0975009   -37.957  &lt; 2e-16 ***\ndestination_hex1346  0.8511087  0.0170262    49.988  &lt; 2e-16 ***\ndestination_hex1347  1.9046956  0.0159111   119.709  &lt; 2e-16 ***\ndestination_hex1348  0.5810381  0.0167424    34.705  &lt; 2e-16 ***\ndestination_hex1349  1.4113918  0.0163283    86.438  &lt; 2e-16 ***\ndestination_hex1350 -0.1661958  0.0198790    -8.360  &lt; 2e-16 ***\ndestination_hex1353  0.3438508  0.0169642    20.269  &lt; 2e-16 ***\ndestination_hex1354 -0.6066943  0.0195453   -31.040  &lt; 2e-16 ***\ndestination_hex1355 -0.4077465  0.0190088   -21.450  &lt; 2e-16 ***\ndestination_hex1357 -1.1062484  0.0241794   -45.752  &lt; 2e-16 ***\ndestination_hex1358  1.1424284  0.0159463    71.642  &lt; 2e-16 ***\ndestination_hex1359 -0.2082661  0.0168358   -12.370  &lt; 2e-16 ***\ndestination_hex1360 -0.5340415  0.0171492   -31.141  &lt; 2e-16 ***\ndestination_hex1361 -0.1536716  0.0178099    -8.628  &lt; 2e-16 ***\ndestination_hex1362 -1.8613175  0.0329464   -56.495  &lt; 2e-16 ***\ndestination_hex1368 -0.0750075  0.0178327    -4.206 2.60e-05 ***\ndestination_hex1369  0.0322172  0.0176495     1.825 0.067942 .  \ndestination_hex1370  1.5752948  0.0158967    99.096  &lt; 2e-16 ***\ndestination_hex1371  0.5777732  0.0172313    33.530  &lt; 2e-16 ***\ndestination_hex1372  0.5585805  0.0169595    32.936  &lt; 2e-16 ***\ndestination_hex1373 -2.4097101  0.0365500   -65.929  &lt; 2e-16 ***\ndestination_hex1374 -1.1510174  0.0230486   -49.939  &lt; 2e-16 ***\ndestination_hex1375  1.0311369  0.0171678    60.062  &lt; 2e-16 ***\ndestination_hex1376 -0.8813700  0.0229204   -38.453  &lt; 2e-16 ***\ndestination_hex1379 -3.7274158  0.0651430   -57.219  &lt; 2e-16 ***\ndestination_hex1380  1.8567513  0.0157250   118.076  &lt; 2e-16 ***\ndestination_hex1381  1.9069058  0.0156963   121.487  &lt; 2e-16 ***\ndestination_hex1382  1.2772531  0.0161355    79.158  &lt; 2e-16 ***\ndestination_hex1383 -1.5826361  0.0249528   -63.425  &lt; 2e-16 ***\ndestination_hex1388  0.6808945  0.0167080    40.753  &lt; 2e-16 ***\ndestination_hex1389  0.3883928  0.0170566    22.771  &lt; 2e-16 ***\ndestination_hex1390  0.6514572  0.0168165    38.739  &lt; 2e-16 ***\ndestination_hex1391  1.2437319  0.0162352    76.607  &lt; 2e-16 ***\ndestination_hex1392  0.6098080  0.0197747    30.838  &lt; 2e-16 ***\ndestination_hex1393 -0.1554342  0.0176863    -8.788  &lt; 2e-16 ***\ndestination_hex1394  0.4002995  0.0166796    23.999  &lt; 2e-16 ***\ndestination_hex1395  0.1843459  0.0169928    10.848  &lt; 2e-16 ***\ndestination_hex1396  0.9925907  0.0163507    60.706  &lt; 2e-16 ***\ndestination_hex1397 -0.3458499  0.0172940   -19.998  &lt; 2e-16 ***\ndestination_hex1398 -0.5031663  0.0207750   -24.220  &lt; 2e-16 ***\ndestination_hex1400 -1.1258142  0.0191103   -58.911  &lt; 2e-16 ***\ndestination_hex1401  0.8987602  0.0158580    56.675  &lt; 2e-16 ***\ndestination_hex1402  0.1470833  0.0164237     8.956  &lt; 2e-16 ***\ndestination_hex1404 -0.0846353  0.0268587    -3.151 0.001626 ** \ndestination_hex1410  1.5845539  0.0159478    99.359  &lt; 2e-16 ***\ndestination_hex1411  0.7976796  0.0169214    47.140  &lt; 2e-16 ***\ndestination_hex1412  1.3401547  0.0160068    83.724  &lt; 2e-16 ***\ndestination_hex1413  0.8950656  0.0163818    54.638  &lt; 2e-16 ***\ndestination_hex1414  0.2057050  0.0165770    12.409  &lt; 2e-16 ***\ndestination_hex1415  0.8160827  0.0163913    49.788  &lt; 2e-16 ***\ndestination_hex1416  0.1126473  0.0172556     6.528 6.66e-11 ***\ndestination_hex1417  0.3495037  0.0164919    21.192  &lt; 2e-16 ***\ndestination_hex1418  0.3458073  0.0165368    20.911  &lt; 2e-16 ***\ndestination_hex1419 -0.0844568  0.0173016    -4.881 1.05e-06 ***\ndestination_hex1422 -0.1760185  0.0167114   -10.533  &lt; 2e-16 ***\ndestination_hex1423  0.3911444  0.0163613    23.907  &lt; 2e-16 ***\ndestination_hex1430  1.1467161  0.0162369    70.624  &lt; 2e-16 ***\ndestination_hex1431  1.7740679  0.0158887   111.656  &lt; 2e-16 ***\ndestination_hex1432  1.2815283  0.0160051    80.070  &lt; 2e-16 ***\ndestination_hex1433  0.2781011  0.0180232    15.430  &lt; 2e-16 ***\ndestination_hex1434  1.3466190  0.0160257    84.029  &lt; 2e-16 ***\ndestination_hex1435  0.8489885  0.0161745    52.489  &lt; 2e-16 ***\ndestination_hex1436 -0.2861292  0.0187810   -15.235  &lt; 2e-16 ***\ndestination_hex1437  0.2045693  0.0167367    12.223  &lt; 2e-16 ***\ndestination_hex1438  0.7464645  0.0160491    46.511  &lt; 2e-16 ***\ndestination_hex1439  1.5870021  0.0158647   100.033  &lt; 2e-16 ***\ndestination_hex1440  0.8102889  0.0166533    48.656  &lt; 2e-16 ***\ndestination_hex1442 -1.9638990  0.0226509   -86.703  &lt; 2e-16 ***\ndestination_hex1443 -0.5394550  0.0166484   -32.403  &lt; 2e-16 ***\ndestination_hex1444  0.8217186  0.0166272    49.420  &lt; 2e-16 ***\ndestination_hex1452  1.7479747  0.0158162   110.518  &lt; 2e-16 ***\ndestination_hex1453  1.2291648  0.0162454    75.662  &lt; 2e-16 ***\ndestination_hex1454  0.1213728  0.0190675     6.365 1.95e-10 ***\ndestination_hex1455  0.7297446  0.0169800    42.977  &lt; 2e-16 ***\ndestination_hex1456  0.7172079  0.0165147    43.428  &lt; 2e-16 ***\ndestination_hex1457  1.6146279  0.0161121   100.212  &lt; 2e-16 ***\ndestination_hex1458  2.2748814  0.0156919   144.972  &lt; 2e-16 ***\ndestination_hex1459 -0.5542605  0.0174632   -31.739  &lt; 2e-16 ***\ndestination_hex1460  0.7738106  0.0160827    48.114  &lt; 2e-16 ***\ndestination_hex1461  0.5323020  0.0168120    31.662  &lt; 2e-16 ***\ndestination_hex1464 -0.9770407  0.0171080   -57.110  &lt; 2e-16 ***\ndestination_hex1465 -1.2053545  0.0187175   -64.397  &lt; 2e-16 ***\ndestination_hex1472  0.7936633  0.0170015    46.682  &lt; 2e-16 ***\ndestination_hex1473  1.7720267  0.0159011   111.440  &lt; 2e-16 ***\ndestination_hex1474  1.5294957  0.0158458    96.524  &lt; 2e-16 ***\ndestination_hex1475  1.3939067  0.0160073    87.079  &lt; 2e-16 ***\ndestination_hex1476  0.3142513  0.0170128    18.471  &lt; 2e-16 ***\ndestination_hex1477  2.1073631  0.0156748   134.443  &lt; 2e-16 ***\ndestination_hex1478  0.4108062  0.0163565    25.116  &lt; 2e-16 ***\ndestination_hex1479 -0.2741396  0.0171661   -15.970  &lt; 2e-16 ***\ndestination_hex1480  2.0199102  0.0156863   128.769  &lt; 2e-16 ***\ndestination_hex1481  0.4370370  0.0165478    26.411  &lt; 2e-16 ***\ndestination_hex1482  1.4534794  0.0162142    89.642  &lt; 2e-16 ***\ndestination_hex1485 -1.5602686  0.0198968   -78.418  &lt; 2e-16 ***\ndestination_hex1494  1.4215457  0.0160454    88.595  &lt; 2e-16 ***\ndestination_hex1495  0.7064543  0.0165481    42.691  &lt; 2e-16 ***\ndestination_hex1496  1.4308756  0.0158932    90.031  &lt; 2e-16 ***\ndestination_hex1497  0.3530622  0.0170619    20.693  &lt; 2e-16 ***\ndestination_hex1498  0.5566127  0.0166389    33.452  &lt; 2e-16 ***\ndestination_hex1499  0.5390478  0.0161575    33.362  &lt; 2e-16 ***\ndestination_hex150   0.6605642  0.0383715    17.215  &lt; 2e-16 ***\ndestination_hex1500  0.4436409  0.0176032    25.202  &lt; 2e-16 ***\ndestination_hex1501  1.0103492  0.0159720    63.258  &lt; 2e-16 ***\ndestination_hex1502  0.8385124  0.0160765    52.158  &lt; 2e-16 ***\ndestination_hex1506 -7.0220038  0.0649873  -108.052  &lt; 2e-16 ***\ndestination_hex151   0.5506370  0.0268010    20.545  &lt; 2e-16 ***\ndestination_hex1515  0.4502354  0.0206636    21.789  &lt; 2e-16 ***\ndestination_hex1516  1.1842305  0.0159079    74.443  &lt; 2e-16 ***\ndestination_hex1517  0.7235802  0.0167481    43.204  &lt; 2e-16 ***\ndestination_hex1518 -0.0866060  0.0173279    -4.998 5.79e-07 ***\ndestination_hex1519 -0.1475244  0.0175424    -8.410  &lt; 2e-16 ***\ndestination_hex152   1.9295719  0.0217189    88.843  &lt; 2e-16 ***\ndestination_hex1520  0.0228332  0.0168922     1.352 0.176472    \ndestination_hex1521 -0.0298889  0.0171403    -1.744 0.081197 .  \ndestination_hex1522  0.7726082  0.0162101    47.662  &lt; 2e-16 ***\ndestination_hex1523  1.6468497  0.0161004   102.286  &lt; 2e-16 ***\ndestination_hex1524 -0.3698268  0.0192662   -19.196  &lt; 2e-16 ***\ndestination_hex1527 -3.1200256  0.0325270   -95.921  &lt; 2e-16 ***\ndestination_hex153   1.1280482  0.0214353    52.626  &lt; 2e-16 ***\ndestination_hex1535  0.4905607  0.0581072     8.442  &lt; 2e-16 ***\ndestination_hex1536 -0.4818132  0.0265804   -18.127  &lt; 2e-16 ***\ndestination_hex1537  0.9716529  0.0165146    58.836  &lt; 2e-16 ***\ndestination_hex1538  0.8881344  0.0162688    54.591  &lt; 2e-16 ***\ndestination_hex1539  0.9668325  0.0161066    60.027  &lt; 2e-16 ***\ndestination_hex154  -0.6679268  0.0311796   -21.422  &lt; 2e-16 ***\ndestination_hex1540  0.2270522  0.0166072    13.672  &lt; 2e-16 ***\ndestination_hex1541  0.2046667  0.0170539    12.001  &lt; 2e-16 ***\ndestination_hex1542 -0.0442726  0.0181482    -2.440 0.014708 *  \ndestination_hex1543 -0.4373265  0.0300742   -14.542  &lt; 2e-16 ***\ndestination_hex1544 -0.4166834  0.0178899   -23.292  &lt; 2e-16 ***\ndestination_hex1547 -0.7241768  0.0214138   -33.818  &lt; 2e-16 ***\ndestination_hex155  -0.1907460  0.0237418    -8.034 9.42e-16 ***\ndestination_hex1556  0.0250048  0.0631027     0.396 0.691917    \ndestination_hex1557 -0.1674141  0.0220482    -7.593 3.12e-14 ***\ndestination_hex1558  0.7474158  0.0197707    37.804  &lt; 2e-16 ***\ndestination_hex1559  1.4431255  0.0159347    90.565  &lt; 2e-16 ***\ndestination_hex156  -0.3752911  0.0253983   -14.776  &lt; 2e-16 ***\ndestination_hex1560  1.4644068  0.0159161    92.008  &lt; 2e-16 ***\ndestination_hex1561  0.6070434  0.0167530    36.235  &lt; 2e-16 ***\ndestination_hex1562 -1.5901277  0.0227381   -69.932  &lt; 2e-16 ***\ndestination_hex1563 -0.6077636  0.0179191   -33.917  &lt; 2e-16 ***\ndestination_hex1564 -0.1483990  0.0174662    -8.496  &lt; 2e-16 ***\ndestination_hex1565  0.3497902  0.0166525    21.005  &lt; 2e-16 ***\ndestination_hex1566 -1.4678676  0.0224931   -65.258  &lt; 2e-16 ***\ndestination_hex1567 -1.1823886  0.0232173   -50.927  &lt; 2e-16 ***\ndestination_hex1568 -0.4540921  0.0196103   -23.156  &lt; 2e-16 ***\ndestination_hex1578 -0.4969661  0.1017251    -4.885 1.03e-06 ***\ndestination_hex1580 -1.4035292  0.0282728   -49.642  &lt; 2e-16 ***\ndestination_hex1581  1.0775712  0.0161468    66.736  &lt; 2e-16 ***\ndestination_hex1582  1.0566951  0.0159578    66.218  &lt; 2e-16 ***\ndestination_hex1583 -1.7843537  0.0253863   -70.288  &lt; 2e-16 ***\ndestination_hex1584 -0.6179766  0.0195667   -31.583  &lt; 2e-16 ***\ndestination_hex1585  0.2628045  0.0171992    15.280  &lt; 2e-16 ***\ndestination_hex1586  0.8381884  0.0162858    51.467  &lt; 2e-16 ***\ndestination_hex1589 -1.6126929  0.0265913   -60.647  &lt; 2e-16 ***\ndestination_hex1590 -0.4580054  0.0203058   -22.555  &lt; 2e-16 ***\ndestination_hex1600  0.2810439  0.0213049    13.191  &lt; 2e-16 ***\ndestination_hex1601 -0.2920727  0.0170338   -17.147  &lt; 2e-16 ***\ndestination_hex1602  0.6225098  0.0167720    37.116  &lt; 2e-16 ***\ndestination_hex1603  1.3145488  0.0159646    82.341  &lt; 2e-16 ***\ndestination_hex1604 -0.6647538  0.0185144   -35.905  &lt; 2e-16 ***\ndestination_hex1605  0.0932577  0.0164763     5.660 1.51e-08 ***\ndestination_hex1606 -0.1856474  0.0203882    -9.106  &lt; 2e-16 ***\ndestination_hex1607  0.8702813  0.0160452    54.239  &lt; 2e-16 ***\ndestination_hex1608  0.1831310  0.0166653    10.989  &lt; 2e-16 ***\ndestination_hex1609  0.6963191  0.0163070    42.701  &lt; 2e-16 ***\ndestination_hex1610 -1.2822906  0.0305611   -41.958  &lt; 2e-16 ***\ndestination_hex1622  0.8918411  0.0194426    45.871  &lt; 2e-16 ***\ndestination_hex1623  1.0316759  0.0160384    64.325  &lt; 2e-16 ***\ndestination_hex1624  1.4901815  0.0159376    93.501  &lt; 2e-16 ***\ndestination_hex1625  0.7038204  0.0164355    42.823  &lt; 2e-16 ***\ndestination_hex1626  2.3900934  0.0156481   152.740  &lt; 2e-16 ***\ndestination_hex1627 -0.6336066  0.0177568   -35.683  &lt; 2e-16 ***\ndestination_hex1628  1.5578910  0.0158697    98.168  &lt; 2e-16 ***\ndestination_hex1629 -1.5770244  0.0208679   -75.572  &lt; 2e-16 ***\ndestination_hex1630 -1.0968108  0.0192021   -57.119  &lt; 2e-16 ***\ndestination_hex1631 -1.5439003  0.0243205   -63.481  &lt; 2e-16 ***\ndestination_hex1642 -2.0351397  0.0356375   -57.107  &lt; 2e-16 ***\ndestination_hex1643  0.5348126  0.0165082    32.397  &lt; 2e-16 ***\ndestination_hex1644  0.5806086  0.0173866    33.394  &lt; 2e-16 ***\ndestination_hex1645  0.4993657  0.0166526    29.987  &lt; 2e-16 ***\ndestination_hex1646  0.7965789  0.0172447    46.193  &lt; 2e-16 ***\ndestination_hex1647 -0.0802431  0.0165867    -4.838 1.31e-06 ***\ndestination_hex1648  0.0148274  0.0164891     0.899 0.368532    \ndestination_hex1649  0.7697347  0.0160145    48.065  &lt; 2e-16 ***\ndestination_hex1650 -0.2190944  0.0171993   -12.739  &lt; 2e-16 ***\ndestination_hex1664 -4.4764743  0.1173368   -38.151  &lt; 2e-16 ***\ndestination_hex1665  1.1748420  0.0159783    73.527  &lt; 2e-16 ***\ndestination_hex1666  1.2451956  0.0159779    77.932  &lt; 2e-16 ***\ndestination_hex1667  0.0810286  0.0220772     3.670 0.000242 ***\ndestination_hex1668  0.0706859  0.0168354     4.199 2.69e-05 ***\ndestination_hex1670  0.4350216  0.0161225    26.982  &lt; 2e-16 ***\ndestination_hex1671 -0.0268345  0.0186580    -1.438 0.150370    \ndestination_hex1672 -0.8572326  0.0193597   -44.279  &lt; 2e-16 ***\ndestination_hex1684  0.5775331  0.0180930    31.920  &lt; 2e-16 ***\ndestination_hex1685 -0.1508387  0.0176974    -8.523  &lt; 2e-16 ***\ndestination_hex1686  0.5992865  0.0164690    36.389  &lt; 2e-16 ***\ndestination_hex1687  0.7925077  0.0168537    47.023  &lt; 2e-16 ***\ndestination_hex1688  0.1222121  0.0168232     7.265 3.74e-13 ***\ndestination_hex1689 -0.6440417  0.0181996   -35.388  &lt; 2e-16 ***\ndestination_hex1690 -1.5135223  0.0198925   -76.085  &lt; 2e-16 ***\ndestination_hex1691  0.5464886  0.0161083    33.926  &lt; 2e-16 ***\ndestination_hex1692 -1.2472021  0.0205497   -60.692  &lt; 2e-16 ***\ndestination_hex1706  0.4971716  0.0172169    28.877  &lt; 2e-16 ***\ndestination_hex1707 -0.3617671  0.0174007   -20.790  &lt; 2e-16 ***\ndestination_hex1708  0.3529779  0.0166322    21.223  &lt; 2e-16 ***\ndestination_hex1709  0.9966738  0.0161283    61.797  &lt; 2e-16 ***\ndestination_hex1710  0.8003842  0.0162596    49.225  &lt; 2e-16 ***\ndestination_hex1711  1.4029498  0.0158600    88.458  &lt; 2e-16 ***\ndestination_hex1712  0.4774259  0.0160555    29.736  &lt; 2e-16 ***\ndestination_hex1713 -1.7810039  0.0216325   -82.330  &lt; 2e-16 ***\ndestination_hex1714 -0.3670550  0.0174551   -21.029  &lt; 2e-16 ***\ndestination_hex172  -0.5408365  0.0480496   -11.256  &lt; 2e-16 ***\ndestination_hex1727  0.9756834  0.0163668    59.613  &lt; 2e-16 ***\ndestination_hex1728  0.9523655  0.0160913    59.185  &lt; 2e-16 ***\ndestination_hex1729  1.0609071  0.0160234    66.210  &lt; 2e-16 ***\ndestination_hex1730 -0.3120655  0.0177173   -17.614  &lt; 2e-16 ***\ndestination_hex1731  0.5229295  0.0162900    32.101  &lt; 2e-16 ***\ndestination_hex1732  0.3560925  0.0161291    22.078  &lt; 2e-16 ***\ndestination_hex1733 -0.7368215  0.0173966   -42.354  &lt; 2e-16 ***\ndestination_hex1734  0.1895685  0.0162020    11.700  &lt; 2e-16 ***\ndestination_hex1735 -0.8045707  0.0208655   -38.560  &lt; 2e-16 ***\ndestination_hex174   0.7129797  0.0226440    31.486  &lt; 2e-16 ***\ndestination_hex1748 -0.2527951  0.0177735   -14.223  &lt; 2e-16 ***\ndestination_hex1749  1.1209143  0.0159559    70.251  &lt; 2e-16 ***\ndestination_hex175   0.6809935  0.0195127    34.900  &lt; 2e-16 ***\ndestination_hex1750  1.0156969  0.0160299    63.363  &lt; 2e-16 ***\ndestination_hex1751  0.5911491  0.0166229    35.562  &lt; 2e-16 ***\ndestination_hex1753  0.7098618  0.0161013    44.087  &lt; 2e-16 ***\ndestination_hex1754  1.7868529  0.0156940   113.856  &lt; 2e-16 ***\ndestination_hex1755  1.0068866  0.0158624    63.476  &lt; 2e-16 ***\ndestination_hex1756 -0.1435823  0.0164309    -8.739  &lt; 2e-16 ***\ndestination_hex1757 -2.5538701  0.0268390   -95.155  &lt; 2e-16 ***\ndestination_hex176  -1.3694811  0.0353861   -38.701  &lt; 2e-16 ***\ndestination_hex1769  0.4452735  0.0167189    26.633  &lt; 2e-16 ***\ndestination_hex1770  0.4669318  0.0171257    27.265  &lt; 2e-16 ***\ndestination_hex1771  1.0668358  0.0162321    65.724  &lt; 2e-16 ***\ndestination_hex1772  2.3661934  0.0169648   139.476  &lt; 2e-16 ***\ndestination_hex1774 -0.1053481  0.0169168    -6.227 4.74e-10 ***\ndestination_hex1775 -0.7451782  0.0173546   -42.938  &lt; 2e-16 ***\ndestination_hex1776  1.5987498  0.0157191   101.708  &lt; 2e-16 ***\ndestination_hex1777 -0.4782124  0.0171121   -27.946  &lt; 2e-16 ***\ndestination_hex1778 -1.2066008  0.0212198   -56.862  &lt; 2e-16 ***\ndestination_hex1790  1.2399110  0.0162296    76.398  &lt; 2e-16 ***\ndestination_hex1791  0.5604823  0.0165021    33.964  &lt; 2e-16 ***\ndestination_hex1792  0.6315823  0.0169980    37.156  &lt; 2e-16 ***\ndestination_hex1793  0.6957636  0.0164542    42.285  &lt; 2e-16 ***\ndestination_hex1794  2.4509222  0.0171491   142.918  &lt; 2e-16 ***\ndestination_hex1795 -1.7311157  0.0264250   -65.511  &lt; 2e-16 ***\ndestination_hex1796  0.3227680  0.0163753    19.711  &lt; 2e-16 ***\ndestination_hex1797  0.0996416  0.0163915     6.079 1.21e-09 ***\ndestination_hex1798  0.2068659  0.0163115    12.682  &lt; 2e-16 ***\ndestination_hex1799 -1.3667000  0.0186713   -73.198  &lt; 2e-16 ***\ndestination_hex1800 -2.3431926  0.0527698   -44.404  &lt; 2e-16 ***\ndestination_hex1811  0.3126507  0.0171666    18.213  &lt; 2e-16 ***\ndestination_hex1812  1.5727323  0.0158252    99.382  &lt; 2e-16 ***\ndestination_hex1813  1.7195803  0.0158048   108.801  &lt; 2e-16 ***\ndestination_hex1817 -1.2269217  0.0194413   -63.109  &lt; 2e-16 ***\ndestination_hex1818 -0.2946903  0.0166101   -17.742  &lt; 2e-16 ***\ndestination_hex1819  1.5563467  0.0157609    98.747  &lt; 2e-16 ***\ndestination_hex1820 -3.6516664  0.0446494   -81.785  &lt; 2e-16 ***\ndestination_hex1832  1.5528563  0.0160084    97.002  &lt; 2e-16 ***\ndestination_hex1833  0.2007202  0.0169305    11.856  &lt; 2e-16 ***\ndestination_hex1834  0.0640055  0.0168499     3.799 0.000146 ***\ndestination_hex1835  0.2260435  0.0171395    13.188  &lt; 2e-16 ***\ndestination_hex1837  0.0975939  0.0206673     4.722 2.33e-06 ***\ndestination_hex1839 -1.1033983  0.0192331   -57.370  &lt; 2e-16 ***\ndestination_hex1840  1.5243295  0.0158052    96.445  &lt; 2e-16 ***\ndestination_hex1841 -2.0235074  0.0272402   -74.284  &lt; 2e-16 ***\ndestination_hex1842  0.0940814  0.0223495     4.210 2.56e-05 ***\ndestination_hex1853  0.5362167  0.0165111    32.476  &lt; 2e-16 ***\ndestination_hex1854  0.8030999  0.0163212    49.206  &lt; 2e-16 ***\ndestination_hex1855  1.1204556  0.0161262    69.481  &lt; 2e-16 ***\ndestination_hex1858  1.0951615  0.0176515    62.043  &lt; 2e-16 ***\ndestination_hex1860 -0.2430096  0.0236967   -10.255  &lt; 2e-16 ***\ndestination_hex1861 -0.4877306  0.0167185   -29.173  &lt; 2e-16 ***\ndestination_hex1874  0.2900860  0.0180358    16.084  &lt; 2e-16 ***\ndestination_hex1875 -1.7487119  0.0250673   -69.761  &lt; 2e-16 ***\ndestination_hex1876 -0.3795640  0.0267452   -14.192  &lt; 2e-16 ***\ndestination_hex1877  0.8976684  0.0162191    55.346  &lt; 2e-16 ***\ndestination_hex1880  0.2470164  0.0208642    11.839  &lt; 2e-16 ***\ndestination_hex1882  0.0086345  0.0167216     0.516 0.605599    \ndestination_hex1883 -0.9368155  0.0246650   -37.982  &lt; 2e-16 ***\ndestination_hex1895  0.8472301  0.0164018    51.655  &lt; 2e-16 ***\ndestination_hex1896 -0.1125159  0.0173135    -6.499 8.10e-11 ***\ndestination_hex1897 -0.8703667  0.0193724   -44.928  &lt; 2e-16 ***\ndestination_hex1898 -1.1634388  0.0283988   -40.968  &lt; 2e-16 ***\ndestination_hex1901 -0.3766431  0.0260085   -14.482  &lt; 2e-16 ***\ndestination_hex1903 -1.6360101  0.0230665   -70.926  &lt; 2e-16 ***\ndestination_hex1917 -0.1180916  0.0177545    -6.651 2.90e-11 ***\ndestination_hex1918  1.3912286  0.0166635    83.490  &lt; 2e-16 ***\ndestination_hex1919  1.0854224  0.0161357    67.268  &lt; 2e-16 ***\ndestination_hex1922  0.8895111  0.0185394    47.980  &lt; 2e-16 ***\ndestination_hex1924 -2.0607285  0.0242839   -84.860  &lt; 2e-16 ***\ndestination_hex1937  0.2521704  0.0172313    14.634  &lt; 2e-16 ***\ndestination_hex1938  1.0695114  0.0160931    66.458  &lt; 2e-16 ***\ndestination_hex1939  0.1185838  0.0174456     6.797 1.07e-11 ***\ndestination_hex1942 -0.5722213  0.0252838   -22.632  &lt; 2e-16 ***\ndestination_hex195  -1.4349487  0.0344125   -41.698  &lt; 2e-16 ***\ndestination_hex1959 -0.0307889  0.0179817    -1.712 0.086854 .  \ndestination_hex196   0.5791457  0.0190969    30.327  &lt; 2e-16 ***\ndestination_hex1960  2.3011739  0.0156654   146.895  &lt; 2e-16 ***\ndestination_hex1961 -0.2789473  0.0184034   -15.157  &lt; 2e-16 ***\ndestination_hex1962  0.2445529  0.0166655    14.674  &lt; 2e-16 ***\ndestination_hex1964  1.1428098  0.0191654    59.629  &lt; 2e-16 ***\ndestination_hex197  -2.0987424  0.0882229   -23.789  &lt; 2e-16 ***\ndestination_hex1979  0.2497432  0.0176198    14.174  &lt; 2e-16 ***\ndestination_hex1980 -0.0219652  0.0168305    -1.305 0.191863    \ndestination_hex1981 -0.1485405  0.0170992    -8.687  &lt; 2e-16 ***\ndestination_hex1982  0.7843751  0.0170188    46.089  &lt; 2e-16 ***\ndestination_hex1983  0.2510214  0.0166623    15.065  &lt; 2e-16 ***\ndestination_hex1984  0.5010745  0.0166855    30.031  &lt; 2e-16 ***\ndestination_hex1985  0.6243830  0.0164746    37.900  &lt; 2e-16 ***\ndestination_hex2001  0.4009348  0.0168029    23.861  &lt; 2e-16 ***\ndestination_hex2002  0.4934604  0.0162402    30.385  &lt; 2e-16 ***\ndestination_hex2003  1.1118365  0.0160635    69.215  &lt; 2e-16 ***\ndestination_hex2004  1.2429716  0.0160421    77.482  &lt; 2e-16 ***\ndestination_hex2005  0.4238011  0.0166957    25.384  &lt; 2e-16 ***\ndestination_hex2006  1.4122936  0.0161208    87.607  &lt; 2e-16 ***\ndestination_hex2007 -2.6984091  0.0320756   -84.127  &lt; 2e-16 ***\ndestination_hex2022  0.8959276  0.0167289    53.556  &lt; 2e-16 ***\ndestination_hex2023  0.7952053  0.0161716    49.173  &lt; 2e-16 ***\ndestination_hex2024  1.3098088  0.0159548    82.095  &lt; 2e-16 ***\ndestination_hex2025  0.0261678  0.0167718     1.560 0.118707    \ndestination_hex2026 -0.6027883  0.0191301   -31.510  &lt; 2e-16 ***\ndestination_hex2027  1.1713962  0.0161340    72.604  &lt; 2e-16 ***\ndestination_hex2043 -0.5762089  0.0188999   -30.487  &lt; 2e-16 ***\ndestination_hex2044  0.2853048  0.0166477    17.138  &lt; 2e-16 ***\ndestination_hex2045  0.1999790  0.0195606    10.224  &lt; 2e-16 ***\ndestination_hex2046  1.2797591  0.0158775    80.602  &lt; 2e-16 ***\ndestination_hex2047 -0.5640520  0.0178986   -31.514  &lt; 2e-16 ***\ndestination_hex2048 -0.2362411  0.0175515   -13.460  &lt; 2e-16 ***\ndestination_hex2049 -4.6843126  0.0314986  -148.715  &lt; 2e-16 ***\ndestination_hex2064  0.3432759  0.0170759    20.103  &lt; 2e-16 ***\ndestination_hex2065  0.0835347  0.0172731     4.836 1.32e-06 ***\ndestination_hex2066 -1.8628332  0.0348786   -53.409  &lt; 2e-16 ***\ndestination_hex2067  2.7230348  0.0156366   174.145  &lt; 2e-16 ***\ndestination_hex2068 -0.3637224  0.0198710   -18.304  &lt; 2e-16 ***\ndestination_hex2069 -0.0892169  0.0174835    -5.103 3.34e-07 ***\ndestination_hex2085 -0.1173690  0.0173690    -6.757 1.41e-11 ***\ndestination_hex2086  1.7717945  0.0159094   111.368  &lt; 2e-16 ***\ndestination_hex2087  1.5296289  0.0159784    95.731  &lt; 2e-16 ***\ndestination_hex2088  0.3805124  0.0164722    23.100  &lt; 2e-16 ***\ndestination_hex2089 -0.5932443  0.0179423   -33.064  &lt; 2e-16 ***\ndestination_hex2090  2.3937402  0.0156973   152.494  &lt; 2e-16 ***\ndestination_hex2091 -3.7122970  0.0636800   -58.296  &lt; 2e-16 ***\ndestination_hex2105  0.1308955  0.0771568     1.696 0.089793 .  \ndestination_hex2106 -0.9523853  0.0216252   -44.040  &lt; 2e-16 ***\ndestination_hex2107  1.6645267  0.0159251   104.522  &lt; 2e-16 ***\ndestination_hex2108  1.4554176  0.0161538    90.098  &lt; 2e-16 ***\ndestination_hex2109 -0.2301655  0.0167575   -13.735  &lt; 2e-16 ***\ndestination_hex2110 -0.7869864  0.0194740   -40.412  &lt; 2e-16 ***\ndestination_hex2111 -2.4609555  0.0364026   -67.604  &lt; 2e-16 ***\ndestination_hex2128  0.3235491  0.0180022    17.973  &lt; 2e-16 ***\ndestination_hex2129  0.5145404  0.0183314    28.069  &lt; 2e-16 ***\ndestination_hex2130 -0.1040681  0.0165688    -6.281 3.36e-10 ***\ndestination_hex2131  0.0357233  0.0171140     2.087 0.036855 *  \ndestination_hex2132  0.0206727  0.0171209     1.207 0.227259    \ndestination_hex2148 -0.2870025  0.0209472   -13.701  &lt; 2e-16 ***\ndestination_hex2149 -0.2236372  0.0188318   -11.876  &lt; 2e-16 ***\ndestination_hex215   0.6689809  0.0318270    21.019  &lt; 2e-16 ***\ndestination_hex2150 -1.0768701  0.0175726   -61.281  &lt; 2e-16 ***\ndestination_hex2151  1.8117804  0.0157895   114.746  &lt; 2e-16 ***\ndestination_hex2152  0.8451418  0.0163144    51.803  &lt; 2e-16 ***\ndestination_hex2153 -0.7952251  0.0191061   -41.621  &lt; 2e-16 ***\ndestination_hex216   0.8798034  0.0226903    38.774  &lt; 2e-16 ***\ndestination_hex217   0.6150031  0.0193103    31.848  &lt; 2e-16 ***\ndestination_hex2171  1.2209516  0.0163750    74.562  &lt; 2e-16 ***\ndestination_hex2172 -0.3590274  0.0191372   -18.761  &lt; 2e-16 ***\ndestination_hex2173 -0.0078277  0.0171470    -0.457 0.648026    \ndestination_hex2174  0.3368043  0.0169395    19.883  &lt; 2e-16 ***\ndestination_hex2191  1.4139761  0.0171505    82.445  &lt; 2e-16 ***\ndestination_hex2192 -0.0480420  0.0187660    -2.560 0.010466 *  \ndestination_hex2193  0.6902849  0.0166366    41.492  &lt; 2e-16 ***\ndestination_hex2194  0.4697051  0.0165438    28.392  &lt; 2e-16 ***\ndestination_hex2195 -0.9308483  0.0373220   -24.941  &lt; 2e-16 ***\ndestination_hex2212  1.0309843  0.0207960    49.576  &lt; 2e-16 ***\ndestination_hex2213  0.9507879  0.0175211    54.265  &lt; 2e-16 ***\ndestination_hex2214  2.1984962  0.0170552   128.905  &lt; 2e-16 ***\ndestination_hex2215  0.1764155  0.0181039     9.745  &lt; 2e-16 ***\ndestination_hex2216  1.0281764  0.0165740    62.035  &lt; 2e-16 ***\ndestination_hex2233  1.5155170  0.0183560    82.563  &lt; 2e-16 ***\ndestination_hex2234  2.2381155  0.0176543   126.775  &lt; 2e-16 ***\ndestination_hex2235  0.5377217  0.0181513    29.624  &lt; 2e-16 ***\ndestination_hex2236 -0.7714179  0.0205290   -37.577  &lt; 2e-16 ***\ndestination_hex2237  1.1495247  0.0194819    59.005  &lt; 2e-16 ***\ndestination_hex2256  0.8963630  0.0204461    43.840  &lt; 2e-16 ***\ndestination_hex2257 -1.5303811  0.0303080   -50.494  &lt; 2e-16 ***\ndestination_hex2258  0.6171034  0.0171577    35.967  &lt; 2e-16 ***\ndestination_hex2259  1.6954966  0.0185852    91.229  &lt; 2e-16 ***\ndestination_hex2277 -0.3305153  0.0291814   -11.326  &lt; 2e-16 ***\ndestination_hex2278 -0.1631750  0.0221344    -7.372 1.68e-13 ***\ndestination_hex2279  0.8434823  0.0171330    49.231  &lt; 2e-16 ***\ndestination_hex2280 -0.6963623  0.0355915   -19.565  &lt; 2e-16 ***\ndestination_hex2297 -0.2339732  0.0223235   -10.481  &lt; 2e-16 ***\ndestination_hex23    1.1887862  0.0492856    24.120  &lt; 2e-16 ***\ndestination_hex2300 -0.1185496  0.0251279    -4.718 2.38e-06 ***\ndestination_hex2301  0.4058047  0.0183855    22.072  &lt; 2e-16 ***\ndestination_hex2318  1.7714138  0.0164360   107.776  &lt; 2e-16 ***\ndestination_hex2319  1.7829596  0.0163606   108.979  &lt; 2e-16 ***\ndestination_hex2322  0.6754166  0.0181146    37.286  &lt; 2e-16 ***\ndestination_hex2337  1.3957151  0.0237481    58.772  &lt; 2e-16 ***\ndestination_hex2341  2.1360621  0.0162421   131.514  &lt; 2e-16 ***\ndestination_hex2343 -0.0817071  0.0200175    -4.082 4.47e-05 ***\ndestination_hex2361  0.5990055  0.0179096    33.446  &lt; 2e-16 ***\ndestination_hex2364 -1.0770680  0.0334147   -32.233  &lt; 2e-16 ***\ndestination_hex237  -1.5378793  0.0330742   -46.498  &lt; 2e-16 ***\ndestination_hex2379  0.1087527  0.0314172     3.462 0.000537 ***\ndestination_hex238  -0.5626943  0.0220277   -25.545  &lt; 2e-16 ***\ndestination_hex2384  1.8268849  0.0168396   108.487  &lt; 2e-16 ***\ndestination_hex239  -0.3392966  0.0338512   -10.023  &lt; 2e-16 ***\ndestination_hex2405  2.4455714  0.0162994   150.040  &lt; 2e-16 ***\ndestination_hex2406 -0.6056258  0.0285459   -21.216  &lt; 2e-16 ***\ndestination_hex2426  1.8731381  0.0190866    98.139  &lt; 2e-16 ***\ndestination_hex2427  2.1078528  0.0169454   124.391  &lt; 2e-16 ***\ndestination_hex2505  1.7572989  0.0245537    71.570  &lt; 2e-16 ***\ndestination_hex257   1.4702968  0.0220168    66.781  &lt; 2e-16 ***\ndestination_hex258  -0.4275818  0.0250750   -17.052  &lt; 2e-16 ***\ndestination_hex259   0.8524340  0.0199042    42.827  &lt; 2e-16 ***\ndestination_hex278   1.6734308  0.0222928    75.066  &lt; 2e-16 ***\ndestination_hex279   0.0811828  0.0203514     3.989 6.63e-05 ***\ndestination_hex280   0.7236260  0.0199812    36.215  &lt; 2e-16 ***\ndestination_hex298  -3.0506335  0.1337826   -22.803  &lt; 2e-16 ***\ndestination_hex299   0.1874716  0.0228622     8.200 2.40e-16 ***\ndestination_hex300   0.0553504  0.0229978     2.407 0.016094 *  \ndestination_hex320   1.5406277  0.0209157    73.659  &lt; 2e-16 ***\ndestination_hex321  -0.1757215  0.0279125    -6.295 3.07e-10 ***\ndestination_hex322   0.7552687  0.0196158    38.503  &lt; 2e-16 ***\ndestination_hex340   2.3810380  0.0193730   122.905  &lt; 2e-16 ***\ndestination_hex341   0.9842925  0.0199303    49.387  &lt; 2e-16 ***\ndestination_hex342   0.8913045  0.0186349    47.830  &lt; 2e-16 ***\ndestination_hex363   0.5454352  0.0208499    26.160  &lt; 2e-16 ***\ndestination_hex364   1.1973834  0.0175234    68.330  &lt; 2e-16 ***\ndestination_hex383   1.4449415  0.0182762    79.061  &lt; 2e-16 ***\ndestination_hex384  -2.1936378  0.0179599  -122.141  &lt; 2e-16 ***\ndestination_hex385   0.1389370  0.0218336     6.363 1.97e-10 ***\ndestination_hex404   1.3785272  0.0217872    63.272  &lt; 2e-16 ***\ndestination_hex405   0.7978607  0.0189640    42.072  &lt; 2e-16 ***\ndestination_hex406   1.5982275  0.0163378    97.824  &lt; 2e-16 ***\ndestination_hex407   1.1117219  0.0177232    62.727  &lt; 2e-16 ***\ndestination_hex408   2.2935742  0.0162224   141.383  &lt; 2e-16 ***\ndestination_hex425  -0.3918982  0.0284394   -13.780  &lt; 2e-16 ***\ndestination_hex426  -0.8558084  0.0189432   -45.178  &lt; 2e-16 ***\ndestination_hex427  -1.9879365  0.0278803   -71.303  &lt; 2e-16 ***\ndestination_hex428   0.1429069  0.0187737     7.612 2.70e-14 ***\ndestination_hex429  -0.2498455  0.0275317    -9.075  &lt; 2e-16 ***\ndestination_hex44    2.5053180  0.0277700    90.217  &lt; 2e-16 ***\ndestination_hex446   0.5232877  0.0269868    19.390  &lt; 2e-16 ***\ndestination_hex447  -0.1392964  0.0232752    -5.985 2.17e-09 ***\ndestination_hex448  -0.1026489  0.0193876    -5.295 1.19e-07 ***\ndestination_hex449  -0.5910395  0.0174412   -33.887  &lt; 2e-16 ***\ndestination_hex450  -0.2252214  0.0195815   -11.502  &lt; 2e-16 ***\ndestination_hex46    1.5559135  0.0259417    59.977  &lt; 2e-16 ***\ndestination_hex468   0.4522894  0.0186447    24.258  &lt; 2e-16 ***\ndestination_hex469  -0.5103317  0.0177032   -28.827  &lt; 2e-16 ***\ndestination_hex470  -0.0947924  0.0170234    -5.568 2.57e-08 ***\ndestination_hex471   0.0971193  0.0221151     4.392 1.13e-05 ***\ndestination_hex488   0.3391002  0.0271950    12.469  &lt; 2e-16 ***\ndestination_hex489  -1.6093622  0.0497386   -32.356  &lt; 2e-16 ***\ndestination_hex490   0.4988041  0.0176754    28.220  &lt; 2e-16 ***\ndestination_hex491  -2.1601433  0.0216250   -99.891  &lt; 2e-16 ***\ndestination_hex493  -2.6033067  0.0517478   -50.308  &lt; 2e-16 ***\ndestination_hex494  -0.7352740  0.0268258   -27.409  &lt; 2e-16 ***\ndestination_hex509   0.9815025  0.0214401    45.779  &lt; 2e-16 ***\ndestination_hex510   0.9114727  0.0183617    49.640  &lt; 2e-16 ***\ndestination_hex511  -0.1115208  0.0168389    -6.623 3.52e-11 ***\ndestination_hex512  -0.1990739  0.0167023   -11.919  &lt; 2e-16 ***\ndestination_hex513   1.1379677  0.0172461    65.984  &lt; 2e-16 ***\ndestination_hex514   0.4770694  0.0194616    24.513  &lt; 2e-16 ***\ndestination_hex515  -0.9229175  0.0329510   -28.009  &lt; 2e-16 ***\ndestination_hex530   0.0641379  0.0335039     1.914 0.055577 .  \ndestination_hex531   2.6362265  0.0166696   158.146  &lt; 2e-16 ***\ndestination_hex532   0.5139991  0.0178596    28.780  &lt; 2e-16 ***\ndestination_hex533   1.4109719  0.0158407    89.072  &lt; 2e-16 ***\ndestination_hex534   0.4067875  0.0167394    24.301  &lt; 2e-16 ***\ndestination_hex536  -0.4673862  0.0234721   -19.912  &lt; 2e-16 ***\ndestination_hex537  -1.1670711  0.0369437   -31.591  &lt; 2e-16 ***\ndestination_hex538  -1.5692648  0.0452405   -34.687  &lt; 2e-16 ***\ndestination_hex539  -5.2668165  0.5775717    -9.119  &lt; 2e-16 ***\ndestination_hex551   0.9018901  0.0236884    38.073  &lt; 2e-16 ***\ndestination_hex552   1.2467596  0.0187343    66.549  &lt; 2e-16 ***\ndestination_hex553  -0.0785298  0.0176659    -4.445 8.78e-06 ***\ndestination_hex554  -0.6984565  0.0169426   -41.225  &lt; 2e-16 ***\ndestination_hex555   0.5233914  0.0172301    30.377  &lt; 2e-16 ***\ndestination_hex559  -1.8997287  0.0567182   -33.494  &lt; 2e-16 ***\ndestination_hex560   0.6629469  0.0224952    29.471  &lt; 2e-16 ***\ndestination_hex561  -1.8132653  0.0690435   -26.263  &lt; 2e-16 ***\ndestination_hex572  -0.0866186  0.0359504    -2.409 0.015979 *  \ndestination_hex573   1.8035236  0.0185614    97.165  &lt; 2e-16 ***\ndestination_hex574  -0.5257457  0.0226819   -23.179  &lt; 2e-16 ***\ndestination_hex575   2.4458192  0.0156436   156.346  &lt; 2e-16 ***\ndestination_hex576  -0.0426010  0.0167479    -2.544 0.010970 *  \ndestination_hex578  -3.9048218  0.1077484   -36.240  &lt; 2e-16 ***\ndestination_hex582  -2.1369302  0.0677055   -31.562  &lt; 2e-16 ***\ndestination_hex583  -3.8396840  0.2187739   -17.551  &lt; 2e-16 ***\ndestination_hex584  -0.4935946  0.0381690   -12.932  &lt; 2e-16 ***\ndestination_hex593  -0.6990535  0.0283225   -24.682  &lt; 2e-16 ***\ndestination_hex594   0.9760421  0.0205358    47.529  &lt; 2e-16 ***\ndestination_hex595   0.8975940  0.0165469    54.245  &lt; 2e-16 ***\ndestination_hex596   0.0885354  0.0163155     5.426 5.75e-08 ***\ndestination_hex597  -0.6475877  0.0218553   -29.631  &lt; 2e-16 ***\ndestination_hex603  -1.5930612  0.0535299   -29.760  &lt; 2e-16 ***\ndestination_hex604  -1.0644839  0.0470537   -22.623  &lt; 2e-16 ***\ndestination_hex615  -0.2490286  0.0212590   -11.714  &lt; 2e-16 ***\ndestination_hex616   0.7382123  0.0176209    41.894  &lt; 2e-16 ***\ndestination_hex617  -0.6783702  0.0179619   -37.767  &lt; 2e-16 ***\ndestination_hex618  -0.1053650  0.0166671    -6.322 2.59e-10 ***\ndestination_hex620  -0.2957742  0.0193104   -15.317  &lt; 2e-16 ***\ndestination_hex637  -0.3354277  0.0189013   -17.746  &lt; 2e-16 ***\ndestination_hex638  -0.0620502  0.0164961    -3.762 0.000169 ***\ndestination_hex657   1.1405918  0.0169579    67.260  &lt; 2e-16 ***\ndestination_hex658   0.4320534  0.0165676    26.078  &lt; 2e-16 ***\ndestination_hex659   0.2400171  0.0164858    14.559  &lt; 2e-16 ***\ndestination_hex66    0.7901672  0.0473513    16.687  &lt; 2e-16 ***\ndestination_hex660   0.9057303  0.0159863    56.657  &lt; 2e-16 ***\ndestination_hex662   0.2789638  0.0190551    14.640  &lt; 2e-16 ***\ndestination_hex67    1.6036205  0.0222757    71.990  &lt; 2e-16 ***\ndestination_hex677   1.0090754  0.0180280    55.973  &lt; 2e-16 ***\ndestination_hex678  -0.5355106  0.0207194   -25.846  &lt; 2e-16 ***\ndestination_hex679   0.8916864  0.0162391    54.910  &lt; 2e-16 ***\ndestination_hex68    1.0920157  0.0258648    42.220  &lt; 2e-16 ***\ndestination_hex680   2.3415172  0.0156750   149.379  &lt; 2e-16 ***\ndestination_hex681  -1.2648077  0.0236467   -53.488  &lt; 2e-16 ***\ndestination_hex699   0.6586173  0.0178084    36.984  &lt; 2e-16 ***\ndestination_hex700   0.3565360  0.0168395    21.173  &lt; 2e-16 ***\ndestination_hex701  -2.1288027  0.0245569   -86.688  &lt; 2e-16 ***\ndestination_hex702   0.6639123  0.0161700    41.058  &lt; 2e-16 ***\ndestination_hex704  -0.0928704  0.0185102    -5.017 5.24e-07 ***\ndestination_hex722  -0.4709747  0.0182308   -25.834  &lt; 2e-16 ***\ndestination_hex725  -2.3870297  0.0309354   -77.162  &lt; 2e-16 ***\ndestination_hex741   1.3072565  0.0170108    76.849  &lt; 2e-16 ***\ndestination_hex743  -2.4927592  0.0260080   -95.846  &lt; 2e-16 ***\ndestination_hex744   0.5952392  0.0162016    36.740  &lt; 2e-16 ***\ndestination_hex761   1.6382570  0.0175554    93.319  &lt; 2e-16 ***\ndestination_hex762  -0.3379884  0.0199539   -16.938  &lt; 2e-16 ***\ndestination_hex763  -2.4170476  0.0255807   -94.487  &lt; 2e-16 ***\ndestination_hex764   1.2198896  0.0158474    76.977  &lt; 2e-16 ***\ndestination_hex765  -0.3874726  0.0180213   -21.501  &lt; 2e-16 ***\ndestination_hex767  -0.3445891  0.0168970   -20.394  &lt; 2e-16 ***\ndestination_hex772  -0.9024959  0.0379872   -23.758  &lt; 2e-16 ***\ndestination_hex784  -1.7786853  0.0251235   -70.798  &lt; 2e-16 ***\ndestination_hex785   0.2099135  0.0164083    12.793  &lt; 2e-16 ***\ndestination_hex786   0.0602097  0.0162450     3.706 0.000210 ***\ndestination_hex787  -0.3755278  0.0181598   -20.679  &lt; 2e-16 ***\ndestination_hex788  -2.2097988  0.0208271  -106.102  &lt; 2e-16 ***\ndestination_hex789  -2.7447032  0.0227814  -120.480  &lt; 2e-16 ***\ndestination_hex803   0.3883515  0.0207964    18.674  &lt; 2e-16 ***\ndestination_hex804   0.5204669  0.0168581    30.873  &lt; 2e-16 ***\ndestination_hex805   1.8225420  0.0157272   115.884  &lt; 2e-16 ***\ndestination_hex806  -0.3830464  0.0165747   -23.110  &lt; 2e-16 ***\ndestination_hex807  -0.3180873  0.0169789   -18.734  &lt; 2e-16 ***\ndestination_hex808  -2.1082289  0.0250765   -84.072  &lt; 2e-16 ***\ndestination_hex809  -0.2592403  0.0163629   -15.843  &lt; 2e-16 ***\ndestination_hex810  -0.7888293  0.0176522   -44.687  &lt; 2e-16 ***\ndestination_hex814   0.0212071  0.0248311     0.854 0.393076    \ndestination_hex819   1.9266353  0.0210658    91.458  &lt; 2e-16 ***\ndestination_hex824   0.5461505  0.0204589    26.695  &lt; 2e-16 ***\ndestination_hex826   0.0763996  0.0165973     4.603 4.16e-06 ***\ndestination_hex827  -0.4451573  0.0167432   -26.587  &lt; 2e-16 ***\ndestination_hex828  -0.0543241  0.0162481    -3.343 0.000828 ***\ndestination_hex829  -0.4090152  0.0174892   -23.387  &lt; 2e-16 ***\ndestination_hex830  -1.7267554  0.0200078   -86.304  &lt; 2e-16 ***\ndestination_hex831   1.8254412  0.0156799   116.419  &lt; 2e-16 ***\ndestination_hex832   1.2190587  0.0160249    76.073  &lt; 2e-16 ***\ndestination_hex835  -0.7666582  0.0254775   -30.092  &lt; 2e-16 ***\ndestination_hex844   0.0453956  0.0236888     1.916 0.055323 .  \ndestination_hex846  -0.0595007  0.0169721    -3.506 0.000455 ***\ndestination_hex847   0.9161139  0.0160851    56.954  &lt; 2e-16 ***\ndestination_hex848  -0.1188273  0.0166576    -7.134 9.78e-13 ***\ndestination_hex849  -0.9244399  0.0175318   -52.729  &lt; 2e-16 ***\ndestination_hex850  -0.0891826  0.0164713    -5.414 6.15e-08 ***\ndestination_hex851  -0.4658468  0.0166045   -28.055  &lt; 2e-16 ***\ndestination_hex852  -0.5136014  0.0175796   -29.216  &lt; 2e-16 ***\ndestination_hex853   0.0342241  0.0176788     1.936 0.052882 .  \ndestination_hex854   0.2560022  0.0210023    12.189  &lt; 2e-16 ***\ndestination_hex855  -0.5381096  0.0249706   -21.550  &lt; 2e-16 ***\ndestination_hex856  -1.6107042  0.0355292   -45.335  &lt; 2e-16 ***\ndestination_hex86    1.4720357  0.0393509    37.408  &lt; 2e-16 ***\ndestination_hex866   0.9858791  0.0184205    53.521  &lt; 2e-16 ***\ndestination_hex867   1.5880741  0.0161042    98.613  &lt; 2e-16 ***\ndestination_hex868   1.1132509  0.0163125    68.245  &lt; 2e-16 ***\ndestination_hex869   2.0122528  0.0162859   123.558  &lt; 2e-16 ***\ndestination_hex87   -1.8430958  0.0897622   -20.533  &lt; 2e-16 ***\ndestination_hex870   1.5069166  0.0157134    95.900  &lt; 2e-16 ***\ndestination_hex871   1.4809079  0.0159653    92.758  &lt; 2e-16 ***\ndestination_hex872  -0.0230151  0.0163879    -1.404 0.160202    \ndestination_hex873  -0.3632177  0.0173449   -20.941  &lt; 2e-16 ***\ndestination_hex874  -2.2114808  0.0204343  -108.224  &lt; 2e-16 ***\ndestination_hex875  -1.3255216  0.0324910   -40.797  &lt; 2e-16 ***\ndestination_hex876  -0.9427180  0.0245596   -38.385  &lt; 2e-16 ***\ndestination_hex877   0.1242916  0.0214728     5.788 7.11e-09 ***\ndestination_hex88    1.1042917  0.0241332    45.758  &lt; 2e-16 ***\ndestination_hex887   0.1952162  0.0175210    11.142  &lt; 2e-16 ***\ndestination_hex888  -0.9158285  0.0205216   -44.627  &lt; 2e-16 ***\ndestination_hex889  -0.2738996  0.0200724   -13.646  &lt; 2e-16 ***\ndestination_hex89    0.2684227  0.0282404     9.505  &lt; 2e-16 ***\ndestination_hex890   0.6955251  0.0161732    43.005  &lt; 2e-16 ***\ndestination_hex891  -1.4667185  0.0213501   -68.698  &lt; 2e-16 ***\ndestination_hex893   0.4628824  0.0160382    28.861  &lt; 2e-16 ***\ndestination_hex894  -1.2844107  0.0193309   -66.444  &lt; 2e-16 ***\ndestination_hex895  -0.1134022  0.0179827    -6.306 2.86e-10 ***\ndestination_hex896  -2.3343314  0.0337072   -69.253  &lt; 2e-16 ***\ndestination_hex897  -2.1356463  0.0312938   -68.245  &lt; 2e-16 ***\ndestination_hex898  -0.1820836  0.0210695    -8.642  &lt; 2e-16 ***\ndestination_hex90   -2.1700237  0.5006794    -4.334 1.46e-05 ***\ndestination_hex908   0.9051761  0.0188415    48.042  &lt; 2e-16 ***\ndestination_hex909   0.0398940  0.0167202     2.386 0.017034 *  \ndestination_hex910  -0.8131626  0.0194283   -41.855  &lt; 2e-16 ***\ndestination_hex911   1.3306871  0.0159530    83.413  &lt; 2e-16 ***\ndestination_hex912  -0.4875820  0.0170012   -28.679  &lt; 2e-16 ***\ndestination_hex915  -0.1455502  0.0165040    -8.819  &lt; 2e-16 ***\ndestination_hex917   1.0366212  0.0163796    63.288  &lt; 2e-16 ***\ndestination_hex918  -2.9661895  0.0427750   -69.344  &lt; 2e-16 ***\ndestination_hex919  -1.5641955  0.0212485   -73.615  &lt; 2e-16 ***\ndestination_hex928  -1.0249513  0.0231839   -44.210  &lt; 2e-16 ***\ndestination_hex929  -0.0858629  0.0169781    -5.057 4.25e-07 ***\ndestination_hex930   0.6019762  0.0159268    37.796  &lt; 2e-16 ***\ndestination_hex931  -0.2194392  0.0184907   -11.868  &lt; 2e-16 ***\ndestination_hex932  -2.5420069  0.0288619   -88.075  &lt; 2e-16 ***\ndestination_hex933   0.2992369  0.0171468    17.451  &lt; 2e-16 ***\ndestination_hex934  -0.4136514  0.0174019   -23.770  &lt; 2e-16 ***\ndestination_hex935   1.8351125  0.0156134   117.534  &lt; 2e-16 ***\ndestination_hex938  -4.9166591  0.1748272   -28.123  &lt; 2e-16 ***\ndestination_hex939   1.9253735  0.0158486   121.485  &lt; 2e-16 ***\ndestination_hex940  -2.0272457  0.0241425   -83.970  &lt; 2e-16 ***\ndestination_hex949  -0.6799055  0.0211374   -32.166  &lt; 2e-16 ***\ndestination_hex950   1.0119990  0.0162881    62.131  &lt; 2e-16 ***\ndestination_hex951   1.7852820  0.0157167   113.592  &lt; 2e-16 ***\ndestination_hex952   0.9036658  0.0172509    52.384  &lt; 2e-16 ***\ndestination_hex953   0.2385970  0.0176755    13.499  &lt; 2e-16 ***\ndestination_hex954  -1.8781100  0.0230242   -81.571  &lt; 2e-16 ***\ndestination_hex955   1.0230126  0.0160191    63.862  &lt; 2e-16 ***\ndestination_hex956  -0.6703838  0.0178915   -37.469  &lt; 2e-16 ***\ndestination_hex957  -0.4862085  0.0175847   -27.650  &lt; 2e-16 ***\ndestination_hex959  -0.1393895  0.0268822    -5.185 2.16e-07 ***\ndestination_hex961  -0.8188427  0.0195951   -41.788  &lt; 2e-16 ***\ndestination_hex962   1.4713358  0.0162433    90.581  &lt; 2e-16 ***\ndestination_hex970   0.7142491  0.0166288    42.953  &lt; 2e-16 ***\ndestination_hex971   0.7981671  0.0160989    49.579  &lt; 2e-16 ***\ndestination_hex972  -0.3925277  0.0169587   -23.146  &lt; 2e-16 ***\ndestination_hex974  -0.4918882  0.0186093   -26.432  &lt; 2e-16 ***\ndestination_hex975  -1.5005453  0.0222305   -67.499  &lt; 2e-16 ***\ndestination_hex976  -0.9269298  0.0190122   -48.754  &lt; 2e-16 ***\ndestination_hex977  -0.4599643  0.0166699   -27.592  &lt; 2e-16 ***\ndestination_hex978  -3.3593471  0.0195181  -172.115  &lt; 2e-16 ***\ndestination_hex982  -1.2867218  0.0188465   -68.274  &lt; 2e-16 ***\ndestination_hex983   4.4599209  0.0191106   233.374  &lt; 2e-16 ***\ndestination_hex984   2.8353507  0.0165307   171.520  &lt; 2e-16 ***\ndestination_hex991   0.7945254  0.0168896    47.042  &lt; 2e-16 ***\ndestination_hex992   0.9132607  0.0163464    55.869  &lt; 2e-16 ***\ndestination_hex993  -0.6755633  0.0181387   -37.244  &lt; 2e-16 ***\ndestination_hex994  -0.6145311  0.0190532   -32.253  &lt; 2e-16 ***\ndestination_hex995   0.0120222  0.0173293     0.694 0.487839    \ndestination_hex996  -0.7846182  0.0188386   -41.650  &lt; 2e-16 ***\ndestination_hex997  -0.6156297  0.0206978   -29.744  &lt; 2e-16 ***\ndestination_hex998  -0.2347780  0.0164742   -14.251  &lt; 2e-16 ***\ndestination_hex999  -2.3796323  0.0195230  -121.889  &lt; 2e-16 ***\nlog(distance)       -1.3773447  0.0002468 -5579.969  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 27574285  on 63251  degrees of freedom\nAIC: 27934252\n\nNumber of Fisher Scoring iterations: 9\n\n\nCode\nCalcRSquared(docSIM$data$trips, docSIM$fitted.values)\n\n\n[1] 0.5336822"
  },
  {
    "objectID": "take-home/the2.html#visualize-the-result",
    "href": "take-home/the2.html#visualize-the-result",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.2 Visualize the Result",
    "text": "6.2 Visualize the Result\noriginSIM_fitted &lt;- as.data.frame(originSIM$fitted.values) %&gt;% round(digits = 0)\ndestSIM_fitted &lt;- as.data.frame(destSIM$fitted.values) %&gt;% round(digits = 0)\ndbcSIM_fitted &lt;- as.data.frame(dbcSIM$fitted.values) %&gt;% round(digits = 0)\nflow_attr &lt;- flow_attr %&gt;% cbind( originSIM_fitted, destSIM_fitted, dbcSIM_fitted ) %&gt;% rename( orc_trips = originSIM.fitted.values, destc_trips = destSIM.fitted.values, dbc_trips = dbcSIM.fitted.values )\np_orc &lt;- ggplot( data = flow_attr, aes(x = orc_trips, y = trips) ) + geom_point( size = flow_attr$trips/10000, alpha = .6 ) + xlim(0, 50000) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Origin-constrained”) + theme( plot.title = element_text(size = 10), axis.text.x = element_blank(), axis.ticks.x = element_blank() )\np_destc &lt;- ggplot( data = flow_attr, aes(x = destc_trips, y = trips) ) + geom_point( size = flow_attr$trips/10000, color = “#4d5887”, alpha = .6 ) + xlim(0, 50000) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Destination-constrained”) + theme( plot.title = element_text(size = 10), axis.text.y = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank() )\np_dbc &lt;- ggplot( data = flow_attr, aes(x = dbc_trips, y = trips) ) + geom_point( size = flow_attr$trips/10000, color = “#6D435A”, alpha = .6 ) + xlim(0, 50000) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Doubly-constrained”) + theme( plot.title = element_text(size = 10), axis.text.y = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank() )\np_orc + p_destc + p_dbc\nlog_orc &lt;- ggplot( data = flow_attr, aes(x = log(orc_trips), y = log(trips)) ) + geom_point( size = flow_attr$trips/10000, alpha = .6 ) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Log(Origin-constrained)”) + theme( plot.title = element_text(size = 10), axis.text.x = element_blank(), axis.text.y = element_blank(), axis.ticks.x = element_blank() )\nlog_destc &lt;- ggplot( data = flow_attr, aes(x = log(destc_trips), y = log(trips)) ) + geom_point( size = flow_attr$trips/10000, color = “#4d5887”, alpha = .6 ) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Log(Destination-constrained)”) + theme( plot.title = element_text(size = 10), axis.text.y = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank() )\nlog_dbc &lt;- ggplot( data = flow_attr, aes(x = log(dbc_trips), y = log(trips)) ) + geom_point( size = flow_attr$trips/10000, color = “#6D435A”, alpha = .6 ) + geom_smooth( method = lm, se = TRUE ) + labs(title = “Log(Doubly-constrained)”) + theme( plot.title = element_text(size = 10), axis.text.y = element_blank(), axis.text.x = element_blank(), axis.ticks.x = element_blank(), axis.title.y = element_blank() )\nlog_orc + log_destc + log_dbc"
  },
  {
    "objectID": "take-home/the2.html#conclusion",
    "href": "take-home/the2.html#conclusion",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.5 Conclusion",
    "text": "6.5 Conclusion"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "Exploring Geospatial Analytics Illustration\n\n\nHello there! I’m Muhamad Ameer Noor, and this is my space dedicated to the exciting world of geospatial analytics. Join me on this journey as I delve into the fascinating realm of spatial data analysis and its applications.\n\n\nOn this webpage, I’ll be sharing insights, discoveries, and projects related to geospatial analytics that I learned from ISSS624 - Applied Geospatial Analytics Course under Prof Kam Tin Seong during my MITB Programme at Singapore Management University. Whether you’re a fellow enthusiast, a student, or just curious about the power of location-based data, you’re in the right place!\n\n\n\nI’ll document my experiences and challenges as I navigate through ISSS624 Geospatial Analytics. Expect a mix of tutorials and case studies that showcase the practical applications of geospatial analytics.\n\n\n\nCurious about how this webpage was built? Check out the Quarto websites documentation\nThanks for stopping by, and let’s explore the world through geospatial analytics!"
  },
  {
    "objectID": "index.html#what-to-expect",
    "href": "index.html#what-to-expect",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "On this webpage, I’ll be sharing insights, discoveries, and projects related to geospatial analytics that I learned from ISSS624 - Applied Geospatial Analytics Course under Prof Kam Tin Seong during my MITB Programme at Singapore Management University. Whether you’re a fellow enthusiast, a student, or just curious about the power of location-based data, you’re in the right place!"
  },
  {
    "objectID": "index.html#learning-journey",
    "href": "index.html#learning-journey",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "I’ll document my experiences and challenges as I navigate through ISSS624 Geospatial Analytics. Expect a mix of tutorials and case studies that showcase the practical applications of geospatial analytics."
  },
  {
    "objectID": "index.html#dive-deeper",
    "href": "index.html#dive-deeper",
    "title": "Applied Geospatial Analytics (ISSS624)",
    "section": "",
    "text": "Curious about how this webpage was built? Check out the Quarto websites documentation\nThanks for stopping by, and let’s explore the world through geospatial analytics!"
  },
  {
    "objectID": "in-class/ice4.html",
    "href": "in-class/ice4.html",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "in-class/ice4.html#overview",
    "href": "in-class/ice4.html#overview",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "1.1 Overview",
    "text": "1.1 Overview\nIn this exercise, we are going to do the following: - Performing geocoding using data downloaded from data.gov.sg - Calibrating Geographically Weighted Poisson Regression - perform point-in-polygon count analysis - append the propulsiveness and attractiveness variables onto a flow data."
  },
  {
    "objectID": "in-class/ice4.html#getting-started",
    "href": "in-class/ice4.html#getting-started",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "1.2 Getting Started",
    "text": "1.2 Getting Started\n\n\nCode\npacman::p_load(tidyverse, sf, httr, tmap, dplyr)\n\n\n\n\n\n\n\n\nPackages Explanations\n\n\n\n\n\n\ntidyverse: A collection of R packages designed for data science that makes it easier to import, tidy, transform, visualize, and model data.\nsf: An R package that simplifies handling and manipulating geospatial data, providing simple features access for geographic data operations.\nhttr: A user-friendly package to make working with HTTP requests easier, providing useful tools for interacting with APIs and web services directly from R.\ntmap: An R package for creating thematic maps that can be static or interactive, offering a structured and comprehensive approach to visualizing spatial data.\n\n\n\n\n\n1.2.1 Geocoding using SLA API\nGeocoding is the conversion of an address or postal code into geographic coordinates, typically latitude and longitude. The Singapore Land Authority offers the OneMap API, specifically the Search API, which retrieves latitude, longitude, and x,y coordinates for a given address or postal code.\nTo perform geocoding using the SLA OneMap API, the provided code, written in R, reads input data from a CSV file using the read_csv function from the readr package. The httr package’s HTTP call functions are then used to send individual records to the OneMap geocoding server.\nThe geocoding process creates two data frames: found for successfully geocoded records and not_found for those that failed. The found data table is joined with the initial CSV data table using a unique identifier (POSTAL) and saved as a new CSV file named found.\n\n\nCode\nurl &lt;- \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\ncsv &lt;- read_csv(\"../data/aspatial/Generalinformationofschools.csv\")\npostcodes &lt;- csv$postal_code\n\nfound &lt;- data.frame()\nnot_found &lt;- data.frame()\n\nfor(postcode in postcodes){\n  query &lt;-list('searchVal' = postcode, 'returnGeom'='Y', 'getAddrDetails'='Y', 'pageNum' = '1')\n  res  &lt;- GET(url, query=query)\n  \n  if((content(res)$found)!=0)\n    found&lt;-rbind(found, data.frame(content(res))[4:13])\n  else {\n  not_found = data.frame(postcode)\n  }\n} \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nread_csv from readr package reads a CSV file into R, creating a data frame.\nA for loop in base R iterates over each postcode in postcodes.\nGET from httr package sends an HTTP GET request to a specified URL. Here, it is used to query a web API with specific parameters for each postcode.\ncontent from httr package extracts content from a response object returned by GET. It’s used to extract data from the API response.\nrbind from base R combines data frames by rows. In this code, it’s used to append new rows to found or not_found.\nThe code checks if each postcode has corresponding data in the API response (found) or not (not_found), and constructs two separate data frames accordingly.\n\n\n\n\nFirst, let’s check the Resulting Variables ::: panel-tabset #### url\n\n\nCode\nurl\n\n\n[1] \"https://www.onemap.gov.sg/api/common/elastic/search\"\n\n\n\ncsv\n\n\nCode\nglimpse(csv)\n\n\nRows: 346\nColumns: 31\n$ school_name        &lt;chr&gt; \"ADMIRALTY PRIMARY SCHOOL\", \"ADMIRALTY SECONDARY SC…\n$ url_address        &lt;chr&gt; \"https://admiraltypri.moe.edu.sg/\", \"http://www.adm…\n$ address            &lt;chr&gt; \"11   WOODLANDS CIRCLE\", \"31   WOODLANDS CRESCENT\",…\n$ postal_code        &lt;chr&gt; \"738907\", \"737916\", \"768643\", \"768928\", \"579646\", \"…\n$ telephone_no       &lt;chr&gt; \"63620598\", \"63651733\", \"67592906\", \"67585384\", \"64…\n$ telephone_no_2     &lt;chr&gt; \"na\", \"63654596\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ fax_no             &lt;chr&gt; \"63627512\", \"63652774\", \"67592927\", \"67557778\", \"64…\n$ fax_no_2           &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ email_address      &lt;chr&gt; \"ADMIRALTY_PS@MOE.EDU.SG\", \"Admiralty_SS@moe.edu.sg…\n$ mrt_desc           &lt;chr&gt; \"Admiralty Station\", \"ADMIRALTY MRT\", \"Yishun\", \"CA…\n$ bus_desc           &lt;chr&gt; \"TIBS 965, 964, 913\", \"904\", \"Yishun Ring Road - 81…\n$ principal_name     &lt;chr&gt; \"MR PEK WEE HAUR\", \"MR LAM YUI- P'NG\", \"MISS ONG LE…\n$ first_vp_name      &lt;chr&gt; \"MDM CHUA MUI LING\", \"MR NG SONG LIM STEVEN\", \"MADA…\n$ second_vp_name     &lt;chr&gt; \"MDM NUR SABARIAH BTE MOHD IBRAHIM\", \"MR SHEIK ALAU…\n$ third_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fourth_vp_name     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fifth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ sixth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ dgp_code           &lt;chr&gt; \"WOODLANDS\", \"WOODLANDS\", \"YISHUN\", \"YISHUN\", \"BISH…\n$ zone_code          &lt;chr&gt; \"NORTH\", \"NORTH\", \"NORTH\", \"NORTH\", \"SOUTH\", \"SOUTH…\n$ type_code          &lt;chr&gt; \"GOVERNMENT SCHOOL\", \"GOVERNMENT SCHOOL\", \"GOVERNME…\n$ nature_code        &lt;chr&gt; \"CO-ED SCHOOL\", \"CO-ED SCHOOL\", \"CO-ED SCHOOL\", \"CO…\n$ session_code       &lt;chr&gt; \"FULL DAY\", \"SINGLE SESSION\", \"SINGLE SESSION\", \"SI…\n$ mainlevel_code     &lt;chr&gt; \"PRIMARY\", \"SECONDARY\", \"PRIMARY\", \"SECONDARY\", \"PR…\n$ sap_ind            &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"Yes\", \"No\", \"No\", \"No\", \"N…\n$ autonomous_ind     &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ gifted_ind         &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ ip_ind             &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ mothertongue1_code &lt;chr&gt; \"Chinese\", \"Chinese\", \"Chinese\", \"Chinese\", \"Chines…\n$ mothertongue2_code &lt;chr&gt; \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"na\", \"Malay\", …\n$ mothertongue3_code &lt;chr&gt; \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"na\", \"Tamil\", …\n\n\n\n\npostcodes\n\n\nCode\nglimpse(postcodes)\n\n\n chr [1:346] \"738907\" \"737916\" \"768643\" \"768928\" \"579646\" \"159016\" \"544969\" ...\n\n\n\n\nfound\n\n\nCode\nglimpse(found)\n\n\nRows: 345\nColumns: 10\n$ results.SEARCHVAL &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.BLK_NO    &lt;chr&gt; \"11\", \"31\", \"10\", \"751\", \"100\", \"2A\", \"31\", \"19\", \"1…\n$ results.ROAD_NAME &lt;chr&gt; \"WOODLANDS CIRCLE\", \"WOODLANDS CRESCENT\", \"YISHUN ST…\n$ results.BUILDING  &lt;chr&gt; \"THE LEARNING HARBOUR @ ADMIRALTY PRIMARY SCHOOL\", \"…\n$ results.ADDRESS   &lt;chr&gt; \"11 WOODLANDS CIRCLE THE LEARNING HARBOUR @ ADMIRALT…\n$ results.POSTAL    &lt;chr&gt; \"738907\", \"737916\", \"768643\", \"768928\", \"579646\", \"1…\n$ results.X         &lt;chr&gt; \"24315.9398124339\", \"24559.0472937012\", \"27958.13714…\n$ results.Y         &lt;chr&gt; \"47135.3542042952\", \"47504.7873554379\", \"46096.26276…\n$ results.LATITUDE  &lt;chr&gt; \"1.44254963931583\", \"1.44589068910993\", \"1.433152715…\n$ results.LONGITUDE &lt;chr&gt; \"103.800213682734\", \"103.802398196596\", \"103.8329424…\n\n\n\n\nnot_found\n\n\nCode\nglimpse(not_found)\n\n\nRows: 1\nColumns: 1\n$ postcode &lt;chr&gt; \"677741\"\n\n\n:::\nNext, we combine both found and not_found into a single tibble dataframe.\n\n\nCode\nmerged = merge(csv, found, by.x = 'postal_code', by.y = 'results.POSTAL', all = TRUE)\n\n# manually add the Zhenghua Secondary School data\nmerged[merged$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LATITUDE\"] &lt;- 1.3887\nmerged[merged$school_name == \"ZHENGHUA SECONDARY SCHOOL\", \"results.LONGITUDE\"] &lt;- 103.7652\n\nwrite.csv(merged, file = \"../data/aspatial/schools.csv\")\nwrite.csv(not_found, file = \"../data/aspatial/not_found.csv\")\n\n# check the output\nglimpse(merged)\n\n\nRows: 350\nColumns: 40\n$ postal_code        &lt;chr&gt; \"088256\", \"099138\", \"099757\", \"099840\", \"109100\", \"…\n$ school_name        &lt;chr&gt; \"CANTONMENT PRIMARY SCHOOL\", \"CHIJ ST. THERESA'S CO…\n$ url_address        &lt;chr&gt; \"http://www.cantonmentpri.moe.edu.sg\", \"http://www.…\n$ address            &lt;chr&gt; \"1    Cantonment Close\", \"160  LOWER DELTA ROAD\", \"…\n$ telephone_no       &lt;chr&gt; \"65119555\", \"64775777\", \"62730096\", \"62733937\", \"62…\n$ telephone_no_2     &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ fax_no             &lt;chr&gt; \"65119556\", \"64775700\", \"62731710\", \"62763083\", \"62…\n$ fax_no_2           &lt;chr&gt; \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na\", \"na…\n$ email_address      &lt;chr&gt; \"cantonment_ps@moe.edu.sg\", \"CHIJSTCS@MOE.EDU.SG\", …\n$ mrt_desc           &lt;chr&gt; \"Tanjong Pagar Outram Park\", \"HARBOURFRONT MRT, TIO…\n$ bus_desc           &lt;chr&gt; \"75, 167, 196\", \"65, 121, 123, 123M, 124, 131, 131M…\n$ principal_name     &lt;chr&gt; \"MRS MANOKARA SUGUNAVATHI\", \"MDM TAN MEI MEI JENNY\"…\n$ first_vp_name      &lt;chr&gt; \"MRS AUDREA CHIN\", \"MDM ONG LEE LEE\", \"MS NG CHIOU …\n$ second_vp_name     &lt;chr&gt; \"MISS CHENG SHIN MIIN\", \"MISS KUO ZHAOYAN, FELICIA\"…\n$ third_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fourth_vp_name     &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ fifth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ sixth_vp_name      &lt;chr&gt; \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NU…\n$ dgp_code           &lt;chr&gt; \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT MERAH\", \"BUKIT…\n$ zone_code          &lt;chr&gt; \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH\", \"SOUTH…\n$ type_code          &lt;chr&gt; \"GOVERNMENT SCHOOL\", \"GOVERNMENT-AIDED SCH\", \"GOVER…\n$ nature_code        &lt;chr&gt; \"CO-ED SCHOOL\", \"GIRLS' SCHOOL\", \"GIRLS' SCHOOL\", \"…\n$ session_code       &lt;chr&gt; \"SINGLE SESSION\", \"SINGLE SESSION\", \"SINGLE SESSION…\n$ mainlevel_code     &lt;chr&gt; \"PRIMARY\", \"SECONDARY\", \"PRIMARY\", \"PRIMARY\", \"PRIM…\n$ sap_ind            &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ autonomous_ind     &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ gifted_ind         &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"Ye…\n$ ip_ind             &lt;chr&gt; \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No\", \"No…\n$ mothertongue1_code &lt;chr&gt; \"Chinese\", \"Chinese\", \"Chinese\", \"Chinese\", \"Chines…\n$ mothertongue2_code &lt;chr&gt; \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay\", \"Malay…\n$ mothertongue3_code &lt;chr&gt; \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"Tamil\", \"na\", …\n$ results.SEARCHVAL  &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.BLK_NO     &lt;chr&gt; \"1\", \"160\", \"1\", \"1\", \"91\", \"147\", \"301\", \"50\", \"30…\n$ results.ROAD_NAME  &lt;chr&gt; \"CANTONMENT CLOSE\", \"LOWER DELTA ROAD\", \"BUKIT TERE…\n$ results.BUILDING   &lt;chr&gt; \"KIDZ TREEHOUSE @ CANTONMENT\", \"CHIJ SAINT THERESA'…\n$ results.ADDRESS    &lt;chr&gt; \"1 CANTONMENT CLOSE KIDZ TREEHOUSE @ CANTONMENT SIN…\n$ results.X          &lt;chr&gt; \"28748.1620587641\", \"26789.3781491434\", \"27402.9654…\n$ results.Y          &lt;chr&gt; \"28659.9995642845\", \"28647.4426490944\", \"28579.8478…\n$ results.LATITUDE   &lt;chr&gt; \"1.27546534984202\", \"1.27535177510054\", \"1.27474048…\n$ results.LONGITUDE  &lt;chr&gt; \"103.840041087946\", \"103.822440701642\", \"103.827954…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nmerge from base R combines two data frames by matching rows based on specified columns. In this code, csv and found are merged using postal_code from csv and results.POSTAL from found, with the all = TRUE option to include all rows from both data frames.\nThe manual addition of data for “ZHENGHUA SECONDARY SCHOOL” is performed using base R’s subsetting and assignment operations.\nwrite.csv from base R writes a data frame to a CSV file.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure and contents.\n\n\n\n\n\n\n\n1.2.2 Importing and tidying schools data\nIn this sub-section, you will import schools.csv into R environment and at the same time tidying the data by selecting only the necessary fields as well as rename some fields.\n\n\nCode\n# re-import the correct dataset as schools\nschools &lt;- read_csv(\"../data/aspatial/schools.csv\")\n\nschools &lt;- schools %&gt;%\n  rename(latitude = \"results.LATITUDE\",\n         longitude = \"results.LONGITUDE\")\n\nschools &lt;- schools %&gt;%\n    select(`postal_code`, `school_name`, `latitude`, `longitude`)\n\n# check the output\nglimpse(schools)\n\n\nRows: 350\nColumns: 4\n$ postal_code &lt;chr&gt; \"088256\", \"099138\", \"099757\", \"099840\", \"109100\", \"127368\"…\n$ school_name &lt;chr&gt; \"CANTONMENT PRIMARY SCHOOL\", \"CHIJ ST. THERESA'S CONVENT\",…\n$ latitude    &lt;dbl&gt; 1.275465, 1.275352, 1.274740, 1.274958, 1.276128, 1.301228…\n$ longitude   &lt;dbl&gt; 103.8400, 103.8224, 103.8280, 103.8242, 103.8086, 103.7649…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nread_csv from readr package reads a CSV file into R, creating a data frame.\nrename from dplyr package changes the names of specific columns in a data frame for clarity or convenience. Here, it renames results.LATITUDE to latitude and results.LONGITUDE to longitude.\nselect from dplyr package is used to subset specific columns from the data frame, retaining only the postal_code, school_name, latitude, and longitude columns.\nglimpse from dplyr package provides a quick overview of the data frame’s structure, including column types and the first few entries in each column.\n\n\n\n\n\n\n1.2.3 Converting an aspatial data into sf tibble data.frame\nNext, you will convert schools tibble data.frame data into a simple feature tibble data.frame called schools_sf by using values in latitude and longitude fields.\n\n\nCode\nschools_sf &lt;- st_as_sf(schools,\n                       coords = c(\"longitude\", \"latitude\"),\n                       crs = 4326) %&gt;%\n  st_transform(crs = 3414)\n\n# check the output\nglimpse(schools_sf)\n\n\nRows: 350\nColumns: 3\n$ postal_code &lt;chr&gt; \"088256\", \"099138\", \"099757\", \"099840\", \"109100\", \"127368\"…\n$ school_name &lt;chr&gt; \"CANTONMENT PRIMARY SCHOOL\", \"CHIJ ST. THERESA'S CONVENT\",…\n$ geometry    &lt;POINT [m]&gt; POINT (28748.16 28660), POINT (26789.38 28647.44), P…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_as_sf from sf package converts a data frame to a simple features (sf) object, specifying the coordinates for spatial data. In this code, longitude and latitude columns are used for coordinates.\nst_transform from sf package transforms the coordinate reference system (CRS) of the sf object. Here, it converts CRS to 3414.\nglimpse from dplyr package provides a transposed summary of the sf object, giving a quick look at its structure, including geometry type and the first few entries in each column.\n\n\n\n\n\n\n1.2.4 Plotting a point simple feature layer\nTo ensure that schools sf tibble data.frame has been projected and converted correctly, you can plot the schools point data for visual inspection.\nFirst, import MPSZ-2019 shapefile into R as sf tibble data.frame and name it mpsz.\n\n\nCode\nmpsz &lt;- st_read(dsn = \"../data/geospatial/\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# check the output\nmpsz\n\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\nNext, create a point symbol map showing the location of schools with OSM as the background map.\n\n\nCode\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(schools_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_options from tmap package sets options for tmap functions. In this case, it’s set to automatically check and fix invalid polygons in spatial data.\ntm_shape from tmap package prepares spatial data for plotting. It is used twice in this code: first for the mpsz dataset and then for schools_sf.\ntm_polygons from tmap package adds a layer of polygons to the map, in this case, for the mpsz data.\ntm_dots from tmap package adds a layer of dots to the map, here representing the schools_sf data.\nThis code snippet creates a thematic map that combines polygons from mpsz and dots representing schools from schools_sf.\n\n\n\n\n\n\n1.2.5 Create Interactive Map\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(schools_sf) +\n  tm_dots() +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\nCode\n# turn off the interactive layer setting for next codes\ntmap_mode(\"plot\")\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_mode from tmap package sets the mode for creating maps. Initially, it’s set to \"view\" for interactive maps.\ntm_shape from tmap package prepares the spatial data (here schools_sf) for plotting.\ntm_dots from tmap package adds a layer of dots to represent spatial points on the map.\ntm_view from tmap package customizes the interactive map view, including setting zoom limits.\nThe code snippet creates an interactive map displaying schools as dots.\nFinally, tmap_mode(\"plot\") switches back to static plotting mode, stopping the interactive layer.\n\n\n\n\n\n\n1.2.6 Performing point-in-polygon count process\nNext, we will count the number of schools located inside the planning subzones.\n\n\nCode\nmpsz$`SCHOOL_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, schools_sf))\n\n# check the summary statistics of the derived variabled\nsummary(mpsz$`SCHOOL_COUNT`)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  0.000   0.000   0.000   1.054   2.000  12.000 \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_intersects from sf package is used to find the intersection between two spatial objects, here mpsz and schools_sf. It returns a list indicating which geometries from schools_sf intersect with each geometry in mpsz.\nlengths from base R calculates the lengths of the elements in a list, in this case, the number of schools intersecting with each polygon in mpsz.\nThe assignment operation (mpsz$SCHOOL_COUNT &lt;-) creates a new column in the mpsz data frame, storing the count of schools intersecting with each area.\nsummary from base R provides a summary of the SCHOOL_COUNT variable, typically giving minimum, maximum, mean, and other useful statistics.\n\n\n\n\n\nThe summary statistics above reveals that there are excessive 0 values in SCHOOL_COUNT field. If log() is going to use to transform this field, additional step is required to ensure that all 0 will be replaced with a value between 0 and 1 but not 0 neither 1."
  },
  {
    "objectID": "in-class/ice4.html#data-integration-and-final-touch-up",
    "href": "in-class/ice4.html#data-integration-and-final-touch-up",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "1.3 Data Integration and Final Touch-up",
    "text": "1.3 Data Integration and Final Touch-up\n\n1.3.1 Count Number of Business Points in each Planning Subzone.\n\n\nCode\nbusiness_sf &lt;- st_read(dsn = \"../data/geospatial\",\n                      layer = \"Business\")\n\n\nReading layer `Business' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 6550 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3669.148 ymin: 25408.41 xmax: 47034.83 ymax: 50148.54\nProjected CRS: SVY21 / Singapore TM\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_read from sf package is used for reading spatial vector data into R. It imports data from a specified data source (dsn) and layer (layer). In this code, the function is reading the “Business” layer from the data source located at \"../data/geospatial\", converting it into an sf (simple features) object suitable for spatial analysis in R.\n\n\n\n\n\n\nCode\ntmap_options(check.and.fix = TRUE)\ntm_shape(mpsz) +\n  tm_polygons() +\ntm_shape(business_sf) +\n  tm_dots()\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_options from tmap package sets options for tmap functions. Here, it’s configured to automatically check and fix invalid polygons in spatial data.\ntm_shape from tmap package prepares spatial data for plotting. It’s used twice in this code: first for the mpsz dataset and then for business_sf.\ntm_polygons from tmap package adds a layer of polygons to the map, representing the mpsz data.\ntm_dots from tmap package adds a layer of dots to the map, here representing the business_sf data.\nThis code snippet creates a thematic map that combines polygonal representations of mpsz and dots representing business locations from business_sf.\n\n\n\n\n\nnote that for plotting layers of map, the polygons must always come first\n\n\n\nCode\nmpsz$`BUSINESS_COUNT`&lt;- lengths(\n  st_intersects(\n    mpsz, business_sf))\n\n# check the summary statistics of the new variable\nsummary(mpsz$`BUSINESS_COUNT`)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    2.00   19.73   13.00  307.00 \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_intersects from sf package is used to find the intersections between two spatial objects, in this case, mpsz and business_sf. It determines which geometries from business_sf intersect with each geometry in mpsz and returns a list indicating these intersections.\nlengths from base R calculates the lengths of the elements in a list. Here, it’s used to count the number of business locations intersecting with each area in mpsz.\nThe assignment operation (mpsz$BUSINESS_COUNT &lt;-) adds a new column to the mpsz data frame, which stores the count of business locations intersecting with each area.\nsummary from base R provides a summary of the BUSINESS_COUNT variable, giving a statistical overview including minimum, maximum, mean, and other useful metrics.\n\n\n\n\n\n\n1.3.2 Append School and Business Counts\nNext, import the flow_data.rds from Hands-on Exercise 3.\n\n\nCode\nflow_data &lt;- read_rds(\"../data/rds/flow_data_tidy.rds\")\n\n# check the output\nglimpse(flow_data)\n\n\nRows: 14,734\nColumns: 13\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ MORNING_PEAK    &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT    &lt;dbl&gt; 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ RETAIL_COUNT    &lt;dbl&gt; 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        &lt;LINESTRING [m]&gt; LINESTRING (29501.77 39419...., LINESTRING …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nread_rds from base R reads an R object stored in RDS format and restores it. In this code, it’s used to load the flow_data object from an RDS file located at \"../data/rds/flow_data_tidy.rds\".\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\nThis is an sf tibble data.frame and the features are polylines linking the centroid of origins and destination planning subzone.\nNext, append SCHOOL_COUNT and BUSINESS_COUNT into flow_data sf tibble data.frame.\n\n\nCode\nmpsz_tidy &lt;- mpsz %&gt;%\n  select(SUBZONE_C, SCHOOL_COUNT, BUSINESS_COUNT) %&gt;%\n  st_drop_geometry()\n\n# check the output\nglimpse(mpsz_tidy)\n\n\nRows: 332\nColumns: 3\n$ SUBZONE_C      &lt;chr&gt; \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MPSZ…\n$ SCHOOL_COUNT   &lt;int&gt; 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0…\n$ BUSINESS_COUNT &lt;int&gt; 0, 6, 4, 5, 7, 0, 0, 0, 0, 1, 11, 15, 1, 10, 1, 17, 6, …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_drop_geometry from sf package is used to remove the geometry column from a spatial object, converting it into a regular data frame.\nselect from dplyr package subsets specific columns in a data frame. In this case, it retains SUBZONE_C, SCHOOL_COUNT, and BUSINESS_COUNT.\nglimpse from dplyr package provides a quick overview of the data frame’s structure, including column types and the first few entries in each column.\n\n\n\n\nNext, append SCHOOL_COUNT and BUSINESS_COUNT fields from mpsz_tidy data.frame into flow_data sf tibble data.frame\n\n\nCode\nflow_data &lt;- flow_data %&gt;%\n  left_join(mpsz_tidy,\n            by = c(\"DESTIN_SZ\" = \"SUBZONE_C\")) %&gt;%\n  rename(TRIPS = MORNING_PEAK, DIST = dist)\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nleft_join from dplyr package merges two data frames based on matching values in their columns. Here, flow_data is joined with mpsz_tidy using the DESTIN_SZ column from flow_data and SUBZONE_C from mpsz_tidy. This function retains all rows from flow_data and adds matching rows from mpsz_tidy.\nrename from dplyr package changes the names of specific columns in a data frame for clarity or convenience. In this code, MORNING_PEAK is renamed to TRIPS and dist to DIST.\n\n\n\n\n\nNote that unique join field is DESTIN_SZ and SUBZONE_C. Destination is chosen as the unique field as it represents the attracting zone in a morning peak trips.\n\n\n\n1.3.3 Checking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables. Summary() of Base R is used to compute the summary statistics of all variables in wd_od data frame.\n\n\nCode\nsummary(flow_data)\n\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS             DIST      \n Length:14734       Length:14734       Min.   :     1   Min.   :   50  \n Class :character   Class :character   1st Qu.:    14   1st Qu.: 3346  \n Mode  :character   Mode  :character   Median :    76   Median : 6067  \n                                       Mean   :  1021   Mean   : 6880  \n                                       3rd Qu.:   426   3rd Qu.: 9729  \n                                       Max.   :232187   Max.   :26136  \n ORIGIN_AGE7_12    ORIGIN_AGE13_24    ORIGIN_AGE25_64    DESTIN_AGE7_12   \n Min.   :   0.99   Min.   :    0.99   Min.   :    0.99   Min.   :   0.99  \n 1st Qu.: 240.00   1st Qu.:  440.00   1st Qu.: 2200.00   1st Qu.: 240.00  \n Median : 700.00   Median : 1350.00   Median : 6810.00   Median : 720.00  \n Mean   :1031.86   Mean   : 2268.84   Mean   :10487.62   Mean   :1033.40  \n 3rd Qu.:1480.00   3rd Qu.: 3260.00   3rd Qu.:15770.00   3rd Qu.:1500.00  \n Max.   :6340.00   Max.   :16380.00   Max.   :74610.00   Max.   :6340.00  \n DESTIN_AGE13_24    DESTIN_AGE25_64    SCHOOL_COUNT.x    RETAIL_COUNT   \n Min.   :    0.99   Min.   :    0.99   Min.   : 0.990   Min.   :  0.99  \n 1st Qu.:  460.00   1st Qu.: 2200.00   1st Qu.: 0.990   1st Qu.:  0.99  \n Median : 1420.00   Median : 7030.00   Median : 1.000   Median :  3.00  \n Mean   : 2290.35   Mean   :10574.46   Mean   : 1.987   Mean   : 16.47  \n 3rd Qu.: 3260.00   3rd Qu.:15830.00   3rd Qu.: 2.000   3rd Qu.: 12.00  \n Max.   :16380.00   Max.   :74610.00   Max.   :12.000   Max.   :307.00  \n SCHOOL_COUNT.y   BUSINESS_COUNT            geometry    \n Min.   : 0.000   Min.   :  0.00   LINESTRING   :14734  \n 1st Qu.: 0.000   1st Qu.:  0.00   epsg:3414    :    0  \n Median : 1.000   Median :  3.00   +proj=tmer...:    0  \n Mean   : 1.583   Mean   : 16.17                        \n 3rd Qu.: 2.000   3rd Qu.: 12.00                        \n Max.   :12.000   Max.   :307.00                        \n\n\nThe print report above reveals that variables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64, DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values. To prepare the data for poisson regression, replae zero values to 0.99\n\n\nCode\n# Check if there are any zero values in SCHOOL_COUNT and BUSINESS_COUNT\nif (any(flow_data$SCHOOL_COUNT == 0)) {\n  flow_data$SCHOOL_COUNT &lt;- ifelse(flow_data$SCHOOL_COUNT == 0, 0.99, flow_data$SCHOOL_COUNT)\n}\n\nif (any(flow_data$BUSINESS_COUNT == 0)) {\n  flow_data$BUSINESS_COUNT &lt;- ifelse(flow_data$BUSINESS_COUNT == 0, 0.99, flow_data$BUSINESS_COUNT)\n}\n\n# run summary to check:\nsummary(flow_data)\n\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS             DIST      \n Length:14734       Length:14734       Min.   :     1   Min.   :   50  \n Class :character   Class :character   1st Qu.:    14   1st Qu.: 3346  \n Mode  :character   Mode  :character   Median :    76   Median : 6067  \n                                       Mean   :  1021   Mean   : 6880  \n                                       3rd Qu.:   426   3rd Qu.: 9729  \n                                       Max.   :232187   Max.   :26136  \n ORIGIN_AGE7_12    ORIGIN_AGE13_24    ORIGIN_AGE25_64    DESTIN_AGE7_12   \n Min.   :   0.99   Min.   :    0.99   Min.   :    0.99   Min.   :   0.99  \n 1st Qu.: 240.00   1st Qu.:  440.00   1st Qu.: 2200.00   1st Qu.: 240.00  \n Median : 700.00   Median : 1350.00   Median : 6810.00   Median : 720.00  \n Mean   :1031.86   Mean   : 2268.84   Mean   :10487.62   Mean   :1033.40  \n 3rd Qu.:1480.00   3rd Qu.: 3260.00   3rd Qu.:15770.00   3rd Qu.:1500.00  \n Max.   :6340.00   Max.   :16380.00   Max.   :74610.00   Max.   :6340.00  \n DESTIN_AGE13_24    DESTIN_AGE25_64    SCHOOL_COUNT.x    RETAIL_COUNT   \n Min.   :    0.99   Min.   :    0.99   Min.   : 0.990   Min.   :  0.99  \n 1st Qu.:  460.00   1st Qu.: 2200.00   1st Qu.: 0.990   1st Qu.:  0.99  \n Median : 1420.00   Median : 7030.00   Median : 1.000   Median :  3.00  \n Mean   : 2290.35   Mean   :10574.46   Mean   : 1.987   Mean   : 16.47  \n 3rd Qu.: 3260.00   3rd Qu.:15830.00   3rd Qu.: 2.000   3rd Qu.: 12.00  \n Max.   :16380.00   Max.   :74610.00   Max.   :12.000   Max.   :307.00  \n SCHOOL_COUNT.y   BUSINESS_COUNT            geometry    \n Min.   : 0.000   Min.   :  0.99   LINESTRING   :14734  \n 1st Qu.: 0.000   1st Qu.:  0.99   epsg:3414    :    0  \n Median : 1.000   Median :  3.00   +proj=tmer...:    0  \n Mean   : 1.583   Mean   : 16.47                        \n 3rd Qu.: 2.000   3rd Qu.: 12.00                        \n Max.   :12.000   Max.   :307.00                        \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nany from base R checks if any of the values in a given vector meet a specified condition, here checking for zero values in SCHOOL_COUNT and BUSINESS_COUNT.\nifelse from base R applies a conditional test to each element of a vector, returning one value if the condition is true and another if it’s false. In this code, it’s used to replace zero values in SCHOOL_COUNT and BUSINESS_COUNT with 0.99.\nsummary from base R provides a summary of an object’s contents, typically offering minimum, maximum, median, mean, and other useful statistics. Here, it’s used to check the updated values in flow_data.\n\n\n\n\nexport the data as rds for future usage.\n\n\nCode\nwrite_rds(flow_data, \"../data/rds/flow_data_tidy_update.rds\")"
  },
  {
    "objectID": "in-class/ice4.html#overview-1",
    "href": "in-class/ice4.html#overview-1",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "2.1 Overview",
    "text": "2.1 Overview\nWe will continue our journey of calibrating Spatial Interaction Models by using propulsiveness and attractiveness variables prepared in earlier in-class exercise."
  },
  {
    "objectID": "in-class/ice4.html#getting-started-1",
    "href": "in-class/ice4.html#getting-started-1",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "2.2 Getting Started",
    "text": "2.2 Getting Started\nfirstly, import the libraries\n\n\nCode\npacman::p_load(tmap, sf, performance, AER, MASS, ggpubr, tidyverse, DT, knitr)\n\n\n\n\n\n\n\n\nPackages Explanations\n\n\n\n\n\n\ntmap: This package is used for creating thematic maps in R. It allows for the visualization of spatial data and supports both static and interactive mapping.\nsf: Stands for “simple features” and is an R package that provides standardized support for spatial data manipulation. It integrates well with the tidyverse suite of data science tools.\nperformance: Provides tools for checking and assessing the quality and performance of statistical models, including regression models and mixed-effect models.\nAER: Short for “Applied Econometrics with R”, this package includes functions and data sets for the book of the same name, which is useful for econometric analysis.\nMASS: The package supplies functions and datasets to support the book “Modern Applied Statistics with S” by Venables and Ripley, including a variety of statistical methods such as linear and quadratic discriminant function analysis, and robust multivariate statistics.\nggpubr: Provides a simple interface for creating publication-ready plots using an extension of ggplot2, with additional functions for commonly needed statistics and plots.\ntidyverse: A collection of R packages designed for data science tasks that make it easy to import, tidy, transform, and visualize data in a coherent data analysis workflow.\nknitr for creating html tables"
  },
  {
    "objectID": "in-class/ice4.html#the-data",
    "href": "in-class/ice4.html#the-data",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "2.3 The Data",
    "text": "2.3 The Data\nimport the data from previous processes.\n\n\nCode\nflow_data &lt;- read_rds(\"../data/rds/flow_data_tidy_update.rds\")\n# check the output\nglimpse(flow_data)\n\n\nRows: 14,734\nColumns: 15\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1998, 8289, 8971, 2252, 6136, 2148, 1620, 1925, 1773, …\n$ DIST            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310.00, 1140.00, 1010.00, 980.00, 810.00, 1050.00, 420…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710.00, 2770.00, 2650.00, 2000.00, 1920.00, 2390.00, 1…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780.00, 15700.00, 14240.00, 11320.00, 9650.00, 12460.…\n$ SCHOOL_COUNT.x  &lt;dbl&gt; 0.99, 2.00, 2.00, 1.00, 3.00, 2.00, 0.99, 0.99, 3.00, …\n$ RETAIL_COUNT    &lt;dbl&gt; 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ SCHOOL_COUNT.y  &lt;int&gt; 0, 2, 2, 1, 3, 2, 0, 0, 3, 1, 0, 0, 1, 1, 7, 4, 5, 1, …\n$ BUSINESS_COUNT  &lt;dbl&gt; 1.00, 0.99, 6.00, 0.99, 0.99, 0.99, 1.00, 117.00, 0.99…\n$ geometry        &lt;LINESTRING [m]&gt; LINESTRING (29501.77 39419...., LINESTRING …\n\n\n\nthis sf tibble data.frame includes two additional fields namely: SCHOOL_COUNT and BUSINESS_COUNT. Both of them will be used as attractiveness variables when calibrating origin constrained SIM.\n\ncheck first five columns and rows of flow_data\n\n\nCode\nkable(head(flow_data[, 1:5], n = 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\nORIGIN_SZ\nDESTIN_SZ\nTRIPS\nDIST\nORIGIN_AGE7_12\ngeometry\n\n\n\n\nAMSZ01\nAMSZ01\n1998\n50.0000\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ02\n8289\n810.4491\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ03\n8971\n1360.9294\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ04\n2252\n840.4432\n310\nLINESTRING (29501.77 39419….\n\n\nAMSZ01\nAMSZ05\n6136\n1076.7916\n310\nLINESTRING (29501.77 39419….\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nhead from base R retrieves the first n rows of a data frame or matrix. Here, it’s used to get the first 5 rows of flow_data, considering only the first 5 columns.\nkable from the knitr package creates a simple table from a data frame or matrix. This function is used to display the selected subset of flow_data as a markdown table.\n\n\n\n\n\nNotice that this data.frame include intra-zonal flow. The next part will remove it\n\n\n2.3.1 Preparing inter-zonal flow data\nIn general, we will calibrate separate Spatial Interaction Models for inter- and intra-zonal flows. In this hands-on exercise, we will focus our attention on inter-zonal flow. Hence, we need to exclude the intra-zonal flow from flow_data.\nFirst, two new columns called FlowNoIntra and offset will be created by using the code chunk below. All intra-zonal flow will be given a value of 0 or else the original flow values will be inserted. Then, inter-zonal flow will be selected from flow_data and save into a new output data.frame called inter_zonal_flow\n\n\nCode\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)\n\ninter_zonal_flow &lt;- flow_data %&gt;%\n  filter(FlowNoIntra &gt; 0)\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nifelse from base R applies a conditional test to each element of a vector. In this code, it is used twice: firstly, to create the FlowNoIntra column in flow_data, where the value is set to 0 if the origin and destination subzones are the same, otherwise it’s set to the value of TRIPS; secondly, to create the offset column, assigning a very small number (0.000001) if the origin and destination subzones are the same, otherwise 1.\nfilter from dplyr package is used to retain rows based on a specified condition. Here, it filters flow_data to keep rows where FlowNoIntra is greater than 0, effectively selecting rows where the flow is not within the same subzone (inter-zonal flow)."
  },
  {
    "objectID": "in-class/ice4.html#calibrating-spatial-interaction-models",
    "href": "in-class/ice4.html#calibrating-spatial-interaction-models",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "2.4 Calibrating Spatial Interaction Models",
    "text": "2.4 Calibrating Spatial Interaction Models\nIn this section, we will focus on calibrating an origin constrained SIM and a doubly constrained by using flow_data prepared. It will complement materials from Hands-on Exercise 3.\n\n2.4.1 Origin- (Production-) constrained Model\nCode chunk below shows the calibration of the model by using glm() of R and flow_data.\n\n\nCode\norcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ +\n                log(SCHOOL_COUNT.x) +\n                log(BUSINESS_COUNT) +\n                log(DIST) - 1,\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(orcSIM_Poisson)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT.x) + log(BUSINESS_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error  z value Pr(&gt;|z|)    \nORIGIN_SZAMSZ01     19.8739840  0.0047627  4172.84   &lt;2e-16 ***\nORIGIN_SZAMSZ02     20.5902203  0.0042786  4812.33   &lt;2e-16 ***\nORIGIN_SZAMSZ03     20.2327026  0.0045531  4443.70   &lt;2e-16 ***\nORIGIN_SZAMSZ04     19.7744438  0.0049837  3967.79   &lt;2e-16 ***\nORIGIN_SZAMSZ05     19.6574529  0.0056396  3485.61   &lt;2e-16 ***\nORIGIN_SZAMSZ06     19.9659115  0.0048946  4079.16   &lt;2e-16 ***\nORIGIN_SZAMSZ07     18.6746164  0.0096316  1938.90   &lt;2e-16 ***\nORIGIN_SZAMSZ08     19.2701601  0.0090776  2122.82   &lt;2e-16 ***\nORIGIN_SZAMSZ09     19.9889467  0.0052858  3781.64   &lt;2e-16 ***\nORIGIN_SZAMSZ10     20.3422035  0.0045778  4443.62   &lt;2e-16 ***\nORIGIN_SZAMSZ11     18.3944113  0.0129212  1423.58   &lt;2e-16 ***\nORIGIN_SZAMSZ12     18.3484209  0.0109652  1673.33   &lt;2e-16 ***\nORIGIN_SZBDSZ01     20.9668587  0.0043388  4832.36   &lt;2e-16 ***\nORIGIN_SZBDSZ02     20.4059518  0.0050601  4032.75   &lt;2e-16 ***\nORIGIN_SZBDSZ03     20.6725514  0.0045276  4565.93   &lt;2e-16 ***\nORIGIN_SZBDSZ04     21.6703853  0.0038930  5566.44   &lt;2e-16 ***\nORIGIN_SZBDSZ05     20.7497445  0.0046085  4502.46   &lt;2e-16 ***\nORIGIN_SZBDSZ06     20.9119361  0.0046432  4503.77   &lt;2e-16 ***\nORIGIN_SZBDSZ07     18.9749815  0.0097896  1938.28   &lt;2e-16 ***\nORIGIN_SZBDSZ08     19.1933901  0.0091312  2101.95   &lt;2e-16 ***\nORIGIN_SZBKSZ01     19.5422606  0.0064732  3018.96   &lt;2e-16 ***\nORIGIN_SZBKSZ02     20.1748913  0.0050076  4028.89   &lt;2e-16 ***\nORIGIN_SZBKSZ03     20.3984624  0.0047226  4319.35   &lt;2e-16 ***\nORIGIN_SZBKSZ04     19.6182212  0.0059652  3288.76   &lt;2e-16 ***\nORIGIN_SZBKSZ05     19.6033818  0.0063181  3102.74   &lt;2e-16 ***\nORIGIN_SZBKSZ06     19.7145224  0.0056372  3497.20   &lt;2e-16 ***\nORIGIN_SZBKSZ07     20.4237448  0.0041912  4873.03   &lt;2e-16 ***\nORIGIN_SZBKSZ08     19.7992538  0.0050405  3928.02   &lt;2e-16 ***\nORIGIN_SZBKSZ09     19.7821586  0.0055558  3560.66   &lt;2e-16 ***\nORIGIN_SZBLSZ01     17.7977276  0.0149058  1194.01   &lt;2e-16 ***\nORIGIN_SZBLSZ02     17.4287491  0.0192364   906.03   &lt;2e-16 ***\nORIGIN_SZBLSZ03     16.5884288  0.0459848   360.74   &lt;2e-16 ***\nORIGIN_SZBLSZ04     17.7851626  0.0232823   763.89   &lt;2e-16 ***\nORIGIN_SZBMSZ01     20.0751840  0.0052887  3795.89   &lt;2e-16 ***\nORIGIN_SZBMSZ02     18.6956140  0.0066656  2804.80   &lt;2e-16 ***\nORIGIN_SZBMSZ03     19.3204425  0.0054755  3528.56   &lt;2e-16 ***\nORIGIN_SZBMSZ04     19.4724220  0.0049390  3942.59   &lt;2e-16 ***\nORIGIN_SZBMSZ05     16.9581801  0.0168804  1004.61   &lt;2e-16 ***\nORIGIN_SZBMSZ06     16.9898638  0.0181852   934.27   &lt;2e-16 ***\nORIGIN_SZBMSZ07     19.2868403  0.0056231  3429.91   &lt;2e-16 ***\nORIGIN_SZBMSZ08     19.1477543  0.0055918  3424.28   &lt;2e-16 ***\nORIGIN_SZBMSZ09     18.7564539  0.0086298  2173.46   &lt;2e-16 ***\nORIGIN_SZBMSZ10     18.3617854  0.0089250  2057.35   &lt;2e-16 ***\nORIGIN_SZBMSZ11     18.9167941  0.0063340  2986.54   &lt;2e-16 ***\nORIGIN_SZBMSZ12     18.7874661  0.0093024  2019.63   &lt;2e-16 ***\nORIGIN_SZBMSZ13     19.5654046  0.0057517  3401.70   &lt;2e-16 ***\nORIGIN_SZBMSZ14     19.0685619  0.0063346  3010.24   &lt;2e-16 ***\nORIGIN_SZBMSZ15     19.4403124  0.0058147  3343.30   &lt;2e-16 ***\nORIGIN_SZBMSZ16     18.4469203  0.0092638  1991.28   &lt;2e-16 ***\nORIGIN_SZBMSZ17     18.3430175  0.0157692  1163.22   &lt;2e-16 ***\nORIGIN_SZBPSZ01     20.1806714  0.0053660  3760.81   &lt;2e-16 ***\nORIGIN_SZBPSZ02     19.8116707  0.0061485  3222.19   &lt;2e-16 ***\nORIGIN_SZBPSZ03     19.8467602  0.0059769  3320.57   &lt;2e-16 ***\nORIGIN_SZBPSZ04     20.4613200  0.0048398  4227.72   &lt;2e-16 ***\nORIGIN_SZBPSZ05     20.5379711  0.0043769  4692.39   &lt;2e-16 ***\nORIGIN_SZBPSZ06     18.8948034  0.0093668  2017.21   &lt;2e-16 ***\nORIGIN_SZBPSZ07     19.4104568  0.0087961  2206.70   &lt;2e-16 ***\nORIGIN_SZBSSZ01     20.0139503  0.0056561  3538.45   &lt;2e-16 ***\nORIGIN_SZBSSZ02     20.2543885  0.0047198  4291.38   &lt;2e-16 ***\nORIGIN_SZBSSZ03     19.5428803  0.0052713  3707.41   &lt;2e-16 ***\nORIGIN_SZBTSZ01     20.0198045  0.0058541  3419.77   &lt;2e-16 ***\nORIGIN_SZBTSZ02     19.3618525  0.0081472  2376.51   &lt;2e-16 ***\nORIGIN_SZBTSZ03     19.5883853  0.0068935  2841.59   &lt;2e-16 ***\nORIGIN_SZBTSZ04     18.7720238  0.0103909  1806.58   &lt;2e-16 ***\nORIGIN_SZBTSZ05     18.8069026  0.0120628  1559.08   &lt;2e-16 ***\nORIGIN_SZBTSZ06     18.7068633  0.0094575  1978.00   &lt;2e-16 ***\nORIGIN_SZBTSZ07     17.6292257  0.0141551  1245.43   &lt;2e-16 ***\nORIGIN_SZBTSZ08     18.6989374  0.0109610  1705.94   &lt;2e-16 ***\nORIGIN_SZCBSZ01     18.2189868  0.0548317   332.27   &lt;2e-16 ***\nORIGIN_SZCCSZ01     18.9734563  0.0139450  1360.59   &lt;2e-16 ***\nORIGIN_SZCHSZ01     19.5955119  0.0121035  1619.00   &lt;2e-16 ***\nORIGIN_SZCHSZ02     19.3320960  0.0081620  2368.55   &lt;2e-16 ***\nORIGIN_SZCHSZ03     21.2164518  0.0063552  3338.43   &lt;2e-16 ***\nORIGIN_SZCKSZ01     20.1046845  0.0049333  4075.29   &lt;2e-16 ***\nORIGIN_SZCKSZ02     20.5371946  0.0050256  4086.53   &lt;2e-16 ***\nORIGIN_SZCKSZ03     20.7210560  0.0042184  4912.07   &lt;2e-16 ***\nORIGIN_SZCKSZ04     21.4013886  0.0042524  5032.80   &lt;2e-16 ***\nORIGIN_SZCKSZ05     20.9413146  0.0049434  4236.18   &lt;2e-16 ***\nORIGIN_SZCKSZ06     20.2557727  0.0071832  2819.88   &lt;2e-16 ***\nORIGIN_SZCLSZ01     19.3383703  0.0076634  2523.46   &lt;2e-16 ***\nORIGIN_SZCLSZ02     18.5226956  0.0135522  1366.77   &lt;2e-16 ***\nORIGIN_SZCLSZ03     19.0225512  0.0080145  2373.51   &lt;2e-16 ***\nORIGIN_SZCLSZ04     20.7981505  0.0042400  4905.22   &lt;2e-16 ***\nORIGIN_SZCLSZ05     18.3015625  0.0146815  1246.58   &lt;2e-16 ***\nORIGIN_SZCLSZ06     20.8207386  0.0039567  5262.09   &lt;2e-16 ***\nORIGIN_SZCLSZ07     19.6728958  0.0054199  3629.76   &lt;2e-16 ***\nORIGIN_SZCLSZ08     20.0851929  0.0056956  3526.43   &lt;2e-16 ***\nORIGIN_SZCLSZ09     18.5749589  0.0165415  1122.93   &lt;2e-16 ***\nORIGIN_SZDTSZ02     15.8276209  0.0833992   189.78   &lt;2e-16 ***\nORIGIN_SZDTSZ03     16.2512838  0.0737972   220.22   &lt;2e-16 ***\nORIGIN_SZDTSZ13     16.7744385  0.0312450   536.87   &lt;2e-16 ***\nORIGIN_SZGLSZ01     18.2368248  0.0096104  1897.62   &lt;2e-16 ***\nORIGIN_SZGLSZ02     19.8705255  0.0049014  4054.06   &lt;2e-16 ***\nORIGIN_SZGLSZ03     19.8249435  0.0053109  3732.85   &lt;2e-16 ***\nORIGIN_SZGLSZ04     20.7800335  0.0041261  5036.20   &lt;2e-16 ***\nORIGIN_SZGLSZ05     20.6040494  0.0043049  4786.23   &lt;2e-16 ***\nORIGIN_SZHGSZ01     20.0273475  0.0044824  4468.04   &lt;2e-16 ***\nORIGIN_SZHGSZ02     20.2480656  0.0044575  4542.47   &lt;2e-16 ***\nORIGIN_SZHGSZ03     20.0756442  0.0049003  4096.81   &lt;2e-16 ***\nORIGIN_SZHGSZ04     20.7577748  0.0040465  5129.84   &lt;2e-16 ***\nORIGIN_SZHGSZ05     20.9779992  0.0040123  5228.42   &lt;2e-16 ***\nORIGIN_SZHGSZ06     19.7403058  0.0054229  3640.20   &lt;2e-16 ***\nORIGIN_SZHGSZ07     20.1896268  0.0046051  4384.22   &lt;2e-16 ***\nORIGIN_SZHGSZ08     19.8646492  0.0052403  3790.72   &lt;2e-16 ***\nORIGIN_SZHGSZ09     18.3647736  0.0069196  2654.04   &lt;2e-16 ***\nORIGIN_SZHGSZ10     16.8720475  0.0421046   400.72   &lt;2e-16 ***\nORIGIN_SZJESZ01     20.2673794  0.0046723  4337.79   &lt;2e-16 ***\nORIGIN_SZJESZ02     20.0595982  0.0046503  4313.61   &lt;2e-16 ***\nORIGIN_SZJESZ03     19.9128778  0.0049848  3994.75   &lt;2e-16 ***\nORIGIN_SZJESZ04     18.5053667  0.0099227  1864.94   &lt;2e-16 ***\nORIGIN_SZJESZ05     17.8172930  0.0138840  1283.29   &lt;2e-16 ***\nORIGIN_SZJESZ06     20.0124157  0.0045009  4446.36   &lt;2e-16 ***\nORIGIN_SZJESZ07     18.1821423  0.0117267  1550.49   &lt;2e-16 ***\nORIGIN_SZJESZ08     18.8713046  0.0116456  1620.46   &lt;2e-16 ***\nORIGIN_SZJESZ09     20.5535527  0.0048456  4241.72   &lt;2e-16 ***\nORIGIN_SZJESZ10     18.4922322  0.0191243   966.95   &lt;2e-16 ***\nORIGIN_SZJESZ11     18.2891211  0.0197114   927.85   &lt;2e-16 ***\nORIGIN_SZJWSZ01     20.4912737  0.0063102  3247.35   &lt;2e-16 ***\nORIGIN_SZJWSZ02     20.8236694  0.0042249  4928.82   &lt;2e-16 ***\nORIGIN_SZJWSZ03     21.2587613  0.0039733  5350.40   &lt;2e-16 ***\nORIGIN_SZJWSZ04     20.3816464  0.0046199  4411.67   &lt;2e-16 ***\nORIGIN_SZJWSZ05     18.0607448  0.0128857  1401.61   &lt;2e-16 ***\nORIGIN_SZJWSZ06     18.7015202  0.0107614  1737.83   &lt;2e-16 ***\nORIGIN_SZJWSZ07     17.3991822  0.0277096   627.91   &lt;2e-16 ***\nORIGIN_SZJWSZ08     21.8044465  0.0037356  5836.95   &lt;2e-16 ***\nORIGIN_SZJWSZ09     21.5414930  0.0036033  5978.19   &lt;2e-16 ***\nORIGIN_SZKLSZ01     20.0307712  0.0047868  4184.59   &lt;2e-16 ***\nORIGIN_SZKLSZ02     19.0634769  0.0062318  3059.05   &lt;2e-16 ***\nORIGIN_SZKLSZ03     19.2685700  0.0057172  3370.25   &lt;2e-16 ***\nORIGIN_SZKLSZ04     17.7085067  0.0119809  1478.06   &lt;2e-16 ***\nORIGIN_SZKLSZ05     18.6384471  0.0107596  1732.26   &lt;2e-16 ***\nORIGIN_SZKLSZ06     13.7280296  0.1857160    73.92   &lt;2e-16 ***\nORIGIN_SZKLSZ07     18.6425146  0.0084952  2194.47   &lt;2e-16 ***\nORIGIN_SZKLSZ08     18.0928506  0.0101567  1781.37   &lt;2e-16 ***\nORIGIN_SZLKSZ01     17.8907138  0.0397083   450.55   &lt;2e-16 ***\nORIGIN_SZMDSZ01     18.7605188  0.0285455   657.22   &lt;2e-16 ***\nORIGIN_SZMDSZ02     19.1533927  0.0102815  1862.90   &lt;2e-16 ***\nORIGIN_SZMDSZ03     17.8404982  0.0169690  1051.36   &lt;2e-16 ***\nORIGIN_SZMPSZ01     19.0765941  0.0083937  2272.74   &lt;2e-16 ***\nORIGIN_SZMPSZ02     19.2162527  0.0068331  2812.24   &lt;2e-16 ***\nORIGIN_SZMPSZ03     19.9965344  0.0054569  3664.44   &lt;2e-16 ***\nORIGIN_SZMUSZ02     15.9130765  0.1037472   153.38   &lt;2e-16 ***\nORIGIN_SZNTSZ01     17.0840999  0.0352513   484.64   &lt;2e-16 ***\nORIGIN_SZNTSZ02     16.5792122  0.0233186   710.99   &lt;2e-16 ***\nORIGIN_SZNTSZ03     18.9506415  0.0075957  2494.93   &lt;2e-16 ***\nORIGIN_SZNTSZ05     15.8770261  0.0495825   320.21   &lt;2e-16 ***\nORIGIN_SZNTSZ06     15.3997415  0.0557029   276.46   &lt;2e-16 ***\nORIGIN_SZNVSZ01     20.2241694  0.0043487  4650.65   &lt;2e-16 ***\nORIGIN_SZNVSZ02     19.1897826  0.0065383  2934.97   &lt;2e-16 ***\nORIGIN_SZNVSZ03     18.8854268  0.0080459  2347.22   &lt;2e-16 ***\nORIGIN_SZNVSZ04     18.8940191  0.0090985  2076.61   &lt;2e-16 ***\nORIGIN_SZNVSZ05     17.6278585  0.0168107  1048.61   &lt;2e-16 ***\nORIGIN_SZPGSZ01     19.4825220  0.0122960  1584.46   &lt;2e-16 ***\nORIGIN_SZPGSZ02     19.4726761  0.0073116  2663.25   &lt;2e-16 ***\nORIGIN_SZPGSZ03     20.5515713  0.0045631  4503.86   &lt;2e-16 ***\nORIGIN_SZPGSZ04     21.0527131  0.0041500  5072.89   &lt;2e-16 ***\nORIGIN_SZPGSZ05     20.1436604  0.0057267  3517.48   &lt;2e-16 ***\nORIGIN_SZPLSZ01     19.1832002  0.0120006  1598.53   &lt;2e-16 ***\nORIGIN_SZPLSZ02     18.8752206  0.0149740  1260.53   &lt;2e-16 ***\nORIGIN_SZPLSZ03     18.1000818  0.0371769   486.86   &lt;2e-16 ***\nORIGIN_SZPLSZ04     17.1730559  0.0370280   463.79   &lt;2e-16 ***\nORIGIN_SZPLSZ05     17.9084439  0.0225031   795.82   &lt;2e-16 ***\nORIGIN_SZPNSZ01     21.0804425  0.0044829  4702.41   &lt;2e-16 ***\nORIGIN_SZPNSZ02     19.8822123  0.0111507  1783.05   &lt;2e-16 ***\nORIGIN_SZPNSZ03     17.9293289  0.0193571   926.24   &lt;2e-16 ***\nORIGIN_SZPNSZ04     17.1039594  0.0334954   510.64   &lt;2e-16 ***\nORIGIN_SZPNSZ05     18.2543864  0.0275554   662.46   &lt;2e-16 ***\nORIGIN_SZPRSZ01     19.8777935  0.0117586  1690.49   &lt;2e-16 ***\nORIGIN_SZPRSZ02     21.0751780  0.0044832  4700.88   &lt;2e-16 ***\nORIGIN_SZPRSZ03     20.6717019  0.0045577  4535.55   &lt;2e-16 ***\nORIGIN_SZPRSZ04     19.6365125  0.0074923  2620.90   &lt;2e-16 ***\nORIGIN_SZPRSZ05     21.3132151  0.0042119  5060.24   &lt;2e-16 ***\nORIGIN_SZPRSZ06     18.9314574  0.0117278  1614.24   &lt;2e-16 ***\nORIGIN_SZPRSZ07     17.2822918  0.0162430  1063.98   &lt;2e-16 ***\nORIGIN_SZPRSZ08     19.9267642  0.0062298  3198.62   &lt;2e-16 ***\nORIGIN_SZQTSZ01     19.7357175  0.0066359  2974.08   &lt;2e-16 ***\nORIGIN_SZQTSZ02     19.2082141  0.0061402  3128.26   &lt;2e-16 ***\nORIGIN_SZQTSZ03     19.7771883  0.0056220  3517.83   &lt;2e-16 ***\nORIGIN_SZQTSZ04     18.7114421  0.0072842  2568.76   &lt;2e-16 ***\nORIGIN_SZQTSZ05     19.3049324  0.0062401  3093.69   &lt;2e-16 ***\nORIGIN_SZQTSZ06     19.2643228  0.0065590  2937.09   &lt;2e-16 ***\nORIGIN_SZQTSZ07     18.5697347  0.0095373  1947.06   &lt;2e-16 ***\nORIGIN_SZQTSZ08     19.6147001  0.0061330  3198.21   &lt;2e-16 ***\nORIGIN_SZQTSZ09     19.2550793  0.0069947  2752.82   &lt;2e-16 ***\nORIGIN_SZQTSZ10     19.5801866  0.0064513  3035.07   &lt;2e-16 ***\nORIGIN_SZQTSZ11     17.7398366  0.0143648  1234.95   &lt;2e-16 ***\nORIGIN_SZQTSZ12     17.2420354  0.0186736   923.34   &lt;2e-16 ***\nORIGIN_SZQTSZ13     19.3857418  0.0078878  2457.69   &lt;2e-16 ***\nORIGIN_SZQTSZ14     18.1300753  0.0122096  1484.90   &lt;2e-16 ***\nORIGIN_SZQTSZ15     19.4222283  0.0120871  1606.86   &lt;2e-16 ***\nORIGIN_SZRCSZ01     18.1549045  0.0125108  1451.13   &lt;2e-16 ***\nORIGIN_SZRCSZ06     18.8836400  0.0082161  2298.38   &lt;2e-16 ***\nORIGIN_SZRVSZ01     16.7864438  0.0323796   518.43   &lt;2e-16 ***\nORIGIN_SZRVSZ02     16.4203244  0.0276836   593.14   &lt;2e-16 ***\nORIGIN_SZRVSZ03     16.6453738  0.0244992   679.42   &lt;2e-16 ***\nORIGIN_SZRVSZ04     15.9559213  0.0556344   286.80   &lt;2e-16 ***\nORIGIN_SZRVSZ05     17.0476331  0.0164122  1038.71   &lt;2e-16 ***\nORIGIN_SZSBSZ01     20.0417968  0.0062488  3207.29   &lt;2e-16 ***\nORIGIN_SZSBSZ02     19.1869565  0.0081051  2367.26   &lt;2e-16 ***\nORIGIN_SZSBSZ03     20.5769861  0.0045108  4561.70   &lt;2e-16 ***\nORIGIN_SZSBSZ04     20.5154199  0.0050548  4058.57   &lt;2e-16 ***\nORIGIN_SZSBSZ05     19.6250669  0.0065562  2993.35   &lt;2e-16 ***\nORIGIN_SZSBSZ06     18.8419757  0.0171135  1101.00   &lt;2e-16 ***\nORIGIN_SZSBSZ07     19.4897259  0.0124528  1565.09   &lt;2e-16 ***\nORIGIN_SZSBSZ08     18.7027917  0.0140545  1330.73   &lt;2e-16 ***\nORIGIN_SZSBSZ09     18.8893480  0.0088571  2132.67   &lt;2e-16 ***\nORIGIN_SZSESZ02     20.8962192  0.0041665  5015.34   &lt;2e-16 ***\nORIGIN_SZSESZ03     20.9452771  0.0039737  5270.94   &lt;2e-16 ***\nORIGIN_SZSESZ04     20.6576142  0.0046364  4455.55   &lt;2e-16 ***\nORIGIN_SZSESZ05     19.5170732  0.0058912  3312.92   &lt;2e-16 ***\nORIGIN_SZSESZ06     20.7595824  0.0045747  4537.89   &lt;2e-16 ***\nORIGIN_SZSESZ07     17.6888256  0.0195787   903.47   &lt;2e-16 ***\nORIGIN_SZSGSZ01     19.1359250  0.0085781  2230.79   &lt;2e-16 ***\nORIGIN_SZSGSZ02     18.5614369  0.0102037  1819.10   &lt;2e-16 ***\nORIGIN_SZSGSZ03     19.9933176  0.0050434  3964.23   &lt;2e-16 ***\nORIGIN_SZSGSZ04     20.2426871  0.0047211  4287.71   &lt;2e-16 ***\nORIGIN_SZSGSZ05     18.0114965  0.0107743  1671.70   &lt;2e-16 ***\nORIGIN_SZSGSZ06     20.2593194  0.0044538  4548.76   &lt;2e-16 ***\nORIGIN_SZSGSZ07     19.0763664  0.0062968  3029.54   &lt;2e-16 ***\nORIGIN_SZSKSZ01     19.9222451  0.0085136  2340.04   &lt;2e-16 ***\nORIGIN_SZSKSZ02     20.8633383  0.0055248  3776.33   &lt;2e-16 ***\nORIGIN_SZSKSZ03     19.6528148  0.0080534  2440.33   &lt;2e-16 ***\nORIGIN_SZSKSZ04     18.0754470  0.0275771   655.45   &lt;2e-16 ***\nORIGIN_SZSKSZ05     19.1192521  0.0155579  1228.91   &lt;2e-16 ***\nORIGIN_SZSLSZ01     17.1501034  0.0329384   520.67   &lt;2e-16 ***\nORIGIN_SZSLSZ04     19.5949774  0.0076753  2552.98   &lt;2e-16 ***\nORIGIN_SZSRSZ01     16.9761403  0.0162020  1047.78   &lt;2e-16 ***\nORIGIN_SZTHSZ01     17.9695687  0.0488559   367.81   &lt;2e-16 ***\nORIGIN_SZTHSZ03     18.5427522  0.0223617   829.22   &lt;2e-16 ***\nORIGIN_SZTHSZ04     17.4760374  0.0286247   610.52   &lt;2e-16 ***\nORIGIN_SZTHSZ06     17.8401186  0.0183322   973.16   &lt;2e-16 ***\nORIGIN_SZTMSZ01     20.3406361  0.0056607  3593.33   &lt;2e-16 ***\nORIGIN_SZTMSZ02     22.0307026  0.0037386  5892.85   &lt;2e-16 ***\nORIGIN_SZTMSZ03     21.3451920  0.0040606  5256.65   &lt;2e-16 ***\nORIGIN_SZTMSZ04     20.6611593  0.0049896  4140.87   &lt;2e-16 ***\nORIGIN_SZTMSZ05     19.3323133  0.0112868  1712.82   &lt;2e-16 ***\nORIGIN_SZTNSZ01     17.9513571  0.0128266  1399.54   &lt;2e-16 ***\nORIGIN_SZTNSZ02     18.0267387  0.0098372  1832.51   &lt;2e-16 ***\nORIGIN_SZTNSZ03     17.7253700  0.0134668  1316.23   &lt;2e-16 ***\nORIGIN_SZTNSZ04     19.4474075  0.0073760  2636.59   &lt;2e-16 ***\nORIGIN_SZTPSZ01     19.1078631  0.0065635  2911.25   &lt;2e-16 ***\nORIGIN_SZTPSZ02     20.2837634  0.0041411  4898.18   &lt;2e-16 ***\nORIGIN_SZTPSZ03     19.1838238  0.0059552  3221.37   &lt;2e-16 ***\nORIGIN_SZTPSZ04     19.1805388  0.0054778  3501.53   &lt;2e-16 ***\nORIGIN_SZTPSZ05     19.3718076  0.0058610  3305.18   &lt;2e-16 ***\nORIGIN_SZTPSZ06     19.6605723  0.0054968  3576.70   &lt;2e-16 ***\nORIGIN_SZTPSZ07     19.4499807  0.0060491  3215.36   &lt;2e-16 ***\nORIGIN_SZTPSZ08     18.7996538  0.0095757  1963.28   &lt;2e-16 ***\nORIGIN_SZTPSZ09     19.0025110  0.0067068  2833.31   &lt;2e-16 ***\nORIGIN_SZTPSZ10     18.8899657  0.0076094  2482.46   &lt;2e-16 ***\nORIGIN_SZTPSZ11     19.6277780  0.0053983  3635.93   &lt;2e-16 ***\nORIGIN_SZTPSZ12     19.1471104  0.0065742  2912.45   &lt;2e-16 ***\nORIGIN_SZTSSZ01     17.4901113  0.0478954   365.17   &lt;2e-16 ***\nORIGIN_SZTSSZ02     20.4997466  0.0081850  2504.55   &lt;2e-16 ***\nORIGIN_SZTSSZ03     20.1076553  0.0084728  2373.19   &lt;2e-16 ***\nORIGIN_SZTSSZ04     20.0646610  0.0089008  2254.26   &lt;2e-16 ***\nORIGIN_SZTSSZ05     19.3962067  0.0151392  1281.19   &lt;2e-16 ***\nORIGIN_SZTSSZ06     20.9235857  0.0178278  1173.65   &lt;2e-16 ***\nORIGIN_SZWCSZ01     20.8411600  0.0086519  2408.86   &lt;2e-16 ***\nORIGIN_SZWCSZ02     17.7355404  0.0328889   539.26   &lt;2e-16 ***\nORIGIN_SZWCSZ03     14.9380886  0.1240699   120.40   &lt;2e-16 ***\nORIGIN_SZWDSZ01     21.1969012  0.0037830  5603.23   &lt;2e-16 ***\nORIGIN_SZWDSZ02     20.5930001  0.0044572  4620.13   &lt;2e-16 ***\nORIGIN_SZWDSZ03     21.2521867  0.0041672  5099.85   &lt;2e-16 ***\nORIGIN_SZWDSZ04     21.0702687  0.0048648  4331.13   &lt;2e-16 ***\nORIGIN_SZWDSZ05     20.4008998  0.0051801  3938.35   &lt;2e-16 ***\nORIGIN_SZWDSZ06     20.6669176  0.0049280  4193.78   &lt;2e-16 ***\nORIGIN_SZWDSZ07     19.0500370  0.0082729  2302.71   &lt;2e-16 ***\nORIGIN_SZWDSZ08     19.0816252  0.0080667  2365.49   &lt;2e-16 ***\nORIGIN_SZWDSZ09     21.4182096  0.0040391  5302.73   &lt;2e-16 ***\nORIGIN_SZYSSZ01     19.5355157  0.0057540  3395.14   &lt;2e-16 ***\nORIGIN_SZYSSZ02     20.8737972  0.0048278  4323.64   &lt;2e-16 ***\nORIGIN_SZYSSZ03     21.6614437  0.0040011  5413.81   &lt;2e-16 ***\nORIGIN_SZYSSZ04     20.9305289  0.0043595  4801.10   &lt;2e-16 ***\nORIGIN_SZYSSZ05     20.1727678  0.0058466  3450.34   &lt;2e-16 ***\nORIGIN_SZYSSZ06     19.1481507  0.0116724  1640.47   &lt;2e-16 ***\nORIGIN_SZYSSZ07     18.7919074  0.0141636  1326.78   &lt;2e-16 ***\nORIGIN_SZYSSZ08     19.9733515  0.0061229  3262.07   &lt;2e-16 ***\nORIGIN_SZYSSZ09     20.9366181  0.0040347  5189.15   &lt;2e-16 ***\nlog(SCHOOL_COUNT.x)  0.4755516  0.0004701  1011.55   &lt;2e-16 ***\nlog(BUSINESS_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 ***\nlog(DIST)           -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nFor origin-constrained model, only explanatory variables representing the attractiveness at the destinations will be used.\nAll the explanatory variables including distance will be log transformed.\nORIGIN_SZ is used to model 𝜇𝑖 . It must be in categorical data type.\nIt is important to note that -1 is added in the equation after the distance variable. The -1 serves the purpose of removing the intercept that by default, glm will insert into the model.\n\n\n\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT.x) + log(BUSINESS_COUNT) + \n    log(DIST) - 1, family = poisson(link = \"log\"), data = inter_zonal_flow, \n    na.action = na.exclude)\n\nCoefficients:\n                      Estimate Std. Error  z value Pr(&gt;|z|)    \nORIGIN_SZAMSZ01     19.8739840  0.0047627  4172.84   &lt;2e-16 ***\nORIGIN_SZAMSZ02     20.5902203  0.0042786  4812.33   &lt;2e-16 ***\nORIGIN_SZAMSZ03     20.2327026  0.0045531  4443.70   &lt;2e-16 ***\nORIGIN_SZAMSZ04     19.7744438  0.0049837  3967.79   &lt;2e-16 ***\nORIGIN_SZAMSZ05     19.6574529  0.0056396  3485.61   &lt;2e-16 ***\nORIGIN_SZAMSZ06     19.9659115  0.0048946  4079.16   &lt;2e-16 ***\nORIGIN_SZAMSZ07     18.6746164  0.0096316  1938.90   &lt;2e-16 ***\nORIGIN_SZAMSZ08     19.2701601  0.0090776  2122.82   &lt;2e-16 ***\nORIGIN_SZAMSZ09     19.9889467  0.0052858  3781.64   &lt;2e-16 ***\nORIGIN_SZAMSZ10     20.3422035  0.0045778  4443.62   &lt;2e-16 ***\nORIGIN_SZAMSZ11     18.3944113  0.0129212  1423.58   &lt;2e-16 ***\nORIGIN_SZAMSZ12     18.3484209  0.0109652  1673.33   &lt;2e-16 ***\nORIGIN_SZBDSZ01     20.9668587  0.0043388  4832.36   &lt;2e-16 ***\nORIGIN_SZBDSZ02     20.4059518  0.0050601  4032.75   &lt;2e-16 ***\nORIGIN_SZBDSZ03     20.6725514  0.0045276  4565.93   &lt;2e-16 ***\nORIGIN_SZBDSZ04     21.6703853  0.0038930  5566.44   &lt;2e-16 ***\nORIGIN_SZBDSZ05     20.7497445  0.0046085  4502.46   &lt;2e-16 ***\nORIGIN_SZBDSZ06     20.9119361  0.0046432  4503.77   &lt;2e-16 ***\nORIGIN_SZBDSZ07     18.9749815  0.0097896  1938.28   &lt;2e-16 ***\nORIGIN_SZBDSZ08     19.1933901  0.0091312  2101.95   &lt;2e-16 ***\nORIGIN_SZBKSZ01     19.5422606  0.0064732  3018.96   &lt;2e-16 ***\nORIGIN_SZBKSZ02     20.1748913  0.0050076  4028.89   &lt;2e-16 ***\nORIGIN_SZBKSZ03     20.3984624  0.0047226  4319.35   &lt;2e-16 ***\nORIGIN_SZBKSZ04     19.6182212  0.0059652  3288.76   &lt;2e-16 ***\nORIGIN_SZBKSZ05     19.6033818  0.0063181  3102.74   &lt;2e-16 ***\nORIGIN_SZBKSZ06     19.7145224  0.0056372  3497.20   &lt;2e-16 ***\nORIGIN_SZBKSZ07     20.4237448  0.0041912  4873.03   &lt;2e-16 ***\nORIGIN_SZBKSZ08     19.7992538  0.0050405  3928.02   &lt;2e-16 ***\nORIGIN_SZBKSZ09     19.7821586  0.0055558  3560.66   &lt;2e-16 ***\nORIGIN_SZBLSZ01     17.7977276  0.0149058  1194.01   &lt;2e-16 ***\nORIGIN_SZBLSZ02     17.4287491  0.0192364   906.03   &lt;2e-16 ***\nORIGIN_SZBLSZ03     16.5884288  0.0459848   360.74   &lt;2e-16 ***\nORIGIN_SZBLSZ04     17.7851626  0.0232823   763.89   &lt;2e-16 ***\nORIGIN_SZBMSZ01     20.0751840  0.0052887  3795.89   &lt;2e-16 ***\nORIGIN_SZBMSZ02     18.6956140  0.0066656  2804.80   &lt;2e-16 ***\nORIGIN_SZBMSZ03     19.3204425  0.0054755  3528.56   &lt;2e-16 ***\nORIGIN_SZBMSZ04     19.4724220  0.0049390  3942.59   &lt;2e-16 ***\nORIGIN_SZBMSZ05     16.9581801  0.0168804  1004.61   &lt;2e-16 ***\nORIGIN_SZBMSZ06     16.9898638  0.0181852   934.27   &lt;2e-16 ***\nORIGIN_SZBMSZ07     19.2868403  0.0056231  3429.91   &lt;2e-16 ***\nORIGIN_SZBMSZ08     19.1477543  0.0055918  3424.28   &lt;2e-16 ***\nORIGIN_SZBMSZ09     18.7564539  0.0086298  2173.46   &lt;2e-16 ***\nORIGIN_SZBMSZ10     18.3617854  0.0089250  2057.35   &lt;2e-16 ***\nORIGIN_SZBMSZ11     18.9167941  0.0063340  2986.54   &lt;2e-16 ***\nORIGIN_SZBMSZ12     18.7874661  0.0093024  2019.63   &lt;2e-16 ***\nORIGIN_SZBMSZ13     19.5654046  0.0057517  3401.70   &lt;2e-16 ***\nORIGIN_SZBMSZ14     19.0685619  0.0063346  3010.24   &lt;2e-16 ***\nORIGIN_SZBMSZ15     19.4403124  0.0058147  3343.30   &lt;2e-16 ***\nORIGIN_SZBMSZ16     18.4469203  0.0092638  1991.28   &lt;2e-16 ***\nORIGIN_SZBMSZ17     18.3430175  0.0157692  1163.22   &lt;2e-16 ***\nORIGIN_SZBPSZ01     20.1806714  0.0053660  3760.81   &lt;2e-16 ***\nORIGIN_SZBPSZ02     19.8116707  0.0061485  3222.19   &lt;2e-16 ***\nORIGIN_SZBPSZ03     19.8467602  0.0059769  3320.57   &lt;2e-16 ***\nORIGIN_SZBPSZ04     20.4613200  0.0048398  4227.72   &lt;2e-16 ***\nORIGIN_SZBPSZ05     20.5379711  0.0043769  4692.39   &lt;2e-16 ***\nORIGIN_SZBPSZ06     18.8948034  0.0093668  2017.21   &lt;2e-16 ***\nORIGIN_SZBPSZ07     19.4104568  0.0087961  2206.70   &lt;2e-16 ***\nORIGIN_SZBSSZ01     20.0139503  0.0056561  3538.45   &lt;2e-16 ***\nORIGIN_SZBSSZ02     20.2543885  0.0047198  4291.38   &lt;2e-16 ***\nORIGIN_SZBSSZ03     19.5428803  0.0052713  3707.41   &lt;2e-16 ***\nORIGIN_SZBTSZ01     20.0198045  0.0058541  3419.77   &lt;2e-16 ***\nORIGIN_SZBTSZ02     19.3618525  0.0081472  2376.51   &lt;2e-16 ***\nORIGIN_SZBTSZ03     19.5883853  0.0068935  2841.59   &lt;2e-16 ***\nORIGIN_SZBTSZ04     18.7720238  0.0103909  1806.58   &lt;2e-16 ***\nORIGIN_SZBTSZ05     18.8069026  0.0120628  1559.08   &lt;2e-16 ***\nORIGIN_SZBTSZ06     18.7068633  0.0094575  1978.00   &lt;2e-16 ***\nORIGIN_SZBTSZ07     17.6292257  0.0141551  1245.43   &lt;2e-16 ***\nORIGIN_SZBTSZ08     18.6989374  0.0109610  1705.94   &lt;2e-16 ***\nORIGIN_SZCBSZ01     18.2189868  0.0548317   332.27   &lt;2e-16 ***\nORIGIN_SZCCSZ01     18.9734563  0.0139450  1360.59   &lt;2e-16 ***\nORIGIN_SZCHSZ01     19.5955119  0.0121035  1619.00   &lt;2e-16 ***\nORIGIN_SZCHSZ02     19.3320960  0.0081620  2368.55   &lt;2e-16 ***\nORIGIN_SZCHSZ03     21.2164518  0.0063552  3338.43   &lt;2e-16 ***\nORIGIN_SZCKSZ01     20.1046845  0.0049333  4075.29   &lt;2e-16 ***\nORIGIN_SZCKSZ02     20.5371946  0.0050256  4086.53   &lt;2e-16 ***\nORIGIN_SZCKSZ03     20.7210560  0.0042184  4912.07   &lt;2e-16 ***\nORIGIN_SZCKSZ04     21.4013886  0.0042524  5032.80   &lt;2e-16 ***\nORIGIN_SZCKSZ05     20.9413146  0.0049434  4236.18   &lt;2e-16 ***\nORIGIN_SZCKSZ06     20.2557727  0.0071832  2819.88   &lt;2e-16 ***\nORIGIN_SZCLSZ01     19.3383703  0.0076634  2523.46   &lt;2e-16 ***\nORIGIN_SZCLSZ02     18.5226956  0.0135522  1366.77   &lt;2e-16 ***\nORIGIN_SZCLSZ03     19.0225512  0.0080145  2373.51   &lt;2e-16 ***\nORIGIN_SZCLSZ04     20.7981505  0.0042400  4905.22   &lt;2e-16 ***\nORIGIN_SZCLSZ05     18.3015625  0.0146815  1246.58   &lt;2e-16 ***\nORIGIN_SZCLSZ06     20.8207386  0.0039567  5262.09   &lt;2e-16 ***\nORIGIN_SZCLSZ07     19.6728958  0.0054199  3629.76   &lt;2e-16 ***\nORIGIN_SZCLSZ08     20.0851929  0.0056956  3526.43   &lt;2e-16 ***\nORIGIN_SZCLSZ09     18.5749589  0.0165415  1122.93   &lt;2e-16 ***\nORIGIN_SZDTSZ02     15.8276209  0.0833992   189.78   &lt;2e-16 ***\nORIGIN_SZDTSZ03     16.2512838  0.0737972   220.22   &lt;2e-16 ***\nORIGIN_SZDTSZ13     16.7744385  0.0312450   536.87   &lt;2e-16 ***\nORIGIN_SZGLSZ01     18.2368248  0.0096104  1897.62   &lt;2e-16 ***\nORIGIN_SZGLSZ02     19.8705255  0.0049014  4054.06   &lt;2e-16 ***\nORIGIN_SZGLSZ03     19.8249435  0.0053109  3732.85   &lt;2e-16 ***\nORIGIN_SZGLSZ04     20.7800335  0.0041261  5036.20   &lt;2e-16 ***\nORIGIN_SZGLSZ05     20.6040494  0.0043049  4786.23   &lt;2e-16 ***\nORIGIN_SZHGSZ01     20.0273475  0.0044824  4468.04   &lt;2e-16 ***\nORIGIN_SZHGSZ02     20.2480656  0.0044575  4542.47   &lt;2e-16 ***\nORIGIN_SZHGSZ03     20.0756442  0.0049003  4096.81   &lt;2e-16 ***\nORIGIN_SZHGSZ04     20.7577748  0.0040465  5129.84   &lt;2e-16 ***\nORIGIN_SZHGSZ05     20.9779992  0.0040123  5228.42   &lt;2e-16 ***\nORIGIN_SZHGSZ06     19.7403058  0.0054229  3640.20   &lt;2e-16 ***\nORIGIN_SZHGSZ07     20.1896268  0.0046051  4384.22   &lt;2e-16 ***\nORIGIN_SZHGSZ08     19.8646492  0.0052403  3790.72   &lt;2e-16 ***\nORIGIN_SZHGSZ09     18.3647736  0.0069196  2654.04   &lt;2e-16 ***\nORIGIN_SZHGSZ10     16.8720475  0.0421046   400.72   &lt;2e-16 ***\nORIGIN_SZJESZ01     20.2673794  0.0046723  4337.79   &lt;2e-16 ***\nORIGIN_SZJESZ02     20.0595982  0.0046503  4313.61   &lt;2e-16 ***\nORIGIN_SZJESZ03     19.9128778  0.0049848  3994.75   &lt;2e-16 ***\nORIGIN_SZJESZ04     18.5053667  0.0099227  1864.94   &lt;2e-16 ***\nORIGIN_SZJESZ05     17.8172930  0.0138840  1283.29   &lt;2e-16 ***\nORIGIN_SZJESZ06     20.0124157  0.0045009  4446.36   &lt;2e-16 ***\nORIGIN_SZJESZ07     18.1821423  0.0117267  1550.49   &lt;2e-16 ***\nORIGIN_SZJESZ08     18.8713046  0.0116456  1620.46   &lt;2e-16 ***\nORIGIN_SZJESZ09     20.5535527  0.0048456  4241.72   &lt;2e-16 ***\nORIGIN_SZJESZ10     18.4922322  0.0191243   966.95   &lt;2e-16 ***\nORIGIN_SZJESZ11     18.2891211  0.0197114   927.85   &lt;2e-16 ***\nORIGIN_SZJWSZ01     20.4912737  0.0063102  3247.35   &lt;2e-16 ***\nORIGIN_SZJWSZ02     20.8236694  0.0042249  4928.82   &lt;2e-16 ***\nORIGIN_SZJWSZ03     21.2587613  0.0039733  5350.40   &lt;2e-16 ***\nORIGIN_SZJWSZ04     20.3816464  0.0046199  4411.67   &lt;2e-16 ***\nORIGIN_SZJWSZ05     18.0607448  0.0128857  1401.61   &lt;2e-16 ***\nORIGIN_SZJWSZ06     18.7015202  0.0107614  1737.83   &lt;2e-16 ***\nORIGIN_SZJWSZ07     17.3991822  0.0277096   627.91   &lt;2e-16 ***\nORIGIN_SZJWSZ08     21.8044465  0.0037356  5836.95   &lt;2e-16 ***\nORIGIN_SZJWSZ09     21.5414930  0.0036033  5978.19   &lt;2e-16 ***\nORIGIN_SZKLSZ01     20.0307712  0.0047868  4184.59   &lt;2e-16 ***\nORIGIN_SZKLSZ02     19.0634769  0.0062318  3059.05   &lt;2e-16 ***\nORIGIN_SZKLSZ03     19.2685700  0.0057172  3370.25   &lt;2e-16 ***\nORIGIN_SZKLSZ04     17.7085067  0.0119809  1478.06   &lt;2e-16 ***\nORIGIN_SZKLSZ05     18.6384471  0.0107596  1732.26   &lt;2e-16 ***\nORIGIN_SZKLSZ06     13.7280296  0.1857160    73.92   &lt;2e-16 ***\nORIGIN_SZKLSZ07     18.6425146  0.0084952  2194.47   &lt;2e-16 ***\nORIGIN_SZKLSZ08     18.0928506  0.0101567  1781.37   &lt;2e-16 ***\nORIGIN_SZLKSZ01     17.8907138  0.0397083   450.55   &lt;2e-16 ***\nORIGIN_SZMDSZ01     18.7605188  0.0285455   657.22   &lt;2e-16 ***\nORIGIN_SZMDSZ02     19.1533927  0.0102815  1862.90   &lt;2e-16 ***\nORIGIN_SZMDSZ03     17.8404982  0.0169690  1051.36   &lt;2e-16 ***\nORIGIN_SZMPSZ01     19.0765941  0.0083937  2272.74   &lt;2e-16 ***\nORIGIN_SZMPSZ02     19.2162527  0.0068331  2812.24   &lt;2e-16 ***\nORIGIN_SZMPSZ03     19.9965344  0.0054569  3664.44   &lt;2e-16 ***\nORIGIN_SZMUSZ02     15.9130765  0.1037472   153.38   &lt;2e-16 ***\nORIGIN_SZNTSZ01     17.0840999  0.0352513   484.64   &lt;2e-16 ***\nORIGIN_SZNTSZ02     16.5792122  0.0233186   710.99   &lt;2e-16 ***\nORIGIN_SZNTSZ03     18.9506415  0.0075957  2494.93   &lt;2e-16 ***\nORIGIN_SZNTSZ05     15.8770261  0.0495825   320.21   &lt;2e-16 ***\nORIGIN_SZNTSZ06     15.3997415  0.0557029   276.46   &lt;2e-16 ***\nORIGIN_SZNVSZ01     20.2241694  0.0043487  4650.65   &lt;2e-16 ***\nORIGIN_SZNVSZ02     19.1897826  0.0065383  2934.97   &lt;2e-16 ***\nORIGIN_SZNVSZ03     18.8854268  0.0080459  2347.22   &lt;2e-16 ***\nORIGIN_SZNVSZ04     18.8940191  0.0090985  2076.61   &lt;2e-16 ***\nORIGIN_SZNVSZ05     17.6278585  0.0168107  1048.61   &lt;2e-16 ***\nORIGIN_SZPGSZ01     19.4825220  0.0122960  1584.46   &lt;2e-16 ***\nORIGIN_SZPGSZ02     19.4726761  0.0073116  2663.25   &lt;2e-16 ***\nORIGIN_SZPGSZ03     20.5515713  0.0045631  4503.86   &lt;2e-16 ***\nORIGIN_SZPGSZ04     21.0527131  0.0041500  5072.89   &lt;2e-16 ***\nORIGIN_SZPGSZ05     20.1436604  0.0057267  3517.48   &lt;2e-16 ***\nORIGIN_SZPLSZ01     19.1832002  0.0120006  1598.53   &lt;2e-16 ***\nORIGIN_SZPLSZ02     18.8752206  0.0149740  1260.53   &lt;2e-16 ***\nORIGIN_SZPLSZ03     18.1000818  0.0371769   486.86   &lt;2e-16 ***\nORIGIN_SZPLSZ04     17.1730559  0.0370280   463.79   &lt;2e-16 ***\nORIGIN_SZPLSZ05     17.9084439  0.0225031   795.82   &lt;2e-16 ***\nORIGIN_SZPNSZ01     21.0804425  0.0044829  4702.41   &lt;2e-16 ***\nORIGIN_SZPNSZ02     19.8822123  0.0111507  1783.05   &lt;2e-16 ***\nORIGIN_SZPNSZ03     17.9293289  0.0193571   926.24   &lt;2e-16 ***\nORIGIN_SZPNSZ04     17.1039594  0.0334954   510.64   &lt;2e-16 ***\nORIGIN_SZPNSZ05     18.2543864  0.0275554   662.46   &lt;2e-16 ***\nORIGIN_SZPRSZ01     19.8777935  0.0117586  1690.49   &lt;2e-16 ***\nORIGIN_SZPRSZ02     21.0751780  0.0044832  4700.88   &lt;2e-16 ***\nORIGIN_SZPRSZ03     20.6717019  0.0045577  4535.55   &lt;2e-16 ***\nORIGIN_SZPRSZ04     19.6365125  0.0074923  2620.90   &lt;2e-16 ***\nORIGIN_SZPRSZ05     21.3132151  0.0042119  5060.24   &lt;2e-16 ***\nORIGIN_SZPRSZ06     18.9314574  0.0117278  1614.24   &lt;2e-16 ***\nORIGIN_SZPRSZ07     17.2822918  0.0162430  1063.98   &lt;2e-16 ***\nORIGIN_SZPRSZ08     19.9267642  0.0062298  3198.62   &lt;2e-16 ***\nORIGIN_SZQTSZ01     19.7357175  0.0066359  2974.08   &lt;2e-16 ***\nORIGIN_SZQTSZ02     19.2082141  0.0061402  3128.26   &lt;2e-16 ***\nORIGIN_SZQTSZ03     19.7771883  0.0056220  3517.83   &lt;2e-16 ***\nORIGIN_SZQTSZ04     18.7114421  0.0072842  2568.76   &lt;2e-16 ***\nORIGIN_SZQTSZ05     19.3049324  0.0062401  3093.69   &lt;2e-16 ***\nORIGIN_SZQTSZ06     19.2643228  0.0065590  2937.09   &lt;2e-16 ***\nORIGIN_SZQTSZ07     18.5697347  0.0095373  1947.06   &lt;2e-16 ***\nORIGIN_SZQTSZ08     19.6147001  0.0061330  3198.21   &lt;2e-16 ***\nORIGIN_SZQTSZ09     19.2550793  0.0069947  2752.82   &lt;2e-16 ***\nORIGIN_SZQTSZ10     19.5801866  0.0064513  3035.07   &lt;2e-16 ***\nORIGIN_SZQTSZ11     17.7398366  0.0143648  1234.95   &lt;2e-16 ***\nORIGIN_SZQTSZ12     17.2420354  0.0186736   923.34   &lt;2e-16 ***\nORIGIN_SZQTSZ13     19.3857418  0.0078878  2457.69   &lt;2e-16 ***\nORIGIN_SZQTSZ14     18.1300753  0.0122096  1484.90   &lt;2e-16 ***\nORIGIN_SZQTSZ15     19.4222283  0.0120871  1606.86   &lt;2e-16 ***\nORIGIN_SZRCSZ01     18.1549045  0.0125108  1451.13   &lt;2e-16 ***\nORIGIN_SZRCSZ06     18.8836400  0.0082161  2298.38   &lt;2e-16 ***\nORIGIN_SZRVSZ01     16.7864438  0.0323796   518.43   &lt;2e-16 ***\nORIGIN_SZRVSZ02     16.4203244  0.0276836   593.14   &lt;2e-16 ***\nORIGIN_SZRVSZ03     16.6453738  0.0244992   679.42   &lt;2e-16 ***\nORIGIN_SZRVSZ04     15.9559213  0.0556344   286.80   &lt;2e-16 ***\nORIGIN_SZRVSZ05     17.0476331  0.0164122  1038.71   &lt;2e-16 ***\nORIGIN_SZSBSZ01     20.0417968  0.0062488  3207.29   &lt;2e-16 ***\nORIGIN_SZSBSZ02     19.1869565  0.0081051  2367.26   &lt;2e-16 ***\nORIGIN_SZSBSZ03     20.5769861  0.0045108  4561.70   &lt;2e-16 ***\nORIGIN_SZSBSZ04     20.5154199  0.0050548  4058.57   &lt;2e-16 ***\nORIGIN_SZSBSZ05     19.6250669  0.0065562  2993.35   &lt;2e-16 ***\nORIGIN_SZSBSZ06     18.8419757  0.0171135  1101.00   &lt;2e-16 ***\nORIGIN_SZSBSZ07     19.4897259  0.0124528  1565.09   &lt;2e-16 ***\nORIGIN_SZSBSZ08     18.7027917  0.0140545  1330.73   &lt;2e-16 ***\nORIGIN_SZSBSZ09     18.8893480  0.0088571  2132.67   &lt;2e-16 ***\nORIGIN_SZSESZ02     20.8962192  0.0041665  5015.34   &lt;2e-16 ***\nORIGIN_SZSESZ03     20.9452771  0.0039737  5270.94   &lt;2e-16 ***\nORIGIN_SZSESZ04     20.6576142  0.0046364  4455.55   &lt;2e-16 ***\nORIGIN_SZSESZ05     19.5170732  0.0058912  3312.92   &lt;2e-16 ***\nORIGIN_SZSESZ06     20.7595824  0.0045747  4537.89   &lt;2e-16 ***\nORIGIN_SZSESZ07     17.6888256  0.0195787   903.47   &lt;2e-16 ***\nORIGIN_SZSGSZ01     19.1359250  0.0085781  2230.79   &lt;2e-16 ***\nORIGIN_SZSGSZ02     18.5614369  0.0102037  1819.10   &lt;2e-16 ***\nORIGIN_SZSGSZ03     19.9933176  0.0050434  3964.23   &lt;2e-16 ***\nORIGIN_SZSGSZ04     20.2426871  0.0047211  4287.71   &lt;2e-16 ***\nORIGIN_SZSGSZ05     18.0114965  0.0107743  1671.70   &lt;2e-16 ***\nORIGIN_SZSGSZ06     20.2593194  0.0044538  4548.76   &lt;2e-16 ***\nORIGIN_SZSGSZ07     19.0763664  0.0062968  3029.54   &lt;2e-16 ***\nORIGIN_SZSKSZ01     19.9222451  0.0085136  2340.04   &lt;2e-16 ***\nORIGIN_SZSKSZ02     20.8633383  0.0055248  3776.33   &lt;2e-16 ***\nORIGIN_SZSKSZ03     19.6528148  0.0080534  2440.33   &lt;2e-16 ***\nORIGIN_SZSKSZ04     18.0754470  0.0275771   655.45   &lt;2e-16 ***\nORIGIN_SZSKSZ05     19.1192521  0.0155579  1228.91   &lt;2e-16 ***\nORIGIN_SZSLSZ01     17.1501034  0.0329384   520.67   &lt;2e-16 ***\nORIGIN_SZSLSZ04     19.5949774  0.0076753  2552.98   &lt;2e-16 ***\nORIGIN_SZSRSZ01     16.9761403  0.0162020  1047.78   &lt;2e-16 ***\nORIGIN_SZTHSZ01     17.9695687  0.0488559   367.81   &lt;2e-16 ***\nORIGIN_SZTHSZ03     18.5427522  0.0223617   829.22   &lt;2e-16 ***\nORIGIN_SZTHSZ04     17.4760374  0.0286247   610.52   &lt;2e-16 ***\nORIGIN_SZTHSZ06     17.8401186  0.0183322   973.16   &lt;2e-16 ***\nORIGIN_SZTMSZ01     20.3406361  0.0056607  3593.33   &lt;2e-16 ***\nORIGIN_SZTMSZ02     22.0307026  0.0037386  5892.85   &lt;2e-16 ***\nORIGIN_SZTMSZ03     21.3451920  0.0040606  5256.65   &lt;2e-16 ***\nORIGIN_SZTMSZ04     20.6611593  0.0049896  4140.87   &lt;2e-16 ***\nORIGIN_SZTMSZ05     19.3323133  0.0112868  1712.82   &lt;2e-16 ***\nORIGIN_SZTNSZ01     17.9513571  0.0128266  1399.54   &lt;2e-16 ***\nORIGIN_SZTNSZ02     18.0267387  0.0098372  1832.51   &lt;2e-16 ***\nORIGIN_SZTNSZ03     17.7253700  0.0134668  1316.23   &lt;2e-16 ***\nORIGIN_SZTNSZ04     19.4474075  0.0073760  2636.59   &lt;2e-16 ***\nORIGIN_SZTPSZ01     19.1078631  0.0065635  2911.25   &lt;2e-16 ***\nORIGIN_SZTPSZ02     20.2837634  0.0041411  4898.18   &lt;2e-16 ***\nORIGIN_SZTPSZ03     19.1838238  0.0059552  3221.37   &lt;2e-16 ***\nORIGIN_SZTPSZ04     19.1805388  0.0054778  3501.53   &lt;2e-16 ***\nORIGIN_SZTPSZ05     19.3718076  0.0058610  3305.18   &lt;2e-16 ***\nORIGIN_SZTPSZ06     19.6605723  0.0054968  3576.70   &lt;2e-16 ***\nORIGIN_SZTPSZ07     19.4499807  0.0060491  3215.36   &lt;2e-16 ***\nORIGIN_SZTPSZ08     18.7996538  0.0095757  1963.28   &lt;2e-16 ***\nORIGIN_SZTPSZ09     19.0025110  0.0067068  2833.31   &lt;2e-16 ***\nORIGIN_SZTPSZ10     18.8899657  0.0076094  2482.46   &lt;2e-16 ***\nORIGIN_SZTPSZ11     19.6277780  0.0053983  3635.93   &lt;2e-16 ***\nORIGIN_SZTPSZ12     19.1471104  0.0065742  2912.45   &lt;2e-16 ***\nORIGIN_SZTSSZ01     17.4901113  0.0478954   365.17   &lt;2e-16 ***\nORIGIN_SZTSSZ02     20.4997466  0.0081850  2504.55   &lt;2e-16 ***\nORIGIN_SZTSSZ03     20.1076553  0.0084728  2373.19   &lt;2e-16 ***\nORIGIN_SZTSSZ04     20.0646610  0.0089008  2254.26   &lt;2e-16 ***\nORIGIN_SZTSSZ05     19.3962067  0.0151392  1281.19   &lt;2e-16 ***\nORIGIN_SZTSSZ06     20.9235857  0.0178278  1173.65   &lt;2e-16 ***\nORIGIN_SZWCSZ01     20.8411600  0.0086519  2408.86   &lt;2e-16 ***\nORIGIN_SZWCSZ02     17.7355404  0.0328889   539.26   &lt;2e-16 ***\nORIGIN_SZWCSZ03     14.9380886  0.1240699   120.40   &lt;2e-16 ***\nORIGIN_SZWDSZ01     21.1969012  0.0037830  5603.23   &lt;2e-16 ***\nORIGIN_SZWDSZ02     20.5930001  0.0044572  4620.13   &lt;2e-16 ***\nORIGIN_SZWDSZ03     21.2521867  0.0041672  5099.85   &lt;2e-16 ***\nORIGIN_SZWDSZ04     21.0702687  0.0048648  4331.13   &lt;2e-16 ***\nORIGIN_SZWDSZ05     20.4008998  0.0051801  3938.35   &lt;2e-16 ***\nORIGIN_SZWDSZ06     20.6669176  0.0049280  4193.78   &lt;2e-16 ***\nORIGIN_SZWDSZ07     19.0500370  0.0082729  2302.71   &lt;2e-16 ***\nORIGIN_SZWDSZ08     19.0816252  0.0080667  2365.49   &lt;2e-16 ***\nORIGIN_SZWDSZ09     21.4182096  0.0040391  5302.73   &lt;2e-16 ***\nORIGIN_SZYSSZ01     19.5355157  0.0057540  3395.14   &lt;2e-16 ***\nORIGIN_SZYSSZ02     20.8737972  0.0048278  4323.64   &lt;2e-16 ***\nORIGIN_SZYSSZ03     21.6614437  0.0040011  5413.81   &lt;2e-16 ***\nORIGIN_SZYSSZ04     20.9305289  0.0043595  4801.10   &lt;2e-16 ***\nORIGIN_SZYSSZ05     20.1727678  0.0058466  3450.34   &lt;2e-16 ***\nORIGIN_SZYSSZ06     19.1481507  0.0116724  1640.47   &lt;2e-16 ***\nORIGIN_SZYSSZ07     18.7919074  0.0141636  1326.78   &lt;2e-16 ***\nORIGIN_SZYSSZ08     19.9733515  0.0061229  3262.07   &lt;2e-16 ***\nORIGIN_SZYSSZ09     20.9366181  0.0040347  5189.15   &lt;2e-16 ***\nlog(SCHOOL_COUNT.x)  0.4755516  0.0004701  1011.55   &lt;2e-16 ***\nlog(BUSINESS_COUNT)  0.1796905  0.0001856   968.12   &lt;2e-16 ***\nlog(DIST)           -1.6929522  0.0004093 -4136.01   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 189463537  on 14471  degrees of freedom\nResidual deviance:  15526121  on 14189  degrees of freedom\nAIC: 15615824\n\nNumber of Fisher Scoring iterations: 6\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nglm from stats package fits generalized linear models. In this code, a Poisson regression model is specified with the family = poisson(link = \"log\") argument. The formula TRIPS ~ ORIGIN_SZ + log(SCHOOL_COUNT.x) + log(BUSINESS_COUNT) + log(DIST) - 1 defines the dependent variable (TRIPS) and the independent variables (ORIGIN_SZ, logarithm of SCHOOL_COUNT.x, BUSINESS_COUNT, and DIST), with -1 indicating no intercept in the model.\nThe data argument specifies inter_zonal_flow as the dataset used for the model.\nna.action = na.exclude specifies how missing values (NAs) should be treated in the analysis.\nsummary from base R provides a summary of the fitted model orcSIM_Poisson, including coefficients, statistical significance, and other diagnostic measures.\n\n\n\n\n\n\n\n\n\n\nTip\n\n\n\n\nthe ⍺1 and ⍺2 of SCHOOL_COUNT and BUSINESS_COUNT are 0.4755516 and 0.1796905 respectively.\n𝛽, the distance decay parameter is -1.6929522\nthere are a series of parameters which are the vector of 𝜇𝑖 values associated with the origin constraints.\n\n\n\n\n\n2.4.2 Goodness of fit\nIn statistical modelling, the next question we would like to answer is how well the proportion of variance in the dependent variable (i.e. TRIPS) that can be explained by the explanatory variables.\nIn order to provide answer to this question, R-squared statistics will be used. However, R-squared is not an output of glm(). Hence we will write a function called CalcRSquared by using the code chunk below.\n\n\nCode\nCalcRSquared &lt;- function(observed, estimated){\n  r &lt;- cor(observed, estimated)\n  R2 &lt;- r^2\n  R2\n}\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ncor from stats package calculates the correlation coefficient between two vectors. In this user-defined function CalcRSquared, it is used to find the correlation (r) between observed and estimated values.\nThe function CalcRSquared computes the square of the correlation coefficient (R2), which is a measure of the proportion of variance in the observed data that is predictable from the estimated data.\nThis custom function is designed to return the value of R2, providing a simple way to calculate the coefficient of determination (R-squared) for a set of observed and estimated values.\n\n\n\n\nNow, we can examine how the constraints hold for destinations this time.\n\n\nCode\nCalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values)\n\n\n[1] 0.4362208\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nThe custom function CalcRSquared, defined earlier, is used here to calculate the coefficient of determination (R-squared). This statistical measure indicates how well the estimated values (orcSIM_Poisson$fitted.values) approximate the actual, observed values (orcSIM_Poisson$data$TRIPS).\nIn this code, orcSIM_Poisson$data$TRIPS refers to the actual observed values of trips, and orcSIM_Poisson$fitted.values refers to the values estimated by the orcSIM_Poisson generalized linear model.\nThe function call CalcRSquared(orcSIM_Poisson$data$TRIPS, orcSIM_Poisson$fitted.values) computes the R-squared value, which quantifies the proportion of variance in the observed data that can be explained by the model’s estimated values.\n\n\n\n\nWith reference to the R-Squared above, we can conclude that the model accounts for about 44% of the variation of flows in the systems. Not bad, but not brilliant either.\n\n\n2.4.3 Doubly constrained model\nIn this section, we will fit a doubly constrained SIM\n\n\nCode\ndbcSIM_Poisson &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ +\n                log(DIST),\n              family = poisson(link = \"log\"),\n              data = inter_zonal_flow,\n              na.action = na.exclude)\nsummary(dbcSIM_Poisson)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     21.8312374  0.0059160  3690.190  &lt; 2e-16 ***\nORIGIN_SZAMSZ02  0.5263502  0.0048031   109.585  &lt; 2e-16 ***\nORIGIN_SZAMSZ03  0.3139982  0.0049254    63.751  &lt; 2e-16 ***\nORIGIN_SZAMSZ04 -0.2146257  0.0053639   -40.013  &lt; 2e-16 ***\nORIGIN_SZAMSZ05 -0.1890446  0.0060386   -31.306  &lt; 2e-16 ***\nORIGIN_SZAMSZ06  0.1539201  0.0054401    28.294  &lt; 2e-16 ***\nORIGIN_SZAMSZ07 -0.9826565  0.0098676   -99.584  &lt; 2e-16 ***\nORIGIN_SZAMSZ08 -0.4488417  0.0093070   -48.226  &lt; 2e-16 ***\nORIGIN_SZAMSZ09  0.0713474  0.0057402    12.429  &lt; 2e-16 ***\nORIGIN_SZAMSZ10  0.4313742  0.0050370    85.641  &lt; 2e-16 ***\nORIGIN_SZAMSZ11 -1.4712226  0.0131178  -112.154  &lt; 2e-16 ***\nORIGIN_SZAMSZ12 -1.7250733  0.0111603  -154.573  &lt; 2e-16 ***\nORIGIN_SZBDSZ01  0.8810576  0.0048168   182.914  &lt; 2e-16 ***\nORIGIN_SZBDSZ02  0.1100240  0.0055529    19.814  &lt; 2e-16 ***\nORIGIN_SZBDSZ03  0.3606166  0.0050672    71.167  &lt; 2e-16 ***\nORIGIN_SZBDSZ04  1.4624347  0.0044212   330.781  &lt; 2e-16 ***\nORIGIN_SZBDSZ05  0.6207557  0.0050843   122.092  &lt; 2e-16 ***\nORIGIN_SZBDSZ06  0.6712973  0.0051953   129.214  &lt; 2e-16 ***\nORIGIN_SZBDSZ07 -1.2338669  0.0100775  -122.437  &lt; 2e-16 ***\nORIGIN_SZBDSZ08 -1.0444562  0.0094555  -110.460  &lt; 2e-16 ***\nORIGIN_SZBKSZ01 -0.2838426  0.0071354   -39.780  &lt; 2e-16 ***\nORIGIN_SZBKSZ02  0.5550522  0.0059014    94.054  &lt; 2e-16 ***\nORIGIN_SZBKSZ03  0.7396640  0.0056796   130.231  &lt; 2e-16 ***\nORIGIN_SZBKSZ04 -0.2242451  0.0067482   -33.230  &lt; 2e-16 ***\nORIGIN_SZBKSZ05 -0.2371614  0.0069386   -34.180  &lt; 2e-16 ***\nORIGIN_SZBKSZ06 -0.1413812  0.0065035   -21.739  &lt; 2e-16 ***\nORIGIN_SZBKSZ07  0.7089989  0.0051843   136.758  &lt; 2e-16 ***\nORIGIN_SZBKSZ08 -0.0907065  0.0059157   -15.333  &lt; 2e-16 ***\nORIGIN_SZBKSZ09 -0.1775146  0.0063302   -28.042  &lt; 2e-16 ***\nORIGIN_SZBLSZ01 -2.3684539  0.0154280  -153.516  &lt; 2e-16 ***\nORIGIN_SZBLSZ02 -2.8078475  0.0197839  -141.926  &lt; 2e-16 ***\nORIGIN_SZBLSZ03 -3.3122763  0.0466091   -71.065  &lt; 2e-16 ***\nORIGIN_SZBLSZ04 -2.6770542  0.0241793  -110.717  &lt; 2e-16 ***\nORIGIN_SZBMSZ01  0.0618035  0.0059400    10.405  &lt; 2e-16 ***\nORIGIN_SZBMSZ02 -1.3535767  0.0073741  -183.557  &lt; 2e-16 ***\nORIGIN_SZBMSZ03 -0.7569095  0.0063187  -119.790  &lt; 2e-16 ***\nORIGIN_SZBMSZ04 -0.2949304  0.0059603   -49.483  &lt; 2e-16 ***\nORIGIN_SZBMSZ05 -2.6131992  0.0172376  -151.599  &lt; 2e-16 ***\nORIGIN_SZBMSZ06 -3.0315024  0.0185502  -163.422  &lt; 2e-16 ***\nORIGIN_SZBMSZ07 -0.6962524  0.0064068  -108.674  &lt; 2e-16 ***\nORIGIN_SZBMSZ08 -0.9310730  0.0064541  -144.261  &lt; 2e-16 ***\nORIGIN_SZBMSZ09 -1.2911253  0.0092047  -140.268  &lt; 2e-16 ***\nORIGIN_SZBMSZ10 -1.6687004  0.0095708  -174.353  &lt; 2e-16 ***\nORIGIN_SZBMSZ11 -1.1152794  0.0072027  -154.841  &lt; 2e-16 ***\nORIGIN_SZBMSZ12 -1.5323954  0.0099932  -153.344  &lt; 2e-16 ***\nORIGIN_SZBMSZ13 -0.6267376  0.0065863   -95.158  &lt; 2e-16 ***\nORIGIN_SZBMSZ14 -1.0475467  0.0072472  -144.544  &lt; 2e-16 ***\nORIGIN_SZBMSZ15 -0.5049444  0.0067390   -74.929  &lt; 2e-16 ***\nORIGIN_SZBMSZ16 -1.5282897  0.0099545  -153.527  &lt; 2e-16 ***\nORIGIN_SZBMSZ17 -1.5722349  0.0161533   -97.332  &lt; 2e-16 ***\nORIGIN_SZBPSZ01  0.5814175  0.0062904    92.429  &lt; 2e-16 ***\nORIGIN_SZBPSZ02  0.0875442  0.0072190    12.127  &lt; 2e-16 ***\nORIGIN_SZBPSZ03  0.3358227  0.0070460    47.662  &lt; 2e-16 ***\nORIGIN_SZBPSZ04  0.6507586  0.0057726   112.733  &lt; 2e-16 ***\nORIGIN_SZBPSZ05  0.9502124  0.0052971   179.384  &lt; 2e-16 ***\nORIGIN_SZBPSZ06 -1.0480314  0.0098191  -106.734  &lt; 2e-16 ***\nORIGIN_SZBPSZ07 -0.5467931  0.0091676   -59.644  &lt; 2e-16 ***\nORIGIN_SZBSSZ01  0.2998334  0.0059193    50.654  &lt; 2e-16 ***\nORIGIN_SZBSSZ02  0.2841036  0.0050863    55.856  &lt; 2e-16 ***\nORIGIN_SZBSSZ03 -0.2331505  0.0056565   -41.218  &lt; 2e-16 ***\nORIGIN_SZBTSZ01  0.0987284  0.0063715    15.495  &lt; 2e-16 ***\nORIGIN_SZBTSZ02 -0.6261229  0.0084604   -74.006  &lt; 2e-16 ***\nORIGIN_SZBTSZ03 -0.4326963  0.0073452   -58.909  &lt; 2e-16 ***\nORIGIN_SZBTSZ04 -1.4998668  0.0110013  -136.336  &lt; 2e-16 ***\nORIGIN_SZBTSZ05 -0.9564768  0.0122202   -78.270  &lt; 2e-16 ***\nORIGIN_SZBTSZ06 -1.2853131  0.0099328  -129.401  &lt; 2e-16 ***\nORIGIN_SZBTSZ07 -2.3870991  0.0144589  -165.096  &lt; 2e-16 ***\nORIGIN_SZBTSZ08 -1.3715855  0.0113825  -120.499  &lt; 2e-16 ***\nORIGIN_SZCBSZ01 -3.5940232  0.0548979   -65.467  &lt; 2e-16 ***\nORIGIN_SZCCSZ01 -0.7008220  0.0140373   -49.926  &lt; 2e-16 ***\nORIGIN_SZCHSZ01 -0.9109524  0.0122869   -74.140  &lt; 2e-16 ***\nORIGIN_SZCHSZ02 -0.8566547  0.0088749   -96.526  &lt; 2e-16 ***\nORIGIN_SZCHSZ03  1.1153731  0.0066136   168.650  &lt; 2e-16 ***\nORIGIN_SZCKSZ01  0.3001815  0.0058548    51.271  &lt; 2e-16 ***\nORIGIN_SZCKSZ02  0.7185711  0.0060595   118.585  &lt; 2e-16 ***\nORIGIN_SZCKSZ03  1.1389824  0.0053179   214.178  &lt; 2e-16 ***\nORIGIN_SZCKSZ04  1.6281772  0.0054761   297.324  &lt; 2e-16 ***\nORIGIN_SZCKSZ05  0.8338470  0.0064178   129.927  &lt; 2e-16 ***\nORIGIN_SZCKSZ06  0.6528993  0.0082375    79.259  &lt; 2e-16 ***\nORIGIN_SZCLSZ01 -0.7174758  0.0082123   -87.366  &lt; 2e-16 ***\nORIGIN_SZCLSZ02 -1.7513100  0.0139062  -125.938  &lt; 2e-16 ***\nORIGIN_SZCLSZ03 -1.0362873  0.0085485  -121.224  &lt; 2e-16 ***\nORIGIN_SZCLSZ04  0.6160017  0.0051276   120.136  &lt; 2e-16 ***\nORIGIN_SZCLSZ05 -2.1005122  0.0150228  -139.821  &lt; 2e-16 ***\nORIGIN_SZCLSZ06  0.7252108  0.0049447   146.665  &lt; 2e-16 ***\nORIGIN_SZCLSZ07 -0.5343482  0.0062500   -85.496  &lt; 2e-16 ***\nORIGIN_SZCLSZ08 -0.2153408  0.0067571   -31.869  &lt; 2e-16 ***\nORIGIN_SZCLSZ09 -1.8019961  0.0169078  -106.578  &lt; 2e-16 ***\nORIGIN_SZDTSZ02 -3.9057711  0.0834668   -46.794  &lt; 2e-16 ***\nORIGIN_SZDTSZ03 -3.4152419  0.0738650   -46.236  &lt; 2e-16 ***\nORIGIN_SZDTSZ13 -3.0183438  0.0315257   -95.742  &lt; 2e-16 ***\nORIGIN_SZGLSZ01 -1.7812384  0.0099367  -179.258  &lt; 2e-16 ***\nORIGIN_SZGLSZ02 -0.1074991  0.0054325   -19.788  &lt; 2e-16 ***\nORIGIN_SZGLSZ03 -0.2461106  0.0057176   -43.045  &lt; 2e-16 ***\nORIGIN_SZGLSZ04  0.8657186  0.0046413   186.524  &lt; 2e-16 ***\nORIGIN_SZGLSZ05  0.5871393  0.0047939   122.477  &lt; 2e-16 ***\nORIGIN_SZHGSZ01  0.3543819  0.0050461    70.229  &lt; 2e-16 ***\nORIGIN_SZHGSZ02  0.4218178  0.0050820    83.003  &lt; 2e-16 ***\nORIGIN_SZHGSZ03  0.2411309  0.0054241    44.456  &lt; 2e-16 ***\nORIGIN_SZHGSZ04  0.8180622  0.0046153   177.252  &lt; 2e-16 ***\nORIGIN_SZHGSZ05  1.2173687  0.0045655   266.647  &lt; 2e-16 ***\nORIGIN_SZHGSZ06 -0.1826300  0.0058214   -31.372  &lt; 2e-16 ***\nORIGIN_SZHGSZ07  0.3172839  0.0050733    62.540  &lt; 2e-16 ***\nORIGIN_SZHGSZ08 -0.1151369  0.0057067   -20.176  &lt; 2e-16 ***\nORIGIN_SZHGSZ09 -1.2873441  0.0091690  -140.401  &lt; 2e-16 ***\nORIGIN_SZHGSZ10 -3.3783178  0.0424682   -79.549  &lt; 2e-16 ***\nORIGIN_SZJESZ01  0.4859234  0.0055927    86.885  &lt; 2e-16 ***\nORIGIN_SZJESZ02  0.1766088  0.0055800    31.650  &lt; 2e-16 ***\nORIGIN_SZJESZ03 -0.2177441  0.0059535   -36.574  &lt; 2e-16 ***\nORIGIN_SZJESZ04 -1.5532182  0.0104526  -148.597  &lt; 2e-16 ***\nORIGIN_SZJESZ05 -2.3332926  0.0142701  -163.509  &lt; 2e-16 ***\nORIGIN_SZJESZ06  0.3007382  0.0055019    54.661  &lt; 2e-16 ***\nORIGIN_SZJESZ07 -1.9687994  0.0121092  -162.587  &lt; 2e-16 ***\nORIGIN_SZJESZ08 -1.3032070  0.0122024  -106.800  &lt; 2e-16 ***\nORIGIN_SZJESZ09  0.5762635  0.0058766    98.061  &lt; 2e-16 ***\nORIGIN_SZJESZ10 -1.4423113  0.0194773   -74.051  &lt; 2e-16 ***\nORIGIN_SZJESZ11 -1.9720897  0.0200811   -98.206  &lt; 2e-16 ***\nORIGIN_SZJWSZ01  0.3808627  0.0071357    53.374  &lt; 2e-16 ***\nORIGIN_SZJWSZ02  0.7963999  0.0053150   149.840  &lt; 2e-16 ***\nORIGIN_SZJWSZ03  1.5429636  0.0049961   308.834  &lt; 2e-16 ***\nORIGIN_SZJWSZ04  0.6410760  0.0056711   113.042  &lt; 2e-16 ***\nORIGIN_SZJWSZ05 -2.1571049  0.0133584  -161.479  &lt; 2e-16 ***\nORIGIN_SZJWSZ06 -1.5174532  0.0113384  -133.833  &lt; 2e-16 ***\nORIGIN_SZJWSZ07 -2.7089963  0.0280439   -96.598  &lt; 2e-16 ***\nORIGIN_SZJWSZ08  1.5343415  0.0051711   296.713  &lt; 2e-16 ***\nORIGIN_SZJWSZ09  1.8837410  0.0048845   385.656  &lt; 2e-16 ***\nORIGIN_SZKLSZ01  0.1081286  0.0053307    20.284  &lt; 2e-16 ***\nORIGIN_SZKLSZ02 -0.8844695  0.0067728  -130.591  &lt; 2e-16 ***\nORIGIN_SZKLSZ03 -0.6872640  0.0062857  -109.337  &lt; 2e-16 ***\nORIGIN_SZKLSZ04 -2.2090319  0.0122440  -180.418  &lt; 2e-16 ***\nORIGIN_SZKLSZ05 -1.1728726  0.0110765  -105.888  &lt; 2e-16 ***\nORIGIN_SZKLSZ06 -6.1162315  0.1857789   -32.922  &lt; 2e-16 ***\nORIGIN_SZKLSZ07 -1.4082749  0.0092299  -152.578  &lt; 2e-16 ***\nORIGIN_SZKLSZ08 -1.7781551  0.0104682  -169.862  &lt; 2e-16 ***\nORIGIN_SZLKSZ01 -2.0531568  0.0398803   -51.483  &lt; 2e-16 ***\nORIGIN_SZMDSZ01 -0.8825639  0.0287621   -30.685  &lt; 2e-16 ***\nORIGIN_SZMDSZ02 -0.6219993  0.0107388   -57.921  &lt; 2e-16 ***\nORIGIN_SZMDSZ03 -2.0840156  0.0173117  -120.382  &lt; 2e-16 ***\nORIGIN_SZMPSZ01 -0.9659093  0.0086972  -111.060  &lt; 2e-16 ***\nORIGIN_SZMPSZ02 -1.0411153  0.0073403  -141.836  &lt; 2e-16 ***\nORIGIN_SZMPSZ03  0.0001659  0.0059401     0.028 0.977719    \nORIGIN_SZMUSZ02 -3.7599031  0.1037937   -36.225  &lt; 2e-16 ***\nORIGIN_SZNTSZ01 -3.0388366  0.0355325   -85.523  &lt; 2e-16 ***\nORIGIN_SZNTSZ02 -3.4230640  0.0235902  -145.106  &lt; 2e-16 ***\nORIGIN_SZNTSZ03 -0.9094796  0.0082551  -110.172  &lt; 2e-16 ***\nORIGIN_SZNTSZ05 -4.0861681  0.0499630   -81.784  &lt; 2e-16 ***\nORIGIN_SZNTSZ06 -3.9497128  0.0565388   -69.858  &lt; 2e-16 ***\nORIGIN_SZNVSZ01  0.3235636  0.0049439    65.447  &lt; 2e-16 ***\nORIGIN_SZNVSZ02 -0.6946748  0.0070536   -98.485  &lt; 2e-16 ***\nORIGIN_SZNVSZ03 -1.0540196  0.0083781  -125.806  &lt; 2e-16 ***\nORIGIN_SZNVSZ04 -0.9897977  0.0093463  -105.903  &lt; 2e-16 ***\nORIGIN_SZNVSZ05 -2.2578432  0.0169180  -133.458  &lt; 2e-16 ***\nORIGIN_SZPGSZ01  0.2399827  0.0130436    18.398  &lt; 2e-16 ***\nORIGIN_SZPGSZ02 -0.3352342  0.0078451   -42.732  &lt; 2e-16 ***\nORIGIN_SZPGSZ03  0.9515148  0.0051376   185.207  &lt; 2e-16 ***\nORIGIN_SZPGSZ04  1.3998952  0.0047991   291.697  &lt; 2e-16 ***\nORIGIN_SZPGSZ05  0.4451629  0.0063423    70.189  &lt; 2e-16 ***\nORIGIN_SZPLSZ01 -0.9705918  0.0122781   -79.050  &lt; 2e-16 ***\nORIGIN_SZPLSZ02 -1.0670151  0.0153358   -69.577  &lt; 2e-16 ***\nORIGIN_SZPLSZ03 -2.1229124  0.0373527   -56.834  &lt; 2e-16 ***\nORIGIN_SZPLSZ04 -3.0911932  0.0371296   -83.254  &lt; 2e-16 ***\nORIGIN_SZPLSZ05 -2.1705708  0.0226085   -96.007  &lt; 2e-16 ***\nORIGIN_SZPNSZ01  0.9052637  0.0065952   137.262  &lt; 2e-16 ***\nORIGIN_SZPNSZ02 -0.1720425  0.0125658   -13.691  &lt; 2e-16 ***\nORIGIN_SZPNSZ03 -2.3973459  0.0201408  -119.029  &lt; 2e-16 ***\nORIGIN_SZPNSZ04 -3.4483689  0.0343741  -100.319  &lt; 2e-16 ***\nORIGIN_SZPNSZ05 -2.0588530  0.0282328   -72.924  &lt; 2e-16 ***\nORIGIN_SZPRSZ01 -0.6399015  0.0120470   -53.117  &lt; 2e-16 ***\nORIGIN_SZPRSZ02  0.8122270  0.0050886   159.617  &lt; 2e-16 ***\nORIGIN_SZPRSZ03  0.3990960  0.0051810    77.031  &lt; 2e-16 ***\nORIGIN_SZPRSZ04 -0.8485348  0.0079236  -107.089  &lt; 2e-16 ***\nORIGIN_SZPRSZ05  0.8008791  0.0048532   165.021  &lt; 2e-16 ***\nORIGIN_SZPRSZ06 -1.4498806  0.0121422  -119.408  &lt; 2e-16 ***\nORIGIN_SZPRSZ07 -3.2025045  0.0167118  -191.631  &lt; 2e-16 ***\nORIGIN_SZPRSZ08 -0.5862269  0.0067255   -87.165  &lt; 2e-16 ***\nORIGIN_SZQTSZ01 -0.1859270  0.0075531   -24.616  &lt; 2e-16 ***\nORIGIN_SZQTSZ02 -0.8715122  0.0068124  -127.929  &lt; 2e-16 ***\nORIGIN_SZQTSZ03 -0.1259816  0.0064796   -19.443  &lt; 2e-16 ***\nORIGIN_SZQTSZ04 -1.4620032  0.0079848  -183.098  &lt; 2e-16 ***\nORIGIN_SZQTSZ05 -0.6675643  0.0069616   -95.892  &lt; 2e-16 ***\nORIGIN_SZQTSZ06 -0.8190026  0.0072713  -112.634  &lt; 2e-16 ***\nORIGIN_SZQTSZ07 -1.5189403  0.0099864  -152.101  &lt; 2e-16 ***\nORIGIN_SZQTSZ08 -0.4976238  0.0067874   -73.316  &lt; 2e-16 ***\nORIGIN_SZQTSZ09 -0.9006162  0.0075978  -118.536  &lt; 2e-16 ***\nORIGIN_SZQTSZ10 -0.6690184  0.0071574   -93.473  &lt; 2e-16 ***\nORIGIN_SZQTSZ11 -2.5203437  0.0147000  -171.452  &lt; 2e-16 ***\nORIGIN_SZQTSZ12 -3.0461675  0.0190193  -160.162  &lt; 2e-16 ***\nORIGIN_SZQTSZ13 -0.7501068  0.0084481   -88.791  &lt; 2e-16 ***\nORIGIN_SZQTSZ14 -1.9321849  0.0126114  -153.209  &lt; 2e-16 ***\nORIGIN_SZQTSZ15 -0.9576828  0.0127157   -75.315  &lt; 2e-16 ***\nORIGIN_SZRCSZ01 -1.8167951  0.0129234  -140.582  &lt; 2e-16 ***\nORIGIN_SZRCSZ06 -0.5560563  0.0090507   -61.438  &lt; 2e-16 ***\nORIGIN_SZRVSZ01 -2.8862570  0.0325532   -88.663  &lt; 2e-16 ***\nORIGIN_SZRVSZ02 -3.1555662  0.0281279  -112.186  &lt; 2e-16 ***\nORIGIN_SZRVSZ03 -2.9836089  0.0248449  -120.089  &lt; 2e-16 ***\nORIGIN_SZRVSZ04 -3.5520422  0.0561371   -63.274  &lt; 2e-16 ***\nORIGIN_SZRVSZ05 -2.5866584  0.0180382  -143.399  &lt; 2e-16 ***\nORIGIN_SZSBSZ01  0.2867444  0.0071098    40.331  &lt; 2e-16 ***\nORIGIN_SZSBSZ02 -0.9012334  0.0087262  -103.278  &lt; 2e-16 ***\nORIGIN_SZSBSZ03  0.8311038  0.0055422   149.958  &lt; 2e-16 ***\nORIGIN_SZSBSZ04  0.4044170  0.0062047    65.179  &lt; 2e-16 ***\nORIGIN_SZSBSZ05 -0.2661845  0.0074162   -35.892  &lt; 2e-16 ***\nORIGIN_SZSBSZ06 -0.9023075  0.0175046   -51.547  &lt; 2e-16 ***\nORIGIN_SZSBSZ07  0.0505870  0.0131317     3.852 0.000117 ***\nORIGIN_SZSBSZ08 -1.1158011  0.0145416   -76.732  &lt; 2e-16 ***\nORIGIN_SZSBSZ09 -0.9682835  0.0095396  -101.501  &lt; 2e-16 ***\nORIGIN_SZSESZ02  1.1452735  0.0047810   239.548  &lt; 2e-16 ***\nORIGIN_SZSESZ03  1.2815277  0.0045677   280.564  &lt; 2e-16 ***\nORIGIN_SZSESZ04  0.8085857  0.0052756   153.269  &lt; 2e-16 ***\nORIGIN_SZSESZ05 -0.2329413  0.0063113   -36.909  &lt; 2e-16 ***\nORIGIN_SZSESZ06  1.0576879  0.0049909   211.925  &lt; 2e-16 ***\nORIGIN_SZSESZ07 -2.3165908  0.0196831  -117.695  &lt; 2e-16 ***\nORIGIN_SZSGSZ01 -0.6606350  0.0088079   -75.005  &lt; 2e-16 ***\nORIGIN_SZSGSZ02 -1.3638984  0.0104040  -131.094  &lt; 2e-16 ***\nORIGIN_SZSGSZ03  0.1152591  0.0054649    21.091  &lt; 2e-16 ***\nORIGIN_SZSGSZ04  0.2954067  0.0050865    58.077  &lt; 2e-16 ***\nORIGIN_SZSGSZ05 -2.0792678  0.0109882  -189.227  &lt; 2e-16 ***\nORIGIN_SZSGSZ06  0.4563227  0.0048880    93.356  &lt; 2e-16 ***\nORIGIN_SZSGSZ07 -0.8955254  0.0067100  -133.461  &lt; 2e-16 ***\nORIGIN_SZSKSZ01 -0.3184402  0.0093032   -34.229  &lt; 2e-16 ***\nORIGIN_SZSKSZ02  1.1160484  0.0063851   174.790  &lt; 2e-16 ***\nORIGIN_SZSKSZ03 -0.2566692  0.0086021   -29.838  &lt; 2e-16 ***\nORIGIN_SZSKSZ04 -1.5781827  0.0279394   -56.486  &lt; 2e-16 ***\nORIGIN_SZSKSZ05 -0.2724361  0.0163597   -16.653  &lt; 2e-16 ***\nORIGIN_SZSLSZ01 -2.4458625  0.0330301   -74.050  &lt; 2e-16 ***\nORIGIN_SZSLSZ04 -0.0987076  0.0079626   -12.396  &lt; 2e-16 ***\nORIGIN_SZSRSZ01 -2.2584977  0.0176647  -127.854  &lt; 2e-16 ***\nORIGIN_SZTHSZ01 -2.5878524  0.0489998   -52.814  &lt; 2e-16 ***\nORIGIN_SZTHSZ03 -0.8101746  0.0226814   -35.720  &lt; 2e-16 ***\nORIGIN_SZTHSZ04 -2.4186655  0.0288663   -83.789  &lt; 2e-16 ***\nORIGIN_SZTHSZ06 -1.7080541  0.0186353   -91.657  &lt; 2e-16 ***\nORIGIN_SZTMSZ01 -0.2193476  0.0061823   -35.480  &lt; 2e-16 ***\nORIGIN_SZTMSZ02  1.7772464  0.0043394   409.558  &lt; 2e-16 ***\nORIGIN_SZTMSZ03  1.0051343  0.0046055   218.249  &lt; 2e-16 ***\nORIGIN_SZTMSZ04  0.1642370  0.0055078    29.819  &lt; 2e-16 ***\nORIGIN_SZTMSZ05 -1.2878706  0.0114828  -112.157  &lt; 2e-16 ***\nORIGIN_SZTNSZ01 -1.7163504  0.0131268  -130.751  &lt; 2e-16 ***\nORIGIN_SZTNSZ02 -1.6508988  0.0103851  -158.968  &lt; 2e-16 ***\nORIGIN_SZTNSZ03 -2.1545577  0.0137947  -156.187  &lt; 2e-16 ***\nORIGIN_SZTNSZ04 -0.3949120  0.0078496   -50.310  &lt; 2e-16 ***\nORIGIN_SZTPSZ01 -0.8058100  0.0069916  -115.253  &lt; 2e-16 ***\nORIGIN_SZTPSZ02  0.5369060  0.0047272   113.577  &lt; 2e-16 ***\nORIGIN_SZTPSZ03 -0.7779333  0.0064278  -121.027  &lt; 2e-16 ***\nORIGIN_SZTPSZ04 -0.8153581  0.0061387  -132.823  &lt; 2e-16 ***\nORIGIN_SZTPSZ05 -0.5073676  0.0067771   -74.865  &lt; 2e-16 ***\nORIGIN_SZTPSZ06  0.0847301  0.0065717    12.893  &lt; 2e-16 ***\nORIGIN_SZTPSZ07 -0.5839519  0.0066148   -88.280  &lt; 2e-16 ***\nORIGIN_SZTPSZ08 -1.0577941  0.0098480  -107.412  &lt; 2e-16 ***\nORIGIN_SZTPSZ09 -0.9067707  0.0071367  -127.057  &lt; 2e-16 ***\nORIGIN_SZTPSZ10 -1.1362091  0.0080905  -140.438  &lt; 2e-16 ***\nORIGIN_SZTPSZ11 -0.2374621  0.0059472   -39.928  &lt; 2e-16 ***\nORIGIN_SZTPSZ12 -0.8028874  0.0069663  -115.253  &lt; 2e-16 ***\nORIGIN_SZTSSZ01 -2.7809271  0.0482843   -57.595  &lt; 2e-16 ***\nORIGIN_SZTSSZ02  0.0425804  0.0105088     4.052 5.08e-05 ***\nORIGIN_SZTSSZ03  0.1142369  0.0109412    10.441  &lt; 2e-16 ***\nORIGIN_SZTSSZ04 -0.6186261  0.0116324   -53.181  &lt; 2e-16 ***\nORIGIN_SZTSSZ05 -1.0846732  0.0173555   -62.497  &lt; 2e-16 ***\nORIGIN_SZTSSZ06  0.3980173  0.0198100    20.092  &lt; 2e-16 ***\nORIGIN_SZWCSZ01  1.3545143  0.0092002   147.227  &lt; 2e-16 ***\nORIGIN_SZWCSZ02 -2.9863278  0.0330906   -90.247  &lt; 2e-16 ***\nORIGIN_SZWCSZ03 -5.0504916  0.1241385   -40.684  &lt; 2e-16 ***\nORIGIN_SZWDSZ01  1.5238429  0.0049404   308.448  &lt; 2e-16 ***\nORIGIN_SZWDSZ02  0.2832576  0.0056218    50.386  &lt; 2e-16 ***\nORIGIN_SZWDSZ03  1.3702524  0.0053266   257.245  &lt; 2e-16 ***\nORIGIN_SZWDSZ04  1.0248225  0.0059272   172.903  &lt; 2e-16 ***\nORIGIN_SZWDSZ05  0.2356778  0.0060587    38.899  &lt; 2e-16 ***\nORIGIN_SZWDSZ06  0.3146925  0.0059919    52.520  &lt; 2e-16 ***\nORIGIN_SZWDSZ07 -1.4971897  0.0091243  -164.088  &lt; 2e-16 ***\nORIGIN_SZWDSZ08 -0.8894079  0.0087414  -101.747  &lt; 2e-16 ***\nORIGIN_SZWDSZ09  1.4437633  0.0053160   271.590  &lt; 2e-16 ***\nORIGIN_SZYSSZ01 -0.2519398  0.0064443   -39.095  &lt; 2e-16 ***\nORIGIN_SZYSSZ02  0.8726785  0.0057658   151.354  &lt; 2e-16 ***\nORIGIN_SZYSSZ03  1.7868139  0.0050674   352.611  &lt; 2e-16 ***\nORIGIN_SZYSSZ04  0.8418040  0.0051738   162.704  &lt; 2e-16 ***\nORIGIN_SZYSSZ05  0.4292096  0.0062520    68.652  &lt; 2e-16 ***\nORIGIN_SZYSSZ06 -0.7459961  0.0119123   -62.624  &lt; 2e-16 ***\nORIGIN_SZYSSZ07 -0.8422281  0.0144559   -58.262  &lt; 2e-16 ***\nORIGIN_SZYSSZ08  0.1829428  0.0067885    26.949  &lt; 2e-16 ***\nORIGIN_SZYSSZ09  1.1159712  0.0050760   219.853  &lt; 2e-16 ***\nDESTIN_SZAMSZ02  0.0694567  0.0045966    15.111  &lt; 2e-16 ***\nDESTIN_SZAMSZ03  0.0760100  0.0044639    17.028  &lt; 2e-16 ***\nDESTIN_SZAMSZ04 -1.1306391  0.0064373  -175.639  &lt; 2e-16 ***\nDESTIN_SZAMSZ05 -1.0751133  0.0065164  -164.985  &lt; 2e-16 ***\nDESTIN_SZAMSZ06 -0.9624298  0.0065937  -145.962  &lt; 2e-16 ***\nDESTIN_SZAMSZ07 -1.5060319  0.0097616  -154.281  &lt; 2e-16 ***\nDESTIN_SZAMSZ08 -0.4813202  0.0069794   -68.963  &lt; 2e-16 ***\nDESTIN_SZAMSZ09 -1.0220675  0.0066313  -154.129  &lt; 2e-16 ***\nDESTIN_SZAMSZ10  0.1235142  0.0047044    26.255  &lt; 2e-16 ***\nDESTIN_SZAMSZ11 -0.8917993  0.0088519  -100.746  &lt; 2e-16 ***\nDESTIN_SZAMSZ12  0.0195208  0.0051704     3.775 0.000160 ***\nDESTIN_SZBDSZ01  0.9736349  0.0042757   227.713  &lt; 2e-16 ***\nDESTIN_SZBDSZ02 -0.1969470  0.0055284   -35.625  &lt; 2e-16 ***\nDESTIN_SZBDSZ03  0.1266471  0.0050786    24.938  &lt; 2e-16 ***\nDESTIN_SZBDSZ04  1.1608485  0.0041956   276.684  &lt; 2e-16 ***\nDESTIN_SZBDSZ05  0.9293840  0.0044412   209.265  &lt; 2e-16 ***\nDESTIN_SZBDSZ06  0.4090567  0.0050300    81.323  &lt; 2e-16 ***\nDESTIN_SZBDSZ07 -0.8171478  0.0098945   -82.586  &lt; 2e-16 ***\nDESTIN_SZBDSZ08 -1.5895287  0.0111632  -142.391  &lt; 2e-16 ***\nDESTIN_SZBKSZ01 -1.3793311  0.0072145  -191.189  &lt; 2e-16 ***\nDESTIN_SZBKSZ02 -0.5253670  0.0061879   -84.903  &lt; 2e-16 ***\nDESTIN_SZBKSZ03 -1.0095362  0.0065426  -154.301  &lt; 2e-16 ***\nDESTIN_SZBKSZ04 -0.5662858  0.0056453  -100.311  &lt; 2e-16 ***\nDESTIN_SZBKSZ05 -0.9406607  0.0070597  -133.244  &lt; 2e-16 ***\nDESTIN_SZBKSZ06 -1.3129276  0.0067414  -194.755  &lt; 2e-16 ***\nDESTIN_SZBKSZ07  0.0120605  0.0049284     2.447 0.014400 *  \nDESTIN_SZBKSZ08 -1.3658471  0.0075109  -181.849  &lt; 2e-16 ***\nDESTIN_SZBKSZ09 -0.1771310  0.0055645   -31.832  &lt; 2e-16 ***\nDESTIN_SZBLSZ01 -0.8175223  0.0075645  -108.074  &lt; 2e-16 ***\nDESTIN_SZBLSZ02  0.1631280  0.0071753    22.735  &lt; 2e-16 ***\nDESTIN_SZBLSZ03  1.2598494  0.0081706   154.194  &lt; 2e-16 ***\nDESTIN_SZBLSZ04 -0.5642975  0.0137827   -40.943  &lt; 2e-16 ***\nDESTIN_SZBMSZ01  0.6921844  0.0054211   127.684  &lt; 2e-16 ***\nDESTIN_SZBMSZ02 -0.1209392  0.0055362   -21.845  &lt; 2e-16 ***\nDESTIN_SZBMSZ03 -0.2373881  0.0062427   -38.027  &lt; 2e-16 ***\nDESTIN_SZBMSZ04 -0.0407117  0.0058001    -7.019 2.23e-12 ***\nDESTIN_SZBMSZ05 -0.2363309  0.0075967   -31.110  &lt; 2e-16 ***\nDESTIN_SZBMSZ06 -1.1930710  0.0134761   -88.532  &lt; 2e-16 ***\nDESTIN_SZBMSZ07  0.4625103  0.0051864    89.178  &lt; 2e-16 ***\nDESTIN_SZBMSZ08 -0.8604731  0.0069899  -123.102  &lt; 2e-16 ***\nDESTIN_SZBMSZ09 -2.1290239  0.0154841  -137.498  &lt; 2e-16 ***\nDESTIN_SZBMSZ10 -1.4617153  0.0094014  -155.478  &lt; 2e-16 ***\nDESTIN_SZBMSZ11 -1.3234050  0.0085506  -154.773  &lt; 2e-16 ***\nDESTIN_SZBMSZ12 -0.8399230  0.0085361   -98.397  &lt; 2e-16 ***\nDESTIN_SZBMSZ13  0.1366529  0.0059697    22.891  &lt; 2e-16 ***\nDESTIN_SZBMSZ14 -1.0491968  0.0083021  -126.378  &lt; 2e-16 ***\nDESTIN_SZBMSZ15 -0.6726684  0.0076276   -88.189  &lt; 2e-16 ***\nDESTIN_SZBMSZ16 -1.4011734  0.0116569  -120.201  &lt; 2e-16 ***\nDESTIN_SZBMSZ17 -1.5682752  0.0167333   -93.722  &lt; 2e-16 ***\nDESTIN_SZBPSZ01 -1.1120017  0.0063197  -175.959  &lt; 2e-16 ***\nDESTIN_SZBPSZ02 -2.0833466  0.0091139  -228.590  &lt; 2e-16 ***\nDESTIN_SZBPSZ03 -1.6937265  0.0087437  -193.709  &lt; 2e-16 ***\nDESTIN_SZBPSZ04 -0.7964999  0.0066129  -120.447  &lt; 2e-16 ***\nDESTIN_SZBPSZ05  0.2109118  0.0048815    43.206  &lt; 2e-16 ***\nDESTIN_SZBPSZ06 -1.1808365  0.0083657  -141.152  &lt; 2e-16 ***\nDESTIN_SZBPSZ07 -0.2077428  0.0084543   -24.572  &lt; 2e-16 ***\nDESTIN_SZBSSZ01  0.3164175  0.0050682    62.431  &lt; 2e-16 ***\nDESTIN_SZBSSZ02 -0.4852688  0.0057001   -85.134  &lt; 2e-16 ***\nDESTIN_SZBSSZ03  0.4130432  0.0043061    95.921  &lt; 2e-16 ***\nDESTIN_SZBTSZ01  0.6215095  0.0048914   127.061  &lt; 2e-16 ***\nDESTIN_SZBTSZ02 -0.0145076  0.0071799    -2.021 0.043324 *  \nDESTIN_SZBTSZ03  0.4919981  0.0058498    84.105  &lt; 2e-16 ***\nDESTIN_SZBTSZ04 -0.6957555  0.0114078   -60.989  &lt; 2e-16 ***\nDESTIN_SZBTSZ05  0.3329814  0.0073568    45.262  &lt; 2e-16 ***\nDESTIN_SZBTSZ06 -0.1333295  0.0073965   -18.026  &lt; 2e-16 ***\nDESTIN_SZBTSZ07 -1.4449581  0.0113186  -127.663  &lt; 2e-16 ***\nDESTIN_SZBTSZ08 -0.7079056  0.0103797   -68.201  &lt; 2e-16 ***\nDESTIN_SZCBSZ01 -5.7344725  0.3162767   -18.131  &lt; 2e-16 ***\nDESTIN_SZCCSZ01 -0.0009541  0.0083381    -0.114 0.908900    \nDESTIN_SZCHSZ01 -0.2083016  0.0099054   -21.029  &lt; 2e-16 ***\nDESTIN_SZCHSZ02  0.5369606  0.0057531    93.334  &lt; 2e-16 ***\nDESTIN_SZCHSZ03  2.5530638  0.0043945   580.971  &lt; 2e-16 ***\nDESTIN_SZCKSZ01 -0.5725975  0.0056507  -101.333  &lt; 2e-16 ***\nDESTIN_SZCKSZ02 -1.1181852  0.0063287  -176.685  &lt; 2e-16 ***\nDESTIN_SZCKSZ03  0.1156680  0.0049440    23.396  &lt; 2e-16 ***\nDESTIN_SZCKSZ04 -0.8647725  0.0071003  -121.794  &lt; 2e-16 ***\nDESTIN_SZCKSZ05 -1.1641791  0.0076248  -152.684  &lt; 2e-16 ***\nDESTIN_SZCKSZ06 -0.4397612  0.0073040   -60.208  &lt; 2e-16 ***\nDESTIN_SZCLSZ01  0.1930552  0.0053752    35.916  &lt; 2e-16 ***\nDESTIN_SZCLSZ02 -2.0436501  0.0136039  -150.225  &lt; 2e-16 ***\nDESTIN_SZCLSZ03 -0.9338571  0.0082908  -112.638  &lt; 2e-16 ***\nDESTIN_SZCLSZ04  0.0532041  0.0053276     9.987  &lt; 2e-16 ***\nDESTIN_SZCLSZ05 -1.0782781  0.0088184  -122.276  &lt; 2e-16 ***\nDESTIN_SZCLSZ06  0.4068171  0.0049068    82.910  &lt; 2e-16 ***\nDESTIN_SZCLSZ07 -0.3579507  0.0060289   -59.373  &lt; 2e-16 ***\nDESTIN_SZCLSZ08 -0.2487993  0.0066588   -37.364  &lt; 2e-16 ***\nDESTIN_SZCLSZ09  0.1611080  0.0071178    22.635  &lt; 2e-16 ***\nDESTIN_SZDTSZ02 -1.7308348  0.0349466   -49.528  &lt; 2e-16 ***\nDESTIN_SZDTSZ03 -0.5994253  0.0146230   -40.992  &lt; 2e-16 ***\nDESTIN_SZDTSZ13 -1.3685031  0.0162803   -84.059  &lt; 2e-16 ***\nDESTIN_SZGLSZ01 -0.0910001  0.0055275   -16.463  &lt; 2e-16 ***\nDESTIN_SZGLSZ02 -0.0692224  0.0052840   -13.100  &lt; 2e-16 ***\nDESTIN_SZGLSZ03  0.6493421  0.0043446   149.459  &lt; 2e-16 ***\nDESTIN_SZGLSZ04  0.9327947  0.0043674   213.583  &lt; 2e-16 ***\nDESTIN_SZGLSZ05  0.8161728  0.0043625   187.087  &lt; 2e-16 ***\nDESTIN_SZHGSZ01  0.0658625  0.0042516    15.491  &lt; 2e-16 ***\nDESTIN_SZHGSZ02 -0.8134329  0.0056721  -143.409  &lt; 2e-16 ***\nDESTIN_SZHGSZ03 -1.3546132  0.0066257  -204.448  &lt; 2e-16 ***\nDESTIN_SZHGSZ04 -0.4500588  0.0048448   -92.895  &lt; 2e-16 ***\nDESTIN_SZHGSZ05 -0.5026431  0.0050996   -98.566  &lt; 2e-16 ***\nDESTIN_SZHGSZ06 -0.8673686  0.0059530  -145.704  &lt; 2e-16 ***\nDESTIN_SZHGSZ07  0.0560490  0.0047702    11.750  &lt; 2e-16 ***\nDESTIN_SZHGSZ08 -0.0443189  0.0052599    -8.426  &lt; 2e-16 ***\nDESTIN_SZHGSZ09 -0.0126355  0.0054966    -2.299 0.021518 *  \nDESTIN_SZHGSZ10 -3.5821793  0.0263281  -136.059  &lt; 2e-16 ***\nDESTIN_SZJESZ01 -0.3704281  0.0056684   -65.350  &lt; 2e-16 ***\nDESTIN_SZJESZ02 -0.7369159  0.0058686  -125.570  &lt; 2e-16 ***\nDESTIN_SZJESZ03 -0.8985484  0.0063627  -141.222  &lt; 2e-16 ***\nDESTIN_SZJESZ04 -1.0511995  0.0073996  -142.061  &lt; 2e-16 ***\nDESTIN_SZJESZ05 -1.5324974  0.0102612  -149.349  &lt; 2e-16 ***\nDESTIN_SZJESZ06  0.3105267  0.0048241    64.370  &lt; 2e-16 ***\nDESTIN_SZJESZ07 -1.3234483  0.0085497  -154.795  &lt; 2e-16 ***\nDESTIN_SZJESZ08 -0.6559742  0.0083174   -78.867  &lt; 2e-16 ***\nDESTIN_SZJESZ09  0.2663752  0.0063370    42.035  &lt; 2e-16 ***\nDESTIN_SZJESZ10  0.8529026  0.0076067   112.126  &lt; 2e-16 ***\nDESTIN_SZJESZ11  0.5559641  0.0074629    74.497  &lt; 2e-16 ***\nDESTIN_SZJWSZ01 -0.9790971  0.0071830  -136.308  &lt; 2e-16 ***\nDESTIN_SZJWSZ02 -0.8746590  0.0060179  -145.342  &lt; 2e-16 ***\nDESTIN_SZJWSZ03  0.5689062  0.0049105   115.855  &lt; 2e-16 ***\nDESTIN_SZJWSZ04  0.4520963  0.0050302    89.876  &lt; 2e-16 ***\nDESTIN_SZJWSZ05 -1.0249671  0.0067371  -152.137  &lt; 2e-16 ***\nDESTIN_SZJWSZ06 -0.7451483  0.0062189  -119.819  &lt; 2e-16 ***\nDESTIN_SZJWSZ07 -2.8453099  0.0287335   -99.024  &lt; 2e-16 ***\nDESTIN_SZJWSZ08 -0.3372309  0.0058003   -58.141  &lt; 2e-16 ***\nDESTIN_SZJWSZ09  1.0505330  0.0045908   228.832  &lt; 2e-16 ***\nDESTIN_SZKLSZ01 -0.2334836  0.0057970   -40.277  &lt; 2e-16 ***\nDESTIN_SZKLSZ02 -0.5416148  0.0061432   -88.164  &lt; 2e-16 ***\nDESTIN_SZKLSZ03 -0.8026495  0.0068745  -116.757  &lt; 2e-16 ***\nDESTIN_SZKLSZ04 -1.2918594  0.0090197  -143.227  &lt; 2e-16 ***\nDESTIN_SZKLSZ05 -0.4069101  0.0087812   -46.339  &lt; 2e-16 ***\nDESTIN_SZKLSZ06 -2.5333101  0.0363215   -69.747  &lt; 2e-16 ***\nDESTIN_SZKLSZ07 -0.6623343  0.0070761   -93.601  &lt; 2e-16 ***\nDESTIN_SZKLSZ08 -0.1408205  0.0054965   -25.620  &lt; 2e-16 ***\nDESTIN_SZLKSZ01 -1.2639235  0.0208254   -60.691  &lt; 2e-16 ***\nDESTIN_SZMDSZ01 -1.5655800  0.0202787   -77.203  &lt; 2e-16 ***\nDESTIN_SZMDSZ02 -0.9767682  0.0114687   -85.168  &lt; 2e-16 ***\nDESTIN_SZMDSZ03 -3.3328109  0.0254294  -131.061  &lt; 2e-16 ***\nDESTIN_SZMPSZ01 -0.4552859  0.0080666   -56.441  &lt; 2e-16 ***\nDESTIN_SZMPSZ02 -0.5386560  0.0064620   -83.358  &lt; 2e-16 ***\nDESTIN_SZMPSZ03  0.4952000  0.0052295    94.694  &lt; 2e-16 ***\nDESTIN_SZMUSZ02 -1.4434175  0.0202509   -71.277  &lt; 2e-16 ***\nDESTIN_SZNTSZ01 -2.9194067  0.0449654   -64.926  &lt; 2e-16 ***\nDESTIN_SZNTSZ02 -1.3780179  0.0112867  -122.092  &lt; 2e-16 ***\nDESTIN_SZNTSZ03 -0.5044699  0.0080449   -62.707  &lt; 2e-16 ***\nDESTIN_SZNTSZ05 -2.0017134  0.0258750   -77.361  &lt; 2e-16 ***\nDESTIN_SZNTSZ06 -3.8120537  0.0434271   -87.781  &lt; 2e-16 ***\nDESTIN_SZNVSZ01 -0.1071506  0.0051026   -20.999  &lt; 2e-16 ***\nDESTIN_SZNVSZ02 -0.0274710  0.0057611    -4.768 1.86e-06 ***\nDESTIN_SZNVSZ03  0.1076352  0.0057909    18.587  &lt; 2e-16 ***\nDESTIN_SZNVSZ04 -1.2087250  0.0110438  -109.448  &lt; 2e-16 ***\nDESTIN_SZNVSZ05 -1.0058290  0.0092167  -109.131  &lt; 2e-16 ***\nDESTIN_SZPGSZ01 -1.2029931  0.0163170   -73.726  &lt; 2e-16 ***\nDESTIN_SZPGSZ02 -1.2878671  0.0074139  -173.709  &lt; 2e-16 ***\nDESTIN_SZPGSZ03 -0.1520894  0.0048629   -31.275  &lt; 2e-16 ***\nDESTIN_SZPGSZ04 -0.1985959  0.0050374   -39.424  &lt; 2e-16 ***\nDESTIN_SZPGSZ05 -1.5290983  0.0082617  -185.083  &lt; 2e-16 ***\nDESTIN_SZPLSZ01 -0.3567934  0.0074298   -48.022  &lt; 2e-16 ***\nDESTIN_SZPLSZ02 -1.7114351  0.0134462  -127.280  &lt; 2e-16 ***\nDESTIN_SZPLSZ03 -0.3241427  0.0098895   -32.776  &lt; 2e-16 ***\nDESTIN_SZPLSZ04 -1.7117196  0.0119003  -143.838  &lt; 2e-16 ***\nDESTIN_SZPLSZ05 -0.5086379  0.0120051   -42.368  &lt; 2e-16 ***\nDESTIN_SZPNSZ01  0.2026781  0.0068977    29.383  &lt; 2e-16 ***\nDESTIN_SZPNSZ02  0.8313754  0.0078544   105.848  &lt; 2e-16 ***\nDESTIN_SZPNSZ03 -0.4041254  0.0086586   -46.673  &lt; 2e-16 ***\nDESTIN_SZPNSZ04  1.5814539  0.0093641   168.885  &lt; 2e-16 ***\nDESTIN_SZPNSZ05  1.1823430  0.0129843    91.059  &lt; 2e-16 ***\nDESTIN_SZPRSZ01 -1.1057553  0.0088197  -125.374  &lt; 2e-16 ***\nDESTIN_SZPRSZ02  0.0895099  0.0056308    15.897  &lt; 2e-16 ***\nDESTIN_SZPRSZ03  0.6921925  0.0043977   157.397  &lt; 2e-16 ***\nDESTIN_SZPRSZ04 -0.2848336  0.0084725   -33.619  &lt; 2e-16 ***\nDESTIN_SZPRSZ05  0.1744480  0.0053553    32.575  &lt; 2e-16 ***\nDESTIN_SZPRSZ06  0.4279206  0.0058735    72.856  &lt; 2e-16 ***\nDESTIN_SZPRSZ07 -1.5123108  0.0124303  -121.664  &lt; 2e-16 ***\nDESTIN_SZPRSZ08 -0.5650226  0.0068530   -82.449  &lt; 2e-16 ***\nDESTIN_SZQTSZ01 -0.5952360  0.0090505   -65.769  &lt; 2e-16 ***\nDESTIN_SZQTSZ02 -0.7728170  0.0078910   -97.937  &lt; 2e-16 ***\nDESTIN_SZQTSZ03 -0.5066812  0.0073996   -68.474  &lt; 2e-16 ***\nDESTIN_SZQTSZ04 -0.6398414  0.0075411   -84.847  &lt; 2e-16 ***\nDESTIN_SZQTSZ05 -0.4354527  0.0069345   -62.795  &lt; 2e-16 ***\nDESTIN_SZQTSZ06 -0.6597391  0.0071919   -91.733  &lt; 2e-16 ***\nDESTIN_SZQTSZ07 -0.9392696  0.0112518   -83.477  &lt; 2e-16 ***\nDESTIN_SZQTSZ08  0.4617774  0.0057011    80.998  &lt; 2e-16 ***\nDESTIN_SZQTSZ09 -0.3174497  0.0065890   -48.178  &lt; 2e-16 ***\nDESTIN_SZQTSZ10  0.1993449  0.0059923    33.267  &lt; 2e-16 ***\nDESTIN_SZQTSZ11  0.2551535  0.0061885    41.230  &lt; 2e-16 ***\nDESTIN_SZQTSZ12 -0.1662603  0.0086701   -19.176  &lt; 2e-16 ***\nDESTIN_SZQTSZ13  0.5500978  0.0063091    87.192  &lt; 2e-16 ***\nDESTIN_SZQTSZ14  0.5364435  0.0070157    76.463  &lt; 2e-16 ***\nDESTIN_SZQTSZ15  1.3611043  0.0081643   166.715  &lt; 2e-16 ***\nDESTIN_SZRCSZ01 -0.1034049  0.0076769   -13.470  &lt; 2e-16 ***\nDESTIN_SZRCSZ06 -1.0633902  0.0189846   -56.013  &lt; 2e-16 ***\nDESTIN_SZRVSZ01 -1.5486221  0.0165272   -93.701  &lt; 2e-16 ***\nDESTIN_SZRVSZ02 -2.4092611  0.0326906   -73.699  &lt; 2e-16 ***\nDESTIN_SZRVSZ03 -1.5172079  0.0139258  -108.950  &lt; 2e-16 ***\nDESTIN_SZRVSZ04 -1.1663615  0.0157430   -74.088  &lt; 2e-16 ***\nDESTIN_SZRVSZ05 -2.2404292  0.0281339   -79.634  &lt; 2e-16 ***\nDESTIN_SZSBSZ01 -1.3783780  0.0096022  -143.549  &lt; 2e-16 ***\nDESTIN_SZSBSZ02 -1.4445213  0.0081630  -176.959  &lt; 2e-16 ***\nDESTIN_SZSBSZ03  0.5149906  0.0051663    99.683  &lt; 2e-16 ***\nDESTIN_SZSBSZ04  0.2389086  0.0060765    39.317  &lt; 2e-16 ***\nDESTIN_SZSBSZ05 -1.2737442  0.0082818  -153.801  &lt; 2e-16 ***\nDESTIN_SZSBSZ06 -1.8683520  0.0227277   -82.206  &lt; 2e-16 ***\nDESTIN_SZSBSZ07 -0.5993154  0.0184895   -32.414  &lt; 2e-16 ***\nDESTIN_SZSBSZ08  0.8156302  0.0059840   136.302  &lt; 2e-16 ***\nDESTIN_SZSBSZ09  0.0900611  0.0057054    15.785  &lt; 2e-16 ***\nDESTIN_SZSESZ02 -0.6397704  0.0052491  -121.882  &lt; 2e-16 ***\nDESTIN_SZSESZ03  0.1714103  0.0042357    40.468  &lt; 2e-16 ***\nDESTIN_SZSESZ04 -1.0596175  0.0059865  -177.002  &lt; 2e-16 ***\nDESTIN_SZSESZ05 -0.8071891  0.0051229  -157.566  &lt; 2e-16 ***\nDESTIN_SZSESZ06 -0.5580934  0.0066216   -84.284  &lt; 2e-16 ***\nDESTIN_SZSESZ07 -3.1448863  0.0227788  -138.062  &lt; 2e-16 ***\nDESTIN_SZSGSZ01 -0.1795225  0.0060127   -29.857  &lt; 2e-16 ***\nDESTIN_SZSGSZ02 -0.2986570  0.0053561   -55.760  &lt; 2e-16 ***\nDESTIN_SZSGSZ03 -0.4074671  0.0050609   -80.513  &lt; 2e-16 ***\nDESTIN_SZSGSZ04 -0.1505164  0.0050931   -29.553  &lt; 2e-16 ***\nDESTIN_SZSGSZ05 -1.9908372  0.0101448  -196.242  &lt; 2e-16 ***\nDESTIN_SZSGSZ06  0.6715268  0.0041161   163.148  &lt; 2e-16 ***\nDESTIN_SZSGSZ07 -0.4494757  0.0055319   -81.252  &lt; 2e-16 ***\nDESTIN_SZSISZ01 -0.5517983  0.0261860   -21.072  &lt; 2e-16 ***\nDESTIN_SZSKSZ01 -0.4749154  0.0079257   -59.921  &lt; 2e-16 ***\nDESTIN_SZSKSZ02  0.9400302  0.0057218   164.290  &lt; 2e-16 ***\nDESTIN_SZSKSZ03 -0.2800377  0.0066081   -42.378  &lt; 2e-16 ***\nDESTIN_SZSKSZ04 -1.2570212  0.0145351   -86.482  &lt; 2e-16 ***\nDESTIN_SZSKSZ05 -0.2600474  0.0112800   -23.054  &lt; 2e-16 ***\nDESTIN_SZSLSZ01 -0.7775604  0.0085818   -90.606  &lt; 2e-16 ***\nDESTIN_SZSLSZ04 -0.8586515  0.0073142  -117.396  &lt; 2e-16 ***\nDESTIN_SZSRSZ01 -1.1370887  0.0142148   -79.993  &lt; 2e-16 ***\nDESTIN_SZTHSZ01 -4.3259988  0.0368554  -117.378  &lt; 2e-16 ***\nDESTIN_SZTHSZ03 -2.6632914  0.0252720  -105.385  &lt; 2e-16 ***\nDESTIN_SZTHSZ04 -3.1000906  0.0216372  -143.276  &lt; 2e-16 ***\nDESTIN_SZTHSZ06 -2.5952642  0.0156340  -166.001  &lt; 2e-16 ***\nDESTIN_SZTMSZ01 -0.2092828  0.0059257   -35.318  &lt; 2e-16 ***\nDESTIN_SZTMSZ02  1.8238139  0.0039155   465.798  &lt; 2e-16 ***\nDESTIN_SZTMSZ03  0.8518259  0.0043636   195.210  &lt; 2e-16 ***\nDESTIN_SZTMSZ04  1.0222812  0.0043466   235.191  &lt; 2e-16 ***\nDESTIN_SZTMSZ05  0.6323777  0.0060058   105.294  &lt; 2e-16 ***\nDESTIN_SZTNSZ01 -0.3336078  0.0074388   -44.847  &lt; 2e-16 ***\nDESTIN_SZTNSZ02 -1.0820469  0.0101689  -106.408  &lt; 2e-16 ***\nDESTIN_SZTNSZ03 -1.4186505  0.0119906  -118.313  &lt; 2e-16 ***\nDESTIN_SZTNSZ04 -0.3058199  0.0074743   -40.916  &lt; 2e-16 ***\nDESTIN_SZTPSZ01 -0.4872299  0.0061571   -79.133  &lt; 2e-16 ***\nDESTIN_SZTPSZ02  0.7158441  0.0041312   173.278  &lt; 2e-16 ***\nDESTIN_SZTPSZ03 -0.4314229  0.0059917   -72.004  &lt; 2e-16 ***\nDESTIN_SZTPSZ04 -1.5898245  0.0076083  -208.959  &lt; 2e-16 ***\nDESTIN_SZTPSZ05 -1.0445550  0.0062363  -167.497  &lt; 2e-16 ***\nDESTIN_SZTPSZ06 -0.4319582  0.0070100   -61.621  &lt; 2e-16 ***\nDESTIN_SZTPSZ07 -2.1602303  0.0120352  -179.493  &lt; 2e-16 ***\nDESTIN_SZTPSZ08 -1.1920493  0.0093083  -128.063  &lt; 2e-16 ***\nDESTIN_SZTPSZ09 -0.2022481  0.0071137   -28.431  &lt; 2e-16 ***\nDESTIN_SZTPSZ10 -1.2464793  0.0090124  -138.308  &lt; 2e-16 ***\nDESTIN_SZTPSZ11 -0.0808445  0.0056019   -14.432  &lt; 2e-16 ***\nDESTIN_SZTPSZ12 -0.6784376  0.0066340  -102.267  &lt; 2e-16 ***\nDESTIN_SZTSSZ01 -1.5845062  0.0222086   -71.346  &lt; 2e-16 ***\nDESTIN_SZTSSZ02 -0.1886010  0.0146338   -12.888  &lt; 2e-16 ***\nDESTIN_SZTSSZ03  0.6525526  0.0092450    70.585  &lt; 2e-16 ***\nDESTIN_SZTSSZ04  0.5285464  0.0100182    52.759  &lt; 2e-16 ***\nDESTIN_SZTSSZ05  1.4670106  0.0104357   140.577  &lt; 2e-16 ***\nDESTIN_SZTSSZ06  2.5043588  0.0167444   149.564  &lt; 2e-16 ***\nDESTIN_SZWCSZ01  1.9787931  0.0054306   364.375  &lt; 2e-16 ***\nDESTIN_SZWCSZ02 -2.2593108  0.0127916  -176.624  &lt; 2e-16 ***\nDESTIN_SZWCSZ03 -3.1897655  0.0326927   -97.568  &lt; 2e-16 ***\nDESTIN_SZWDSZ01  1.0476108  0.0044629   234.738  &lt; 2e-16 ***\nDESTIN_SZWDSZ02 -1.3176990  0.0065894  -199.973  &lt; 2e-16 ***\nDESTIN_SZWDSZ03  0.3432057  0.0052496    65.377  &lt; 2e-16 ***\nDESTIN_SZWDSZ04 -0.7895927  0.0073392  -107.586  &lt; 2e-16 ***\nDESTIN_SZWDSZ05 -0.8751665  0.0072946  -119.975  &lt; 2e-16 ***\nDESTIN_SZWDSZ06 -0.2106221  0.0053027   -39.720  &lt; 2e-16 ***\nDESTIN_SZWDSZ07 -1.6050834  0.0071754  -223.692  &lt; 2e-16 ***\nDESTIN_SZWDSZ08 -0.5124717  0.0069223   -74.032  &lt; 2e-16 ***\nDESTIN_SZWDSZ09  0.3813542  0.0054697    69.721  &lt; 2e-16 ***\nDESTIN_SZYSSZ01  0.0853753  0.0046572    18.332  &lt; 2e-16 ***\nDESTIN_SZYSSZ02 -0.3227172  0.0057351   -56.271  &lt; 2e-16 ***\nDESTIN_SZYSSZ03 -0.4151283  0.0066299   -62.615  &lt; 2e-16 ***\nDESTIN_SZYSSZ04 -0.4637327  0.0058206   -79.671  &lt; 2e-16 ***\nDESTIN_SZYSSZ05 -1.5888242  0.0111001  -143.136  &lt; 2e-16 ***\nDESTIN_SZYSSZ06 -1.4606209  0.0107759  -135.545  &lt; 2e-16 ***\nDESTIN_SZYSSZ07 -0.7839065  0.0144357   -54.304  &lt; 2e-16 ***\nDESTIN_SZYSSZ08  0.6265412  0.0045504   137.691  &lt; 2e-16 ***\nDESTIN_SZYSSZ09  0.1520067  0.0048092    31.607  &lt; 2e-16 ***\nlog(DIST)       -1.8468315  0.0004608 -4008.033  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 47094011  on 14470  degrees of freedom\nResidual deviance: 10420261  on 13912  degrees of freedom\nAIC: 10510518\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nglm from stats package fits generalized linear models. In this code, a Poisson regression model is specified with family = poisson(link = \"log\"). The formula TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST) defines the dependent variable (TRIPS) and the independent variables (ORIGIN_SZ, DESTIN_SZ, and logarithm of DIST).\nThe data argument specifies inter_zonal_flow as the dataset used for the model.\nna.action = na.exclude indicates how missing values (NAs) should be handled in the model fitting process.\nsummary from base R provides a comprehensive summary of the fitted model dbcSIM_Poisson, including the model coefficients, their statistical significance, and other diagnostic measures.\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important to note that there is a slight change of the code chunk. -1 is removed which means that an intercept will appear in the model again. The -1 for removing the intercept only works with one factor level but in double-constrained model we have two factor levels, namely: origins and destinations.\n\n\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), family = poisson(link = \"log\"), \n    data = inter_zonal_flow, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     21.8312374  0.0059160  3690.190  &lt; 2e-16 ***\nORIGIN_SZAMSZ02  0.5263502  0.0048031   109.585  &lt; 2e-16 ***\nORIGIN_SZAMSZ03  0.3139982  0.0049254    63.751  &lt; 2e-16 ***\nORIGIN_SZAMSZ04 -0.2146257  0.0053639   -40.013  &lt; 2e-16 ***\nORIGIN_SZAMSZ05 -0.1890446  0.0060386   -31.306  &lt; 2e-16 ***\nORIGIN_SZAMSZ06  0.1539201  0.0054401    28.294  &lt; 2e-16 ***\nORIGIN_SZAMSZ07 -0.9826565  0.0098676   -99.584  &lt; 2e-16 ***\nORIGIN_SZAMSZ08 -0.4488417  0.0093070   -48.226  &lt; 2e-16 ***\nORIGIN_SZAMSZ09  0.0713474  0.0057402    12.429  &lt; 2e-16 ***\nORIGIN_SZAMSZ10  0.4313742  0.0050370    85.641  &lt; 2e-16 ***\nORIGIN_SZAMSZ11 -1.4712226  0.0131178  -112.154  &lt; 2e-16 ***\nORIGIN_SZAMSZ12 -1.7250733  0.0111603  -154.573  &lt; 2e-16 ***\nORIGIN_SZBDSZ01  0.8810576  0.0048168   182.914  &lt; 2e-16 ***\nORIGIN_SZBDSZ02  0.1100240  0.0055529    19.814  &lt; 2e-16 ***\nORIGIN_SZBDSZ03  0.3606166  0.0050672    71.167  &lt; 2e-16 ***\nORIGIN_SZBDSZ04  1.4624347  0.0044212   330.781  &lt; 2e-16 ***\nORIGIN_SZBDSZ05  0.6207557  0.0050843   122.092  &lt; 2e-16 ***\nORIGIN_SZBDSZ06  0.6712973  0.0051953   129.214  &lt; 2e-16 ***\nORIGIN_SZBDSZ07 -1.2338669  0.0100775  -122.437  &lt; 2e-16 ***\nORIGIN_SZBDSZ08 -1.0444562  0.0094555  -110.460  &lt; 2e-16 ***\nORIGIN_SZBKSZ01 -0.2838426  0.0071354   -39.780  &lt; 2e-16 ***\nORIGIN_SZBKSZ02  0.5550522  0.0059014    94.054  &lt; 2e-16 ***\nORIGIN_SZBKSZ03  0.7396640  0.0056796   130.231  &lt; 2e-16 ***\nORIGIN_SZBKSZ04 -0.2242451  0.0067482   -33.230  &lt; 2e-16 ***\nORIGIN_SZBKSZ05 -0.2371614  0.0069386   -34.180  &lt; 2e-16 ***\nORIGIN_SZBKSZ06 -0.1413812  0.0065035   -21.739  &lt; 2e-16 ***\nORIGIN_SZBKSZ07  0.7089989  0.0051843   136.758  &lt; 2e-16 ***\nORIGIN_SZBKSZ08 -0.0907065  0.0059157   -15.333  &lt; 2e-16 ***\nORIGIN_SZBKSZ09 -0.1775146  0.0063302   -28.042  &lt; 2e-16 ***\nORIGIN_SZBLSZ01 -2.3684539  0.0154280  -153.516  &lt; 2e-16 ***\nORIGIN_SZBLSZ02 -2.8078475  0.0197839  -141.926  &lt; 2e-16 ***\nORIGIN_SZBLSZ03 -3.3122763  0.0466091   -71.065  &lt; 2e-16 ***\nORIGIN_SZBLSZ04 -2.6770542  0.0241793  -110.717  &lt; 2e-16 ***\nORIGIN_SZBMSZ01  0.0618035  0.0059400    10.405  &lt; 2e-16 ***\nORIGIN_SZBMSZ02 -1.3535767  0.0073741  -183.557  &lt; 2e-16 ***\nORIGIN_SZBMSZ03 -0.7569095  0.0063187  -119.790  &lt; 2e-16 ***\nORIGIN_SZBMSZ04 -0.2949304  0.0059603   -49.483  &lt; 2e-16 ***\nORIGIN_SZBMSZ05 -2.6131992  0.0172376  -151.599  &lt; 2e-16 ***\nORIGIN_SZBMSZ06 -3.0315024  0.0185502  -163.422  &lt; 2e-16 ***\nORIGIN_SZBMSZ07 -0.6962524  0.0064068  -108.674  &lt; 2e-16 ***\nORIGIN_SZBMSZ08 -0.9310730  0.0064541  -144.261  &lt; 2e-16 ***\nORIGIN_SZBMSZ09 -1.2911253  0.0092047  -140.268  &lt; 2e-16 ***\nORIGIN_SZBMSZ10 -1.6687004  0.0095708  -174.353  &lt; 2e-16 ***\nORIGIN_SZBMSZ11 -1.1152794  0.0072027  -154.841  &lt; 2e-16 ***\nORIGIN_SZBMSZ12 -1.5323954  0.0099932  -153.344  &lt; 2e-16 ***\nORIGIN_SZBMSZ13 -0.6267376  0.0065863   -95.158  &lt; 2e-16 ***\nORIGIN_SZBMSZ14 -1.0475467  0.0072472  -144.544  &lt; 2e-16 ***\nORIGIN_SZBMSZ15 -0.5049444  0.0067390   -74.929  &lt; 2e-16 ***\nORIGIN_SZBMSZ16 -1.5282897  0.0099545  -153.527  &lt; 2e-16 ***\nORIGIN_SZBMSZ17 -1.5722349  0.0161533   -97.332  &lt; 2e-16 ***\nORIGIN_SZBPSZ01  0.5814175  0.0062904    92.429  &lt; 2e-16 ***\nORIGIN_SZBPSZ02  0.0875442  0.0072190    12.127  &lt; 2e-16 ***\nORIGIN_SZBPSZ03  0.3358227  0.0070460    47.662  &lt; 2e-16 ***\nORIGIN_SZBPSZ04  0.6507586  0.0057726   112.733  &lt; 2e-16 ***\nORIGIN_SZBPSZ05  0.9502124  0.0052971   179.384  &lt; 2e-16 ***\nORIGIN_SZBPSZ06 -1.0480314  0.0098191  -106.734  &lt; 2e-16 ***\nORIGIN_SZBPSZ07 -0.5467931  0.0091676   -59.644  &lt; 2e-16 ***\nORIGIN_SZBSSZ01  0.2998334  0.0059193    50.654  &lt; 2e-16 ***\nORIGIN_SZBSSZ02  0.2841036  0.0050863    55.856  &lt; 2e-16 ***\nORIGIN_SZBSSZ03 -0.2331505  0.0056565   -41.218  &lt; 2e-16 ***\nORIGIN_SZBTSZ01  0.0987284  0.0063715    15.495  &lt; 2e-16 ***\nORIGIN_SZBTSZ02 -0.6261229  0.0084604   -74.006  &lt; 2e-16 ***\nORIGIN_SZBTSZ03 -0.4326963  0.0073452   -58.909  &lt; 2e-16 ***\nORIGIN_SZBTSZ04 -1.4998668  0.0110013  -136.336  &lt; 2e-16 ***\nORIGIN_SZBTSZ05 -0.9564768  0.0122202   -78.270  &lt; 2e-16 ***\nORIGIN_SZBTSZ06 -1.2853131  0.0099328  -129.401  &lt; 2e-16 ***\nORIGIN_SZBTSZ07 -2.3870991  0.0144589  -165.096  &lt; 2e-16 ***\nORIGIN_SZBTSZ08 -1.3715855  0.0113825  -120.499  &lt; 2e-16 ***\nORIGIN_SZCBSZ01 -3.5940232  0.0548979   -65.467  &lt; 2e-16 ***\nORIGIN_SZCCSZ01 -0.7008220  0.0140373   -49.926  &lt; 2e-16 ***\nORIGIN_SZCHSZ01 -0.9109524  0.0122869   -74.140  &lt; 2e-16 ***\nORIGIN_SZCHSZ02 -0.8566547  0.0088749   -96.526  &lt; 2e-16 ***\nORIGIN_SZCHSZ03  1.1153731  0.0066136   168.650  &lt; 2e-16 ***\nORIGIN_SZCKSZ01  0.3001815  0.0058548    51.271  &lt; 2e-16 ***\nORIGIN_SZCKSZ02  0.7185711  0.0060595   118.585  &lt; 2e-16 ***\nORIGIN_SZCKSZ03  1.1389824  0.0053179   214.178  &lt; 2e-16 ***\nORIGIN_SZCKSZ04  1.6281772  0.0054761   297.324  &lt; 2e-16 ***\nORIGIN_SZCKSZ05  0.8338470  0.0064178   129.927  &lt; 2e-16 ***\nORIGIN_SZCKSZ06  0.6528993  0.0082375    79.259  &lt; 2e-16 ***\nORIGIN_SZCLSZ01 -0.7174758  0.0082123   -87.366  &lt; 2e-16 ***\nORIGIN_SZCLSZ02 -1.7513100  0.0139062  -125.938  &lt; 2e-16 ***\nORIGIN_SZCLSZ03 -1.0362873  0.0085485  -121.224  &lt; 2e-16 ***\nORIGIN_SZCLSZ04  0.6160017  0.0051276   120.136  &lt; 2e-16 ***\nORIGIN_SZCLSZ05 -2.1005122  0.0150228  -139.821  &lt; 2e-16 ***\nORIGIN_SZCLSZ06  0.7252108  0.0049447   146.665  &lt; 2e-16 ***\nORIGIN_SZCLSZ07 -0.5343482  0.0062500   -85.496  &lt; 2e-16 ***\nORIGIN_SZCLSZ08 -0.2153408  0.0067571   -31.869  &lt; 2e-16 ***\nORIGIN_SZCLSZ09 -1.8019961  0.0169078  -106.578  &lt; 2e-16 ***\nORIGIN_SZDTSZ02 -3.9057711  0.0834668   -46.794  &lt; 2e-16 ***\nORIGIN_SZDTSZ03 -3.4152419  0.0738650   -46.236  &lt; 2e-16 ***\nORIGIN_SZDTSZ13 -3.0183438  0.0315257   -95.742  &lt; 2e-16 ***\nORIGIN_SZGLSZ01 -1.7812384  0.0099367  -179.258  &lt; 2e-16 ***\nORIGIN_SZGLSZ02 -0.1074991  0.0054325   -19.788  &lt; 2e-16 ***\nORIGIN_SZGLSZ03 -0.2461106  0.0057176   -43.045  &lt; 2e-16 ***\nORIGIN_SZGLSZ04  0.8657186  0.0046413   186.524  &lt; 2e-16 ***\nORIGIN_SZGLSZ05  0.5871393  0.0047939   122.477  &lt; 2e-16 ***\nORIGIN_SZHGSZ01  0.3543819  0.0050461    70.229  &lt; 2e-16 ***\nORIGIN_SZHGSZ02  0.4218178  0.0050820    83.003  &lt; 2e-16 ***\nORIGIN_SZHGSZ03  0.2411309  0.0054241    44.456  &lt; 2e-16 ***\nORIGIN_SZHGSZ04  0.8180622  0.0046153   177.252  &lt; 2e-16 ***\nORIGIN_SZHGSZ05  1.2173687  0.0045655   266.647  &lt; 2e-16 ***\nORIGIN_SZHGSZ06 -0.1826300  0.0058214   -31.372  &lt; 2e-16 ***\nORIGIN_SZHGSZ07  0.3172839  0.0050733    62.540  &lt; 2e-16 ***\nORIGIN_SZHGSZ08 -0.1151369  0.0057067   -20.176  &lt; 2e-16 ***\nORIGIN_SZHGSZ09 -1.2873441  0.0091690  -140.401  &lt; 2e-16 ***\nORIGIN_SZHGSZ10 -3.3783178  0.0424682   -79.549  &lt; 2e-16 ***\nORIGIN_SZJESZ01  0.4859234  0.0055927    86.885  &lt; 2e-16 ***\nORIGIN_SZJESZ02  0.1766088  0.0055800    31.650  &lt; 2e-16 ***\nORIGIN_SZJESZ03 -0.2177441  0.0059535   -36.574  &lt; 2e-16 ***\nORIGIN_SZJESZ04 -1.5532182  0.0104526  -148.597  &lt; 2e-16 ***\nORIGIN_SZJESZ05 -2.3332926  0.0142701  -163.509  &lt; 2e-16 ***\nORIGIN_SZJESZ06  0.3007382  0.0055019    54.661  &lt; 2e-16 ***\nORIGIN_SZJESZ07 -1.9687994  0.0121092  -162.587  &lt; 2e-16 ***\nORIGIN_SZJESZ08 -1.3032070  0.0122024  -106.800  &lt; 2e-16 ***\nORIGIN_SZJESZ09  0.5762635  0.0058766    98.061  &lt; 2e-16 ***\nORIGIN_SZJESZ10 -1.4423113  0.0194773   -74.051  &lt; 2e-16 ***\nORIGIN_SZJESZ11 -1.9720897  0.0200811   -98.206  &lt; 2e-16 ***\nORIGIN_SZJWSZ01  0.3808627  0.0071357    53.374  &lt; 2e-16 ***\nORIGIN_SZJWSZ02  0.7963999  0.0053150   149.840  &lt; 2e-16 ***\nORIGIN_SZJWSZ03  1.5429636  0.0049961   308.834  &lt; 2e-16 ***\nORIGIN_SZJWSZ04  0.6410760  0.0056711   113.042  &lt; 2e-16 ***\nORIGIN_SZJWSZ05 -2.1571049  0.0133584  -161.479  &lt; 2e-16 ***\nORIGIN_SZJWSZ06 -1.5174532  0.0113384  -133.833  &lt; 2e-16 ***\nORIGIN_SZJWSZ07 -2.7089963  0.0280439   -96.598  &lt; 2e-16 ***\nORIGIN_SZJWSZ08  1.5343415  0.0051711   296.713  &lt; 2e-16 ***\nORIGIN_SZJWSZ09  1.8837410  0.0048845   385.656  &lt; 2e-16 ***\nORIGIN_SZKLSZ01  0.1081286  0.0053307    20.284  &lt; 2e-16 ***\nORIGIN_SZKLSZ02 -0.8844695  0.0067728  -130.591  &lt; 2e-16 ***\nORIGIN_SZKLSZ03 -0.6872640  0.0062857  -109.337  &lt; 2e-16 ***\nORIGIN_SZKLSZ04 -2.2090319  0.0122440  -180.418  &lt; 2e-16 ***\nORIGIN_SZKLSZ05 -1.1728726  0.0110765  -105.888  &lt; 2e-16 ***\nORIGIN_SZKLSZ06 -6.1162315  0.1857789   -32.922  &lt; 2e-16 ***\nORIGIN_SZKLSZ07 -1.4082749  0.0092299  -152.578  &lt; 2e-16 ***\nORIGIN_SZKLSZ08 -1.7781551  0.0104682  -169.862  &lt; 2e-16 ***\nORIGIN_SZLKSZ01 -2.0531568  0.0398803   -51.483  &lt; 2e-16 ***\nORIGIN_SZMDSZ01 -0.8825639  0.0287621   -30.685  &lt; 2e-16 ***\nORIGIN_SZMDSZ02 -0.6219993  0.0107388   -57.921  &lt; 2e-16 ***\nORIGIN_SZMDSZ03 -2.0840156  0.0173117  -120.382  &lt; 2e-16 ***\nORIGIN_SZMPSZ01 -0.9659093  0.0086972  -111.060  &lt; 2e-16 ***\nORIGIN_SZMPSZ02 -1.0411153  0.0073403  -141.836  &lt; 2e-16 ***\nORIGIN_SZMPSZ03  0.0001659  0.0059401     0.028 0.977719    \nORIGIN_SZMUSZ02 -3.7599031  0.1037937   -36.225  &lt; 2e-16 ***\nORIGIN_SZNTSZ01 -3.0388366  0.0355325   -85.523  &lt; 2e-16 ***\nORIGIN_SZNTSZ02 -3.4230640  0.0235902  -145.106  &lt; 2e-16 ***\nORIGIN_SZNTSZ03 -0.9094796  0.0082551  -110.172  &lt; 2e-16 ***\nORIGIN_SZNTSZ05 -4.0861681  0.0499630   -81.784  &lt; 2e-16 ***\nORIGIN_SZNTSZ06 -3.9497128  0.0565388   -69.858  &lt; 2e-16 ***\nORIGIN_SZNVSZ01  0.3235636  0.0049439    65.447  &lt; 2e-16 ***\nORIGIN_SZNVSZ02 -0.6946748  0.0070536   -98.485  &lt; 2e-16 ***\nORIGIN_SZNVSZ03 -1.0540196  0.0083781  -125.806  &lt; 2e-16 ***\nORIGIN_SZNVSZ04 -0.9897977  0.0093463  -105.903  &lt; 2e-16 ***\nORIGIN_SZNVSZ05 -2.2578432  0.0169180  -133.458  &lt; 2e-16 ***\nORIGIN_SZPGSZ01  0.2399827  0.0130436    18.398  &lt; 2e-16 ***\nORIGIN_SZPGSZ02 -0.3352342  0.0078451   -42.732  &lt; 2e-16 ***\nORIGIN_SZPGSZ03  0.9515148  0.0051376   185.207  &lt; 2e-16 ***\nORIGIN_SZPGSZ04  1.3998952  0.0047991   291.697  &lt; 2e-16 ***\nORIGIN_SZPGSZ05  0.4451629  0.0063423    70.189  &lt; 2e-16 ***\nORIGIN_SZPLSZ01 -0.9705918  0.0122781   -79.050  &lt; 2e-16 ***\nORIGIN_SZPLSZ02 -1.0670151  0.0153358   -69.577  &lt; 2e-16 ***\nORIGIN_SZPLSZ03 -2.1229124  0.0373527   -56.834  &lt; 2e-16 ***\nORIGIN_SZPLSZ04 -3.0911932  0.0371296   -83.254  &lt; 2e-16 ***\nORIGIN_SZPLSZ05 -2.1705708  0.0226085   -96.007  &lt; 2e-16 ***\nORIGIN_SZPNSZ01  0.9052637  0.0065952   137.262  &lt; 2e-16 ***\nORIGIN_SZPNSZ02 -0.1720425  0.0125658   -13.691  &lt; 2e-16 ***\nORIGIN_SZPNSZ03 -2.3973459  0.0201408  -119.029  &lt; 2e-16 ***\nORIGIN_SZPNSZ04 -3.4483689  0.0343741  -100.319  &lt; 2e-16 ***\nORIGIN_SZPNSZ05 -2.0588530  0.0282328   -72.924  &lt; 2e-16 ***\nORIGIN_SZPRSZ01 -0.6399015  0.0120470   -53.117  &lt; 2e-16 ***\nORIGIN_SZPRSZ02  0.8122270  0.0050886   159.617  &lt; 2e-16 ***\nORIGIN_SZPRSZ03  0.3990960  0.0051810    77.031  &lt; 2e-16 ***\nORIGIN_SZPRSZ04 -0.8485348  0.0079236  -107.089  &lt; 2e-16 ***\nORIGIN_SZPRSZ05  0.8008791  0.0048532   165.021  &lt; 2e-16 ***\nORIGIN_SZPRSZ06 -1.4498806  0.0121422  -119.408  &lt; 2e-16 ***\nORIGIN_SZPRSZ07 -3.2025045  0.0167118  -191.631  &lt; 2e-16 ***\nORIGIN_SZPRSZ08 -0.5862269  0.0067255   -87.165  &lt; 2e-16 ***\nORIGIN_SZQTSZ01 -0.1859270  0.0075531   -24.616  &lt; 2e-16 ***\nORIGIN_SZQTSZ02 -0.8715122  0.0068124  -127.929  &lt; 2e-16 ***\nORIGIN_SZQTSZ03 -0.1259816  0.0064796   -19.443  &lt; 2e-16 ***\nORIGIN_SZQTSZ04 -1.4620032  0.0079848  -183.098  &lt; 2e-16 ***\nORIGIN_SZQTSZ05 -0.6675643  0.0069616   -95.892  &lt; 2e-16 ***\nORIGIN_SZQTSZ06 -0.8190026  0.0072713  -112.634  &lt; 2e-16 ***\nORIGIN_SZQTSZ07 -1.5189403  0.0099864  -152.101  &lt; 2e-16 ***\nORIGIN_SZQTSZ08 -0.4976238  0.0067874   -73.316  &lt; 2e-16 ***\nORIGIN_SZQTSZ09 -0.9006162  0.0075978  -118.536  &lt; 2e-16 ***\nORIGIN_SZQTSZ10 -0.6690184  0.0071574   -93.473  &lt; 2e-16 ***\nORIGIN_SZQTSZ11 -2.5203437  0.0147000  -171.452  &lt; 2e-16 ***\nORIGIN_SZQTSZ12 -3.0461675  0.0190193  -160.162  &lt; 2e-16 ***\nORIGIN_SZQTSZ13 -0.7501068  0.0084481   -88.791  &lt; 2e-16 ***\nORIGIN_SZQTSZ14 -1.9321849  0.0126114  -153.209  &lt; 2e-16 ***\nORIGIN_SZQTSZ15 -0.9576828  0.0127157   -75.315  &lt; 2e-16 ***\nORIGIN_SZRCSZ01 -1.8167951  0.0129234  -140.582  &lt; 2e-16 ***\nORIGIN_SZRCSZ06 -0.5560563  0.0090507   -61.438  &lt; 2e-16 ***\nORIGIN_SZRVSZ01 -2.8862570  0.0325532   -88.663  &lt; 2e-16 ***\nORIGIN_SZRVSZ02 -3.1555662  0.0281279  -112.186  &lt; 2e-16 ***\nORIGIN_SZRVSZ03 -2.9836089  0.0248449  -120.089  &lt; 2e-16 ***\nORIGIN_SZRVSZ04 -3.5520422  0.0561371   -63.274  &lt; 2e-16 ***\nORIGIN_SZRVSZ05 -2.5866584  0.0180382  -143.399  &lt; 2e-16 ***\nORIGIN_SZSBSZ01  0.2867444  0.0071098    40.331  &lt; 2e-16 ***\nORIGIN_SZSBSZ02 -0.9012334  0.0087262  -103.278  &lt; 2e-16 ***\nORIGIN_SZSBSZ03  0.8311038  0.0055422   149.958  &lt; 2e-16 ***\nORIGIN_SZSBSZ04  0.4044170  0.0062047    65.179  &lt; 2e-16 ***\nORIGIN_SZSBSZ05 -0.2661845  0.0074162   -35.892  &lt; 2e-16 ***\nORIGIN_SZSBSZ06 -0.9023075  0.0175046   -51.547  &lt; 2e-16 ***\nORIGIN_SZSBSZ07  0.0505870  0.0131317     3.852 0.000117 ***\nORIGIN_SZSBSZ08 -1.1158011  0.0145416   -76.732  &lt; 2e-16 ***\nORIGIN_SZSBSZ09 -0.9682835  0.0095396  -101.501  &lt; 2e-16 ***\nORIGIN_SZSESZ02  1.1452735  0.0047810   239.548  &lt; 2e-16 ***\nORIGIN_SZSESZ03  1.2815277  0.0045677   280.564  &lt; 2e-16 ***\nORIGIN_SZSESZ04  0.8085857  0.0052756   153.269  &lt; 2e-16 ***\nORIGIN_SZSESZ05 -0.2329413  0.0063113   -36.909  &lt; 2e-16 ***\nORIGIN_SZSESZ06  1.0576879  0.0049909   211.925  &lt; 2e-16 ***\nORIGIN_SZSESZ07 -2.3165908  0.0196831  -117.695  &lt; 2e-16 ***\nORIGIN_SZSGSZ01 -0.6606350  0.0088079   -75.005  &lt; 2e-16 ***\nORIGIN_SZSGSZ02 -1.3638984  0.0104040  -131.094  &lt; 2e-16 ***\nORIGIN_SZSGSZ03  0.1152591  0.0054649    21.091  &lt; 2e-16 ***\nORIGIN_SZSGSZ04  0.2954067  0.0050865    58.077  &lt; 2e-16 ***\nORIGIN_SZSGSZ05 -2.0792678  0.0109882  -189.227  &lt; 2e-16 ***\nORIGIN_SZSGSZ06  0.4563227  0.0048880    93.356  &lt; 2e-16 ***\nORIGIN_SZSGSZ07 -0.8955254  0.0067100  -133.461  &lt; 2e-16 ***\nORIGIN_SZSKSZ01 -0.3184402  0.0093032   -34.229  &lt; 2e-16 ***\nORIGIN_SZSKSZ02  1.1160484  0.0063851   174.790  &lt; 2e-16 ***\nORIGIN_SZSKSZ03 -0.2566692  0.0086021   -29.838  &lt; 2e-16 ***\nORIGIN_SZSKSZ04 -1.5781827  0.0279394   -56.486  &lt; 2e-16 ***\nORIGIN_SZSKSZ05 -0.2724361  0.0163597   -16.653  &lt; 2e-16 ***\nORIGIN_SZSLSZ01 -2.4458625  0.0330301   -74.050  &lt; 2e-16 ***\nORIGIN_SZSLSZ04 -0.0987076  0.0079626   -12.396  &lt; 2e-16 ***\nORIGIN_SZSRSZ01 -2.2584977  0.0176647  -127.854  &lt; 2e-16 ***\nORIGIN_SZTHSZ01 -2.5878524  0.0489998   -52.814  &lt; 2e-16 ***\nORIGIN_SZTHSZ03 -0.8101746  0.0226814   -35.720  &lt; 2e-16 ***\nORIGIN_SZTHSZ04 -2.4186655  0.0288663   -83.789  &lt; 2e-16 ***\nORIGIN_SZTHSZ06 -1.7080541  0.0186353   -91.657  &lt; 2e-16 ***\nORIGIN_SZTMSZ01 -0.2193476  0.0061823   -35.480  &lt; 2e-16 ***\nORIGIN_SZTMSZ02  1.7772464  0.0043394   409.558  &lt; 2e-16 ***\nORIGIN_SZTMSZ03  1.0051343  0.0046055   218.249  &lt; 2e-16 ***\nORIGIN_SZTMSZ04  0.1642370  0.0055078    29.819  &lt; 2e-16 ***\nORIGIN_SZTMSZ05 -1.2878706  0.0114828  -112.157  &lt; 2e-16 ***\nORIGIN_SZTNSZ01 -1.7163504  0.0131268  -130.751  &lt; 2e-16 ***\nORIGIN_SZTNSZ02 -1.6508988  0.0103851  -158.968  &lt; 2e-16 ***\nORIGIN_SZTNSZ03 -2.1545577  0.0137947  -156.187  &lt; 2e-16 ***\nORIGIN_SZTNSZ04 -0.3949120  0.0078496   -50.310  &lt; 2e-16 ***\nORIGIN_SZTPSZ01 -0.8058100  0.0069916  -115.253  &lt; 2e-16 ***\nORIGIN_SZTPSZ02  0.5369060  0.0047272   113.577  &lt; 2e-16 ***\nORIGIN_SZTPSZ03 -0.7779333  0.0064278  -121.027  &lt; 2e-16 ***\nORIGIN_SZTPSZ04 -0.8153581  0.0061387  -132.823  &lt; 2e-16 ***\nORIGIN_SZTPSZ05 -0.5073676  0.0067771   -74.865  &lt; 2e-16 ***\nORIGIN_SZTPSZ06  0.0847301  0.0065717    12.893  &lt; 2e-16 ***\nORIGIN_SZTPSZ07 -0.5839519  0.0066148   -88.280  &lt; 2e-16 ***\nORIGIN_SZTPSZ08 -1.0577941  0.0098480  -107.412  &lt; 2e-16 ***\nORIGIN_SZTPSZ09 -0.9067707  0.0071367  -127.057  &lt; 2e-16 ***\nORIGIN_SZTPSZ10 -1.1362091  0.0080905  -140.438  &lt; 2e-16 ***\nORIGIN_SZTPSZ11 -0.2374621  0.0059472   -39.928  &lt; 2e-16 ***\nORIGIN_SZTPSZ12 -0.8028874  0.0069663  -115.253  &lt; 2e-16 ***\nORIGIN_SZTSSZ01 -2.7809271  0.0482843   -57.595  &lt; 2e-16 ***\nORIGIN_SZTSSZ02  0.0425804  0.0105088     4.052 5.08e-05 ***\nORIGIN_SZTSSZ03  0.1142369  0.0109412    10.441  &lt; 2e-16 ***\nORIGIN_SZTSSZ04 -0.6186261  0.0116324   -53.181  &lt; 2e-16 ***\nORIGIN_SZTSSZ05 -1.0846732  0.0173555   -62.497  &lt; 2e-16 ***\nORIGIN_SZTSSZ06  0.3980173  0.0198100    20.092  &lt; 2e-16 ***\nORIGIN_SZWCSZ01  1.3545143  0.0092002   147.227  &lt; 2e-16 ***\nORIGIN_SZWCSZ02 -2.9863278  0.0330906   -90.247  &lt; 2e-16 ***\nORIGIN_SZWCSZ03 -5.0504916  0.1241385   -40.684  &lt; 2e-16 ***\nORIGIN_SZWDSZ01  1.5238429  0.0049404   308.448  &lt; 2e-16 ***\nORIGIN_SZWDSZ02  0.2832576  0.0056218    50.386  &lt; 2e-16 ***\nORIGIN_SZWDSZ03  1.3702524  0.0053266   257.245  &lt; 2e-16 ***\nORIGIN_SZWDSZ04  1.0248225  0.0059272   172.903  &lt; 2e-16 ***\nORIGIN_SZWDSZ05  0.2356778  0.0060587    38.899  &lt; 2e-16 ***\nORIGIN_SZWDSZ06  0.3146925  0.0059919    52.520  &lt; 2e-16 ***\nORIGIN_SZWDSZ07 -1.4971897  0.0091243  -164.088  &lt; 2e-16 ***\nORIGIN_SZWDSZ08 -0.8894079  0.0087414  -101.747  &lt; 2e-16 ***\nORIGIN_SZWDSZ09  1.4437633  0.0053160   271.590  &lt; 2e-16 ***\nORIGIN_SZYSSZ01 -0.2519398  0.0064443   -39.095  &lt; 2e-16 ***\nORIGIN_SZYSSZ02  0.8726785  0.0057658   151.354  &lt; 2e-16 ***\nORIGIN_SZYSSZ03  1.7868139  0.0050674   352.611  &lt; 2e-16 ***\nORIGIN_SZYSSZ04  0.8418040  0.0051738   162.704  &lt; 2e-16 ***\nORIGIN_SZYSSZ05  0.4292096  0.0062520    68.652  &lt; 2e-16 ***\nORIGIN_SZYSSZ06 -0.7459961  0.0119123   -62.624  &lt; 2e-16 ***\nORIGIN_SZYSSZ07 -0.8422281  0.0144559   -58.262  &lt; 2e-16 ***\nORIGIN_SZYSSZ08  0.1829428  0.0067885    26.949  &lt; 2e-16 ***\nORIGIN_SZYSSZ09  1.1159712  0.0050760   219.853  &lt; 2e-16 ***\nDESTIN_SZAMSZ02  0.0694567  0.0045966    15.111  &lt; 2e-16 ***\nDESTIN_SZAMSZ03  0.0760100  0.0044639    17.028  &lt; 2e-16 ***\nDESTIN_SZAMSZ04 -1.1306391  0.0064373  -175.639  &lt; 2e-16 ***\nDESTIN_SZAMSZ05 -1.0751133  0.0065164  -164.985  &lt; 2e-16 ***\nDESTIN_SZAMSZ06 -0.9624298  0.0065937  -145.962  &lt; 2e-16 ***\nDESTIN_SZAMSZ07 -1.5060319  0.0097616  -154.281  &lt; 2e-16 ***\nDESTIN_SZAMSZ08 -0.4813202  0.0069794   -68.963  &lt; 2e-16 ***\nDESTIN_SZAMSZ09 -1.0220675  0.0066313  -154.129  &lt; 2e-16 ***\nDESTIN_SZAMSZ10  0.1235142  0.0047044    26.255  &lt; 2e-16 ***\nDESTIN_SZAMSZ11 -0.8917993  0.0088519  -100.746  &lt; 2e-16 ***\nDESTIN_SZAMSZ12  0.0195208  0.0051704     3.775 0.000160 ***\nDESTIN_SZBDSZ01  0.9736349  0.0042757   227.713  &lt; 2e-16 ***\nDESTIN_SZBDSZ02 -0.1969470  0.0055284   -35.625  &lt; 2e-16 ***\nDESTIN_SZBDSZ03  0.1266471  0.0050786    24.938  &lt; 2e-16 ***\nDESTIN_SZBDSZ04  1.1608485  0.0041956   276.684  &lt; 2e-16 ***\nDESTIN_SZBDSZ05  0.9293840  0.0044412   209.265  &lt; 2e-16 ***\nDESTIN_SZBDSZ06  0.4090567  0.0050300    81.323  &lt; 2e-16 ***\nDESTIN_SZBDSZ07 -0.8171478  0.0098945   -82.586  &lt; 2e-16 ***\nDESTIN_SZBDSZ08 -1.5895287  0.0111632  -142.391  &lt; 2e-16 ***\nDESTIN_SZBKSZ01 -1.3793311  0.0072145  -191.189  &lt; 2e-16 ***\nDESTIN_SZBKSZ02 -0.5253670  0.0061879   -84.903  &lt; 2e-16 ***\nDESTIN_SZBKSZ03 -1.0095362  0.0065426  -154.301  &lt; 2e-16 ***\nDESTIN_SZBKSZ04 -0.5662858  0.0056453  -100.311  &lt; 2e-16 ***\nDESTIN_SZBKSZ05 -0.9406607  0.0070597  -133.244  &lt; 2e-16 ***\nDESTIN_SZBKSZ06 -1.3129276  0.0067414  -194.755  &lt; 2e-16 ***\nDESTIN_SZBKSZ07  0.0120605  0.0049284     2.447 0.014400 *  \nDESTIN_SZBKSZ08 -1.3658471  0.0075109  -181.849  &lt; 2e-16 ***\nDESTIN_SZBKSZ09 -0.1771310  0.0055645   -31.832  &lt; 2e-16 ***\nDESTIN_SZBLSZ01 -0.8175223  0.0075645  -108.074  &lt; 2e-16 ***\nDESTIN_SZBLSZ02  0.1631280  0.0071753    22.735  &lt; 2e-16 ***\nDESTIN_SZBLSZ03  1.2598494  0.0081706   154.194  &lt; 2e-16 ***\nDESTIN_SZBLSZ04 -0.5642975  0.0137827   -40.943  &lt; 2e-16 ***\nDESTIN_SZBMSZ01  0.6921844  0.0054211   127.684  &lt; 2e-16 ***\nDESTIN_SZBMSZ02 -0.1209392  0.0055362   -21.845  &lt; 2e-16 ***\nDESTIN_SZBMSZ03 -0.2373881  0.0062427   -38.027  &lt; 2e-16 ***\nDESTIN_SZBMSZ04 -0.0407117  0.0058001    -7.019 2.23e-12 ***\nDESTIN_SZBMSZ05 -0.2363309  0.0075967   -31.110  &lt; 2e-16 ***\nDESTIN_SZBMSZ06 -1.1930710  0.0134761   -88.532  &lt; 2e-16 ***\nDESTIN_SZBMSZ07  0.4625103  0.0051864    89.178  &lt; 2e-16 ***\nDESTIN_SZBMSZ08 -0.8604731  0.0069899  -123.102  &lt; 2e-16 ***\nDESTIN_SZBMSZ09 -2.1290239  0.0154841  -137.498  &lt; 2e-16 ***\nDESTIN_SZBMSZ10 -1.4617153  0.0094014  -155.478  &lt; 2e-16 ***\nDESTIN_SZBMSZ11 -1.3234050  0.0085506  -154.773  &lt; 2e-16 ***\nDESTIN_SZBMSZ12 -0.8399230  0.0085361   -98.397  &lt; 2e-16 ***\nDESTIN_SZBMSZ13  0.1366529  0.0059697    22.891  &lt; 2e-16 ***\nDESTIN_SZBMSZ14 -1.0491968  0.0083021  -126.378  &lt; 2e-16 ***\nDESTIN_SZBMSZ15 -0.6726684  0.0076276   -88.189  &lt; 2e-16 ***\nDESTIN_SZBMSZ16 -1.4011734  0.0116569  -120.201  &lt; 2e-16 ***\nDESTIN_SZBMSZ17 -1.5682752  0.0167333   -93.722  &lt; 2e-16 ***\nDESTIN_SZBPSZ01 -1.1120017  0.0063197  -175.959  &lt; 2e-16 ***\nDESTIN_SZBPSZ02 -2.0833466  0.0091139  -228.590  &lt; 2e-16 ***\nDESTIN_SZBPSZ03 -1.6937265  0.0087437  -193.709  &lt; 2e-16 ***\nDESTIN_SZBPSZ04 -0.7964999  0.0066129  -120.447  &lt; 2e-16 ***\nDESTIN_SZBPSZ05  0.2109118  0.0048815    43.206  &lt; 2e-16 ***\nDESTIN_SZBPSZ06 -1.1808365  0.0083657  -141.152  &lt; 2e-16 ***\nDESTIN_SZBPSZ07 -0.2077428  0.0084543   -24.572  &lt; 2e-16 ***\nDESTIN_SZBSSZ01  0.3164175  0.0050682    62.431  &lt; 2e-16 ***\nDESTIN_SZBSSZ02 -0.4852688  0.0057001   -85.134  &lt; 2e-16 ***\nDESTIN_SZBSSZ03  0.4130432  0.0043061    95.921  &lt; 2e-16 ***\nDESTIN_SZBTSZ01  0.6215095  0.0048914   127.061  &lt; 2e-16 ***\nDESTIN_SZBTSZ02 -0.0145076  0.0071799    -2.021 0.043324 *  \nDESTIN_SZBTSZ03  0.4919981  0.0058498    84.105  &lt; 2e-16 ***\nDESTIN_SZBTSZ04 -0.6957555  0.0114078   -60.989  &lt; 2e-16 ***\nDESTIN_SZBTSZ05  0.3329814  0.0073568    45.262  &lt; 2e-16 ***\nDESTIN_SZBTSZ06 -0.1333295  0.0073965   -18.026  &lt; 2e-16 ***\nDESTIN_SZBTSZ07 -1.4449581  0.0113186  -127.663  &lt; 2e-16 ***\nDESTIN_SZBTSZ08 -0.7079056  0.0103797   -68.201  &lt; 2e-16 ***\nDESTIN_SZCBSZ01 -5.7344725  0.3162767   -18.131  &lt; 2e-16 ***\nDESTIN_SZCCSZ01 -0.0009541  0.0083381    -0.114 0.908900    \nDESTIN_SZCHSZ01 -0.2083016  0.0099054   -21.029  &lt; 2e-16 ***\nDESTIN_SZCHSZ02  0.5369606  0.0057531    93.334  &lt; 2e-16 ***\nDESTIN_SZCHSZ03  2.5530638  0.0043945   580.971  &lt; 2e-16 ***\nDESTIN_SZCKSZ01 -0.5725975  0.0056507  -101.333  &lt; 2e-16 ***\nDESTIN_SZCKSZ02 -1.1181852  0.0063287  -176.685  &lt; 2e-16 ***\nDESTIN_SZCKSZ03  0.1156680  0.0049440    23.396  &lt; 2e-16 ***\nDESTIN_SZCKSZ04 -0.8647725  0.0071003  -121.794  &lt; 2e-16 ***\nDESTIN_SZCKSZ05 -1.1641791  0.0076248  -152.684  &lt; 2e-16 ***\nDESTIN_SZCKSZ06 -0.4397612  0.0073040   -60.208  &lt; 2e-16 ***\nDESTIN_SZCLSZ01  0.1930552  0.0053752    35.916  &lt; 2e-16 ***\nDESTIN_SZCLSZ02 -2.0436501  0.0136039  -150.225  &lt; 2e-16 ***\nDESTIN_SZCLSZ03 -0.9338571  0.0082908  -112.638  &lt; 2e-16 ***\nDESTIN_SZCLSZ04  0.0532041  0.0053276     9.987  &lt; 2e-16 ***\nDESTIN_SZCLSZ05 -1.0782781  0.0088184  -122.276  &lt; 2e-16 ***\nDESTIN_SZCLSZ06  0.4068171  0.0049068    82.910  &lt; 2e-16 ***\nDESTIN_SZCLSZ07 -0.3579507  0.0060289   -59.373  &lt; 2e-16 ***\nDESTIN_SZCLSZ08 -0.2487993  0.0066588   -37.364  &lt; 2e-16 ***\nDESTIN_SZCLSZ09  0.1611080  0.0071178    22.635  &lt; 2e-16 ***\nDESTIN_SZDTSZ02 -1.7308348  0.0349466   -49.528  &lt; 2e-16 ***\nDESTIN_SZDTSZ03 -0.5994253  0.0146230   -40.992  &lt; 2e-16 ***\nDESTIN_SZDTSZ13 -1.3685031  0.0162803   -84.059  &lt; 2e-16 ***\nDESTIN_SZGLSZ01 -0.0910001  0.0055275   -16.463  &lt; 2e-16 ***\nDESTIN_SZGLSZ02 -0.0692224  0.0052840   -13.100  &lt; 2e-16 ***\nDESTIN_SZGLSZ03  0.6493421  0.0043446   149.459  &lt; 2e-16 ***\nDESTIN_SZGLSZ04  0.9327947  0.0043674   213.583  &lt; 2e-16 ***\nDESTIN_SZGLSZ05  0.8161728  0.0043625   187.087  &lt; 2e-16 ***\nDESTIN_SZHGSZ01  0.0658625  0.0042516    15.491  &lt; 2e-16 ***\nDESTIN_SZHGSZ02 -0.8134329  0.0056721  -143.409  &lt; 2e-16 ***\nDESTIN_SZHGSZ03 -1.3546132  0.0066257  -204.448  &lt; 2e-16 ***\nDESTIN_SZHGSZ04 -0.4500588  0.0048448   -92.895  &lt; 2e-16 ***\nDESTIN_SZHGSZ05 -0.5026431  0.0050996   -98.566  &lt; 2e-16 ***\nDESTIN_SZHGSZ06 -0.8673686  0.0059530  -145.704  &lt; 2e-16 ***\nDESTIN_SZHGSZ07  0.0560490  0.0047702    11.750  &lt; 2e-16 ***\nDESTIN_SZHGSZ08 -0.0443189  0.0052599    -8.426  &lt; 2e-16 ***\nDESTIN_SZHGSZ09 -0.0126355  0.0054966    -2.299 0.021518 *  \nDESTIN_SZHGSZ10 -3.5821793  0.0263281  -136.059  &lt; 2e-16 ***\nDESTIN_SZJESZ01 -0.3704281  0.0056684   -65.350  &lt; 2e-16 ***\nDESTIN_SZJESZ02 -0.7369159  0.0058686  -125.570  &lt; 2e-16 ***\nDESTIN_SZJESZ03 -0.8985484  0.0063627  -141.222  &lt; 2e-16 ***\nDESTIN_SZJESZ04 -1.0511995  0.0073996  -142.061  &lt; 2e-16 ***\nDESTIN_SZJESZ05 -1.5324974  0.0102612  -149.349  &lt; 2e-16 ***\nDESTIN_SZJESZ06  0.3105267  0.0048241    64.370  &lt; 2e-16 ***\nDESTIN_SZJESZ07 -1.3234483  0.0085497  -154.795  &lt; 2e-16 ***\nDESTIN_SZJESZ08 -0.6559742  0.0083174   -78.867  &lt; 2e-16 ***\nDESTIN_SZJESZ09  0.2663752  0.0063370    42.035  &lt; 2e-16 ***\nDESTIN_SZJESZ10  0.8529026  0.0076067   112.126  &lt; 2e-16 ***\nDESTIN_SZJESZ11  0.5559641  0.0074629    74.497  &lt; 2e-16 ***\nDESTIN_SZJWSZ01 -0.9790971  0.0071830  -136.308  &lt; 2e-16 ***\nDESTIN_SZJWSZ02 -0.8746590  0.0060179  -145.342  &lt; 2e-16 ***\nDESTIN_SZJWSZ03  0.5689062  0.0049105   115.855  &lt; 2e-16 ***\nDESTIN_SZJWSZ04  0.4520963  0.0050302    89.876  &lt; 2e-16 ***\nDESTIN_SZJWSZ05 -1.0249671  0.0067371  -152.137  &lt; 2e-16 ***\nDESTIN_SZJWSZ06 -0.7451483  0.0062189  -119.819  &lt; 2e-16 ***\nDESTIN_SZJWSZ07 -2.8453099  0.0287335   -99.024  &lt; 2e-16 ***\nDESTIN_SZJWSZ08 -0.3372309  0.0058003   -58.141  &lt; 2e-16 ***\nDESTIN_SZJWSZ09  1.0505330  0.0045908   228.832  &lt; 2e-16 ***\nDESTIN_SZKLSZ01 -0.2334836  0.0057970   -40.277  &lt; 2e-16 ***\nDESTIN_SZKLSZ02 -0.5416148  0.0061432   -88.164  &lt; 2e-16 ***\nDESTIN_SZKLSZ03 -0.8026495  0.0068745  -116.757  &lt; 2e-16 ***\nDESTIN_SZKLSZ04 -1.2918594  0.0090197  -143.227  &lt; 2e-16 ***\nDESTIN_SZKLSZ05 -0.4069101  0.0087812   -46.339  &lt; 2e-16 ***\nDESTIN_SZKLSZ06 -2.5333101  0.0363215   -69.747  &lt; 2e-16 ***\nDESTIN_SZKLSZ07 -0.6623343  0.0070761   -93.601  &lt; 2e-16 ***\nDESTIN_SZKLSZ08 -0.1408205  0.0054965   -25.620  &lt; 2e-16 ***\nDESTIN_SZLKSZ01 -1.2639235  0.0208254   -60.691  &lt; 2e-16 ***\nDESTIN_SZMDSZ01 -1.5655800  0.0202787   -77.203  &lt; 2e-16 ***\nDESTIN_SZMDSZ02 -0.9767682  0.0114687   -85.168  &lt; 2e-16 ***\nDESTIN_SZMDSZ03 -3.3328109  0.0254294  -131.061  &lt; 2e-16 ***\nDESTIN_SZMPSZ01 -0.4552859  0.0080666   -56.441  &lt; 2e-16 ***\nDESTIN_SZMPSZ02 -0.5386560  0.0064620   -83.358  &lt; 2e-16 ***\nDESTIN_SZMPSZ03  0.4952000  0.0052295    94.694  &lt; 2e-16 ***\nDESTIN_SZMUSZ02 -1.4434175  0.0202509   -71.277  &lt; 2e-16 ***\nDESTIN_SZNTSZ01 -2.9194067  0.0449654   -64.926  &lt; 2e-16 ***\nDESTIN_SZNTSZ02 -1.3780179  0.0112867  -122.092  &lt; 2e-16 ***\nDESTIN_SZNTSZ03 -0.5044699  0.0080449   -62.707  &lt; 2e-16 ***\nDESTIN_SZNTSZ05 -2.0017134  0.0258750   -77.361  &lt; 2e-16 ***\nDESTIN_SZNTSZ06 -3.8120537  0.0434271   -87.781  &lt; 2e-16 ***\nDESTIN_SZNVSZ01 -0.1071506  0.0051026   -20.999  &lt; 2e-16 ***\nDESTIN_SZNVSZ02 -0.0274710  0.0057611    -4.768 1.86e-06 ***\nDESTIN_SZNVSZ03  0.1076352  0.0057909    18.587  &lt; 2e-16 ***\nDESTIN_SZNVSZ04 -1.2087250  0.0110438  -109.448  &lt; 2e-16 ***\nDESTIN_SZNVSZ05 -1.0058290  0.0092167  -109.131  &lt; 2e-16 ***\nDESTIN_SZPGSZ01 -1.2029931  0.0163170   -73.726  &lt; 2e-16 ***\nDESTIN_SZPGSZ02 -1.2878671  0.0074139  -173.709  &lt; 2e-16 ***\nDESTIN_SZPGSZ03 -0.1520894  0.0048629   -31.275  &lt; 2e-16 ***\nDESTIN_SZPGSZ04 -0.1985959  0.0050374   -39.424  &lt; 2e-16 ***\nDESTIN_SZPGSZ05 -1.5290983  0.0082617  -185.083  &lt; 2e-16 ***\nDESTIN_SZPLSZ01 -0.3567934  0.0074298   -48.022  &lt; 2e-16 ***\nDESTIN_SZPLSZ02 -1.7114351  0.0134462  -127.280  &lt; 2e-16 ***\nDESTIN_SZPLSZ03 -0.3241427  0.0098895   -32.776  &lt; 2e-16 ***\nDESTIN_SZPLSZ04 -1.7117196  0.0119003  -143.838  &lt; 2e-16 ***\nDESTIN_SZPLSZ05 -0.5086379  0.0120051   -42.368  &lt; 2e-16 ***\nDESTIN_SZPNSZ01  0.2026781  0.0068977    29.383  &lt; 2e-16 ***\nDESTIN_SZPNSZ02  0.8313754  0.0078544   105.848  &lt; 2e-16 ***\nDESTIN_SZPNSZ03 -0.4041254  0.0086586   -46.673  &lt; 2e-16 ***\nDESTIN_SZPNSZ04  1.5814539  0.0093641   168.885  &lt; 2e-16 ***\nDESTIN_SZPNSZ05  1.1823430  0.0129843    91.059  &lt; 2e-16 ***\nDESTIN_SZPRSZ01 -1.1057553  0.0088197  -125.374  &lt; 2e-16 ***\nDESTIN_SZPRSZ02  0.0895099  0.0056308    15.897  &lt; 2e-16 ***\nDESTIN_SZPRSZ03  0.6921925  0.0043977   157.397  &lt; 2e-16 ***\nDESTIN_SZPRSZ04 -0.2848336  0.0084725   -33.619  &lt; 2e-16 ***\nDESTIN_SZPRSZ05  0.1744480  0.0053553    32.575  &lt; 2e-16 ***\nDESTIN_SZPRSZ06  0.4279206  0.0058735    72.856  &lt; 2e-16 ***\nDESTIN_SZPRSZ07 -1.5123108  0.0124303  -121.664  &lt; 2e-16 ***\nDESTIN_SZPRSZ08 -0.5650226  0.0068530   -82.449  &lt; 2e-16 ***\nDESTIN_SZQTSZ01 -0.5952360  0.0090505   -65.769  &lt; 2e-16 ***\nDESTIN_SZQTSZ02 -0.7728170  0.0078910   -97.937  &lt; 2e-16 ***\nDESTIN_SZQTSZ03 -0.5066812  0.0073996   -68.474  &lt; 2e-16 ***\nDESTIN_SZQTSZ04 -0.6398414  0.0075411   -84.847  &lt; 2e-16 ***\nDESTIN_SZQTSZ05 -0.4354527  0.0069345   -62.795  &lt; 2e-16 ***\nDESTIN_SZQTSZ06 -0.6597391  0.0071919   -91.733  &lt; 2e-16 ***\nDESTIN_SZQTSZ07 -0.9392696  0.0112518   -83.477  &lt; 2e-16 ***\nDESTIN_SZQTSZ08  0.4617774  0.0057011    80.998  &lt; 2e-16 ***\nDESTIN_SZQTSZ09 -0.3174497  0.0065890   -48.178  &lt; 2e-16 ***\nDESTIN_SZQTSZ10  0.1993449  0.0059923    33.267  &lt; 2e-16 ***\nDESTIN_SZQTSZ11  0.2551535  0.0061885    41.230  &lt; 2e-16 ***\nDESTIN_SZQTSZ12 -0.1662603  0.0086701   -19.176  &lt; 2e-16 ***\nDESTIN_SZQTSZ13  0.5500978  0.0063091    87.192  &lt; 2e-16 ***\nDESTIN_SZQTSZ14  0.5364435  0.0070157    76.463  &lt; 2e-16 ***\nDESTIN_SZQTSZ15  1.3611043  0.0081643   166.715  &lt; 2e-16 ***\nDESTIN_SZRCSZ01 -0.1034049  0.0076769   -13.470  &lt; 2e-16 ***\nDESTIN_SZRCSZ06 -1.0633902  0.0189846   -56.013  &lt; 2e-16 ***\nDESTIN_SZRVSZ01 -1.5486221  0.0165272   -93.701  &lt; 2e-16 ***\nDESTIN_SZRVSZ02 -2.4092611  0.0326906   -73.699  &lt; 2e-16 ***\nDESTIN_SZRVSZ03 -1.5172079  0.0139258  -108.950  &lt; 2e-16 ***\nDESTIN_SZRVSZ04 -1.1663615  0.0157430   -74.088  &lt; 2e-16 ***\nDESTIN_SZRVSZ05 -2.2404292  0.0281339   -79.634  &lt; 2e-16 ***\nDESTIN_SZSBSZ01 -1.3783780  0.0096022  -143.549  &lt; 2e-16 ***\nDESTIN_SZSBSZ02 -1.4445213  0.0081630  -176.959  &lt; 2e-16 ***\nDESTIN_SZSBSZ03  0.5149906  0.0051663    99.683  &lt; 2e-16 ***\nDESTIN_SZSBSZ04  0.2389086  0.0060765    39.317  &lt; 2e-16 ***\nDESTIN_SZSBSZ05 -1.2737442  0.0082818  -153.801  &lt; 2e-16 ***\nDESTIN_SZSBSZ06 -1.8683520  0.0227277   -82.206  &lt; 2e-16 ***\nDESTIN_SZSBSZ07 -0.5993154  0.0184895   -32.414  &lt; 2e-16 ***\nDESTIN_SZSBSZ08  0.8156302  0.0059840   136.302  &lt; 2e-16 ***\nDESTIN_SZSBSZ09  0.0900611  0.0057054    15.785  &lt; 2e-16 ***\nDESTIN_SZSESZ02 -0.6397704  0.0052491  -121.882  &lt; 2e-16 ***\nDESTIN_SZSESZ03  0.1714103  0.0042357    40.468  &lt; 2e-16 ***\nDESTIN_SZSESZ04 -1.0596175  0.0059865  -177.002  &lt; 2e-16 ***\nDESTIN_SZSESZ05 -0.8071891  0.0051229  -157.566  &lt; 2e-16 ***\nDESTIN_SZSESZ06 -0.5580934  0.0066216   -84.284  &lt; 2e-16 ***\nDESTIN_SZSESZ07 -3.1448863  0.0227788  -138.062  &lt; 2e-16 ***\nDESTIN_SZSGSZ01 -0.1795225  0.0060127   -29.857  &lt; 2e-16 ***\nDESTIN_SZSGSZ02 -0.2986570  0.0053561   -55.760  &lt; 2e-16 ***\nDESTIN_SZSGSZ03 -0.4074671  0.0050609   -80.513  &lt; 2e-16 ***\nDESTIN_SZSGSZ04 -0.1505164  0.0050931   -29.553  &lt; 2e-16 ***\nDESTIN_SZSGSZ05 -1.9908372  0.0101448  -196.242  &lt; 2e-16 ***\nDESTIN_SZSGSZ06  0.6715268  0.0041161   163.148  &lt; 2e-16 ***\nDESTIN_SZSGSZ07 -0.4494757  0.0055319   -81.252  &lt; 2e-16 ***\nDESTIN_SZSISZ01 -0.5517983  0.0261860   -21.072  &lt; 2e-16 ***\nDESTIN_SZSKSZ01 -0.4749154  0.0079257   -59.921  &lt; 2e-16 ***\nDESTIN_SZSKSZ02  0.9400302  0.0057218   164.290  &lt; 2e-16 ***\nDESTIN_SZSKSZ03 -0.2800377  0.0066081   -42.378  &lt; 2e-16 ***\nDESTIN_SZSKSZ04 -1.2570212  0.0145351   -86.482  &lt; 2e-16 ***\nDESTIN_SZSKSZ05 -0.2600474  0.0112800   -23.054  &lt; 2e-16 ***\nDESTIN_SZSLSZ01 -0.7775604  0.0085818   -90.606  &lt; 2e-16 ***\nDESTIN_SZSLSZ04 -0.8586515  0.0073142  -117.396  &lt; 2e-16 ***\nDESTIN_SZSRSZ01 -1.1370887  0.0142148   -79.993  &lt; 2e-16 ***\nDESTIN_SZTHSZ01 -4.3259988  0.0368554  -117.378  &lt; 2e-16 ***\nDESTIN_SZTHSZ03 -2.6632914  0.0252720  -105.385  &lt; 2e-16 ***\nDESTIN_SZTHSZ04 -3.1000906  0.0216372  -143.276  &lt; 2e-16 ***\nDESTIN_SZTHSZ06 -2.5952642  0.0156340  -166.001  &lt; 2e-16 ***\nDESTIN_SZTMSZ01 -0.2092828  0.0059257   -35.318  &lt; 2e-16 ***\nDESTIN_SZTMSZ02  1.8238139  0.0039155   465.798  &lt; 2e-16 ***\nDESTIN_SZTMSZ03  0.8518259  0.0043636   195.210  &lt; 2e-16 ***\nDESTIN_SZTMSZ04  1.0222812  0.0043466   235.191  &lt; 2e-16 ***\nDESTIN_SZTMSZ05  0.6323777  0.0060058   105.294  &lt; 2e-16 ***\nDESTIN_SZTNSZ01 -0.3336078  0.0074388   -44.847  &lt; 2e-16 ***\nDESTIN_SZTNSZ02 -1.0820469  0.0101689  -106.408  &lt; 2e-16 ***\nDESTIN_SZTNSZ03 -1.4186505  0.0119906  -118.313  &lt; 2e-16 ***\nDESTIN_SZTNSZ04 -0.3058199  0.0074743   -40.916  &lt; 2e-16 ***\nDESTIN_SZTPSZ01 -0.4872299  0.0061571   -79.133  &lt; 2e-16 ***\nDESTIN_SZTPSZ02  0.7158441  0.0041312   173.278  &lt; 2e-16 ***\nDESTIN_SZTPSZ03 -0.4314229  0.0059917   -72.004  &lt; 2e-16 ***\nDESTIN_SZTPSZ04 -1.5898245  0.0076083  -208.959  &lt; 2e-16 ***\nDESTIN_SZTPSZ05 -1.0445550  0.0062363  -167.497  &lt; 2e-16 ***\nDESTIN_SZTPSZ06 -0.4319582  0.0070100   -61.621  &lt; 2e-16 ***\nDESTIN_SZTPSZ07 -2.1602303  0.0120352  -179.493  &lt; 2e-16 ***\nDESTIN_SZTPSZ08 -1.1920493  0.0093083  -128.063  &lt; 2e-16 ***\nDESTIN_SZTPSZ09 -0.2022481  0.0071137   -28.431  &lt; 2e-16 ***\nDESTIN_SZTPSZ10 -1.2464793  0.0090124  -138.308  &lt; 2e-16 ***\nDESTIN_SZTPSZ11 -0.0808445  0.0056019   -14.432  &lt; 2e-16 ***\nDESTIN_SZTPSZ12 -0.6784376  0.0066340  -102.267  &lt; 2e-16 ***\nDESTIN_SZTSSZ01 -1.5845062  0.0222086   -71.346  &lt; 2e-16 ***\nDESTIN_SZTSSZ02 -0.1886010  0.0146338   -12.888  &lt; 2e-16 ***\nDESTIN_SZTSSZ03  0.6525526  0.0092450    70.585  &lt; 2e-16 ***\nDESTIN_SZTSSZ04  0.5285464  0.0100182    52.759  &lt; 2e-16 ***\nDESTIN_SZTSSZ05  1.4670106  0.0104357   140.577  &lt; 2e-16 ***\nDESTIN_SZTSSZ06  2.5043588  0.0167444   149.564  &lt; 2e-16 ***\nDESTIN_SZWCSZ01  1.9787931  0.0054306   364.375  &lt; 2e-16 ***\nDESTIN_SZWCSZ02 -2.2593108  0.0127916  -176.624  &lt; 2e-16 ***\nDESTIN_SZWCSZ03 -3.1897655  0.0326927   -97.568  &lt; 2e-16 ***\nDESTIN_SZWDSZ01  1.0476108  0.0044629   234.738  &lt; 2e-16 ***\nDESTIN_SZWDSZ02 -1.3176990  0.0065894  -199.973  &lt; 2e-16 ***\nDESTIN_SZWDSZ03  0.3432057  0.0052496    65.377  &lt; 2e-16 ***\nDESTIN_SZWDSZ04 -0.7895927  0.0073392  -107.586  &lt; 2e-16 ***\nDESTIN_SZWDSZ05 -0.8751665  0.0072946  -119.975  &lt; 2e-16 ***\nDESTIN_SZWDSZ06 -0.2106221  0.0053027   -39.720  &lt; 2e-16 ***\nDESTIN_SZWDSZ07 -1.6050834  0.0071754  -223.692  &lt; 2e-16 ***\nDESTIN_SZWDSZ08 -0.5124717  0.0069223   -74.032  &lt; 2e-16 ***\nDESTIN_SZWDSZ09  0.3813542  0.0054697    69.721  &lt; 2e-16 ***\nDESTIN_SZYSSZ01  0.0853753  0.0046572    18.332  &lt; 2e-16 ***\nDESTIN_SZYSSZ02 -0.3227172  0.0057351   -56.271  &lt; 2e-16 ***\nDESTIN_SZYSSZ03 -0.4151283  0.0066299   -62.615  &lt; 2e-16 ***\nDESTIN_SZYSSZ04 -0.4637327  0.0058206   -79.671  &lt; 2e-16 ***\nDESTIN_SZYSSZ05 -1.5888242  0.0111001  -143.136  &lt; 2e-16 ***\nDESTIN_SZYSSZ06 -1.4606209  0.0107759  -135.545  &lt; 2e-16 ***\nDESTIN_SZYSSZ07 -0.7839065  0.0144357   -54.304  &lt; 2e-16 ***\nDESTIN_SZYSSZ08  0.6265412  0.0045504   137.691  &lt; 2e-16 ***\nDESTIN_SZYSSZ09  0.1520067  0.0048092    31.607  &lt; 2e-16 ***\nlog(DIST)       -1.8468315  0.0004608 -4008.033  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 47094011  on 14470  degrees of freedom\nResidual deviance: 10420261  on 13912  degrees of freedom\nAIC: 10510518\n\nNumber of Fisher Scoring iterations: 7\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nglm from stats package is used to fit generalized linear models. In this code, a Poisson regression model is specified using the formula TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(DIST), with family = poisson(link = \"log\"). This sets up a model where TRIPS is the dependent variable, and ORIGIN_SZ, DESTIN_SZ, and the logarithm of DIST are independent variables.\ndata = inter_zonal_flow specifies that the model should be fitted using the inter_zonal_flow dataset.\nna.action = na.exclude instructs the model to exclude cases with missing values (NAs) in the model fitting process.\nsummary from base R provides a detailed summary of the fitted model dbcSIM_Poisson. This includes information about the model coefficients, their statistical significance, residuals, and other diagnostic measures.\nThe #| echo: false directive at the start indicates that this code chunk is executed but not displayed in the output when rendered in a document like an R Markdown report.\n\n\n\n\nNext, let us examine how well the proportion of variance in the dependent variable (i.e. TRIPS) that can be explained by the explanatory variables. Using the R-Squared function written earlier, compute the R-Squared of the Doubly-constrined Model.\n\n\nCode\nCalcRSquared(dbcSIM_Poisson$data$TRIPS,\n             dbcSIM_Poisson$fitted.values)\n\n\n[1] 0.7001882\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nThe custom function CalcRSquared, defined earlier, is used here to calculate the coefficient of determination (R-squared). This statistical measure indicates how well the estimated values (dbcSIM_Poisson$fitted.values) approximate the actual, observed values (dbcSIM_Poisson$data$TRIPS).\nIn this code, dbcSIM_Poisson$data$TRIPS refers to the actual observed values of trips, and dbcSIM_Poisson$fitted.values refers to the values estimated by the dbcSIM_Poisson generalized linear model.\nThe function call CalcRSquared(dbcSIM_Poisson$data$TRIPS, dbcSIM_Poisson$fitted.values) computes the R-squared value, which quantifies the proportion of variance in the observed data that can be explained by the model’s estimated values.\n\n\n\n\n\nNotice that there is a relatively greater improvement in the R-Squared value."
  },
  {
    "objectID": "in-class/ice4.html#model-comparison",
    "href": "in-class/ice4.html#model-comparison",
    "title": "In-class Exercise 4 - Geospatial Data Science and Spatial Interaction Model with R",
    "section": "2.5 Model comparison",
    "text": "2.5 Model comparison\n\n2.5.1 Statistical measures\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package\nFirst of all, create a list called model_list by using the code chunk below.\n\n\nCode\nmodel_list &lt;- list(\n  Origin_Constrained = orcSIM_Poisson,\n  Doubly_Constrained = dbcSIM_Poisson)\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\nlist from base R is a generic function to create lists. In this code, model_list is created to store different model objects: Origin_Constrained stores the orcSIM_Poisson model, and Doubly_Constrained stores the dbcSIM_Poisson model.\n\n\n\nNext, compute the RMSE of all the models in model_list file by using the code chunk below.\n\n\nCode\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n\n# Comparison of Model Performance Indices\n\nName               | Model |     RMSE\n-------------------------------------\nOrigin_Constrained |   glm | 2613.236\nDoubly_Constrained |   glm | 1906.694\n\n\nThe print above reveals that doubly constrained SIM is the best model among the two SIMs because it has the smallest RMSE value of 1906.694.\n\n\n2.5.2 Visualising fitted values\nIn this section, visualise the observed values and the fitted values.\nFirstly we will extract the fitted values from Origin-constrained Model by using the code chunk below.\n\n\nCode\ndf &lt;- as.data.frame(orcSIM_Poisson$fitted.values) %&gt;%\n  round(digits = 0)\n\n\nNext, append the fitted values into inter_zonal_flow data frame by using the code chunk below.\n\n\nCode\ninter_zonal_flow &lt;- inter_zonal_flow %&gt;%\n  cbind(df) %&gt;%\n  rename(orcTRIPS = \"orcSIM_Poisson.fitted.values\")\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ncbind from base R combines data frames or matrices by columns. In this code, it’s used to add the columns from df to inter_zonal_flow.\nrename from dplyr package changes the name of a specific column in a data frame. Here, the column named orcSIM_Poisson.fitted.values in the merged data frame is renamed to orcTRIPS. Notice that rename() is used to rename the field name and the $ in the original field name has been replaced with an .. This is because R replaced $ with . during the cbind().\n\n\n\n\nRepeat the same step for Doubly Constrained Model (i.e. dbcSIM_Poisson)\n\n\nCode\ndf &lt;- as.data.frame(dbcSIM_Poisson$fitted.values) %&gt;%\n  round(digits = 0)\n\n\n\n\nCode\ninter_zonal_flow &lt;- inter_zonal_flow %&gt;%\n  cbind(df) %&gt;%\n  rename(dbcTRIPS = \"dbcSIM_Poisson.fitted.values\")\n\n\nNext, two scatterplots will be created by using geom_point() and other appropriate functions of ggplot2 package. And be put into a single visual for better comparison.\n\n\nCode\norc_p &lt;- ggplot(data = inter_zonal_flow,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,150000),\n                  ylim=c(0,150000))\n\ndbc_p &lt;- ggplot(data = inter_zonal_flow,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm) +\n  coord_cartesian(xlim=c(0,150000),\n                  ylim=c(0,150000))\n\nggarrange(orc_p, dbc_p,\n          ncol = 2,\n          nrow = 1)\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nggplot from ggplot2 package creates a new ggplot graph, specifying its aesthetic mappings. In this code, ggplot is used twice to create two plots (orc_p and dbc_p), each with different x-axis variables (orcTRIPS for orc_p, dbcTRIPS for dbc_p) but the same y-axis variable (TRIPS).\ngeom_point from ggplot2 package adds a scatterplot layer to the ggplot.\ngeom_smooth from ggplot2 package adds a smoothed line to the plot, here using a linear model (lm method) for fitting.\ncoord_cartesian from ggplot2 package sets the limits for the x and y axes without changing the scale. Both plots have their axes limited to the range of 0 to 150,000.\nThe code snippets create two plots comparing the fitted values from two different models (orcSIM_Poisson and dbcSIM_Poisson) against observed trips (TRIPS), with scatter plots and linear regression lines.\n\n\n\n\n\n\n\n\n\n\nQuiz Answer\n\n\n\nFrom the figure, the left graph shows the relationship between the observed trips (TRIPS) and the estimated trips from the Origin constrained model (orcTRIPS). The dispersion of points and the less pronounced trend line suggest that the model does not predict the observed trips as accurately. The right graph, showing the relationship between observed trips (TRIPS) and the estimated trips from the Doubly Constrained Model (dbcTRIPS), displays a much tighter alignment of points along the trend line, indicating a more accurate prediction of the observed trips.\nThe follow-up action would be to further investigate the Doubly Constrained Model since it appears to be more effective at predicting trip patterns. This could involve examining the underlying assumptions of the model, the parameters used, and possibly applying it to another set of data for validation purposes. It would also be prudent to look into the reasons why the Origin constrained model performs less accurately to understand the limitations or potential areas for model improvement."
  },
  {
    "objectID": "in-class/ice2.html",
    "href": "in-class/ice2.html",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "in-class/ice2.html#calculating-spatial-weights",
    "href": "in-class/ice2.html#calculating-spatial-weights",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "2.1 Calculating Spatial Weights",
    "text": "2.1 Calculating Spatial Weights\n\nTwo types of Spatial Weights: 1) Contiguity Weights considers how neighboring areas are connected or share a common border, emphasizing spatial adjacency; 2) Distance-based Weights: This type takes into account the distance between locations, giving more weight to closer locations and less weight to those farther away, capturing spatial relationships based on proximity.\n\n\n2.1.1 Contiguity Weights\nThis part of exercise will use contiguity spatial weights using sfdep package. To derive the weights, the following steps is required:\n\nidentify contiguity neighbour list by using st_contiguity() from sfdep package.\nderive the spatial weights by using st_weights() from sfdep package\n\n\nThe advantage of sfdep over spdep is that its output is in the form of an sf tibble data frame. This is beneficial because sf tibble data frames are part of the tidyverse ecosystem, making it easier to work with and integrate into tidy data workflows in R.\n\n\nIdentifying Contiguity Neighbours\nthe following panel will show how to identify contiguity neighbours using various methods.\n\nQueen’s MethodRook’s MethodHigher Order Neighbors\n\n\n\n\nCode\n# Create neighbor dataframe using Queen Method from the original 'hunan_GDPPC' dataframe\nnb_queen &lt;- hunan_GDPPC %&gt;%\n\n  # Add a new column 'nb' (neighbors) representing contiguity relationships using spatial geometries\n  mutate(nb = st_contiguity(geometry),\n\n         # Insert the newly created columns at the beginning of the dataset\n         .before=1)\n\n# summarize the neighbors column\nsummary(nb_queen$nb)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\n\n\n\n\nCode\n# Create neighbor dataframe using Rook Method from the original 'hunan_GDPPC' dataframe\nnb_rook &lt;- hunan_GDPPC %&gt;%\n\n  # Add a new column 'nb' (neighbors) representing contiguity relationships using spatial geometries\n  mutate(nb = st_contiguity(geometry, queen = FALSE),\n\n         # Add another column 'wt' calculating weights based on contiguity relationships\n         wt = st_weights(nb, style = 'W'),\n\n         # Insert the newly created columns at the beginning of the dataset\n         .before=1)\n\n# summarize the neighbors column\nsummary(nb_rook$nb)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\n\n\n\nSpatial relationships may extend beyond immediate neighbors when we’re dealing with complex geographical patterns or phenomena that involve interactions across multiple layers or scales. In such cases, high-order contiguity becomes relevant because it allows us to capture and analyze more distant spatial connections. This is particularly important when studying phenomena with a broader reach or influence that goes beyond the traditional notion of adjacent neighbors, providing a more comprehensive understanding of spatial dependencies in the data.\n\nThe following code chunk give example of using st_nb_lag_cumul() to derive contiguity neighbour list using lag 2 Queen’s method. It set the lag order to 2, so the result contains both 1st and 2nd order neighbors.\n\n\nCode\nnb2_queen &lt;-  hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n          # Add another new column 'nb2' calculating cumulative second-order contiguity relationships\n         nb2 = st_nb_lag_cumul(nb, 2),\n         .before = 1)\n\n# Check the output\nsummary(nb2_queen$nb2)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 1324 \nPercentage nonzero weights: 17.09711 \nAverage number of links: 15.04545 \nLink number distribution:\n\n 5  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 26 28 33 \n 2  1  6  4  5  4  8  5 10  4  4  8  4  8  5  2  2  1  2  1  1  1 \n2 least connected regions:\n30 88 with 5 links\n1 most connected region:\n56 with 33 links\n\n\n\n\n\nthe following code check the whole output using the 2 orders contiguity as example\n\n\nCode\nkable(head(nb2_queen, n=10))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nnb2\nNAME_2\nID_3\nNAME_3\nENGTYPE_3\nCounty\nGDPPC\ngeometry\n\n\n\n\n2, 3, 4, 57, 85\n2, 3, 4, 5, 6, 32, 56, 57, 58, 64, 69, 75, 76, 78, 85\nChangde\n21098\nAnxiang\nCounty\nAnxiang\n23667\nPOLYGON ((112.0625 29.75523…\n\n\n1, 57, 58, 78, 85\n1, 3, 4, 5, 6, 8, 9, 32, 56, 57, 58, 64, 68, 69, 75, 76, 78, 85\nChangde\n21100\nHanshou\nCounty\nHanshou\n20981\nPOLYGON ((112.2288 29.11684…\n\n\n1, 4, 5, 85\n1, 2, 4, 5, 6, 32, 56, 57, 69, 75, 78, 85\nChangde\n21101\nJinshi\nCounty City\nJinshi\n34592\nPOLYGON ((111.8927 29.6013,…\n\n\n1, 3, 5, 6\n1, 2, 3, 5, 6, 57, 69, 75, 85\nChangde\n21102\nLi\nCounty\nLi\n24473\nPOLYGON ((111.3731 29.94649…\n\n\n3, 4, 6, 85\n1, 2, 3, 4, 6, 32, 56, 57, 69, 75, 78, 85\nChangde\n21103\nLinli\nCounty\nLinli\n25554\nPOLYGON ((111.6324 29.76288…\n\n\n4, 5, 69, 75, 85\n1, 2, 3, 4, 5, 32, 53, 55, 56, 57, 69, 75, 78, 85\nChangde\n21104\nShimen\nCounty\nShimen\n27137\nPOLYGON ((110.8825 30.11675…\n\n\n67, 71, 74, 84\n9, 19, 66, 67, 71, 73, 74, 76, 84, 86\nChangsha\n21109\nLiuyang\nCounty City\nLiuyang\n63118\nPOLYGON ((113.9905 28.5682,…\n\n\n9, 46, 47, 56, 78, 80, 86\n2, 9, 19, 21, 31, 32, 34, 35, 36, 41, 45, 46, 47, 56, 58, 66, 68, 74, 78, 80, 84, 85, 86\nChangsha\n21110\nNingxiang\nCounty\nNingxiang\n62202\nPOLYGON ((112.7181 28.38299…\n\n\n8, 66, 68, 78, 84, 86\n2, 7, 8, 19, 21, 35, 46, 47, 56, 58, 66, 67, 68, 74, 76, 78, 80, 84, 85, 86\nChangsha\n21111\nWangcheng\nCounty\nWangcheng\n70666\nPOLYGON ((112.7914 28.52688…\n\n\n16, 17, 19, 20, 22, 70, 72, 73\n11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 71, 72, 73, 74, 82, 83, 86\nChenzhou\n21112\nAnren\nCounty\nAnren\n12761\nPOLYGON ((113.1757 26.82734…\n\n\n\n\n\n\n\nDeriving contiguity weights\nThe following panel shows how to use st_weights() of sfdep package to derive contiguity weights. the function provides three arguments which includes: - nb: a neighbor list object as created by st_neighbors() - style: Default “W” for row standardized weights. The value can also be “B”, “C”, “U”, “minmax”, and “S”. B is the basic binary coding, W is row standardises (sums over all links to n), C is globally standardised(sums over all links to n). U is equal to C divided by number of neighbours (sums over all links to unity, while S is a variance-stabilizing coding scheme (sums over all links to n). - allow_zero: If TRUE, assigns zero as lagged value to zone without neighbors.\n\nQueen - WHigher Order Queen - W\n\n\nThe following code will use queen method to derive contiguity weights (it’s the default method when the argument is not specified)\n\n\nCode\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         # add the weight column\n         wt = st_weights(nb, style = \"W\"),\n         .before = 1) \n# check the output\nwm_q\n\n\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\n\n\n\nCode\nwm2_q &lt;-  hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb, style = \"W\"),\n         nb2 = st_nb_lag_cumul(nb, 2),\n         wt2 = st_weights(nb2, style = \"W\"),\n                  .before = 1)\n\n# Check the output\nwm2_q\n\n\nSimple feature collection with 88 features and 10 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                            wt\n1                                                      0.2, 0.2, 0.2, 0.2, 0.2\n2                                                      0.2, 0.2, 0.2, 0.2, 0.2\n3                                                       0.25, 0.25, 0.25, 0.25\n4                                                       0.25, 0.25, 0.25, 0.25\n5                                                       0.25, 0.25, 0.25, 0.25\n6                                                      0.2, 0.2, 0.2, 0.2, 0.2\n7                                                       0.25, 0.25, 0.25, 0.25\n8  0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571, 0.1428571\n9             0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667\n10                      0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125\n                                                                                        nb2\n1                                     2, 3, 4, 5, 6, 32, 56, 57, 58, 64, 69, 75, 76, 78, 85\n2                           1, 3, 4, 5, 6, 8, 9, 32, 56, 57, 58, 64, 68, 69, 75, 76, 78, 85\n3                                                 1, 2, 4, 5, 6, 32, 56, 57, 69, 75, 78, 85\n4                                                             1, 2, 3, 5, 6, 57, 69, 75, 85\n5                                                 1, 2, 3, 4, 6, 32, 56, 57, 69, 75, 78, 85\n6                                         1, 2, 3, 4, 5, 32, 53, 55, 56, 57, 69, 75, 78, 85\n7                                                     9, 19, 66, 67, 71, 73, 74, 76, 84, 86\n8  2, 9, 19, 21, 31, 32, 34, 35, 36, 41, 45, 46, 47, 56, 58, 66, 68, 74, 78, 80, 84, 85, 86\n9               2, 7, 8, 19, 21, 35, 46, 47, 56, 58, 66, 67, 68, 74, 76, 78, 80, 84, 85, 86\n10               11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 70, 71, 72, 73, 74, 82, 83, 86\n                                                                                                                                                                                                                                                                                  wt2\n1                                                                                                  0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667, 0.06666667\n2                                                              0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556, 0.05555556\n3                                                                                                                                      0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n4                                                                                                                                                                                   0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111, 0.1111111\n5                                                                                                                                      0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n6                                                                                                              0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857, 0.07142857\n7                                                                                                                                                                                                                                    0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1\n8  0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826, 0.04347826\n9                                                                                                                                                              0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05\n10                                                 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158, 0.05263158\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734...\n\n\n\n\n\n\n\n\n2.1.2 Distance-based Weights\nThe following panel display examples of how to use various method of deriving distance-based spatial weights. Important functions used includes: - st_nb_dists() of sfdep to calculate the nearest neighbour distance, generating a list of distances for each feature’s neighbors. - unlist() of Base R to convert output into a vector form to enable summary statistics. - st_dists_band() of sfdep is used to identify neighbors based on a distance band, by specifiying upper and lower arguments. The output is a list of neighbours (i.e. nb). - st_weights() is used to calculate spatial weights of the nb list. - st_knn() of sfdep is used to identify specified number of neighbors (default is k=1, one nearest neighbour). - st_contiguity() of sfdep is used to identify the neighbours using contiguity criteria. - st_inverse_distance() is used to calculate inverse distance weights of neighbours on the nb list.\n\nfixed distance weightsadaptive distance weightsinverse distance weights\n\n\nfind maximum distance in knn with 1 neighbor\n\n\nCode\n# Extract the geometry (spatial information) from the 'hunan_GDPPC' dataset\ngeo &lt;- sf::st_geometry(hunan_GDPPC)\n\n# Create a spatial weights matrix using k-nearest neighbors (KNN) for the extracted geometry\nnb &lt;- st_knn(geo, longlat = TRUE)\n\n# Calculate the distances between each feature's centroid and its k-nearest neighbors\ndists &lt;- unlist(st_nb_dists(geo, nb))\n\n# show the result\nsummary(dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.56   29.11   36.89   37.34   43.21   65.80 \n\n\nuse the maximum distance to set threshold value in the following fixed distance weights calculation code:\n\n\nCode\n# Create a new variable wm_fd using the hunan_GDPPC data frame\nwm_fd &lt;- hunan_GDPPC %&gt;%\n  \n  # Add a new column 'nb' to the data frame\n  mutate(\n    nb = st_dist_band(geometry, upper = 66),  # Calculate a distance band based on geometry\n    \n    # Add a new column 'wt' to the data frame\n    wt = st_weights(nb),  # Calculate weights based on the distance band\n    \n    # Place the new columns 'nb' and 'wt' before the existing columns in the data frame\n    .before = 1\n  )\n\n# check the output\nprint(summary(wm_fd$nb))\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 400 \nPercentage nonzero weights: 5.165289 \nAverage number of links: 4.545455 \nLink number distribution:\n\n 1  2  3  4  5  6  7 \n 4  7 10 16 23 23  5 \n4 least connected regions:\n30 32 65 75 with 1 link\n5 most connected regions:\n41 52 58 63 80 with 7 links\n\n\nCode\nprint(glimpse(wm_fd))\n\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;2, 3, 4, 5, 57, 64&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 57&gt;, &lt;1,…\n$ wt        &lt;list&gt; &lt;0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                       nb\n1      2, 3, 4, 5, 57, 64\n2       1, 57, 58, 78, 85\n3             1, 4, 5, 57\n4              1, 3, 5, 6\n5          1, 3, 4, 6, 69\n6                4, 5, 69\n7              67, 71, 84\n8       9, 46, 47, 78, 80\n9   8, 46, 66, 68, 84, 86\n10 16, 20, 22, 70, 72, 73\n                                                                 wt   NAME_2\n1  0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667  Changde\n2                                           0.2, 0.2, 0.2, 0.2, 0.2  Changde\n3                                            0.25, 0.25, 0.25, 0.25  Changde\n4                                            0.25, 0.25, 0.25, 0.25  Changde\n5                                           0.2, 0.2, 0.2, 0.2, 0.2  Changde\n6                                   0.3333333, 0.3333333, 0.3333333  Changde\n7                                   0.3333333, 0.3333333, 0.3333333 Changsha\n8                                           0.2, 0.2, 0.2, 0.2, 0.2 Changsha\n9  0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667 Changsha\n10 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667, 0.1666667 Chenzhou\n    ID_3    NAME_3   ENGTYPE_3    County GDPPC                       geometry\n1  21098   Anxiang      County   Anxiang 23667 POLYGON ((112.0625 29.75523...\n2  21100   Hanshou      County   Hanshou 20981 POLYGON ((112.2288 29.11684...\n3  21101    Jinshi County City    Jinshi 34592 POLYGON ((111.8927 29.6013,...\n4  21102        Li      County        Li 24473 POLYGON ((111.3731 29.94649...\n5  21103     Linli      County     Linli 25554 POLYGON ((111.6324 29.76288...\n6  21104    Shimen      County    Shimen 27137 POLYGON ((110.8825 30.11675...\n7  21109   Liuyang County City   Liuyang 63118 POLYGON ((113.9905 28.5682,...\n8  21110 Ningxiang      County Ningxiang 62202 POLYGON ((112.7181 28.38299...\n9  21111 Wangcheng      County Wangcheng 70666 POLYGON ((112.7914 28.52688...\n10 21112     Anren      County     Anren 12761 POLYGON ((113.1757 26.82734...\n\n\n\n\nusing st_knn with number of neighbors (k) fixed to 8, it will find 8 nearest neighbours for each feature, without being limited by maximum distance (adaptive).\n\n\nCode\nwm_ad &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_knn(geometry,\n                     k=8),\n         wt = st_weights(nb),\n               .before = 1)\n\n# check the output\nprint(summary(wm_ad$nb))\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\n\nCode\nprint(glimpse(wm_ad))\n\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;2, 3, 4, 5, 57, 58, 64, 76&gt;, &lt;1, 3, 8, 57, 58, 68, 78, 85&gt;, …\n$ wt        &lt;list&gt; &lt;0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125&gt;, &lt;…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1      2, 3, 4, 5, 57, 58, 64, 76\n2     1, 3, 8, 57, 58, 68, 78, 85\n3       1, 2, 4, 5, 6, 57, 64, 85\n4       1, 2, 3, 5, 6, 57, 64, 69\n5       1, 2, 3, 4, 6, 57, 69, 85\n6       1, 2, 3, 4, 5, 69, 75, 85\n7   9, 66, 67, 68, 71, 74, 84, 86\n8    2, 9, 35, 46, 47, 78, 80, 86\n9   8, 46, 47, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                       wt   NAME_2  ID_3\n1  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21098\n2  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21100\n3  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21101\n4  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21102\n5  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21103\n6  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125  Changde 21104\n7  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 Changsha 21109\n8  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 Changsha 21110\n9  0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 Changsha 21111\n10 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125 Chenzhou 21112\n      NAME_3   ENGTYPE_3    County GDPPC                       geometry\n1    Anxiang      County   Anxiang 23667 POLYGON ((112.0625 29.75523...\n2    Hanshou      County   Hanshou 20981 POLYGON ((112.2288 29.11684...\n3     Jinshi County City    Jinshi 34592 POLYGON ((111.8927 29.6013,...\n4         Li      County        Li 24473 POLYGON ((111.3731 29.94649...\n5      Linli      County     Linli 25554 POLYGON ((111.6324 29.76288...\n6     Shimen      County    Shimen 27137 POLYGON ((110.8825 30.11675...\n7    Liuyang County City   Liuyang 63118 POLYGON ((113.9905 28.5682,...\n8  Ningxiang      County Ningxiang 62202 POLYGON ((112.7181 28.38299...\n9  Wangcheng      County Wangcheng 70666 POLYGON ((112.7914 28.52688...\n10     Anren      County     Anren 12761 POLYGON ((113.1757 26.82734...\n\n\n\n\ncalculate the weight based on inverse distance (the farther from the feature, the less weight).\n\n\nCode\nwm_idw &lt;- hunan_GDPPC %&gt;% \n  mutate(nb = st_contiguity(geometry), # set the neighbours based on contiguity\n         wts = st_inverse_distance(nb, geometry,  # Create a new variable 'wts' representing inverse distance weights by using the 'st_inverse_distance' function.\n                                   scale = 1,  # Set the scale parameter to 1, meaning distances will be used as they are.\n                                   alpha = 1),  # Set the alpha parameter to 1, indicating a linear decrease in influence with distance.\n         .before = 1)\n\n# check the output\nprint(summary(wm_idw$nb))\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nCode\nprint(glimpse(wm_idw))\n\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1, 3,…\n$ wts       &lt;list&gt; &lt;0.01526149, 0.03515537, 0.02176677, 0.02836978, 0.01029857…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\nSimple feature collection with 88 features and 8 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\nFirst 10 features:\n                               nb\n1                 2, 3, 4, 57, 85\n2               1, 57, 58, 78, 85\n3                     1, 4, 5, 85\n4                      1, 3, 5, 6\n5                     3, 4, 6, 85\n6                4, 5, 69, 75, 85\n7                  67, 71, 74, 84\n8       9, 46, 47, 56, 78, 80, 86\n9           8, 66, 68, 78, 84, 86\n10 16, 17, 19, 20, 22, 70, 72, 73\n                                                                                              wts\n1                                      0.01526149, 0.03515537, 0.02176677, 0.02836978, 0.01029857\n2                                      0.01526149, 0.01601100, 0.01911052, 0.02327058, 0.01591694\n3                                                  0.03515537, 0.04581089, 0.04116397, 0.01208437\n4                                                  0.02176677, 0.04581089, 0.04637578, 0.01585302\n5                                                  0.04116397, 0.04637578, 0.01896212, 0.01351099\n6                                      0.01585302, 0.01896212, 0.02710909, 0.01140718, 0.01080890\n7                                                  0.01621067, 0.01536702, 0.01133628, 0.01836488\n8              0.01930410, 0.02675555, 0.02151751, 0.01076895, 0.02608065, 0.01519804, 0.01337412\n9                          0.01930410, 0.01651371, 0.01798519, 0.01473155, 0.03015561, 0.01612293\n10 0.02737233, 0.01390810, 0.01458881, 0.02156771, 0.02419268, 0.02350470, 0.01784174, 0.01621545\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "in-class/ice2.html#global-measures-of-spatial-association",
    "href": "in-class/ice2.html#global-measures-of-spatial-association",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "3.1 Global Measures of Spatial Association",
    "text": "3.1 Global Measures of Spatial Association\nThe global spatial association here is measured using Moran’s I statistics in sfdep package. Specifically global_moran, and global_moran_test(), globel_moran_perm() and functions are used.\nThe following panel show step by step of how its done.\n\n1 Derive contiguity weights2 Computing Global Moran’s I3a Global Moran’s I test3b Global Moran’s I permutation test\n\n\n\n\nCode\nwm_q &lt;- hunan_GDPPC %&gt;%\n  mutate(nb = st_contiguity(geometry),\n         wt = st_weights(nb,\n                         style = \"W\"),\n         .before = 1)\n# check the output\nglimpse(wm_q)\n\n\nRows: 88\nColumns: 9\n$ nb        &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1, 3,…\n$ wt        &lt;list&gt; &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.25…\n$ NAME_2    &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Chan…\n$ ID_3      &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2111…\n$ NAME_3    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ ENGTYPE_3 &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Coun…\n$ County    &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Li…\n$ GDPPC     &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7066…\n$ geometry  &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 2…\n\n\n\n\n\n\nCode\nmoranI &lt;- global_moran(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n# check the output\nglimpse(moranI)\n\n\nList of 2\n $ I: num 0.301\n $ K: num 7.64\n\n\n\nThe Moran’s I value of 0.301 indicates that there is a moderate positive spatial autocorrelation in the distribution of GDP per capita (GDPPC). Spatial autocorrelation means that similar values tend to be clustered together in geographic space. In this context, areas with similar economic conditions are somewhat grouped or clustered on the map. The value of K, which is 7.64 in this case, provides a reference point for what we might expect under the assumption of spatial randomness. If the observed Moran’s I value is significantly different from the expected value of K, it suggests that the spatial pattern is not random. In simpler terms, the Moran’s I value of 0.301 is telling us that the distribution of GDP per capita in the geographic areas being studied is not random – there is a discernible pattern where neighboring areas tend to have similar economic conditions.\n\n\n\n\n\nCode\nglobal_moran_test(wm_q$GDPPC,\n                       wm_q$nb,\n                       wm_q$wt)\n\n\n\n    Moran I test under randomisation\n\ndata:  x  \nweights: listw    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nThe Global Moran’s I test was conducted to assess whether the spatial pattern of GDP per capita (GDPPC) is random or exhibits clustering. The Moran I statistic standard deviate, which is 4.7351, indicates a strong positive spatial autocorrelation, reaffirming our earlier finding of a moderate positive spatial autocorrelation (Moran’s I value of 0.301). The p-value, being very small (1.095e-06), suggests that the observed spatial pattern is highly unlikely to occur by random chance. In simpler terms, this indicates a significant spatial clustering of similar economic conditions in neighboring areas on the map.\n\n\n\n\n\nCode\nset.seed(1234) # set seed to ensure computation is reproducible\nglobal_moran_perm(wm_q$GDPPC,\n                  wm_q$nb,\n                  wm_q$wt,\n                  nsim = 99) # number of simulation is nsim + 1, which means in this current setting, 100 simulation will be performed.\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.30075, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\np-value is smaller than alpha value of 0.05. Hence, reject the null hypothesis that the spatial patterns spatial independent. Because the Moran’s I statistics is greater than 0. We can infer the spatial distribution shows sign of clustering.\n\n\n\n\nThe use of Monte Carlo simulation global_moran_perm(), is preferred over the normal global Moran test global_moran_test() when assessing spatial patterns because it provides a more reliable statistical test. Monte Carlo simulation generates many random scenarios to estimate the distribution of Moran’s I under the assumption of spatial randomness, allowing for a non-parametric evaluation of statistical significance. This approach is robust, especially when the assumptions of normality may not hold, making it a more flexible and accurate method for detecting spatial patterns in real-world data.\n\n\nInterpreting Global Moran’s I Value: 1) Positive Value Indicates positive spatial autocorrelation, meaning similar values are clustered together; 2) Negative Value Indicates negative spatial autocorrelation, meaning dissimilar values are clustered together; 3) Magnitude, The closer the value is to 1 (positively) or -1 (negatively), the stronger the spatial autocorrelation.\n\n\nInterpreting P-value of GLobal Moran’s I test: P-Value &lt; α Suggests that the observed spatial pattern is unlikely to be due to random chance, and vice versa. Positive Moran’s I and significant P Indicates a significant spatial clustering of similar values in neighboring areas. Negative Moran’s I and significant P Suggests a significant spatial dispersion or segregation of dissimilar values."
  },
  {
    "objectID": "in-class/ice2.html#local-measure-of-spatial-autocorrelation",
    "href": "in-class/ice2.html#local-measure-of-spatial-autocorrelation",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "3.2 Local Measure of Spatial Autocorrelation",
    "text": "3.2 Local Measure of Spatial Autocorrelation\n\n3.2.1 Computing local Moran’s I\nThis section will compute Local Moran’s I of GDPPC at county level by using local_moran() of sfdep package. unnest() of tidyr package is used to expand a list-column containing data frames into rows and columns.\n\n\nCode\n# LISA (Local Indicator of Spatial Autocorrelation)\nlisa &lt;- wm_q %&gt;%\n  mutate(local_moran = local_moran(\n    GDPPC, nb, wt, nsim = 99),\n    .before = 1) %&gt;%\n  unnest(local_moran) # unnest is to add local_moran into individual columns. without it, it will be a list\n\n# check the output\nglimpse(lisa)\n\n\nRows: 88\nColumns: 21\n$ ii           &lt;dbl&gt; -1.468468e-03, 2.587817e-02, -1.198765e-02, 1.022468e-03,…\n$ eii          &lt;dbl&gt; 0.0017692414, 0.0064149158, -0.0374068734, -0.0000348833,…\n$ var_ii       &lt;dbl&gt; 4.179959e-04, 1.051040e-02, 1.020555e-01, 4.367565e-06, 1…\n$ z_ii         &lt;dbl&gt; -0.15836231, 0.18984794, 0.07956903, 0.50594053, 0.448752…\n$ p_ii         &lt;dbl&gt; 0.874171311, 0.849428289, 0.936580031, 0.612898396, 0.653…\n$ p_ii_sim     &lt;dbl&gt; 0.82, 0.96, 0.76, 0.64, 0.50, 0.82, 0.08, 0.08, 0.02, 0.2…\n$ p_folded_sim &lt;dbl&gt; 0.41, 0.48, 0.38, 0.32, 0.25, 0.41, 0.04, 0.04, 0.01, 0.1…\n$ skewness     &lt;dbl&gt; -0.8122108, -1.0905447, 0.8239085, 1.0401038, 1.6357304, …\n$ kurtosis     &lt;dbl&gt; 0.651875433, 1.889177462, 0.046095140, 1.613439800, 3.960…\n$ mean         &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ median       &lt;fct&gt; High-High, High-High, High-High, High-High, High-High, Hi…\n$ pysal        &lt;fct&gt; Low-High, Low-Low, High-Low, High-High, High-High, High-L…\n$ nb           &lt;nb&gt; &lt;2, 3, 4, 57, 85&gt;, &lt;1, 57, 58, 78, 85&gt;, &lt;1, 4, 5, 85&gt;, &lt;1,…\n$ wt           &lt;list&gt; &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0.2, 0.2, 0.2, 0.2, 0.2&gt;, &lt;0…\n$ NAME_2       &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"C…\n$ ID_3         &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 2…\n$ NAME_3       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ ENGTYPE_3    &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"C…\n$ County       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ GDPPC        &lt;dbl&gt; 23667, 20981, 34592, 24473, 25554, 27137, 63118, 62202, 7…\n$ geometry     &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.228…\n\n\n\nNote that there are 88 rows in the output which represent the number of County in Hunan. This implied that each county have its own statistical value, which highlight that this is a Local Moran for measuring Local Spatial Autocorrelation.\n\nOutput of local_moran: - ii: local moran statistic - eii: expectation of local moran statistic; for local_moran_perm, its the permutation sample means - var_ii: variance of local moran statistic; for local_moran_perm, its the permutation sample standard deviations - z_ii: standard deviation of local moran statistic; for local_moran_perm, its based on permutation sample means and standard deviations - p_ii: p-value of local moran statistic using pnorm(); for local_moran_perm, its using standard deviation based on permutation sample means and standard deviations - p_ii_sim: For local_moran_perm(), rank() and punif() of observed statistic rank for [0, 1] p-values using alternative= - p_folded_sim: the simulation folded [0, 0.5] range ranked p-value source - skewness: For local_moran_perm, the output of e1071::skewness() for the permutation samples underlying the standard deviates - kurtosis: For local_moran_perm, the output of e1071::kurtosis() for the permutation samples underlying the standard deviates.\n\n\n3.2.2 Visualizing The Moran’s I Result\n::: panel-tabset #### ii\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\n\n\n\n\n\np-value\nThe following plot customize the map using common statistically significant alpha value threshold.\n\n\nCode\ntmap_mode(\"plot\")\n\n# Specify breaks and labels for classification\nbreaks &lt;- c(0, 0.01, 0.05, 0.1, 1.01)\nlabels &lt;- c(\"Significant at 1%\", \"Significant at 5%\", \"Significant at 10%\", \"Not Significant\")\n\ntm_shape(lisa) +\n  tm_fill(\"p_ii_sim\", breaks = breaks, labels = labels) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8, legend.outside = TRUE,\n            legend.outside.position = 'right')\n\n\n\n\n\n\n\nii and p-value\n\n\nCode\ntmap_mode(\"plot\")\nmap1 &lt;- tm_shape(lisa) +\n  tm_fill(\"ii\") + \n  tm_borders(alpha = 0.5) +\n  tm_view(set.zoom.limits = c(6,8)) +\n  tm_layout(main.title = \"local Moran's I of GDPPC\",\n            main.title.size = 0.8)\n\nmap2 &lt;- tm_shape(lisa) +\n  tm_fill(\"p_ii\",\n          breaks = c(0, 0.001, 0.01, 0.05, 1),\n              labels = c(\"0.001\", \"0.01\", \"0.05\", \"Not sig\")) + \n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"p-value of local Moran's I\",\n            main.title.size = 0.8)\n\ntmap_arrange(map1, map2, ncol = 2)\n\n\n\n\n\n\n\nLISA map\nLocal Indicators of Spatial Association (LISA) map is a categorical map showing outliers and clusters. There are two types of outliers namely: High-Low and Low-High outliers. Likewise, there are two type of clusters namely: High-High and Low-Low clusters. In fact, LISA map is an interpreted map by combining local Moran’s I of geographical areas and their respective p-values.\nIn lisa sf data.frame, we can find three fields contain the LISA categories. They are mean, median and pysal. In general, classification in mean will be used as shown in the code chunk below.\n\n\n\nCode\n# Filter the 'lisa' data frame to include only observations where the p-value ('p_ii') is less than 0.05.\nlisa_sig &lt;- lisa  %&gt;%\n  filter(p_ii &lt; 0.05)\n# Set tmap mode to \"plot\" for plotting maps.\ntmap_mode(\"plot\") \n# Create a map using the 'lisa' data frame.\ntm_shape(lisa) +\n  tm_polygons() + # Add polygon (geographical shape) layer to the map.\n  tm_borders(alpha = 0.5) + # Add borders to the polygons with a specified level of transparency.\n# Create another layer on the map using the filtered 'lisa_sig' data frame.\ntm_shape(lisa_sig) +\n  tm_fill(\"mean\") +  # Fill the polygons with color based on the 'mean' variable.\n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "in-class/ice2.html#creating-a-time-series-cube",
    "href": "in-class/ice2.html#creating-a-time-series-cube",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "5.1 Creating a Time Series Cube",
    "text": "5.1 Creating a Time Series Cube\nA spacetime cube, in the context of geospatial analytics, is a data structure where each location has a value for every time index, essentially representing a regular time-series for each location. In ESRI’s terminology, the fundamental component of a spacetime cube is a “bin,” which is a unique combination of a location and time index. Collections of these locations for each time index are termed “time slices,” and the set of bins at each time index for a location form a “bin time-series”. For more details on using sfdep package to create spatio-temporal cube visit this link\nin the following code chunks, these function is used: - spacetime() of sfdep to create an spacetime cube. - is_spacetime_cube() of sfdep package to verify if GDPPC_st is indeed an space-time cube object.\n\n\nCode\n# Create a spacetime object named GDPPC_st using the spacetime function\nGDPPC_st &lt;- spacetime(GDPPC, hunan,\n                      .loc_col = \"County\",\n                      .time_col = \"Year\")\n\n# verify that it is space time cube\nprint(is_spacetime_cube(GDPPC_st))\n\n\n[1] TRUE\n\n\nCode\n# Display a summary of the spacetime object\nprint(glimpse(GDPPC_st))\n\n\nRows: 1,496\nColumns: 3\n$ Year   &lt;dbl&gt; 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County &lt;chr&gt; \"Longshan\", \"Changsha\", \"Wangcheng\", \"Ningxiang\", \"Liuyang\", \"Z…\n$ GDPPC  &lt;dbl&gt; 3469, 24612, 14659, 11687, 13406, 8546, 10944, 8040, 7383, 1168…\n# A tibble: 1,496 × 3\n    Year County    GDPPC\n * &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1  2005 Longshan   3469\n 2  2005 Changsha  24612\n 3  2005 Wangcheng 14659\n 4  2005 Ningxiang 11687\n 5  2005 Liuyang   13406\n 6  2005 Zhuzhou    8546\n 7  2005 You       10944\n 8  2005 Chaling    8040\n 9  2005 Yanling    7383\n10  2005 Liling    11688\n# ℹ 1,486 more rows\n\n\nThe TRUE return confirms that GDPPC_st object is indeed an time-space cube."
  },
  {
    "objectID": "in-class/ice2.html#computing-gi",
    "href": "in-class/ice2.html#computing-gi",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "5.2 Computing Gi*",
    "text": "5.2 Computing Gi*\nNext, compute the local Gi* statistics. To do it, derive inverse distance weights first.\n\n\nCode\n# Create a neighbors and weights object named DPPC_nb using the GDPPC_st spacetime object\nGDPPC_nb &lt;- GDPPC_st %&gt;%\n  # Activate the spatial geometry component of the spacetime object, allowing spatial operations to be performed\n  activate(\"geometry\") %&gt;%\n  # Add a new variable 'nb' representing neighbors and 'wt' representing weights\n  mutate(nb = include_self(st_contiguity(geometry)),\n         wt = st_inverse_distance(nb, geometry,\n                                  scale = 1,\n                                  alpha = 1),\n         .before = 1) %&gt;%\n  # Set the neighbors using the 'nb' variable\n  set_nbs(\"nb\") %&gt;%\n  # Set the weights using the 'wt' variable\n  set_wts(\"wt\")\n\n# Display a summary of the neighbors and weights object\nglimpse(GDPPC_nb)\n\n\nRows: 1,496\nColumns: 5\n$ Year   &lt;dbl&gt; 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"Liuya…\n$ GDPPC  &lt;dbl&gt; 8184, 6560, 9956, 8394, 8850, 9244, 13406, 11687, 14659, 7423, …\n$ nb     &lt;list&gt; &lt;1, 2, 3, 4, 57, 85&gt;, &lt;1, 2, 57, 58, 78, 85&gt;, &lt;1, 3, 4, 5, 85&gt;…\n$ wt     &lt;list&gt; &lt;0.00000000, 0.01526149, 0.03515537, 0.02176677, 0.02836978, 0…\n\n\n\n\nCode\nGDPPC_st\n\n\n# A tibble: 1,496 × 3\n    Year County    GDPPC\n * &lt;dbl&gt; &lt;chr&gt;     &lt;dbl&gt;\n 1  2005 Longshan   3469\n 2  2005 Changsha  24612\n 3  2005 Wangcheng 14659\n 4  2005 Ningxiang 11687\n 5  2005 Liuyang   13406\n 6  2005 Zhuzhou    8546\n 7  2005 You       10944\n 8  2005 Chaling    8040\n 9  2005 Yanling    7383\n10  2005 Liling    11688\n# ℹ 1,486 more rows\n\n\nCompute Gi* using the following code\n\n\nCode\ngi_stars &lt;- GDPPC_nb %&gt;% \n  group_by(Year) %&gt;% \n  mutate(gi_star = local_gstar_perm(\n    GDPPC, nb, wt)) %&gt;% \n  tidyr::unnest(gi_star)\n\n# check the output\nglimpse(gi_stars)\n\n\nRows: 1,496\nColumns: 13\nGroups: Year [17]\n$ Year         &lt;dbl&gt; 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 2005, 200…\n$ County       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", …\n$ GDPPC        &lt;dbl&gt; 8184, 6560, 9956, 8394, 8850, 9244, 13406, 11687, 14659, …\n$ nb           &lt;list&gt; &lt;1, 2, 3, 4, 57, 85&gt;, &lt;1, 2, 57, 58, 78, 85&gt;, &lt;1, 3, 4, …\n$ wt           &lt;list&gt; &lt;0.00000000, 0.01526149, 0.03515537, 0.02176677, 0.02836…\n$ gi_star      &lt;dbl&gt; 0.39812392, -0.23690950, 1.05308649, 0.96565566, 1.047539…\n$ e_gi         &lt;dbl&gt; 0.011503828, 0.010904067, 0.012643127, 0.011729795, 0.011…\n$ var_gi       &lt;dbl&gt; 2.689913e-06, 2.640805e-06, 3.327364e-06, 3.235001e-06, 3…\n$ p_value      &lt;dbl&gt; 0.382095046, 0.001990885, 0.507080740, 0.920309942, 0.884…\n$ p_sim        &lt;dbl&gt; 0.7023908659, 0.9984115046, 0.6120981684, 0.3574108152, 0…\n$ p_folded_sim &lt;dbl&gt; 0.608, 0.892, 0.528, 0.308, 0.352, 0.920, 0.008, 0.396, 0…\n$ skewness     &lt;dbl&gt; 0.304, 0.446, 0.264, 0.154, 0.176, 0.460, 0.004, 0.198, 0…\n$ kurtosis     &lt;dbl&gt; 0.8925173, 0.8204179, 0.9285558, 1.1852446, 0.8742758, 0.…"
  },
  {
    "objectID": "in-class/ice2.html#mann-kendall-test",
    "href": "in-class/ice2.html#mann-kendall-test",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "5.3 Mann-Kendall Test",
    "text": "5.3 Mann-Kendall Test\nUsing Gi* measures, Mann-Kendall test can be run to valuate each location for a trend\n\n\nCode\ncbg &lt;- gi_stars %&gt;% \n  ungroup() %&gt;% \n  filter(County == \"Changsha\") |&gt; \n  select(County, Year, gi_star)\n\n# check the output\nglimpse(cbg)\n\n\nRows: 17\nColumns: 3\n$ County  &lt;chr&gt; \"Changsha\", \"Changsha\", \"Changsha\", \"Changsha\", \"Changsha\", \"C…\n$ Year    &lt;dbl&gt; 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 20…\n$ gi_star &lt;dbl&gt; 5.028300, 5.169201, 5.295889, 5.603954, 6.278886, 5.935746, 5.…\n\n\nplot the result\n\n\nCode\nggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\n\n\n\n\n\nThe graph shows a time series of the standardized Gi* statistic (gi_star) for Changsha county in Hunan, which is a measure of local spatial association for GDP per capita over time. The trend indicates fluctuations with peaks and troughs, suggesting periods of relatively high and low localized economic performance when compared to the overall spatial-temporal dataset.\n\nAlternatively, create an interactive plot using ggplotly() of plotly package.\n\n\nCode\np &lt;- ggplot(data = cbg, \n       aes(x = Year, \n           y = gi_star)) +\n  geom_line() +\n  theme_light()\n\nggplotly(p)\n\n\n\n\n\n\n\n\nCode\ncbg %&gt;%\n  # Summarize the data using the Mann-Kendall test and store the results in a list named 'mk'\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;% \n  # Unnest the 'mk' list and widen it to create separate columns for each element\n  tidyr::unnest_wider(mk)\n\n\n# A tibble: 1 × 5\n    tau      sl     S     D  varS\n  &lt;dbl&gt;   &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 0.485 0.00742    66  136.  589.\n\n\nIn the above result, sl is the p-value. This result tells us that there is a slight upward but insignificant trend.\nWe can replicate this for each location by using group_by() of dplyr package.\n\n\nCode\nehsa &lt;- gi_stars %&gt;%\n  # Group the data by 'County'\n  group_by(County) %&gt;%\n  # Summarize the data within each group using the Mann-Kendall test and store the results in a list named 'mk'\n  summarise(mk = list(\n    unclass(\n      Kendall::MannKendall(gi_star)))) %&gt;%\n  # Unnest the 'mk' list and widen it to create separate columns for each element\n  tidyr::unnest_wider(mk)\n\n# check the output\nglimpse(ehsa)\n\n\nRows: 88\nColumns: 6\n$ County &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changning\",…\n$ tau    &lt;dbl&gt; 0.19117649, -0.29411769, 0.00000000, -0.69117653, -0.08823530, …\n$ sl     &lt;dbl&gt; 3.030965e-01, 1.081613e-01, 1.000000e+00, 1.276678e-04, 6.50463…\n$ S      &lt;dbl&gt; 26, -40, 0, -94, -12, -102, 66, -112, -16, 14, -6, -112, -104, …\n$ D      &lt;dbl&gt; 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136, 136…\n$ varS   &lt;dbl&gt; 589.3333, 589.3333, 589.3333, 589.3333, 589.3333, 589.3333, 589…"
  },
  {
    "objectID": "in-class/ice2.html#arrange-to-show-significant-emerging-hotcold-spots",
    "href": "in-class/ice2.html#arrange-to-show-significant-emerging-hotcold-spots",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "5.4 Arrange to show significant emerging hot/cold spots",
    "text": "5.4 Arrange to show significant emerging hot/cold spots\n\n\nCode\nemerging &lt;- ehsa %&gt;% \n  # Arrange the data in ascending order based on the 'sl' column and the absolute value of 'tau' column\n  arrange(sl, abs(tau)) %&gt;%\n  # Extract the top 5 rows after sorting\n  slice(1:5)\n\n# check the output\nglimpse(emerging)\n\n\nRows: 5\nColumns: 6\n$ County &lt;chr&gt; \"Shuangfeng\", \"Xiangtan\", \"Xiangxiang\", \"Chengbu\", \"Dongan\"\n$ tau    &lt;dbl&gt; 0.8676472, 0.8676472, 0.8676472, -0.8235295, -0.8235295\n$ sl     &lt;dbl&gt; 1.430511e-06, 1.430511e-06, 1.430511e-06, 4.822108e-06, 4.82210…\n$ S      &lt;dbl&gt; 118, 118, 118, -112, -112\n$ D      &lt;dbl&gt; 136, 136, 136, 136, 136\n$ varS   &lt;dbl&gt; 589.3333, 589.3333, 589.3333, 589.3333, 589.3333"
  },
  {
    "objectID": "in-class/ice2.html#performing-emerging-hotspot-analysis",
    "href": "in-class/ice2.html#performing-emerging-hotspot-analysis",
    "title": "In-class Exercise 2 - sfdep for Spatial Weights, GLSA & EHSA",
    "section": "5.5 Performing Emerging Hotspot Analysis",
    "text": "5.5 Performing Emerging Hotspot Analysis\nLastly, we will perform EHSA analysis by using emerging_hotspot_analysis() of sfdep package. It takes a spacetime object x (i.e. GDPPC_st), and the quoted name of the variable of interest (i.e. GDPPC) for .var argument. The k argument is used to specify the number of time lags which is set to 1 by default. Lastly, nsim map numbers of simulation to be performed.\n\n\nCode\nehsa &lt;- emerging_hotspot_analysis(\n  x = GDPPC_st,     # Input data: Spacetime object representing data with spatial and temporal dimensions\n  .var = \"GDPPC\",   # Variable of interest for the analysis is \"GDPPC\"\n  k = 1,             # number of time lags to include in the neighborhood for calculating the local Gi*\n  nsim = 99         # determining the number of simulations to calculate simulated p-value for logal Gi*\n)\n\n# check the output\nglimpse(ehsa)\n\n\nRows: 88\nColumns: 4\n$ location       &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\"…\n$ tau            &lt;dbl&gt; 0.22058827, 0.14705884, 0.44117653, -0.82352948, 0.1176…\n$ p_value        &lt;dbl&gt; 2.322488e-01, 4.338268e-01, 1.508367e-02, 4.822108e-06,…\n$ classification &lt;chr&gt; \"sporadic coldspot\", \"sporadic hotspot\", \"oscilating ho…\n\n\nClassifications:\n\nConsecutive Hotspot: A consecutive hotspot in EHSA refers to a spatial and temporal pattern where a specific area consistently exhibits high values over consecutive time periods.\nNo Pattern Detected: When EHSA identifies “no pattern detected,” it indicates that there is no discernible consistent spatial or temporal trend in the analyzed data.\nOscillating Coldspot: An oscillating coldspot in EHSA describes a location that alternates between periods of exhibiting lower values and periods of relative inactivity.\nOscillating Hotspot: An oscillating hotspot in EHSA characterizes a location that alternates between periods of exhibiting higher values and periods of relative inactivity.\nSporadic Coldspot: A sporadic coldspot in EHSA refers to a location that irregularly experiences periods of lower values without a clear, sustained pattern.\nSporadic Hotspot: A sporadic hotspot in EHSA describes a location that irregularly experiences periods of higher values without a clear, sustained pattern.\n\nthe next panel will visualise the result:\n\nDistribution of EHSA classesGeographic EHSA classes distribution\n\n\n\n\nCode\nggplot(data = ehsa,\n       aes(x = classification)) +\n  geom_bar()\n\n\n\n\n\nFigure above shows that sporadic cold spots class has the highest numbers of county.\n\n\n\n\nCode\n# join the dataset\nhunan_ehsa &lt;- hunan %&gt;%\n  left_join(ehsa,\n            by = join_by(County == location))\n\n# plot the map\nehsa_sig &lt;- hunan_ehsa  %&gt;%\n  filter(p_value &lt; 0.05)\ntmap_mode(\"plot\")\ntm_shape(hunan_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)"
  },
  {
    "objectID": "hands-on/hoe4.html",
    "href": "hands-on/hoe4.html",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "",
    "text": "Geographically Weighted Regression Illustration"
  },
  {
    "objectID": "hands-on/hoe4.html#overview",
    "href": "hands-on/hoe4.html#overview",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "1 Overview",
    "text": "1 Overview\nGeographically Weighted Regression (GWR) is a statistical method that considers factors that vary from place to place (like climate, demographics, or physical environment) and models how these factors relate to a specific outcome (dependent variable). This hands-on session will teach you how to create hedonic pricing models using GWR. The focus is on resale prices of condominiums in 2015, with independent variables categorized as structural and locational."
  },
  {
    "objectID": "hands-on/hoe4.html#the-data",
    "href": "hands-on/hoe4.html#the-data",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "2 The Data",
    "text": "2 The Data\nTwo datasets will be used:\n\nURA Master Plan subzone boundaries in shapefile format (MP14_SUBZONE_WEB_PL)\nCondo resale data for 2015 in CSV format (condo_resale_2015.csv)"
  },
  {
    "objectID": "hands-on/hoe4.html#getting-started",
    "href": "hands-on/hoe4.html#getting-started",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "3 Getting Started",
    "text": "3 Getting Started\nBefore diving in, it’s crucial to install the required R packages and activate them in the R environment.\n\n\nCode\npacman::p_load(olsrr, corrplot, ggpubr, sf, spdep, GWmodel, tmap, tidyverse, gtsummary)\n\n\n\n\n\n\n\n\nPackages Explanation\n\n\n\n\n\n\nolsrr: A package designed for tools that assist in the model building and exploratory analysis associated with ordinary least squares regression.\ncorrplot: A graphical display of a correlation matrix, confidence interval, or general matrix-like visualization to assist with interpretative analysis.\nggpubr: An ‘ggplot2’ extension that simplifies creating beautiful graphics for publication, offering an easy-to-use set of tools for descriptive statistics and a rich array of plots.\nsf: This package provides simple and straightforward ways to handle and manipulate spatial vector data in R, integrating tightly with the ‘tidyverse’ and ‘ggplot2’.\nspdep: Spatial dependence: weighting schemes, statistics, and models; a collection of functions to create spatial weights matrix objects from polygon contiguities, from point patterns by distance and tessellations, for summarizing these objects, and for permitting their use in spatial data models.\nGWmodel: An R package for fitting Geographically Weighted Models, which are spatial statistical models that allow local rather than global parameters to be estimated.\ntmap: An R library for creating thematic maps, which are designed to represent spatial variation of a subject using statistical data.\ntidyverse: An opinionated collection of R packages designed for data science tasks that make it easy to import, tidy, transform, and visualize data.\ngtsummary: This package provides an elegant and flexible way to create publication-ready analytical and summary tables using the ‘gt’ package, integrating with ‘broom’ and ‘tidyverse’ workflows."
  },
  {
    "objectID": "hands-on/hoe4.html#a-brief-note-on-gwmodel",
    "href": "hands-on/hoe4.html#a-brief-note-on-gwmodel",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "4 A Brief Note on GWmodel",
    "text": "4 A Brief Note on GWmodel\nThe GWmodel package offers a set of localized spatial statistical methods. These include GW summary statistics, GW principal components analysis, GW discriminant analysis, and various forms of GW regression, some of which are robust (resistant to outliers). Typically, the results or parameters from GWmodel are visually mapped, serving as an insightful exploration tool. This often comes before or guides more traditional or advanced statistical analyses."
  },
  {
    "objectID": "hands-on/hoe4.html#geospatial-data-wrangling",
    "href": "hands-on/hoe4.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "5 Geospatial Data Wrangling",
    "text": "5 Geospatial Data Wrangling\n\nImporting Geospatial Data\nIn this practical exercise, we’ll be using geospatial data named MP14_SUBZONE_WEB_PL. It’s in ESRI shapefile format and represents URA Master Plan 2014’s planning subzone boundaries. These geographic boundaries are depicted using polygon features, and the GIS data uses the svy21 projected coordinate system.\nThe code snippet below demonstrates how to import the MP14_SUBZONE_WEB_PL shapefile using the st_read() function from the sf package.\n\n\nCode\nmpsz = st_read(dsn = \"../data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nThe report above indicates that the R object containing the imported shapefile is named mpsz, and it’s a simple feature object with a geometry type of multipolygon. It’s important to note that the mpsz object lacks EPSG information.\n\n\nUpdating Coordinate System Information\nThe following code snippet ensures that the recently imported mpsz is updated with the correct ESPG code, which is 3414.\n\n\nCode\nmpsz_svy21 &lt;- st_transform(mpsz, 3414)\n\n\nOnce the projection metadata is transformed, you can check the projection of the updated mpsz_svy21 using st_crs() from the sf package.\nThe code below will be used to check the updated mpsz_svy21.\n\n\nCode\nst_crs(mpsz_svy21)\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\nNow, you’ll see that the EPSG code is listed as 3414.\nNext, to see the full extent of mpsz_svy21, you can use st_bbox() from the sf package.\n\n\nCode\nst_bbox(mpsz_svy21) #view extent\n\n\n     xmin      ymin      xmax      ymax \n 2667.538 15748.721 56396.440 50256.334 \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_transform from sf package is used to transform the coordinate reference system (CRS) of a spatial object. In the code, mpsz is transformed to CRS 3414.\nst_crs from sf package retrieves the CRS information of a spatial object. Here, it is used to check the CRS of the transformed mpsz_svy21.\nst_bbox from sf package computes the bounding box of a spatial object. The code uses it to view the extent of mpsz_svy21.\nThe transformation to CRS 3414 and subsequent checking of CRS and bounding box provide important spatial information about the dataset, which is essential in geospatial analyses."
  },
  {
    "objectID": "hands-on/hoe4.html#aspatial-data-wrangling",
    "href": "hands-on/hoe4.html#aspatial-data-wrangling",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "6 Aspatial Data Wrangling",
    "text": "6 Aspatial Data Wrangling\n\nImporting Aspatial Data\nThe condo_resale_2015 data comes in CSV format. The code below uses the read_csv() function from the readr package to bring condo_resale_2015 into R, and it becomes a tibble data frame named condo_resale.\n\n\nCode\ncondo_resale = read_csv(\"../data/aspatial/Condo_resale_2015.csv\")\n\n\nAfter importing the data, it’s essential to check if everything is in order. The code snippets below, using glimpse(), help you understand the structure of the data.\n\n\nCode\nglimpse(condo_resale)\n\n\nRows: 1,436\nColumns: 23\n$ LATITUDE             &lt;dbl&gt; 1.287145, 1.328698, 1.313727, 1.308563, 1.321437,…\n$ LONGITUDE            &lt;dbl&gt; 103.7802, 103.8123, 103.7971, 103.8247, 103.9505,…\n$ POSTCODE             &lt;dbl&gt; 118635, 288420, 267833, 258380, 467169, 466472, 3…\n$ SELLING_PRICE        &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1320…\n$ AREA_SQM             &lt;dbl&gt; 309, 290, 248, 127, 145, 139, 218, 141, 165, 168,…\n$ AGE                  &lt;dbl&gt; 30, 32, 33, 7, 28, 22, 24, 24, 27, 31, 17, 22, 6,…\n$ PROX_CBD             &lt;dbl&gt; 7.941259, 6.609797, 6.898000, 4.038861, 11.783402…\n$ PROX_CHILDCARE       &lt;dbl&gt; 0.16597932, 0.28027246, 0.42922669, 0.39473543, 0…\n$ PROX_ELDERLYCARE     &lt;dbl&gt; 2.5198118, 1.9333338, 0.5021395, 1.9910316, 1.121…\n$ PROX_URA_GROWTH_AREA &lt;dbl&gt; 6.618741, 7.505109, 6.463887, 4.906512, 6.410632,…\n$ PROX_HAWKER_MARKET   &lt;dbl&gt; 1.76542207, 0.54507614, 0.37789301, 1.68259969, 0…\n$ PROX_KINDERGARTEN    &lt;dbl&gt; 0.05835552, 0.61592412, 0.14120309, 0.38200076, 0…\n$ PROX_MRT             &lt;dbl&gt; 0.5607188, 0.6584461, 0.3053433, 0.6910183, 0.528…\n$ PROX_PARK            &lt;dbl&gt; 1.1710446, 0.1992269, 0.2779886, 0.9832843, 0.116…\n$ PROX_PRIMARY_SCH     &lt;dbl&gt; 1.6340256, 0.9747834, 1.4715016, 1.4546324, 0.709…\n$ PROX_TOP_PRIMARY_SCH &lt;dbl&gt; 3.3273195, 0.9747834, 1.4715016, 2.3006394, 0.709…\n$ PROX_SHOPPING_MALL   &lt;dbl&gt; 2.2102717, 2.9374279, 1.2256850, 0.3525671, 1.307…\n$ PROX_SUPERMARKET     &lt;dbl&gt; 0.9103958, 0.5900617, 0.4135583, 0.4162219, 0.581…\n$ PROX_BUS_STOP        &lt;dbl&gt; 0.10336166, 0.28673408, 0.28504777, 0.29872340, 0…\n$ NO_Of_UNITS          &lt;dbl&gt; 18, 20, 27, 30, 30, 31, 32, 32, 32, 32, 34, 34, 3…\n$ FAMILY_FRIENDLY      &lt;dbl&gt; 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0…\n$ FREEHOLD             &lt;dbl&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1…\n$ LEASEHOLD_99YR       &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n\n\n\n\nCode\nhead(condo_resale$LONGITUDE) #view data in XCOORD column\n\n\n[1] 103.7802 103.8123 103.7971 103.8247 103.9505 103.9386\n\n\nCode\nhead(condo_resale$LATITUDE) #view data in YCOORD column\n\n\n[1] 1.287145 1.328698 1.313727 1.308563 1.321437 1.314198\n\n\nNext, using the base R function summary(), you can get summary statistics for the cond_resale tibble data frame.\n\n\nCode\nsummary(condo_resale)\n\n\n    LATITUDE       LONGITUDE        POSTCODE      SELLING_PRICE     \n Min.   :1.240   Min.   :103.7   Min.   : 18965   Min.   :  540000  \n 1st Qu.:1.309   1st Qu.:103.8   1st Qu.:259849   1st Qu.: 1100000  \n Median :1.328   Median :103.8   Median :469298   Median : 1383222  \n Mean   :1.334   Mean   :103.8   Mean   :440439   Mean   : 1751211  \n 3rd Qu.:1.357   3rd Qu.:103.9   3rd Qu.:589486   3rd Qu.: 1950000  \n Max.   :1.454   Max.   :104.0   Max.   :828833   Max.   :18000000  \n    AREA_SQM          AGE           PROX_CBD       PROX_CHILDCARE    \n Min.   : 34.0   Min.   : 0.00   Min.   : 0.3869   Min.   :0.004927  \n 1st Qu.:103.0   1st Qu.: 5.00   1st Qu.: 5.5574   1st Qu.:0.174481  \n Median :121.0   Median :11.00   Median : 9.3567   Median :0.258135  \n Mean   :136.5   Mean   :12.14   Mean   : 9.3254   Mean   :0.326313  \n 3rd Qu.:156.0   3rd Qu.:18.00   3rd Qu.:12.6661   3rd Qu.:0.368293  \n Max.   :619.0   Max.   :37.00   Max.   :19.1804   Max.   :3.465726  \n PROX_ELDERLYCARE  PROX_URA_GROWTH_AREA PROX_HAWKER_MARKET PROX_KINDERGARTEN \n Min.   :0.05451   Min.   :0.2145       Min.   :0.05182    Min.   :0.004927  \n 1st Qu.:0.61254   1st Qu.:3.1643       1st Qu.:0.55245    1st Qu.:0.276345  \n Median :0.94179   Median :4.6186       Median :0.90842    Median :0.413385  \n Mean   :1.05351   Mean   :4.5981       Mean   :1.27987    Mean   :0.458903  \n 3rd Qu.:1.35122   3rd Qu.:5.7550       3rd Qu.:1.68578    3rd Qu.:0.578474  \n Max.   :3.94916   Max.   :9.1554       Max.   :5.37435    Max.   :2.229045  \n    PROX_MRT         PROX_PARK       PROX_PRIMARY_SCH  PROX_TOP_PRIMARY_SCH\n Min.   :0.05278   Min.   :0.02906   Min.   :0.07711   Min.   :0.07711     \n 1st Qu.:0.34646   1st Qu.:0.26211   1st Qu.:0.44024   1st Qu.:1.34451     \n Median :0.57430   Median :0.39926   Median :0.63505   Median :1.88213     \n Mean   :0.67316   Mean   :0.49802   Mean   :0.75471   Mean   :2.27347     \n 3rd Qu.:0.84844   3rd Qu.:0.65592   3rd Qu.:0.95104   3rd Qu.:2.90954     \n Max.   :3.48037   Max.   :2.16105   Max.   :3.92899   Max.   :6.74819     \n PROX_SHOPPING_MALL PROX_SUPERMARKET PROX_BUS_STOP       NO_Of_UNITS    \n Min.   :0.0000     Min.   :0.0000   Min.   :0.001595   Min.   :  18.0  \n 1st Qu.:0.5258     1st Qu.:0.3695   1st Qu.:0.098356   1st Qu.: 188.8  \n Median :0.9357     Median :0.5687   Median :0.151710   Median : 360.0  \n Mean   :1.0455     Mean   :0.6141   Mean   :0.193974   Mean   : 409.2  \n 3rd Qu.:1.3994     3rd Qu.:0.7862   3rd Qu.:0.220466   3rd Qu.: 590.0  \n Max.   :3.4774     Max.   :2.2441   Max.   :2.476639   Max.   :1703.0  \n FAMILY_FRIENDLY     FREEHOLD      LEASEHOLD_99YR  \n Min.   :0.0000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.0000   1st Qu.:0.0000   1st Qu.:0.0000  \n Median :0.0000   Median :0.0000   Median :0.0000  \n Mean   :0.4868   Mean   :0.4227   Mean   :0.4882  \n 3rd Qu.:1.0000   3rd Qu.:1.0000   3rd Qu.:1.0000  \n Max.   :1.0000   Max.   :1.0000   Max.   :1.0000  \n\n\n\n\nTransforming Aspatial Data into a Spatial Format\nCurrently, condo_resale is a tibble data frame without spatial information. Let’s convert it into a sf object. The code below transforms condo_resale into a simple feature data frame using st_as_sf() from the sf package.\n\n\nCode\ncondo_resale.sf &lt;- st_as_sf(condo_resale,\n                            coords = c(\"LONGITUDE\", \"LATITUDE\"),\n                            crs=4326) %&gt;%\n  st_transform(crs=3414)\n\n\nNote that st_transform() from the sf package is used to change the coordinates from wgs84 (i.e., crs:4326) to svy21 (i.e., crs=3414).\nNext, using head(), you can check the content of condo_resale.sf.\n\n\nCode\nhead(condo_resale.sf)\n\n\nSimple feature collection with 6 features and 21 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 22085.12 ymin: 29951.54 xmax: 41042.56 ymax: 34546.2\nProjected CRS: SVY21 / Singapore TM\n# A tibble: 6 × 22\n  POSTCODE SELLING_PRICE AREA_SQM   AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE\n     &lt;dbl&gt;         &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;    &lt;dbl&gt;          &lt;dbl&gt;            &lt;dbl&gt;\n1   118635       3000000      309    30     7.94          0.166            2.52 \n2   288420       3880000      290    32     6.61          0.280            1.93 \n3   267833       3325000      248    33     6.90          0.429            0.502\n4   258380       4250000      127     7     4.04          0.395            1.99 \n5   467169       1400000      145    28    11.8           0.119            1.12 \n6   466472       1320000      139    22    10.3           0.125            0.789\n# ℹ 15 more variables: PROX_URA_GROWTH_AREA &lt;dbl&gt;, PROX_HAWKER_MARKET &lt;dbl&gt;,\n#   PROX_KINDERGARTEN &lt;dbl&gt;, PROX_MRT &lt;dbl&gt;, PROX_PARK &lt;dbl&gt;,\n#   PROX_PRIMARY_SCH &lt;dbl&gt;, PROX_TOP_PRIMARY_SCH &lt;dbl&gt;,\n#   PROX_SHOPPING_MALL &lt;dbl&gt;, PROX_SUPERMARKET &lt;dbl&gt;, PROX_BUS_STOP &lt;dbl&gt;,\n#   NO_Of_UNITS &lt;dbl&gt;, FAMILY_FRIENDLY &lt;dbl&gt;, FREEHOLD &lt;dbl&gt;,\n#   LEASEHOLD_99YR &lt;dbl&gt;, geometry &lt;POINT [m]&gt;\n\n\nThe output now represents a point feature data frame."
  },
  {
    "objectID": "hands-on/hoe4.html#exploratory-data-analysis",
    "href": "hands-on/hoe4.html#exploratory-data-analysis",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "7 Exploratory Data Analysis",
    "text": "7 Exploratory Data Analysis\nIn this part, you’ll discover how to use visual tools from the ggplot2 package for Exploratory Data Analysis (EDA).\n\nSelling Price DistributionLog Selling Price DistributionMultiple Histogram Plots for Variable DistributionCreating an Interactive Map\n\n\nTo understand the distribution of SELLING_PRICE, check out the code below. It generates a histogram:\n\n\nCode\nggplot(data=condo_resale.sf, aes(x=`SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nThe graph above shows a right-skewed distribution, indicating more condos were sold at relatively lower prices.\n\n\nStatistically, we can normalize the skewed distribution by applying a log transformation. The following code creates a new variable, LOG_SELLING_PRICE, using the log transformation on SELLING_PRICE with mutate() from the dplyr package.\n\n\nCode\ncondo_resale.sf &lt;- condo_resale.sf %&gt;%\n  mutate(`LOG_SELLING_PRICE` = log(SELLING_PRICE))\n\n\nNow, you can plot LOG_SELLING_PRICE using the code below.\n\n\nCode\nggplot(data=condo_resale.sf, aes(x=`LOG_SELLING_PRICE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\n\n\n\n\nNotice that the distribution is less skewed after the transformation.\n\n\nIn this part, you’ll learn to create a set of small multiple histograms (also called trellis plots) using ggarrange() from the ggpubr package.\nThe code below generates 12 histograms and organizes them into a 3-column by 4-row layout using ggarrange().\n\n\nCode\nAREA_SQM &lt;- ggplot(data=condo_resale.sf, aes(x= `AREA_SQM`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nAGE &lt;- ggplot(data=condo_resale.sf, aes(x= `AGE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CBD &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CBD`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_CHILDCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_CHILDCARE`)) + \n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_ELDERLYCARE &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_ELDERLYCARE`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_URA_GROWTH_AREA &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_URA_GROWTH_AREA`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_HAWKER_MARKET &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_HAWKER_MARKET`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_KINDERGARTEN &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_KINDERGARTEN`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_MRT &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_MRT`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PARK &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PARK`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, aes(x= `PROX_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nPROX_TOP_PRIMARY_SCH &lt;- ggplot(data=condo_resale.sf, \n                               aes(x= `PROX_TOP_PRIMARY_SCH`)) +\n  geom_histogram(bins=20, color=\"black\", fill=\"light blue\")\n\nggarrange(AREA_SQM, AGE, PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, \n          PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN, PROX_MRT,\n          PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH,  \n          ncol = 3, nrow = 4)\n\n\n\n\n\n\n\nFinally, let’s visualize the geographic distribution of condominium resale prices in Singapore. We’ll use the tmap package for this.\n\n\nCode\n# activate interactive mode\ntmap_mode(\"plot\")\n\n# correct the invalid geometry\nfixed_geom &lt;- sf::st_make_valid(mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ])\n\n# create the map\ntm_shape(fixed_geom)+\n  tm_polygons() +\ntm_shape(condo_resale.sf) +  \n  tm_dots(col = \"SELLING_PRICE\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\nNote that we’re using tm_dots() instead of tm_bubbles().\nThe set.zoom.limits parameter in tm_view() sets the minimum and maximum zoom level to 11 and 14, respectively.\nBefore moving on to the next section, switch R display back to plot mode using the code below:\n\n\nCode\ntmap_mode(\"plot\")"
  },
  {
    "objectID": "hands-on/hoe4.html#building-hedonic-pricing-models-for-condos-in-r",
    "href": "hands-on/hoe4.html#building-hedonic-pricing-models-for-condos-in-r",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "8 Building Hedonic Pricing Models for Condos in R",
    "text": "8 Building Hedonic Pricing Models for Condos in R\nIn this part, you’ll understand how to create hedonic pricing models for resale condominiums using the lm() function in the R base.\n\nUsing Simple Linear Regression\nFirst, we’ll make a simple linear regression model. We’ll use SELLING_PRICE as the result we want to predict and AREA_SQM as the factor we think influences it.\n\n\nCode\ncondo.slr &lt;- lm(formula=SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\n\nThe lm() function gives us a result object, and we can get more details using functions like summary():\n\n\nCode\nsummary(condo.slr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM, data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3695815  -391764   -87517   258900 13503875 \n\nCoefficients:\n             Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept) -258121.1    63517.2  -4.064 5.09e-05 ***\nAREA_SQM      14719.0      428.1  34.381  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 942700 on 1434 degrees of freedom\nMultiple R-squared:  0.4518,    Adjusted R-squared:  0.4515 \nF-statistic:  1182 on 1 and 1434 DF,  p-value: &lt; 2.2e-16\n\n\nThe report shows that the SELLING_PRICE can be estimated using the formula:\n      *y = -258121.1 + 14719x1*\nAn R-squared value of 0.4518 indicates that our model explains about 45% of resale prices.\nWith a p-value much smaller than 0.0001, we reject the idea that the average is a good estimate of SELLING_PRICE. This lets us conclude that our simple linear regression model is a good estimator.\nIn the Coefficients: section, both Intercept and AREA_SQM have p-values smaller than 0.001, suggesting we reject the null hypothesis for B0 and B1. Thus, we can infer that B0 and B1 are good parameter estimates.\nTo visualize the best-fit line on a scatterplot, we can use lm() as a method function in ggplot’s geometry:\n\n\nCode\nggplot(data=condo_resale.sf,  \n       aes(x=`AREA_SQM`, y=`SELLING_PRICE`)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\nThis figure reveals some statistical outliers with relatively high selling prices.\n\n\nUsing Multiple Linear Regression\n\nVisualizing Independent Variable Relationships\nBefore creating a multiple regression model, it’s crucial to check that independent variables aren’t highly correlated. If they are, it can compromise the model quality, a phenomenon known as multicollinearity in statistics.\nA correlation matrix is commonly used to visualize relationships between independent variables. The corrplot package can help with this. The code below generates a scatterplot matrix for the independent variables in the condo_resale data.frame.\n\n\nCode\ncorrplot(cor(condo_resale[, 5:23]), diag = FALSE, order = \"AOE\",\n         tl.pos = \"td\", tl.cex = 0.5, method = \"number\", type = \"upper\")\n\n\n\n\n\nMatrix reorder is crucial for mining hidden structures and patterns. Four methods in corrplot (parameter order) are available: “AOE”, “FPC”, “hclust”, “alphabet”. In the above code, AOE order is used, ordering variables using the angular order of the eigenvectors method suggested by Michael Friendly.\nThe scatterplot matrix reveals that Freehold is highly correlated with LEASE_99YEAR. To avoid multicollinearity, it’s wise to include only one of them in the subsequent model. As a result, LEASE_99YEAR is excluded in the next model.\n\n\nBuilding a Hedonic Pricing Model with Multiple Linear Regression\nThe code below uses lm() to build the multiple linear regression model.\n\n\nCode\ncondo.mlr &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                  PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                  PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + PROX_KINDERGARTEN + \n                  PROX_MRT  + PROX_PARK + PROX_PRIMARY_SCH + \n                  PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n                  PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                data=condo_resale.sf)\nsummary(condo.mlr)\n\n\n\nCall:\nlm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + PROX_CHILDCARE + \n    PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_HAWKER_MARKET + \n    PROX_KINDERGARTEN + PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + \n    PROX_TOP_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_SUPERMARKET + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sf)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-3475964  -293923   -23069   241043 12260381 \n\nCoefficients:\n                       Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)           481728.40  121441.01   3.967 7.65e-05 ***\nAREA_SQM               12708.32     369.59  34.385  &lt; 2e-16 ***\nAGE                   -24440.82    2763.16  -8.845  &lt; 2e-16 ***\nPROX_CBD              -78669.78    6768.97 -11.622  &lt; 2e-16 ***\nPROX_CHILDCARE       -351617.91  109467.25  -3.212  0.00135 ** \nPROX_ELDERLYCARE      171029.42   42110.51   4.061 5.14e-05 ***\nPROX_URA_GROWTH_AREA   38474.53   12523.57   3.072  0.00217 ** \nPROX_HAWKER_MARKET     23746.10   29299.76   0.810  0.41782    \nPROX_KINDERGARTEN     147468.99   82668.87   1.784  0.07466 .  \nPROX_MRT             -314599.68   57947.44  -5.429 6.66e-08 ***\nPROX_PARK             563280.50   66551.68   8.464  &lt; 2e-16 ***\nPROX_PRIMARY_SCH      180186.08   65237.95   2.762  0.00582 ** \nPROX_TOP_PRIMARY_SCH    2280.04   20410.43   0.112  0.91107    \nPROX_SHOPPING_MALL   -206604.06   42840.60  -4.823 1.57e-06 ***\nPROX_SUPERMARKET      -44991.80   77082.64  -0.584  0.55953    \nPROX_BUS_STOP         683121.35  138353.28   4.938 8.85e-07 ***\nNO_Of_UNITS             -231.18      89.03  -2.597  0.00951 ** \nFAMILY_FRIENDLY       140340.77   47020.55   2.985  0.00289 ** \nFREEHOLD              359913.01   49220.22   7.312 4.38e-13 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 755800 on 1417 degrees of freedom\nMultiple R-squared:  0.6518,    Adjusted R-squared:  0.6474 \nF-statistic: 147.4 on 18 and 1417 DF,  p-value: &lt; 2.2e-16\n\n\n\n\nPreparing a Publication-Quality Table: olsrr Method\nFrom the report, not all independent variables are statistically significant. We’ll refine the model by removing those variables that aren’t statistically significant. The code below recalibrates the model.\n\n\nCode\ncondo.mlr1 &lt;- lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                   PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE +\n                   PROX_URA_GROWTH_AREA + PROX_MRT  + PROX_PARK + \n                   PROX_PRIMARY_SCH + PROX_SHOPPING_MALL    + PROX_BUS_STOP + \n                   NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD,\n                 data=condo_resale.sf)\nols_regress(condo.mlr1)\n\n\n                             Model Summary                               \n------------------------------------------------------------------------\nR                       0.807       RMSE                     755957.289 \nR-Squared               0.651       Coef. Var                    43.168 \nAdj. R-Squared          0.647       MSE                571471422208.591 \nPred R-Squared          0.638       MAE                      414819.628 \n------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                    Sum of                                                      \n                   Squares          DF         Mean Square       F         Sig. \n--------------------------------------------------------------------------------\nRegression    1.512586e+15          14        1.080418e+14    189.059    0.0000 \nResidual      8.120609e+14        1421    571471422208.591                      \nTotal         2.324647e+15        1435                                          \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                \n-----------------------------------------------------------------------------------------------------------------\n               model           Beta    Std. Error    Std. Beta       t        Sig           lower          upper \n-----------------------------------------------------------------------------------------------------------------\n         (Intercept)     527633.222    108183.223                   4.877    0.000     315417.244     739849.200 \n            AREA_SQM      12777.523       367.479        0.584     34.771    0.000      12056.663      13498.382 \n                 AGE     -24687.739      2754.845       -0.167     -8.962    0.000     -30091.739     -19283.740 \n            PROX_CBD     -77131.323      5763.125       -0.263    -13.384    0.000     -88436.469     -65826.176 \n      PROX_CHILDCARE    -318472.751    107959.512       -0.084     -2.950    0.003    -530249.889    -106695.613 \n    PROX_ELDERLYCARE     185575.623     39901.864        0.090      4.651    0.000     107302.737     263848.510 \nPROX_URA_GROWTH_AREA      39163.254     11754.829        0.060      3.332    0.001      16104.571      62221.936 \n            PROX_MRT    -294745.107     56916.367       -0.112     -5.179    0.000    -406394.234    -183095.980 \n           PROX_PARK     570504.807     65507.029        0.150      8.709    0.000     442003.938     699005.677 \n    PROX_PRIMARY_SCH     159856.136     60234.599        0.062      2.654    0.008      41697.849     278014.424 \n  PROX_SHOPPING_MALL    -220947.251     36561.832       -0.115     -6.043    0.000    -292668.213    -149226.288 \n       PROX_BUS_STOP     682482.221    134513.243        0.134      5.074    0.000     418616.359     946348.082 \n         NO_Of_UNITS       -245.480        87.947       -0.053     -2.791    0.005       -418.000        -72.961 \n     FAMILY_FRIENDLY     146307.576     46893.021        0.057      3.120    0.002      54320.593     238294.560 \n            FREEHOLD     350599.812     48506.485        0.136      7.228    0.000     255447.802     445751.821 \n-----------------------------------------------------------------------------------------------------------------\n\n\n\n\nPreparing a Publication-Quality Table: gtsummary Method\nThe gtsummary package offers an elegant way to create publication-ready summary tables in R.\nIn the code below, tbl_regression() creates a well-formatted regression report.\n\n\nCode\ntbl_regression(condo.mlr1, intercept = TRUE)\n\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nWith gtsummary, model statistics can be included using add_glance_table() or as a table source note using add_glance_source_note(), as shown below.\n\n\nCode\ntbl_regression(condo.mlr1, \n               intercept = TRUE) %&gt;% \n  add_glance_source_note(\n    label = list(sigma ~ \"\\U03C3\"),\n    include = c(r.squared, adj.r.squared, \n                AIC, statistic,\n                p.value, sigma))\n\n\n\n\n\n\n  \n    \n    \n      Characteristic\n      Beta\n      95% CI1\n      p-value\n    \n  \n  \n    (Intercept)\n527,633\n315,417, 739,849\n&lt;0.001\n    AREA_SQM\n12,778\n12,057, 13,498\n&lt;0.001\n    AGE\n-24,688\n-30,092, -19,284\n&lt;0.001\n    PROX_CBD\n-77,131\n-88,436, -65,826\n&lt;0.001\n    PROX_CHILDCARE\n-318,473\n-530,250, -106,696\n0.003\n    PROX_ELDERLYCARE\n185,576\n107,303, 263,849\n&lt;0.001\n    PROX_URA_GROWTH_AREA\n39,163\n16,105, 62,222\n&lt;0.001\n    PROX_MRT\n-294,745\n-406,394, -183,096\n&lt;0.001\n    PROX_PARK\n570,505\n442,004, 699,006\n&lt;0.001\n    PROX_PRIMARY_SCH\n159,856\n41,698, 278,014\n0.008\n    PROX_SHOPPING_MALL\n-220,947\n-292,668, -149,226\n&lt;0.001\n    PROX_BUS_STOP\n682,482\n418,616, 946,348\n&lt;0.001\n    NO_Of_UNITS\n-245\n-418, -73\n0.005\n    FAMILY_FRIENDLY\n146,308\n54,321, 238,295\n0.002\n    FREEHOLD\n350,600\n255,448, 445,752\n&lt;0.001\n  \n  \n    \n      R² = 0.651; Adjusted R² = 0.647; AIC = 42,967; Statistic = 189; p-value = &lt;0.001; σ = 755,957\n    \n  \n  \n    \n      1 CI = Confidence Interval\n    \n  \n\n\n\n\nFor more customization options, refer to Tutorial: tbl_regression\n\n\nStatistical Assumption Tests\nIn this section, we’ll introduce a powerful R package designed for OLS regression - olsrr. It offers valuable methods for enhancing multiple linear regression models:\n\nComprehensive regression output\nResidual diagnostics\nMeasures of influence\nHeteroskedasticity tests\nCollinearity diagnostics\nModel fit assessment\nVariable contribution assessment\nVariable selection procedures\n\n\nMulticollinearityNon-LinearityNormalitySpatial Autocorrelation\n\n\nThe code chunk below uses the ols_vif_tol() function of the olsrr package to test for signs of multicollinearity.\n\n\nCode\nols_vif_tol(condo.mlr1)\n\n\n              Variables Tolerance      VIF\n1              AREA_SQM 0.8728554 1.145665\n2                   AGE 0.7071275 1.414172\n3              PROX_CBD 0.6356147 1.573280\n4        PROX_CHILDCARE 0.3066019 3.261559\n5      PROX_ELDERLYCARE 0.6598479 1.515501\n6  PROX_URA_GROWTH_AREA 0.7510311 1.331503\n7              PROX_MRT 0.5236090 1.909822\n8             PROX_PARK 0.8279261 1.207837\n9      PROX_PRIMARY_SCH 0.4524628 2.210126\n10   PROX_SHOPPING_MALL 0.6738795 1.483945\n11        PROX_BUS_STOP 0.3514118 2.845664\n12          NO_Of_UNITS 0.6901036 1.449058\n13      FAMILY_FRIENDLY 0.7244157 1.380423\n14             FREEHOLD 0.6931163 1.442759\n\n\nSince the VIF of the independent variables is less than 10, we can conclude that there are no signs of multicollinearity among the independent variables.\n\n\nIt’s essential to test the assumption of linearity and additivity of the relationship between dependent and independent variables in multiple linear regression.\nIn the code chunk below, the ols_plot_resid_fit() function of the olsrr package is used to perform a linearity assumption test.\n\n\nCode\nols_plot_resid_fit(condo.mlr1)\n\n\n\n\n\nThe figure above reveals that most data points scatter around the 0 line, suggesting that the relationships between the dependent variable and independent variables are linear.\n\n\nFinally, the code chunk below uses ols_plot_resid_hist() of the olsrr package to perform a normality assumption test.\n\n\nCode\nols_plot_resid_hist(condo.mlr1)\n\n\n\n\n\nThe figure indicates that the residual of the multiple linear regression model (i.e., condo.mlr1) resembles a normal distribution.\nIf you prefer formal statistical tests, the ols_test_normality() of the olsrr package can be used, as shown in the code chunk below.\n\n\nCode\nols_test_normality(condo.mlr1)\n\n\n-----------------------------------------------\n       Test             Statistic       pvalue  \n-----------------------------------------------\nShapiro-Wilk              0.6856         0.0000 \nKolmogorov-Smirnov        0.1366         0.0000 \nCramer-von Mises         121.0768        0.0000 \nAnderson-Darling         67.9551         0.0000 \n-----------------------------------------------\n\n\nThe summary table above shows that the p-values of the four tests are much smaller than the alpha value of 0.05. Therefore, we reject the null hypothesis, indicating there is statistical evidence that the residuals are not normally distributed.\n\n\nSince our hedonic model uses geographically referenced attributes, visualizing the residuals is crucial.\nTo perform a spatial autocorrelation test, we’ll convert condo_resale.sf from an sf data frame into a SpatialPointsDataFrame.\nFirst, export the residuals of the hedonic pricing model and save them as a data frame.\n\n\nCode\nmlr.output &lt;- as.data.frame(condo.mlr1$residuals)\n\n\nNext, join the newly created data frame with condo_resale.sf.\n\n\nCode\ncondo_resale.res.sf &lt;- cbind(condo_resale.sf, \n                        condo.mlr1$residuals) %&gt;%\nrename(`MLR_RES` = `condo.mlr1.residuals`)\n\n\nNow, convert condo_resale.res.sf from a simple feature object into a SpatialPointsDataFrame since the spdep package processes sp-conformed spatial data objects.\nThe code chunk below performs the data conversion process.\n\n\nCode\ncondo_resale.sp &lt;- as_Spatial(condo_resale.res.sf)\ncondo_resale.sp\n\n\nclass       : SpatialPointsDataFrame \nfeatures    : 1436 \nextent      : 14940.85, 43352.45, 24765.67, 48382.81  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 23\nnames       : POSTCODE, SELLING_PRICE, AREA_SQM, AGE,    PROX_CBD, PROX_CHILDCARE, PROX_ELDERLYCARE, PROX_URA_GROWTH_AREA, PROX_HAWKER_MARKET, PROX_KINDERGARTEN,    PROX_MRT,   PROX_PARK, PROX_PRIMARY_SCH, PROX_TOP_PRIMARY_SCH, PROX_SHOPPING_MALL, ... \nmin values  :    18965,        540000,       34,   0, 0.386916393,    0.004927023,      0.054508623,          0.214539508,        0.051817113,       0.004927023, 0.052779424, 0.029064164,      0.077106132,          0.077106132,                  0, ... \nmax values  :   828833,       1.8e+07,      619,  37, 19.18042832,     3.46572633,      3.949157205,           9.15540001,        5.374348075,       2.229045366,  3.48037319,  2.16104919,      3.928989144,          6.748192062,        3.477433767, ... \n\n\nNext, use the tmap package to display the distribution of residuals on an interactive map.\nThe code churn below turns on the interactive mode of tmap.\n\n\nCode\ntmap_mode(\"plot\")\n\n\nThe code chunks below create an interactive point symbol map.\n\n\nCode\ntm_shape(mpsz_svy21)+\n  tmap_options(check.and.fix = TRUE) +\n  tm_polygons(alpha = 0.4) +\ntm_shape(condo_resale.res.sf) +  \n  tm_dots(col = \"MLR_RES\",\n          alpha = 0.6,\n          style=\"quantile\") +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\nRemember to switch back to “plot” mode before continuing.\n\n\nCode\ntmap_mode(\"plot\")\n\n\nThe figure above reveals signs of spatial autocorrelation.\nTo verify our observation, the Moran’s I test will be performed.\nFirst, compute the distance-based weight matrix using dnearneigh() function of the spdep package.\n\n\nCode\nnb &lt;- dnearneigh(coordinates(condo_resale.sp), 0, 1500, longlat = FALSE)\nsummary(nb)\n\n\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\n\nNext, use nb2listw() of the spdep package to convert the output neighbors lists (i.e., nb) into spatial weights.\n\n\nCode\nnb_lw &lt;- nb2listw(nb, style = 'W')\nsummary(nb_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 1436 \nNumber of nonzero links: 66266 \nPercentage nonzero weights: 3.213526 \nAverage number of links: 46.14624 \n10 disjoint connected subgraphs\nLink number distribution:\n\n  1   3   5   7   9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24 \n  3   3   9   4   3  15  10  19  17  45  19   5  14  29  19   6  35  45  18  47 \n 25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44 \n 16  43  22  26  21  11   9  23  22  13  16  25  21  37  16  18   8  21   4  12 \n 45  46  47  48  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64 \n  8  36  18  14  14  43  11  12   8  13  12  13   4   5   6  12  11  20  29  33 \n 65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84 \n 15  20  10  14  15  15  11  16  12  10   8  19  12  14   9   8   4  13  11   6 \n 85  86  87  88  89  90  91  92  93  94  95  96  97  98  99 100 101 102 103 104 \n  4   9   4   4   4   6   2  16   9   4   5   9   3   9   4   2   1   2   1   1 \n105 106 107 108 109 110 112 116 125 \n  1   5   9   2   1   3   1   1   1 \n3 least connected regions:\n193 194 277 with 1 link\n1 most connected region:\n285 with 125 links\n\nWeights style: W \nWeights constants summary:\n     n      nn   S0       S1       S2\nW 1436 2062096 1436 94.81916 5798.341\n\n\nNow, use lm.morantest() of the spdep package to perform Moran’s I test for residual spatial autocor\nrelation.\n\n\nCode\nlm.morantest(condo.mlr1, nb_lw)\n\n\n\n    Global Moran I for regression residuals\n\ndata:  \nmodel: lm(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD +\nPROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + PROX_MRT +\nPROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP +\nNO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, data = condo_resale.sf)\nweights: nb_lw\n\nMoran I statistic standard deviate = 24.366, p-value &lt; 2.2e-16\nalternative hypothesis: greater\nsample estimates:\nObserved Moran I      Expectation         Variance \n    1.438876e-01    -5.487594e-03     3.758259e-05 \n\n\nThe Global Moran’s I test for residual spatial autocorrelation shows that its p-value is less than 0.00000000000000022, which is less than the alpha value of 0.05. Hence, we reject the null hypothesis that the residuals are randomly distributed.\nSince the Observed Global Moran I = 0.1424418, which is greater than 0, we can infer that the residuals resemble a cluster distribution."
  },
  {
    "objectID": "hands-on/hoe4.html#building-hedonic-pricing-models-using-gwmodel",
    "href": "hands-on/hoe4.html#building-hedonic-pricing-models-using-gwmodel",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "9 Building Hedonic Pricing Models using GWmodel",
    "text": "9 Building Hedonic Pricing Models using GWmodel\nIn this section, you’ll learn how to model hedonic pricing using both fixed and adaptive bandwidth schemes.\n\nBuilding Fixed Bandwidth GWR Model\n\nComputing fixed bandwidth\nIn the code chunk below, the bw.gwr() function of the GWModel package is used to determine the optimal fixed bandwidth for the model. The argument adaptive set to FALSE indicates that we want to compute the fixed bandwidth.\nThere are two possible approaches to determine the stopping rule: CV cross-validation and AIC corrected (AICc). The stopping rule is defined using the approach argument.\n\n\nCode\nbw.fixed &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                     PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                     PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                     PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                     FAMILY_FRIENDLY + FREEHOLD, \n                   data=condo_resale.sp, \n                   approach=\"CV\", \n                   kernel=\"gaussian\", \n                   adaptive=FALSE, \n                   longlat=FALSE)\n\n\nFixed bandwidth: 17660.96 CV score: 8.259118e+14 \nFixed bandwidth: 10917.26 CV score: 7.970454e+14 \nFixed bandwidth: 6749.419 CV score: 7.273273e+14 \nFixed bandwidth: 4173.553 CV score: 6.300006e+14 \nFixed bandwidth: 2581.58 CV score: 5.404958e+14 \nFixed bandwidth: 1597.687 CV score: 4.857515e+14 \nFixed bandwidth: 989.6077 CV score: 4.722431e+14 \nFixed bandwidth: 613.7939 CV score: 1.378294e+16 \nFixed bandwidth: 1221.873 CV score: 4.778717e+14 \nFixed bandwidth: 846.0596 CV score: 4.791629e+14 \nFixed bandwidth: 1078.325 CV score: 4.751406e+14 \nFixed bandwidth: 934.7772 CV score: 4.72518e+14 \nFixed bandwidth: 1023.495 CV score: 4.730305e+14 \nFixed bandwidth: 968.6643 CV score: 4.721317e+14 \nFixed bandwidth: 955.7206 CV score: 4.722072e+14 \nFixed bandwidth: 976.6639 CV score: 4.721387e+14 \nFixed bandwidth: 963.7202 CV score: 4.721484e+14 \nFixed bandwidth: 971.7199 CV score: 4.721293e+14 \nFixed bandwidth: 973.6083 CV score: 4.721309e+14 \nFixed bandwidth: 970.5527 CV score: 4.721295e+14 \nFixed bandwidth: 972.4412 CV score: 4.721296e+14 \nFixed bandwidth: 971.2741 CV score: 4.721292e+14 \nFixed bandwidth: 970.9985 CV score: 4.721293e+14 \nFixed bandwidth: 971.4443 CV score: 4.721292e+14 \nFixed bandwidth: 971.5496 CV score: 4.721293e+14 \nFixed bandwidth: 971.3793 CV score: 4.721292e+14 \nFixed bandwidth: 971.3391 CV score: 4.721292e+14 \nFixed bandwidth: 971.3143 CV score: 4.721292e+14 \nFixed bandwidth: 971.3545 CV score: 4.721292e+14 \nFixed bandwidth: 971.3296 CV score: 4.721292e+14 \nFixed bandwidth: 971.345 CV score: 4.721292e+14 \nFixed bandwidth: 971.3355 CV score: 4.721292e+14 \nFixed bandwidth: 971.3413 CV score: 4.721292e+14 \nFixed bandwidth: 971.3377 CV score: 4.721292e+14 \nFixed bandwidth: 971.34 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3408 CV score: 4.721292e+14 \nFixed bandwidth: 971.3403 CV score: 4.721292e+14 \nFixed bandwidth: 971.3406 CV score: 4.721292e+14 \nFixed bandwidth: 971.3404 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \nFixed bandwidth: 971.3405 CV score: 4.721292e+14 \n\n\nThe result shows that the recommended bandwidth is 971.3405 meters. (Quiz: Do you know why it is in meters?)\n\n\nGWModel method - fixed bandwidth\nNow we can calibrate the gwr model using the fixed bandwidth and a Gaussian kernel, as shown in the code chunk below.\n\n\nCode\ngwr.fixed &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n                         PROX_CHILDCARE + PROX_ELDERLYCARE  + PROX_URA_GROWTH_AREA + \n                         PROX_MRT   + PROX_PARK + PROX_PRIMARY_SCH + \n                         PROX_SHOPPING_MALL + PROX_BUS_STOP + NO_Of_UNITS + \n                         FAMILY_FRIENDLY + FREEHOLD, \n                       data=condo_resale.sp, \n                       bw=bw.fixed, \n                       kernel = 'gaussian', \n                       longlat = FALSE)\n\n\nThe output is saved in a list of class “gwrm”. The code below can be used to display the model output.\n\n\nCode\ngwr.fixed\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-12-17 14:44:56.905501 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.fixed, kernel = \"gaussian\", \n    longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Fixed bandwidth: 971.3405 \n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -3.5988e+07 -5.1998e+05  7.6780e+05  1.7412e+06\n   AREA_SQM              1.0003e+03  5.2758e+03  7.4740e+03  1.2301e+04\n   AGE                  -1.3475e+05 -2.0813e+04 -8.6260e+03 -3.7784e+03\n   PROX_CBD             -7.7047e+07 -2.3608e+05 -8.3600e+04  3.4646e+04\n   PROX_CHILDCARE       -6.0097e+06 -3.3667e+05 -9.7425e+04  2.9007e+05\n   PROX_ELDERLYCARE     -3.5000e+06 -1.5970e+05  3.1971e+04  1.9577e+05\n   PROX_URA_GROWTH_AREA -3.0170e+06 -8.2013e+04  7.0749e+04  2.2612e+05\n   PROX_MRT             -3.5282e+06 -6.5836e+05 -1.8833e+05  3.6922e+04\n   PROX_PARK            -1.2062e+06 -2.1732e+05  3.5383e+04  4.1335e+05\n   PROX_PRIMARY_SCH     -2.2695e+07 -1.7066e+05  4.8472e+04  5.1555e+05\n   PROX_SHOPPING_MALL   -7.2585e+06 -1.6684e+05 -1.0517e+04  1.5923e+05\n   PROX_BUS_STOP        -1.4676e+06 -4.5207e+04  3.7601e+05  1.1664e+06\n   NO_Of_UNITS          -1.3170e+03 -2.4822e+02 -3.0846e+01  2.5496e+02\n   FAMILY_FRIENDLY      -2.2749e+06 -1.1140e+05  7.6214e+03  1.6107e+05\n   FREEHOLD             -9.2067e+06  3.8073e+04  1.5169e+05  3.7528e+05\n                             Max.\n   Intercept            112793548\n   AREA_SQM                 21575\n   AGE                     434201\n   PROX_CBD               2704596\n   PROX_CHILDCARE         1654087\n   PROX_ELDERLYCARE      38867814\n   PROX_URA_GROWTH_AREA  78515730\n   PROX_MRT               3124316\n   PROX_PARK             18122425\n   PROX_PRIMARY_SCH       4637503\n   PROX_SHOPPING_MALL     1529952\n   PROX_BUS_STOP         11342182\n   NO_Of_UNITS              12907\n   FAMILY_FRIENDLY        1720744\n   FREEHOLD               6073636\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 438.3804 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 997.6196 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 42263.61 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41632.36 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 42515.71 \n   Residual sum of squares: 2.53407e+14 \n   R-square value:  0.8909912 \n   Adjusted R-square value:  0.8430417 \n\n   ***********************************************************************\n   Program stops at: 2023-12-17 14:44:57.736406 \n\n\nThe report shows that the AICc of the gwr is 42263.61, which is significantly smaller than the global multiple linear regression model of 42967.1.\n\n\n\nBuilding Adaptive Bandwidth GWR Model\nIn this section, we will calibrate the gwr-based hedonic pricing model using the adaptive bandwidth approach.\n\nComputing the adaptive bandwidth\nSimilar to the earlier section, we will first use bw.gwr() to determine the recommended data points to use.\nThe code chunk looks very similar to the one used to compute the fixed bandwidth, except the adaptive argument has changed to TRUE.\n\n\nCode\nbw.adaptive &lt;- bw.gwr(formula = SELLING_PRICE ~ AREA_SQM + AGE  + \n                        PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE    + \n                        PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                        PROX_PRIMARY_SCH + PROX_SHOPPING_MALL   + PROX_BUS_STOP + \n                        NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                      data=condo_resale.sp, \n                      approach=\"CV\", \n                      kernel=\"gaussian\", \n                      adaptive=TRUE, \n                      longlat=FALSE)\n\n\nAdaptive bandwidth: 895 CV score: 7.952401e+14 \nAdaptive bandwidth: 561 CV score: 7.667364e+14 \nAdaptive bandwidth: 354 CV score: 6.953454e+14 \nAdaptive bandwidth: 226 CV score: 6.15223e+14 \nAdaptive bandwidth: 147 CV score: 5.674373e+14 \nAdaptive bandwidth: 98 CV score: 5.426745e+14 \nAdaptive bandwidth: 68 CV score: 5.168117e+14 \nAdaptive bandwidth: 49 CV score: 4.859631e+14 \nAdaptive bandwidth: 37 CV score: 4.646518e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \nAdaptive bandwidth: 25 CV score: 4.430816e+14 \nAdaptive bandwidth: 32 CV score: 4.505602e+14 \nAdaptive bandwidth: 27 CV score: 4.462172e+14 \nAdaptive bandwidth: 30 CV score: 4.422088e+14 \n\n\nThe result shows that 30 is the recommended data points to be used.\n\n\nConstructing the adaptive bandwidth gwr model\nNow, we can go ahead to calibrate the gwr-based hedonic pricing model using adaptive bandwidth and a Gaussian kernel, as shown in the code chunk below.\n\n\nCode\ngwr.adaptive &lt;- gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + \n                            PROX_CBD + PROX_CHILDCARE + PROX_ELDERLYCARE + \n                            PROX_URA_GROWTH_AREA + PROX_MRT + PROX_PARK + \n                            PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + PROX_BUS_STOP + \n                            NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n                          data=condo_resale.sp, bw=bw.adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE, \n                          longlat = FALSE)\n\n\nThe code below can be used to display the model output.\n\n\nCode\ngwr.adaptive\n\n\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2023-12-17 14:45:04.097445 \n   Call:\n   gwr.basic(formula = SELLING_PRICE ~ AREA_SQM + AGE + PROX_CBD + \n    PROX_CHILDCARE + PROX_ELDERLYCARE + PROX_URA_GROWTH_AREA + \n    PROX_MRT + PROX_PARK + PROX_PRIMARY_SCH + PROX_SHOPPING_MALL + \n    PROX_BUS_STOP + NO_Of_UNITS + FAMILY_FRIENDLY + FREEHOLD, \n    data = condo_resale.sp, bw = bw.adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  SELLING_PRICE\n   Independent variables:  AREA_SQM AGE PROX_CBD PROX_CHILDCARE PROX_ELDERLYCARE PROX_URA_GROWTH_AREA PROX_MRT PROX_PARK PROX_PRIMARY_SCH PROX_SHOPPING_MALL PROX_BUS_STOP NO_Of_UNITS FAMILY_FRIENDLY FREEHOLD\n   Number of data points: 1436\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n     Min       1Q   Median       3Q      Max \n-3470778  -298119   -23481   248917 12234210 \n\n   Coefficients:\n                          Estimate Std. Error t value Pr(&gt;|t|)    \n   (Intercept)           527633.22  108183.22   4.877 1.20e-06 ***\n   AREA_SQM               12777.52     367.48  34.771  &lt; 2e-16 ***\n   AGE                   -24687.74    2754.84  -8.962  &lt; 2e-16 ***\n   PROX_CBD              -77131.32    5763.12 -13.384  &lt; 2e-16 ***\n   PROX_CHILDCARE       -318472.75  107959.51  -2.950 0.003231 ** \n   PROX_ELDERLYCARE      185575.62   39901.86   4.651 3.61e-06 ***\n   PROX_URA_GROWTH_AREA   39163.25   11754.83   3.332 0.000885 ***\n   PROX_MRT             -294745.11   56916.37  -5.179 2.56e-07 ***\n   PROX_PARK             570504.81   65507.03   8.709  &lt; 2e-16 ***\n   PROX_PRIMARY_SCH      159856.14   60234.60   2.654 0.008046 ** \n   PROX_SHOPPING_MALL   -220947.25   36561.83  -6.043 1.93e-09 ***\n   PROX_BUS_STOP         682482.22  134513.24   5.074 4.42e-07 ***\n   NO_Of_UNITS             -245.48      87.95  -2.791 0.005321 ** \n   FAMILY_FRIENDLY       146307.58   46893.02   3.120 0.001845 ** \n   FREEHOLD              350599.81   48506.48   7.228 7.98e-13 ***\n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 756000 on 1421 degrees of freedom\n   Multiple R-squared: 0.6507\n   Adjusted R-squared: 0.6472 \n   F-statistic: 189.1 on 14 and 1421 DF,  p-value: &lt; 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 8.120609e+14\n   Sigma(hat): 752522.9\n   AIC:  42966.76\n   AICc:  42967.14\n   BIC:  41731.39\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 30 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                               Min.     1st Qu.      Median     3rd Qu.\n   Intercept            -1.3487e+08 -2.4669e+05  7.7928e+05  1.6194e+06\n   AREA_SQM              3.3188e+03  5.6285e+03  7.7825e+03  1.2738e+04\n   AGE                  -9.6746e+04 -2.9288e+04 -1.4043e+04 -5.6119e+03\n   PROX_CBD             -2.5330e+06 -1.6256e+05 -7.7242e+04  2.6624e+03\n   PROX_CHILDCARE       -1.2790e+06 -2.0175e+05  8.7158e+03  3.7778e+05\n   PROX_ELDERLYCARE     -1.6212e+06 -9.2050e+04  6.1029e+04  2.8184e+05\n   PROX_URA_GROWTH_AREA -7.2686e+06 -3.0350e+04  4.5869e+04  2.4613e+05\n   PROX_MRT             -4.3781e+07 -6.7282e+05 -2.2115e+05 -7.4593e+04\n   PROX_PARK            -2.9020e+06 -1.6782e+05  1.1601e+05  4.6572e+05\n   PROX_PRIMARY_SCH     -8.6418e+05 -1.6627e+05 -7.7853e+03  4.3222e+05\n   PROX_SHOPPING_MALL   -1.8272e+06 -1.3175e+05 -1.4049e+04  1.3799e+05\n   PROX_BUS_STOP        -2.0579e+06 -7.1461e+04  4.1104e+05  1.2071e+06\n   NO_Of_UNITS          -2.1993e+03 -2.3685e+02 -3.4699e+01  1.1657e+02\n   FAMILY_FRIENDLY      -5.9879e+05 -5.0927e+04  2.6173e+04  2.2481e+05\n   FREEHOLD             -1.6340e+05  4.0765e+04  1.9023e+05  3.7960e+05\n                            Max.\n   Intercept            18758355\n   AREA_SQM                23064\n   AGE                     13303\n   PROX_CBD             11346650\n   PROX_CHILDCARE        2892127\n   PROX_ELDERLYCARE      2465671\n   PROX_URA_GROWTH_AREA  7384059\n   PROX_MRT              1186242\n   PROX_PARK             2588497\n   PROX_PRIMARY_SCH      3381462\n   PROX_SHOPPING_MALL   38038564\n   PROX_BUS_STOP        12081592\n   NO_Of_UNITS              1010\n   FAMILY_FRIENDLY       2072414\n   FREEHOLD              1813995\n   ************************Diagnostic information*************************\n   Number of data points: 1436 \n   Effective number of parameters (2trace(S) - trace(S'S)): 350.3088 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 1085.691 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 41982.22 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 41546.74 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 41914.08 \n   Residual sum of squares: 2.528227e+14 \n   R-square value:  0.8912425 \n   Adjusted R-square value:  0.8561185 \n\n   ***********************************************************************\n   Program stops at: 2023-12-17 14:45:05.422642 \n\n\nThe report shows that the AICc of the adaptive distance gwr is 41982.22, which is even smaller than the AICc of the fixed distance gwr of 42263.61.\n\n\n\nVisualizing GWR Output\nIn addition to regression residuals, the output feature class table includes fields for observed and predicted y values, condition number (cond), Local R2, residuals, and explanatory variable coefficients and standard errors:\n\nCondition Number: this diagnostic evaluates local collinearity. In\n\nthe presence of strong local collinearity, results become unstable. Results associated with condition numbers larger than 30 may be unreliable. - Local R2: these values range between 0.0 and 1.0 and indicate how well the local regression model fits observed y values. Very low values indicate the local model is performing poorly. Mapping the Local R2 values to see where GWR predicts well and where it predicts poorly may provide clues about important variables that may be missing from the regression model. - Predicted: these are the estimated (or fitted) y values computed by GWR. - Residuals: to obtain the residual values, the fitted y values are subtracted from the observed y values. Standardized residuals have a mean of zero and a standard deviation of 1. A cold-to-hot rendered map of standardized residuals can be produced by using these values. - Coefficient Standard Error: these values measure the reliability of each coefficient estimate. Confidence in those estimates is higher when standard errors are small in relation to the actual coefficient values. Large standard errors may indicate problems with local collinearity.\nThey are all stored in a SpatialPointsDataFrame or SpatialPolygonsDataFrame object integrated with fit.points, GWR coefficient estimates, y value, predicted values, coefficient standard errors, and t-values in its “data” slot in an object called SDF of the output list.\n\n\nConverting SDF into sf data.frame\nTo visualize the fields in SDF, we need to first convert it into an sf data.frame using the code chunk below.\n\n\nCode\ncondo_resale.sf.adaptive &lt;- st_as_sf(gwr.adaptive$SDF) %&gt;%\n  st_transform(crs=3414)\n\n\n\n\nCode\ncondo_resale.sf.adaptive.svy21 &lt;- st_transform(condo_resale.sf.adaptive, 3414)\ncondo_resale.sf.adaptive.svy21  \n\n\n\n\nCode\ngwr.adaptive.output &lt;- as.data.frame(gwr.adaptive$SDF)\ncondo_resale.sf.adaptive &lt;- cbind(condo_resale.res.sf, as.matrix(gwr.adaptive.output))\n\n\nNext, glimpse() is used to display the content of condo_resale.sf.adaptive sf data frame.\n\n\nCode\nglimpse(condo_resale.sf.adaptive)\n\n\nRows: 1,436\nColumns: 52\n$ Intercept               &lt;dbl&gt; 2050011.67, 1633128.24, 3433608.17, 234358.91,…\n$ AREA_SQM                &lt;dbl&gt; 9561.892, 16576.853, 13091.861, 20730.601, 672…\n$ AGE                     &lt;dbl&gt; -9514.634, -58185.479, -26707.386, -93308.988,…\n$ PROX_CBD                &lt;dbl&gt; -120681.94, -149434.22, -259397.77, 2426853.66…\n$ PROX_CHILDCARE          &lt;dbl&gt; 319266.925, 441102.177, -120116.816, 480825.28…\n$ PROX_ELDERLYCARE        &lt;dbl&gt; -393417.795, 325188.741, 535855.806, 314783.72…\n$ PROX_URA_GROWTH_AREA    &lt;dbl&gt; -159980.203, -142290.389, -253621.206, -267929…\n$ PROX_MRT                &lt;dbl&gt; -299742.96, -2510522.23, -936853.28, -2039479.…\n$ PROX_PARK               &lt;dbl&gt; -172104.47, 523379.72, 209099.85, -759153.26, …\n$ PROX_PRIMARY_SCH        &lt;dbl&gt; 242668.03, 1106830.66, 571462.33, 3127477.21, …\n$ PROX_SHOPPING_MALL      &lt;dbl&gt; 300881.390, -87693.378, -126732.712, -29593.34…\n$ PROX_BUS_STOP           &lt;dbl&gt; 1210615.44, 1843587.22, 1411924.90, 7225577.51…\n$ NO_Of_UNITS             &lt;dbl&gt; 104.8290640, -288.3441183, -9.5532945, -161.35…\n$ FAMILY_FRIENDLY         &lt;dbl&gt; -9075.370, 310074.664, 5949.746, 1556178.531, …\n$ FREEHOLD                &lt;dbl&gt; 303955.61, 396221.27, 168821.75, 1212515.58, 3…\n$ y                       &lt;dbl&gt; 3000000, 3880000, 3325000, 4250000, 1400000, 1…\n$ yhat                    &lt;dbl&gt; 2886531.8, 3466801.5, 3616527.2, 5435481.6, 13…\n$ residual                &lt;dbl&gt; 113468.16, 413198.52, -291527.20, -1185481.63,…\n$ CV_Score                &lt;dbl&gt; 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0…\n$ Stud_residual           &lt;dbl&gt; 0.38207013, 1.01433140, -0.83780678, -2.846146…\n$ Intercept_SE            &lt;dbl&gt; 516105.5, 488083.5, 963711.4, 444185.5, 211962…\n$ AREA_SQM_SE             &lt;dbl&gt; 823.2860, 825.2380, 988.2240, 617.4007, 1376.2…\n$ AGE_SE                  &lt;dbl&gt; 5889.782, 6226.916, 6510.236, 6010.511, 8180.3…\n$ PROX_CBD_SE             &lt;dbl&gt; 37411.22, 23615.06, 56103.77, 469337.41, 41064…\n$ PROX_CHILDCARE_SE       &lt;dbl&gt; 319111.1, 299705.3, 349128.5, 304965.2, 698720…\n$ PROX_ELDERLYCARE_SE     &lt;dbl&gt; 120633.34, 84546.69, 129687.07, 127150.69, 327…\n$ PROX_URA_GROWTH_AREA_SE &lt;dbl&gt; 56207.39, 76956.50, 95774.60, 470762.12, 47433…\n$ PROX_MRT_SE             &lt;dbl&gt; 185181.3, 281133.9, 275483.7, 279877.1, 363830…\n$ PROX_PARK_SE            &lt;dbl&gt; 205499.6, 229358.7, 314124.3, 227249.4, 364580…\n$ PROX_PRIMARY_SCH_SE     &lt;dbl&gt; 152400.7, 165150.7, 196662.6, 240878.9, 249087…\n$ PROX_SHOPPING_MALL_SE   &lt;dbl&gt; 109268.8, 98906.8, 119913.3, 177104.1, 301032.…\n$ PROX_BUS_STOP_SE        &lt;dbl&gt; 600668.6, 410222.1, 464156.7, 562810.8, 740922…\n$ NO_Of_UNITS_SE          &lt;dbl&gt; 218.1258, 208.9410, 210.9828, 361.7767, 299.50…\n$ FAMILY_FRIENDLY_SE      &lt;dbl&gt; 131474.73, 114989.07, 146607.22, 108726.62, 16…\n$ FREEHOLD_SE             &lt;dbl&gt; 115954.0, 130110.0, 141031.5, 138239.1, 210641…\n$ Intercept_TV            &lt;dbl&gt; 3.9720784, 3.3460017, 3.5629010, 0.5276150, 1.…\n$ AREA_SQM_TV             &lt;dbl&gt; 11.614302, 20.087361, 13.247868, 33.577223, 4.…\n$ AGE_TV                  &lt;dbl&gt; -1.6154474, -9.3441881, -4.1023685, -15.524301…\n$ PROX_CBD_TV             &lt;dbl&gt; -3.22582173, -6.32792021, -4.62353528, 5.17080…\n$ PROX_CHILDCARE_TV       &lt;dbl&gt; 1.000488185, 1.471786337, -0.344047555, 1.5766…\n$ PROX_ELDERLYCARE_TV     &lt;dbl&gt; -3.26126929, 3.84626245, 4.13191383, 2.4756745…\n$ PROX_URA_GROWTH_AREA_TV &lt;dbl&gt; -2.846248368, -1.848971738, -2.648105057, -5.6…\n$ PROX_MRT_TV             &lt;dbl&gt; -1.61864578, -8.92998600, -3.40075727, -7.2870…\n$ PROX_PARK_TV            &lt;dbl&gt; -0.83749312, 2.28192684, 0.66565951, -3.340617…\n$ PROX_PRIMARY_SCH_TV     &lt;dbl&gt; 1.59230221, 6.70194543, 2.90580089, 12.9836104…\n$ PROX_SHOPPING_MALL_TV   &lt;dbl&gt; 2.753588422, -0.886626400, -1.056869486, -0.16…\n$ PROX_BUS_STOP_TV        &lt;dbl&gt; 2.0154464, 4.4941192, 3.0419145, 12.8383775, 0…\n$ NO_Of_UNITS_TV          &lt;dbl&gt; 0.480589953, -1.380026395, -0.045279967, -0.44…\n$ FAMILY_FRIENDLY_TV      &lt;dbl&gt; -0.06902748, 2.69655779, 0.04058290, 14.312764…\n$ FREEHOLD_TV             &lt;dbl&gt; 2.6213469, 3.0452799, 1.1970499, 8.7711485, 1.…\n$ Local_R2                &lt;dbl&gt; 0.8846744, 0.8899773, 0.8947007, 0.9073605, 0.…\n$ geometry                &lt;POINT [m]&gt; POINT (22085.12 29951.54), POINT (25656.…\n\n\n\n\nCode\nsummary(gwr.adaptive$SDF$yhat)\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n  171347  1102001  1385528  1751842  1982307 13887901 \n\n\n\n\nVisualising local R2\nThe code chunks below are used to create an interactive point symbol map.\n\n\nCode\ntmap_mode(\"plot\")\ntm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"Local_R2\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\n\n\nVisualising coefficient estimates\nThe code chunks below are used to create an interactive point symbol map.\n\n\nCode\ntmap_mode(\"plot\")\nAREA_SQM_SE &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_SE\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\nAREA_SQM_TV &lt;- tm_shape(mpsz_svy21)+\n  tm_polygons(alpha = 0.1) +\ntm_shape(condo_resale.sf.adaptive) +  \n  tm_dots(col = \"AREA_SQM_TV\",\n          border.col = \"gray60\",\n          border.lwd = 1) +\n  tm_view(set.zoom.limits = c(11,14))\n\ntmap_arrange(AREA_SQM_SE, AREA_SQM_TV, \n             asp=1, ncol=2,\n             sync = TRUE)\n\n\n\n\n\n\n\nCode\ntmap_mode(\"plot\")\n\n\n\nBy URA Planning Region\n\n\nCode\n# correct the invalid geometry\nfixed_geom &lt;- sf::st_make_valid(mpsz_svy21[mpsz_svy21$REGION_N == \"CENTRAL REGION\", ])\n\ntm_shape(fixed_geom[fixed_geom$REGION_N==\"CENTRAL REGION\", ])+\n  tm_polygons()+\ntm_shape(condo_resale.sf.adaptive) + \n  tm_bubbles(col = \"Local_R2\",\n           size = 0.15,\n           border.col = \"gray60\",\n           border.lwd = 1)"
  },
  {
    "objectID": "hands-on/hoe4.html#reference",
    "href": "hands-on/hoe4.html#reference",
    "title": "Hands-on Exercise 4: Calibrating Hedonic Pricing Model for Private Highrise Property with GWR Method",
    "section": "10 Reference",
    "text": "10 Reference\nGollini I, Lu B, Charlton M, Brunsdon C, Harris P (2015) “GWmodel: an R Package for exploring Spatial Heterogeneity using Geographically Weighted Models”. Journal of Statistical Software, 63(17):1-50, http://www.jstatsoft.org/v63/i17/\nLu B, Harris P, Charlton M, Brunsdon C (2014) “The GWmodel R Package: further topics for exploring Spatial Heterogeneity using Geographically Weighted Models”. Geo-spatial Information Science 17(2): 85-101, http://www.tandfonline.com/doi/abs/10.1080/1009502.2014.917453"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html",
    "href": "hands-on/hoe2-spatialweight.html",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "",
    "text": "Weighing Space Illustration"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#overview",
    "href": "hands-on/hoe2-spatialweight.html#overview",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "1 Overview",
    "text": "1 Overview\n\nSpatial analysis is a method used to understand the significance of spatial relationships between different objects. It’s like figuring out how different pieces on a chessboard influence each other’s moves. Spatial weights are concepts that help us measure and analyze how different locations or regions are related to each other based on their proximity, similarity, or interaction. Spatial weights are numerical values that represent the strength or intensity of the connection between two spatial units, such as points, polygons, or pixels. Applications of spatial weights include detecting patterns, clusters, outliers, hot spots, or cold spots in spatial data, and testing hypotheses about spatial processes or phenomena. summarized from: Getis, 2010\n\nThe data used for practice in this exercise includes a map outlining the boundaries of Hunan county, presented as a geospatial dataset in ESRI shapefile format, and a CSV file named “Hunan_2012.csv,” which includes specific local development indicators for Hunan in the year 2012.\nThis exercise will help to get familiar with importing geospatial data using functions from the sf package, reading CSV files with functions from the readr package, conducting relational joins through functions from the dplyr package, computing spatial weights calculating spatially lagged variables using functions from the spdep package."
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#preparing-the-library-and-data",
    "href": "hands-on/hoe2-spatialweight.html#preparing-the-library-and-data",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "2 Preparing the Library and Data",
    "text": "2 Preparing the Library and Data\nThe following code chunk will import the required library:\n\npacman::p_load(sf, spdep, tmap, tidyverse, knitr)\n\nThe following panel will show how the data is imported and joined\n\nImport ShapefileImport CSVJoin the Geospatial and Aspatial Data\n\n\nthe following code use st_read() from sf package to import Hunan shapefile into simple features Object\n\nhunan &lt;- st_read(dsn = \"../data/geospatial\", layer = \"Hunan\")\n\nReading layer `Hunan' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\nglimpse(hunan)\n\nRows: 88\nColumns: 8\n$ NAME_2     &lt;chr&gt; \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Changde\", \"Cha…\n$ ID_3       &lt;int&gt; 21098, 21100, 21101, 21102, 21103, 21104, 21109, 21110, 211…\n$ NAME_3     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ ENGTYPE_3  &lt;chr&gt; \"County\", \"County\", \"County City\", \"County\", \"County\", \"Cou…\n$ Shape_Leng &lt;dbl&gt; 1.869074, 2.360691, 1.425620, 3.474325, 2.289506, 4.171918,…\n$ Shape_Area &lt;dbl&gt; 0.10056190, 0.19978745, 0.05302413, 0.18908121, 0.11450357,…\n$ County     &lt;chr&gt; \"Anxiang\", \"Hanshou\", \"Jinshi\", \"Li\", \"Linli\", \"Shimen\", \"L…\n$ geometry   &lt;POLYGON [°]&gt; POLYGON ((112.0625 29.75523..., POLYGON ((112.2288 …\n\n\n\n\nthe following code use read_csv() from readr package to import\n\nhunan2012 &lt;- read_csv(\"../data/aspatial/Hunan_2012.csv\")\nglimpse(hunan2012)\n\nRows: 88\nColumns: 29\n$ County      &lt;chr&gt; \"Anhua\", \"Anren\", \"Anxiang\", \"Baojing\", \"Chaling\", \"Changn…\n$ City        &lt;chr&gt; \"Yiyang\", \"Chenzhou\", \"Changde\", \"Hunan West\", \"Zhuzhou\", …\n$ avg_wage    &lt;dbl&gt; 30544, 28058, 31935, 30843, 31251, 28518, 54540, 28597, 33…\n$ deposite    &lt;dbl&gt; 10967.0, 4598.9, 5517.2, 2250.0, 8241.4, 10860.0, 24332.0,…\n$ FAI         &lt;dbl&gt; 6831.7, 6386.1, 3541.0, 1005.4, 6508.4, 7920.0, 33624.0, 1…\n$ Gov_Rev     &lt;dbl&gt; 456.72, 220.57, 243.64, 192.59, 620.19, 769.86, 5350.00, 1…\n$ Gov_Exp     &lt;dbl&gt; 2703.0, 1454.7, 1779.5, 1379.1, 1947.0, 2631.6, 7885.5, 11…\n$ GDP         &lt;dbl&gt; 13225.0, 4941.2, 12482.0, 4087.9, 11585.0, 19886.0, 88009.…\n$ GDPPC       &lt;dbl&gt; 14567, 12761, 23667, 14563, 20078, 24418, 88656, 10132, 17…\n$ GIO         &lt;dbl&gt; 9276.90, 4189.20, 5108.90, 3623.50, 9157.70, 37392.00, 513…\n$ Loan        &lt;dbl&gt; 3954.90, 2555.30, 2806.90, 1253.70, 4287.40, 4242.80, 4053…\n$ NIPCR       &lt;dbl&gt; 3528.3, 3271.8, 7693.7, 4191.3, 3887.7, 9528.0, 17070.0, 3…\n$ Bed         &lt;dbl&gt; 2718, 970, 1931, 927, 1449, 3605, 3310, 582, 2170, 2179, 1…\n$ Emp         &lt;dbl&gt; 494.310, 290.820, 336.390, 195.170, 330.290, 548.610, 670.…\n$ EmpR        &lt;dbl&gt; 441.4, 255.4, 270.5, 145.6, 299.0, 415.1, 452.0, 127.6, 21…\n$ EmpRT       &lt;dbl&gt; 338.0, 99.4, 205.9, 116.4, 154.0, 273.7, 219.4, 94.4, 174.…\n$ Pri_Stu     &lt;dbl&gt; 54.175, 33.171, 19.584, 19.249, 33.906, 81.831, 59.151, 18…\n$ Sec_Stu     &lt;dbl&gt; 32.830, 17.505, 17.819, 11.831, 20.548, 44.485, 39.685, 7.…\n$ Household   &lt;dbl&gt; 290.4, 104.6, 148.1, 73.2, 148.7, 211.2, 300.3, 76.1, 139.…\n$ Household_R &lt;dbl&gt; 234.5, 121.9, 135.4, 69.9, 139.4, 211.7, 248.4, 59.6, 110.…\n$ NOIP        &lt;dbl&gt; 101, 34, 53, 18, 106, 115, 214, 17, 55, 70, 44, 84, 74, 17…\n$ Pop_R       &lt;dbl&gt; 670.3, 243.2, 346.0, 184.1, 301.6, 448.2, 475.1, 189.6, 31…\n$ RSCG        &lt;dbl&gt; 5760.60, 2386.40, 3957.90, 768.04, 4009.50, 5220.40, 22604…\n$ Pop_T       &lt;dbl&gt; 910.8, 388.7, 528.3, 281.3, 578.4, 816.3, 998.6, 256.7, 45…\n$ Agri        &lt;dbl&gt; 4942.253, 2357.764, 4524.410, 1118.561, 3793.550, 6430.782…\n$ Service     &lt;dbl&gt; 5414.5, 3814.1, 14100.0, 541.8, 5444.0, 13074.6, 17726.6, …\n$ Disp_Inc    &lt;dbl&gt; 12373, 16072, 16610, 13455, 20461, 20868, 183252, 12379, 1…\n$ RORP        &lt;dbl&gt; 0.7359464, 0.6256753, 0.6549309, 0.6544614, 0.5214385, 0.5…\n$ ROREmp      &lt;dbl&gt; 0.8929619, 0.8782065, 0.8041262, 0.7460163, 0.9052651, 0.7…\n\n\n\n\nThe following code use left_join() from dplyr package to merge the aspatial data to the geospatial data\n\nhunan &lt;- left_join(hunan,hunan2012)%&gt;%\n  select(1:4, 7, 15)\nhead(hunan, n = 10)\n\nSimple feature collection with 10 features and 6 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 26.28322 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n     NAME_2  ID_3    NAME_3   ENGTYPE_3    County GDPPC\n1   Changde 21098   Anxiang      County   Anxiang 23667\n2   Changde 21100   Hanshou      County   Hanshou 20981\n3   Changde 21101    Jinshi County City    Jinshi 34592\n4   Changde 21102        Li      County        Li 24473\n5   Changde 21103     Linli      County     Linli 25554\n6   Changde 21104    Shimen      County    Shimen 27137\n7  Changsha 21109   Liuyang County City   Liuyang 63118\n8  Changsha 21110 Ningxiang      County Ningxiang 62202\n9  Changsha 21111 Wangcheng      County Wangcheng 70666\n10 Chenzhou 21112     Anren      County     Anren 12761\n                         geometry\n1  POLYGON ((112.0625 29.75523...\n2  POLYGON ((112.2288 29.11684...\n3  POLYGON ((111.8927 29.6013,...\n4  POLYGON ((111.3731 29.94649...\n5  POLYGON ((111.6324 29.76288...\n6  POLYGON ((110.8825 30.11675...\n7  POLYGON ((113.9905 28.5682,...\n8  POLYGON ((112.7181 28.38299...\n9  POLYGON ((112.7914 28.52688...\n10 POLYGON ((113.1757 26.82734..."
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#visualizing-regional-development-indicator",
    "href": "hands-on/hoe2-spatialweight.html#visualizing-regional-development-indicator",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "3 Visualizing Regional Development Indicator",
    "text": "3 Visualizing Regional Development Indicator\nthis section will explore distribution of Gross Domestic Product Per Capita (GDPPC) 2012 in Hunan by creating base map and build choropleth map. qtm() from tmap package is used to build the map.\n\n\nCode\n# Creating The Basemap\nbasemap &lt;- tm_shape(hunan) +\n  tm_polygons() +\n  tm_text(\"NAME_3\", size = 0.5) +\n  tm_layout(main.title = \"Basemap\", main.title.position = \"left\")  # Add title\n\n# Creating The Choropleth Map\ngdppc &lt;- qtm(hunan, \"GDPPC\") +\n  tm_layout(main.title = \"Choropleth Map\", main.title.position = \"left\",\n            legend.outside = TRUE, legend.outside.position = 'right')  # adjust the legend\n\n# show the map\ntmap_arrange(basemap, gdppc, asp=1, ncol=2, widths = c(0.4,0.6))"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#computing-contiguity-spatial-weights",
    "href": "hands-on/hoe2-spatialweight.html#computing-contiguity-spatial-weights",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "4 Computing Contiguity Spatial Weights",
    "text": "4 Computing Contiguity Spatial Weights\n\nContiguity Spatial Weights are used in spatial data analysis to understand how close or connected different geographic areas are to each other. Simply put, if two areas, like counties or neighborhoods, share a border, they’re considered “contiguous” or neighbors. This concept is important for understanding patterns like how a phenomenon in one area might affect neighboring areas. Two main criteria are used to define contiguity: ‘rook’ and ‘queen’. Rook contiguity means areas are neighbors if they share a common edge. Queen contiguity is a bit broader, including areas that share either a common edge or a corner. This is akin to the movements of rook and queen pieces in chess Summarized from: Anselin\n\n\n\n\nQueen vs Rook Contiguity\n\n\nSource: Research Gate\nThis section explore poly2nb() from spdep package to compute contiguity weight matrices. The function builds a neighbours list based on regions with contiguous boundaries. Using “queen” parameter that takes TRUE or FALSE as options, if it is set to TRUE, the function will return a list of first order neighbours using the Queen criteria.\n\nQueenRookVisualising Contiguity Weights\n\n\n\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nThe output summarizes the spatial relationships in Hunan using Queen’s contiguity method. There are 88 regions, and the analysis reveals a total of 448 connections among them. The percentage of nonzero weights, indicating connected regions, is approximately 5.79%. On average, each region has around 5.09 links with other regions. The distribution of links shows that most regions have 4 or 5 connections, with the least connected regions being 30 and 65, each having only 1 link. The most connected region is labeled as 85, with 11 links.\nto list all neighboring polygons of a unit, use wm_q as shown in the following code, where 1 represent the polygon Unit ID being shown, and the output shows the 5 negiboring polygon Unit ID\n\n\nCode\nwm_q[[1]]\n\n\n[1]  2  3  4 57 85\n\n\nto retrieve the name of the county, use the following code\n\n\nCode\nhunan$County[1]\n\n\n[1] \"Anxiang\"\n\n\nto retrieve county names of more than one polygons, use the following example that display the neigbor of Anxiang\n\n\nCode\nhunan$NAME_3[c(2,3,4,57,85)]\n\n\n[1] \"Hanshou\" \"Jinshi\"  \"Li\"      \"Nan\"     \"Taoyuan\"\n\n\nadditionally the GDDPC data of multiple countries can also be displayed using the following code\n\n\nCode\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n\n[1] 20981 34592 24473 21311 22879\n\n\nto display the complete weight matrix which represent the neigbors of each region, use the following code\n\n\nCode\nstr(wm_q)\n\n\nList of 88\n $ : int [1:5] 2 3 4 57 85\n $ : int [1:5] 1 57 58 78 85\n $ : int [1:4] 1 4 5 85\n $ : int [1:4] 1 3 5 6\n $ : int [1:4] 3 4 6 85\n $ : int [1:5] 4 5 69 75 85\n $ : int [1:4] 67 71 74 84\n $ : int [1:7] 9 46 47 56 78 80 86\n $ : int [1:6] 8 66 68 78 84 86\n $ : int [1:8] 16 17 19 20 22 70 72 73\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:3] 11 15 17\n $ : int [1:4] 13 14 17 83\n $ : int [1:5] 10 17 22 72 83\n $ : int [1:7] 10 11 14 15 16 72 83\n $ : int [1:5] 20 22 23 77 83\n $ : int [1:6] 10 20 21 73 74 86\n $ : int [1:7] 10 18 19 21 22 23 82\n $ : int [1:5] 19 20 35 82 86\n $ : int [1:5] 10 16 18 20 83\n $ : int [1:7] 18 20 38 41 77 79 82\n $ : int [1:5] 25 28 31 32 54\n $ : int [1:5] 24 28 31 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:3] 26 29 42\n $ : int [1:5] 24 25 33 49 54\n $ : int [1:3] 27 37 42\n $ : int 33\n $ : int [1:8] 24 25 32 36 39 40 56 81\n $ : int [1:8] 24 31 50 54 55 56 75 85\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 47 80 82 86\n $ : int [1:6] 31 34 40 45 56 80\n $ : int [1:4] 29 42 43 44\n $ : int [1:4] 23 44 77 79\n $ : int [1:5] 31 40 42 43 81\n $ : int [1:6] 31 36 39 43 45 79\n $ : int [1:6] 23 35 45 79 80 82\n $ : int [1:7] 26 27 29 37 39 43 81\n $ : int [1:6] 37 39 40 42 44 79\n $ : int [1:4] 37 38 43 79\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:3] 8 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:5] 32 48 52 54 55\n $ : int [1:3] 48 49 52\n $ : int [1:5] 48 49 50 51 54\n $ : int [1:3] 48 55 75\n $ : int [1:6] 24 28 32 49 50 52\n $ : int [1:5] 32 48 50 53 75\n $ : int [1:7] 8 31 32 36 78 80 85\n $ : int [1:6] 1 2 58 64 76 85\n $ : int [1:5] 2 57 68 76 78\n $ : int [1:4] 60 61 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:7] 12 59 60 62 63 77 87\n $ : int [1:3] 61 77 87\n $ : int [1:4] 12 61 77 83\n $ : int [1:2] 57 76\n $ : int 76\n $ : int [1:5] 9 67 68 76 84\n $ : int [1:4] 7 66 76 84\n $ : int [1:5] 9 58 66 76 78\n $ : int [1:3] 6 75 85\n $ : int [1:3] 10 72 73\n $ : int [1:3] 7 73 74\n $ : int [1:5] 10 11 16 17 70\n $ : int [1:5] 10 19 70 71 74\n $ : int [1:6] 7 19 71 73 84 86\n $ : int [1:6] 6 32 53 55 69 85\n $ : int [1:7] 57 58 64 65 66 67 68\n $ : int [1:7] 18 23 38 61 62 63 83\n $ : int [1:7] 2 8 9 56 58 68 85\n $ : int [1:7] 23 38 40 41 43 44 45\n $ : int [1:8] 8 34 35 36 41 45 47 56\n $ : int [1:6] 25 26 31 33 39 42\n $ : int [1:5] 20 21 23 35 41\n $ : int [1:9] 12 13 15 16 17 18 22 63 77\n $ : int [1:6] 7 9 66 67 74 86\n $ : int [1:11] 1 2 3 5 6 32 56 57 69 75 ...\n $ : int [1:9] 8 9 19 21 35 46 47 74 84\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language poly2nb(pl = hunan, queen = TRUE)\n - attr(*, \"type\")= chr \"queen\"\n - attr(*, \"sym\")= logi TRUE\n\n\n\n\nSimilar to the example of Queen method, Rook method can be executed by changing queen parameter to False\n\n\nCode\nwm_r &lt;- poly2nb(hunan, queen=FALSE)\nsummary(wm_r)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 440 \nPercentage nonzero weights: 5.681818 \nAverage number of links: 5 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 10 \n 2  2 12 20 21 14 11  3  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 10 links\n\n\nAs expected from the stricter condition of Rook compared to Queen, the regions will have less neighbor on average\n\n\nTo create a connectivity graph, we first need to represent polygons as points. In our case, we’re working with polygons, so we’ll use polygon centroids as points for our graph. The common approach is to calculate these centroids using the sf package. To achieve this, we employ the st_centroid function on the geometry column of our spatial object (in this case, hunan). Since we require the coordinates in a separate data frame, we utilize a mapping function. This function applies st_centroid to each element of the geometry column and returns a vector of the same length. We specifically use the map_dbl variation from the purrr package. For latitude and longitude values, we extract them using double bracket notation, [[1]] for longitude and [[2]] for latitude. Finally, we combine these coordinates into a single object using cbind(), and we verify the formatting by checking the first few observations using head().\n\n\nCode\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\n\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\n\ncoords &lt;- cbind(longitude, latitude)\n\nhead(coords)\n\n\n     longitude latitude\n[1,]  112.1531 29.44362\n[2,]  112.0372 28.86489\n[3,]  111.8917 29.47107\n[4,]  111.7031 29.74499\n[5,]  111.6138 29.49258\n[6,]  111.0341 29.79863\n\n\nNext, the following code will be used to display and compare Queen and Rook contiguity neighbours maps\n\n\nCode\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"Queen Contiguity\")\nplot(wm_q, coords, pch = 19, cex = 0.6, add = TRUE, col= \"red\")\nplot(hunan$geometry, border=\"lightgrey\", main=\"Rook Contiguity\")\nplot(wm_r, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#computing-distance-based-neighbours",
    "href": "hands-on/hoe2-spatialweight.html#computing-distance-based-neighbours",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "5 Computing Distance Based Neighbours",
    "text": "5 Computing Distance Based Neighbours\nIn this part, we will explore how to figure out which areas are close to each other using distances, by utilizing dnearneigh() function from the spdep package.\nThis function looks at points on a map and finds their neighbors based on how far apart they are. Range of distances can be set using bounds argument, with a lower limit d1= and an upper limit d2=. If the locations are given in regular coordinates (like x and y on a typical map) and latitude and longitude argument set to true (longlat=TRUE), the function measures distances in kilometers. It does this as if by figuring out how far it is on the Earth’s surface, using something called the WGS84 reference ellipsoid.\n\nThe WGS84 reference ellipsoid is a mathematical model that approximates the shape of the Earth. It’s not a perfect sphere but more like a slightly squashed ball, wider at the equator than at the poles. When measuring distances using this model, it considers the Earth’s curvature. This method provides a more accurate way to measure real distances on the Earth’s surface, especially over long distances where the Earth’s curvature becomes significant. It’s like tracing a line along the surface of an orange, rather than cutting straight through it.\n\nThe following part will explore how to find the right distance cut-off, fixed distance calculation, and adaptive distance calculation.\n\n5.1 Determine the cut-off distance\nTo find the right distance for the analysis, execute the following steps:\n\nUse knearneigh() to get a list of indices representing the k nearest neighbors for each point.\nConvert this list into a neighbor list with knn2nb().\nFind the lengths of these neighbor relationships with nbdists(). Remove any complex structure with unlist().\n\n\n\nCode\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary shows that the maximum distance to the first nearest neighbor is 61.79 km. Use it as threshold to ensure each unit has at least one neighbor.\n\n\n5.2 Computing fixed distance weight matrix\nBased on the previous knowledge, create the distance weight matrix using the specified distance range (0 to 62 km).\n\n\nCode\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\n\nThe “Average number of links: 3.681818” means that, on average, each location is linked to approximately 3.68 other locations within the specified distance range.\n\nWe can inspect the structure of the weight matrix using str() or combining table() and card() of spdep.\n\n\nCode\nstr(wm_d62)\n\n\nList of 88\n $ : int [1:5] 3 4 5 57 64\n $ : int [1:4] 57 58 78 85\n $ : int [1:4] 1 4 5 57\n $ : int [1:3] 1 3 5\n $ : int [1:4] 1 3 4 85\n $ : int 69\n $ : int [1:2] 67 84\n $ : int [1:4] 9 46 47 78\n $ : int [1:4] 8 46 68 84\n $ : int [1:4] 16 22 70 72\n $ : int [1:3] 14 17 72\n $ : int [1:5] 13 60 61 63 83\n $ : int [1:4] 12 15 60 83\n $ : int [1:2] 11 17\n $ : int 13\n $ : int [1:4] 10 17 22 83\n $ : int [1:3] 11 14 16\n $ : int [1:3] 20 22 63\n $ : int [1:5] 20 21 73 74 82\n $ : int [1:5] 18 19 21 22 82\n $ : int [1:6] 19 20 35 74 82 86\n $ : int [1:4] 10 16 18 20\n $ : int [1:3] 41 77 82\n $ : int [1:4] 25 28 31 54\n $ : int [1:4] 24 28 33 81\n $ : int [1:4] 27 33 42 81\n $ : int [1:2] 26 29\n $ : int [1:6] 24 25 33 49 52 54\n $ : int [1:2] 27 37\n $ : int 33\n $ : int [1:2] 24 36\n $ : int 50\n $ : int [1:5] 25 26 28 30 81\n $ : int [1:3] 36 45 80\n $ : int [1:6] 21 41 46 47 80 82\n $ : int [1:5] 31 34 45 56 80\n $ : int [1:2] 29 42\n $ : int [1:3] 44 77 79\n $ : int [1:4] 40 42 43 81\n $ : int [1:3] 39 45 79\n $ : int [1:5] 23 35 45 79 82\n $ : int [1:5] 26 37 39 43 81\n $ : int [1:3] 39 42 44\n $ : int [1:2] 38 43\n $ : int [1:6] 34 36 40 41 79 80\n $ : int [1:5] 8 9 35 47 86\n $ : int [1:5] 8 35 46 80 86\n $ : int [1:5] 50 51 52 53 55\n $ : int [1:4] 28 51 52 54\n $ : int [1:6] 32 48 51 52 54 55\n $ : int [1:4] 48 49 50 52\n $ : int [1:6] 28 48 49 50 51 54\n $ : int [1:2] 48 55\n $ : int [1:5] 24 28 49 50 52\n $ : int [1:4] 48 50 53 75\n $ : int 36\n $ : int [1:5] 1 2 3 58 64\n $ : int [1:5] 2 57 64 66 68\n $ : int [1:3] 60 87 88\n $ : int [1:4] 12 13 59 61\n $ : int [1:5] 12 60 62 63 87\n $ : int [1:4] 61 63 77 87\n $ : int [1:5] 12 18 61 62 83\n $ : int [1:4] 1 57 58 76\n $ : int 76\n $ : int [1:5] 58 67 68 76 84\n $ : int [1:2] 7 66\n $ : int [1:4] 9 58 66 84\n $ : int [1:2] 6 75\n $ : int [1:3] 10 72 73\n $ : int [1:2] 73 74\n $ : int [1:3] 10 11 70\n $ : int [1:4] 19 70 71 74\n $ : int [1:5] 19 21 71 73 86\n $ : int [1:2] 55 69\n $ : int [1:3] 64 65 66\n $ : int [1:3] 23 38 62\n $ : int [1:2] 2 8\n $ : int [1:4] 38 40 41 45\n $ : int [1:5] 34 35 36 45 47\n $ : int [1:5] 25 26 33 39 42\n $ : int [1:6] 19 20 21 23 35 41\n $ : int [1:4] 12 13 16 63\n $ : int [1:4] 7 9 66 68\n $ : int [1:2] 2 5\n $ : int [1:4] 21 46 47 74\n $ : int [1:4] 59 61 62 88\n $ : int [1:2] 59 87\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:88] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 62, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 62\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n\n\nthe output shows for who are the neighbors of each county (shown in unit ID list per row)\n\n\nCode\ntable(hunan$County, card(wm_d62))\n\n\n               \n                1 2 3 4 5 6\n  Anhua         1 0 0 0 0 0\n  Anren         0 0 0 1 0 0\n  Anxiang       0 0 0 0 1 0\n  Baojing       0 0 0 0 1 0\n  Chaling       0 0 1 0 0 0\n  Changning     0 0 1 0 0 0\n  Changsha      0 0 0 1 0 0\n  Chengbu       0 1 0 0 0 0\n  Chenxi        0 0 0 1 0 0\n  Cili          0 1 0 0 0 0\n  Dao           0 0 0 1 0 0\n  Dongan        0 0 1 0 0 0\n  Dongkou       0 0 0 1 0 0\n  Fenghuang     0 0 0 1 0 0\n  Guidong       0 0 1 0 0 0\n  Guiyang       0 0 0 1 0 0\n  Guzhang       0 0 0 0 0 1\n  Hanshou       0 0 0 1 0 0\n  Hengdong      0 0 0 0 1 0\n  Hengnan       0 0 0 0 1 0\n  Hengshan      0 0 0 0 0 1\n  Hengyang      0 0 0 0 0 1\n  Hongjiang     0 0 0 0 1 0\n  Huarong       0 0 0 1 0 0\n  Huayuan       0 0 0 1 0 0\n  Huitong       0 0 0 1 0 0\n  Jiahe         0 0 0 0 1 0\n  Jianghua      0 0 1 0 0 0\n  Jiangyong     0 1 0 0 0 0\n  Jingzhou      0 1 0 0 0 0\n  Jinshi        0 0 0 1 0 0\n  Jishou        0 0 0 0 0 1\n  Lanshan       0 0 0 1 0 0\n  Leiyang       0 0 0 1 0 0\n  Lengshuijiang 0 0 1 0 0 0\n  Li            0 0 1 0 0 0\n  Lianyuan      0 0 0 0 1 0\n  Liling        0 1 0 0 0 0\n  Linli         0 0 0 1 0 0\n  Linwu         0 0 0 1 0 0\n  Linxiang      1 0 0 0 0 0\n  Liuyang       0 1 0 0 0 0\n  Longhui       0 0 1 0 0 0\n  Longshan      0 1 0 0 0 0\n  Luxi          0 0 0 0 1 0\n  Mayang        0 0 0 0 0 1\n  Miluo         0 0 0 0 1 0\n  Nan           0 0 0 0 1 0\n  Ningxiang     0 0 0 1 0 0\n  Ningyuan      0 0 0 0 1 0\n  Pingjiang     0 1 0 0 0 0\n  Qidong        0 0 1 0 0 0\n  Qiyang        0 0 1 0 0 0\n  Rucheng       0 1 0 0 0 0\n  Sangzhi       0 1 0 0 0 0\n  Shaodong      0 0 0 0 1 0\n  Shaoshan      0 0 0 0 1 0\n  Shaoyang      0 0 0 1 0 0\n  Shimen        1 0 0 0 0 0\n  Shuangfeng    0 0 0 0 0 1\n  Shuangpai     0 0 0 1 0 0\n  Suining       0 0 0 0 1 0\n  Taojiang      0 1 0 0 0 0\n  Taoyuan       0 1 0 0 0 0\n  Tongdao       0 1 0 0 0 0\n  Wangcheng     0 0 0 1 0 0\n  Wugang        0 0 1 0 0 0\n  Xiangtan      0 0 0 1 0 0\n  Xiangxiang    0 0 0 0 1 0\n  Xiangyin      0 0 0 1 0 0\n  Xinhua        0 0 0 0 1 0\n  Xinhuang      1 0 0 0 0 0\n  Xinning       0 1 0 0 0 0\n  Xinshao       0 0 0 0 0 1\n  Xintian       0 0 0 0 1 0\n  Xupu          0 1 0 0 0 0\n  Yanling       0 0 1 0 0 0\n  Yizhang       1 0 0 0 0 0\n  Yongshun      0 0 0 1 0 0\n  Yongxing      0 0 0 1 0 0\n  You           0 0 0 1 0 0\n  Yuanjiang     0 0 0 0 1 0\n  Yuanling      1 0 0 0 0 0\n  Yueyang       0 0 1 0 0 0\n  Zhijiang      0 0 0 0 1 0\n  Zhongfang     0 0 0 1 0 0\n  Zhuzhou       0 0 0 0 1 0\n  Zixing        0 0 1 0 0 0\n\n\nCode\nn_comp &lt;- n.comp.nb(wm_d62)\ntable(n_comp$comp.id)\n\n\n\n 1 \n88 \n\n\nthe table shows, for each county, how many neighbors it has.\n\nOverlapping Visualization\nThe red lines represent 1st nearest neighbors, while the black lines are links within the 62 km cut-off distance.\n\n\nCode\nplot(hunan$geometry, border=\"lightgrey\")\nplot(wm_d62, coords, add=TRUE)\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\n\n\n\n\n\n\n\nSide by Side Visualization\n\n\nCode\npar(mfrow=c(1,2))\nplot(hunan$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(hunan$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d62, coords, add=TRUE, pch = 19, cex = 0.6)\n\n\n\n\n\n\n\n\n5.3 Computing adaptive distance weight matrix\nUsing fixed distance, densely settled urban areas tend to have more neigbours compared to rural. Having many neighbours smoothes the neighbour relationship across more neighbours. Number of neighbors can be adapted by accepting asymmetric neighbours or imposing symmetry.\nThe following code chunk impose 6 neighbors in the argument, hence the average number of links is 6 as well.\n\n\nCode\nknn6 &lt;- knn2nb(knearneigh(coords, k=6))\nknn6\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 528 \nPercentage nonzero weights: 6.818182 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\n\nVisualize the weight matrix.\n\n\nCode\nplot(hunan$geometry, border=\"lightgrey\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#weights-based-on-idw",
    "href": "hands-on/hoe2-spatialweight.html#weights-based-on-idw",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "6 Weights based on IDW",
    "text": "6 Weights based on IDW\nAnother method to derive spatial weight matrix is based on Inversed Distance method (IDW).\nCompute distance of areas using nbdists() of spdep.\n\n\nCode\ndist &lt;- nbdists(wm_q, coords, longlat = TRUE)\nids &lt;- lapply(dist, function(x) 1/(x))\nids\n\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n[[2]]\n[1] 0.01535405 0.01764308 0.01925924 0.02323898 0.01719350\n\n[[3]]\n[1] 0.03916350 0.02822040 0.03695795 0.01395765\n\n[[4]]\n[1] 0.01820896 0.02822040 0.03414741 0.01539065\n\n[[5]]\n[1] 0.03695795 0.03414741 0.01524598 0.01618354\n\n[[6]]\n[1] 0.015390649 0.015245977 0.021748129 0.011883901 0.009810297\n\n[[7]]\n[1] 0.01708612 0.01473997 0.01150924 0.01872915\n\n[[8]]\n[1] 0.02022144 0.03453056 0.02529256 0.01036340 0.02284457 0.01500600 0.01515314\n\n[[9]]\n[1] 0.02022144 0.01574888 0.02109502 0.01508028 0.02902705 0.01502980\n\n[[10]]\n[1] 0.02281552 0.01387777 0.01538326 0.01346650 0.02100510 0.02631658 0.01874863\n[8] 0.01500046\n\n[[11]]\n[1] 0.01882869 0.02243492 0.02247473\n\n[[12]]\n[1] 0.02779227 0.02419652 0.02333385 0.02986130 0.02335429\n\n[[13]]\n[1] 0.02779227 0.02650020 0.02670323 0.01714243\n\n[[14]]\n[1] 0.01882869 0.01233868 0.02098555\n\n[[15]]\n[1] 0.02650020 0.01233868 0.01096284 0.01562226\n\n[[16]]\n[1] 0.02281552 0.02466962 0.02765018 0.01476814 0.01671430\n\n[[17]]\n[1] 0.01387777 0.02243492 0.02098555 0.01096284 0.02466962 0.01593341 0.01437996\n\n[[18]]\n[1] 0.02039779 0.02032767 0.01481665 0.01473691 0.01459380\n\n[[19]]\n[1] 0.01538326 0.01926323 0.02668415 0.02140253 0.01613589 0.01412874\n\n[[20]]\n[1] 0.01346650 0.02039779 0.01926323 0.01723025 0.02153130 0.01469240 0.02327034\n\n[[21]]\n[1] 0.02668415 0.01723025 0.01766299 0.02644986 0.02163800\n\n[[22]]\n[1] 0.02100510 0.02765018 0.02032767 0.02153130 0.01489296\n\n[[23]]\n[1] 0.01481665 0.01469240 0.01401432 0.02246233 0.01880425 0.01530458 0.01849605\n\n[[24]]\n[1] 0.02354598 0.01837201 0.02607264 0.01220154 0.02514180\n\n[[25]]\n[1] 0.02354598 0.02188032 0.01577283 0.01949232 0.02947957\n\n[[26]]\n[1] 0.02155798 0.01745522 0.02212108 0.02220532\n\n[[27]]\n[1] 0.02155798 0.02490625 0.01562326\n\n[[28]]\n[1] 0.01837201 0.02188032 0.02229549 0.03076171 0.02039506\n\n[[29]]\n[1] 0.02490625 0.01686587 0.01395022\n\n[[30]]\n[1] 0.02090587\n\n[[31]]\n[1] 0.02607264 0.01577283 0.01219005 0.01724850 0.01229012 0.01609781 0.01139438\n[8] 0.01150130\n\n[[32]]\n[1] 0.01220154 0.01219005 0.01712515 0.01340413 0.01280928 0.01198216 0.01053374\n[8] 0.01065655\n\n[[33]]\n[1] 0.01949232 0.01745522 0.02229549 0.02090587 0.01979045\n\n[[34]]\n[1] 0.03113041 0.03589551 0.02882915\n\n[[35]]\n[1] 0.01766299 0.02185795 0.02616766 0.02111721 0.02108253 0.01509020\n\n[[36]]\n[1] 0.01724850 0.03113041 0.01571707 0.01860991 0.02073549 0.01680129\n\n[[37]]\n[1] 0.01686587 0.02234793 0.01510990 0.01550676\n\n[[38]]\n[1] 0.01401432 0.02407426 0.02276151 0.01719415\n\n[[39]]\n[1] 0.01229012 0.02172543 0.01711924 0.02629732 0.01896385\n\n[[40]]\n[1] 0.01609781 0.01571707 0.02172543 0.01506473 0.01987922 0.01894207\n\n[[41]]\n[1] 0.02246233 0.02185795 0.02205991 0.01912542 0.01601083 0.01742892\n\n[[42]]\n[1] 0.02212108 0.01562326 0.01395022 0.02234793 0.01711924 0.01836831 0.01683518\n\n[[43]]\n[1] 0.01510990 0.02629732 0.01506473 0.01836831 0.03112027 0.01530782\n\n[[44]]\n[1] 0.01550676 0.02407426 0.03112027 0.01486508\n\n[[45]]\n[1] 0.03589551 0.01860991 0.01987922 0.02205991 0.02107101 0.01982700\n\n[[46]]\n[1] 0.03453056 0.04033752 0.02689769\n\n[[47]]\n[1] 0.02529256 0.02616766 0.04033752 0.01949145 0.02181458\n\n[[48]]\n[1] 0.02313819 0.03370576 0.02289485 0.01630057 0.01818085\n\n[[49]]\n[1] 0.03076171 0.02138091 0.02394529 0.01990000\n\n[[50]]\n[1] 0.01712515 0.02313819 0.02551427 0.02051530 0.02187179\n\n[[51]]\n[1] 0.03370576 0.02138091 0.02873854\n\n[[52]]\n[1] 0.02289485 0.02394529 0.02551427 0.02873854 0.03516672\n\n[[53]]\n[1] 0.01630057 0.01979945 0.01253977\n\n[[54]]\n[1] 0.02514180 0.02039506 0.01340413 0.01990000 0.02051530 0.03516672\n\n[[55]]\n[1] 0.01280928 0.01818085 0.02187179 0.01979945 0.01882298\n\n[[56]]\n[1] 0.01036340 0.01139438 0.01198216 0.02073549 0.01214479 0.01362855 0.01341697\n\n[[57]]\n[1] 0.028079221 0.017643082 0.031423501 0.029114131 0.013520292 0.009903702\n\n[[58]]\n[1] 0.01925924 0.03142350 0.02722997 0.01434859 0.01567192\n\n[[59]]\n[1] 0.01696711 0.01265572 0.01667105 0.01785036\n\n[[60]]\n[1] 0.02419652 0.02670323 0.01696711 0.02343040\n\n[[61]]\n[1] 0.02333385 0.01265572 0.02343040 0.02514093 0.02790764 0.01219751 0.02362452\n\n[[62]]\n[1] 0.02514093 0.02002219 0.02110260\n\n[[63]]\n[1] 0.02986130 0.02790764 0.01407043 0.01805987\n\n[[64]]\n[1] 0.02911413 0.01689892\n\n[[65]]\n[1] 0.02471705\n\n[[66]]\n[1] 0.01574888 0.01726461 0.03068853 0.01954805 0.01810569\n\n[[67]]\n[1] 0.01708612 0.01726461 0.01349843 0.01361172\n\n[[68]]\n[1] 0.02109502 0.02722997 0.03068853 0.01406357 0.01546511\n\n[[69]]\n[1] 0.02174813 0.01645838 0.01419926\n\n[[70]]\n[1] 0.02631658 0.01963168 0.02278487\n\n[[71]]\n[1] 0.01473997 0.01838483 0.03197403\n\n[[72]]\n[1] 0.01874863 0.02247473 0.01476814 0.01593341 0.01963168\n\n[[73]]\n[1] 0.01500046 0.02140253 0.02278487 0.01838483 0.01652709\n\n[[74]]\n[1] 0.01150924 0.01613589 0.03197403 0.01652709 0.01342099 0.02864567\n\n[[75]]\n[1] 0.011883901 0.010533736 0.012539774 0.018822977 0.016458383 0.008217581\n\n[[76]]\n[1] 0.01352029 0.01434859 0.01689892 0.02471705 0.01954805 0.01349843 0.01406357\n\n[[77]]\n[1] 0.014736909 0.018804247 0.022761507 0.012197506 0.020022195 0.014070428\n[7] 0.008440896\n\n[[78]]\n[1] 0.02323898 0.02284457 0.01508028 0.01214479 0.01567192 0.01546511 0.01140779\n\n[[79]]\n[1] 0.01530458 0.01719415 0.01894207 0.01912542 0.01530782 0.01486508 0.02107101\n\n[[80]]\n[1] 0.01500600 0.02882915 0.02111721 0.01680129 0.01601083 0.01982700 0.01949145\n[8] 0.01362855\n\n[[81]]\n[1] 0.02947957 0.02220532 0.01150130 0.01979045 0.01896385 0.01683518\n\n[[82]]\n[1] 0.02327034 0.02644986 0.01849605 0.02108253 0.01742892\n\n[[83]]\n[1] 0.023354289 0.017142433 0.015622258 0.016714303 0.014379961 0.014593799\n[7] 0.014892965 0.018059871 0.008440896\n\n[[84]]\n[1] 0.01872915 0.02902705 0.01810569 0.01361172 0.01342099 0.01297994\n\n[[85]]\n [1] 0.011451133 0.017193502 0.013957649 0.016183544 0.009810297 0.010656545\n [7] 0.013416965 0.009903702 0.014199260 0.008217581 0.011407794\n\n[[86]]\n[1] 0.01515314 0.01502980 0.01412874 0.02163800 0.01509020 0.02689769 0.02181458\n[8] 0.02864567 0.01297994\n\n[[87]]\n[1] 0.01667105 0.02362452 0.02110260 0.02058034\n\n[[88]]\n[1] 0.01785036 0.02058034\n\n\nAssign equal weights (style=“W”) to neighboring polygons. It’s calculated by assigning the fraction 1/(#ofneighbors) to each neighboring county then summing the weighted income values.\n\nOne downside of using this approach is that regions at the edges of the study area might rely on fewer neighboring regions. This could lead to either overestimating or underestimating the real spatial connections in the data.\nFor a stronger and more reliable choice, you can use “style=B.”\n\n\n\nCode\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nBe careful when setting zero.policy=TRUE because it lets you have lists of regions that are not neighbors. This can be risky because you might not notice if some neighbors are missing in your data. On the other hand, using zero.policy=FALSE would result in an error if there are missing neighbors.\n\nCheck the weight of the first polygon’s eight neighbors with the following code chunk.\n\n\nCode\nrswm_q$weights[10]\n\n\n[[1]]\n[1] 0.125 0.125 0.125 0.125 0.125 0.125 0.125 0.125\n\n\nEach neighbor gets a share of 0.125 from the total weight. This implies that when R calculates the average income of neighboring areas, it multiplies each neighbor’s income by 0.2 before adding them up.\nWe can apply a similar approach to create a distance weight matrix that is standardized by rows.\n\n\nCode\nrswm_ids &lt;- nb2listw(wm_q, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1     S2\nB 88 7744 8.786867 0.3776535 3.8137\n\n\n\n\nCode\nrswm_ids$weights[1]\n\n\n[[1]]\n[1] 0.01535405 0.03916350 0.01820896 0.02807922 0.01145113\n\n\n\n\nCode\nsummary(unlist(rswm_ids$weights))\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.008218 0.015088 0.018739 0.019614 0.022823 0.040338"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#application-of-spatial-weight-matrix",
    "href": "hands-on/hoe2-spatialweight.html#application-of-spatial-weight-matrix",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "7 Application of Spatial Weight Matrix",
    "text": "7 Application of Spatial Weight Matrix\nThis part will explore how to create four types of spatial lagged variables as shown in the panel.\n\nrow-standardized weights The following code computes the average neighbor GDPPC. These values are called spatially lagged values.Spatial lag as a sum of neighboring valuesSpatial window averageSpatial window sum\n\n\n\n\nCode\nGDPPC.lag &lt;- lag.listw(rswm_q, hunan$GDPPC)\nGDPPC.lag\n\n\n [1] 24847.20 22724.80 24143.25 27737.50 27270.25 21248.80 43747.00 33582.71\n [9] 45651.17 32027.62 32671.00 20810.00 25711.50 30672.33 33457.75 31689.20\n[17] 20269.00 23901.60 25126.17 21903.43 22718.60 25918.80 20307.00 20023.80\n[25] 16576.80 18667.00 14394.67 19848.80 15516.33 20518.00 17572.00 15200.12\n[33] 18413.80 14419.33 24094.50 22019.83 12923.50 14756.00 13869.80 12296.67\n[41] 15775.17 14382.86 11566.33 13199.50 23412.00 39541.00 36186.60 16559.60\n[49] 20772.50 19471.20 19827.33 15466.80 12925.67 18577.17 14943.00 24913.00\n[57] 25093.00 24428.80 17003.00 21143.75 20435.00 17131.33 24569.75 23835.50\n[65] 26360.00 47383.40 55157.75 37058.00 21546.67 23348.67 42323.67 28938.60\n[73] 25880.80 47345.67 18711.33 29087.29 20748.29 35933.71 15439.71 29787.50\n[81] 18145.00 21617.00 29203.89 41363.67 22259.09 44939.56 16902.00 16930.00\n\n\nRecalling the GDPPC values obtained earlier for these five counties\n\n\nCode\nnb1 &lt;- wm_q[[1]]\nnb1 &lt;- hunan$GDPPC[nb1]\nnb1\n\n\n[1] 20981 34592 24473 21311 22879\n\n\n\nSpatial Lag with Row-Standardized Weights method measures how much an observation at one location is influenced by observations at neighboring locations. The spatial lag is calculated as a weighted average, where the weights are standardized so that they add up to one for each location. This means that each location’s value is influenced equally by its neighbors, creating a balanced representation of neighboring influence. summarized from: Anselin\n\nWe can add the spatially lagged GDPPC values to the hunan sf data frame using the following code:\n\n\nCode\nlag.list &lt;- list(hunan$NAME_3, lag.listw(rswm_q, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag.list)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag GDPPC\")\nhunan &lt;- left_join(hunan,lag.res)\n\n\nThe table below shows the average neighboring income values for each region.\n\n\nCode\nhead(hunan)\n\n\nSimple feature collection with 6 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 110.4922 ymin: 28.61762 xmax: 112.3013 ymax: 30.12812\nGeodetic CRS:  WGS 84\n   NAME_2  ID_3  NAME_3   ENGTYPE_3  County GDPPC lag GDPPC\n1 Changde 21098 Anxiang      County Anxiang 23667  24847.20\n2 Changde 21100 Hanshou      County Hanshou 20981  22724.80\n3 Changde 21101  Jinshi County City  Jinshi 34592  24143.25\n4 Changde 21102      Li      County      Li 24473  27737.50\n5 Changde 21103   Linli      County   Linli 25554  27270.25\n6 Changde 21104  Shimen      County  Shimen 27137  21248.80\n                        geometry\n1 POLYGON ((112.0625 29.75523...\n2 POLYGON ((112.2288 29.11684...\n3 POLYGON ((111.8927 29.6013,...\n4 POLYGON ((111.3731 29.94649...\n5 POLYGON ((111.6324 29.76288...\n6 POLYGON ((110.8825 30.11675...\n\n\nNext, plot both GDPPC and spatially lagged GDPPC for comparison.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_gdppc &lt;- qtm(hunan, \"lag GDPPC\")\ntmap_arrange(gdppc, lag_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nusing row-standardized weights, the distribution of lagged GDPPC on the right shows how neighboring countries becomes more similar. note that some region which was originally much richer than it’s neighbors, becomes poorer than its neighbors while it’s neighbor becomes richer. this indicates caution when using the row-standardized weights\n\n\n\nWe can calculate spatial lag as a sum of neighboring values using binary weights. This involves going back to the neighbors list, applying a function to assign binary weights, and explicitly assigning these weights in the nb2listw function.\nWe start by assigning a value of 1 to each neighbor using lapply:\n\n\nCode\nb_weights &lt;- lapply(wm_q, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_q, \n                       glist = b_weights, \n                       style = \"B\")\nb_weights2\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 88 7744 448 896 10224\n\n\nWith the proper weights assigned, compute the lag variable from our weights and GDPPC.\n\n\nCode\nlag_sum &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nlag.res &lt;- as.data.frame(lag_sum)\ncolnames(lag.res) &lt;- c(\"NAME_3\", \"lag_sum GDPPC\")\n\n\nexamine the result:\n\n\nCode\nlag_sum\n\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 124236 113624  96573 110950 109081 106244 174988 235079 273907 256221\n[11]  98013 104050 102846  92017 133831 158446 141883 119508 150757 153324\n[21] 113593 129594 142149 100119  82884  74668  43184  99244  46549  20518\n[31] 140576 121601  92069  43258 144567 132119  51694  59024  69349  73780\n[41]  94651 100680  69398  52798 140472 118623 180933  82798  83090  97356\n[51]  59482  77334  38777 111463  74715 174391 150558 122144  68012  84575\n[61] 143045  51394  98279  47671  26360 236917 220631 185290  64640  70046\n[71] 126971 144693 129404 284074 112268 203611 145238 251536 108078 238300\n[81] 108870 108085 262835 248182 244850 404456  67608  33860\n\n\n\nThis method involves summing up the values of neighboring observations to calculate the spatial lag. Unlike the row-standardized method, this doesn’t involve any kind of averaging or standardization, so the total influence is simply the sum of the influences from each neighbor. This approach is particularly useful when dealing with binary data (like 0 or 1 values). summarized from: Anselin\n\nappend the lag_sum GDPPC field to the hunan sf data frame:\n\n\nCode\nhunan &lt;- left_join(hunan, lag.res)\n\n\nplot both GDPPC and Spatial Lag Sum GDPPC for comparison.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\nlag_sum_gdppc &lt;- qtm(hunan, \"lag_sum GDPPC\")\ntmap_arrange(gdppc, lag_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\n\nSpatial window average uses row-standardized weights and includes the diagonal element. To achieve this in R, we need to add the diagonal element to the neighbors’ structure before assigning weights.\nAdd the diagonal element using include.self() from spdep\n\n\nCode\nwm_qs &lt;- include.self(wm_q)\n\n\nobtain weights with nb2listw()\n\n\nCode\nwm_qs &lt;- nb2listw(wm_qs)\nwm_qs\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 30.90265 357.5308\n\n\ncreate the lag variable from our weight structure and GDPPC variable:\n\n\nCode\nlag_w_avg_gpdpc &lt;- lag.listw(wm_qs, \n                             hunan$GDPPC)\nlag_w_avg_gpdpc\n\n\n [1] 24650.50 22434.17 26233.00 27084.60 26927.00 22230.17 47621.20 37160.12\n [9] 49224.71 29886.89 26627.50 22690.17 25366.40 25825.75 30329.00 32682.83\n[17] 25948.62 23987.67 25463.14 21904.38 23127.50 25949.83 20018.75 19524.17\n[25] 18955.00 17800.40 15883.00 18831.33 14832.50 17965.00 17159.89 16199.44\n[33] 18764.50 26878.75 23188.86 20788.14 12365.20 15985.00 13764.83 11907.43\n[41] 17128.14 14593.62 11644.29 12706.00 21712.29 43548.25 35049.00 16226.83\n[49] 19294.40 18156.00 19954.75 18145.17 12132.75 18419.29 14050.83 23619.75\n[57] 24552.71 24733.67 16762.60 20932.60 19467.75 18334.00 22541.00 26028.00\n[65] 29128.50 46569.00 47576.60 36545.50 20838.50 22531.00 42115.50 27619.00\n[73] 27611.33 44523.29 18127.43 28746.38 20734.50 33880.62 14716.38 28516.22\n[81] 18086.14 21244.50 29568.80 48119.71 22310.75 43151.60 17133.40 17009.33\n\n\nconvert the lag variable listw object into a data.frame:\n\n\nCode\nlag.list.wm_qs &lt;- list(hunan$NAME_3, lag.listw(wm_qs, hunan$GDPPC))\nlag_wm_qs.res &lt;- as.data.frame(lag.list.wm_qs)\ncolnames(lag_wm_qs.res) &lt;- c(\"NAME_3\", \"lag_window_avg GDPPC\")\n\n\nappend lag_window_avg GDPPC values to hunan:\n\n\nCode\nhunan &lt;- left_join(hunan, lag_wm_qs.res)\n\n\ncompare the values of lag GDPPC and Spatial window average by using kable()\n\n\nCode\nhunan %&gt;%\n  select(\"County\", \n         \"lag GDPPC\", \n         \"lag_window_avg GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\nCounty\nlag GDPPC\nlag_window_avg GDPPC\ngeometry\n\n\n\n\nAnxiang\n24847.20\n24650.50\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n22724.80\n22434.17\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n24143.25\n26233.00\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n27737.50\n27084.60\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n27270.25\n26927.00\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n21248.80\n22230.17\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n43747.00\n47621.20\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n33582.71\n37160.12\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n45651.17\n49224.71\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n32027.62\n29886.89\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n32671.00\n26627.50\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n20810.00\n22690.17\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n25711.50\n25366.40\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n30672.33\n25825.75\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n33457.75\n30329.00\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n31689.20\n32682.83\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n20269.00\n25948.62\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n23901.60\n23987.67\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n25126.17\n25463.14\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n21903.43\n21904.38\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n22718.60\n23127.50\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n25918.80\n25949.83\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n20307.00\n20018.75\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n20023.80\n19524.17\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n16576.80\n18955.00\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n18667.00\n17800.40\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n14394.67\n15883.00\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n19848.80\n18831.33\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n15516.33\n14832.50\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518.00\n17965.00\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n17572.00\n17159.89\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n15200.12\n16199.44\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n18413.80\n18764.50\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n14419.33\n26878.75\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n24094.50\n23188.86\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n22019.83\n20788.14\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n12923.50\n12365.20\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n14756.00\n15985.00\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n13869.80\n13764.83\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n12296.67\n11907.43\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n15775.17\n17128.14\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n14382.86\n14593.62\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n11566.33\n11644.29\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n13199.50\n12706.00\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n23412.00\n21712.29\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n39541.00\n43548.25\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n36186.60\n35049.00\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n16559.60\n16226.83\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n20772.50\n19294.40\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n19471.20\n18156.00\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n19827.33\n19954.75\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n15466.80\n18145.17\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n12925.67\n12132.75\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n18577.17\n18419.29\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n14943.00\n14050.83\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n24913.00\n23619.75\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n25093.00\n24552.71\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n24428.80\n24733.67\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n17003.00\n16762.60\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n21143.75\n20932.60\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n20435.00\n19467.75\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n17131.33\n18334.00\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n24569.75\n22541.00\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n23835.50\n26028.00\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360.00\n29128.50\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n47383.40\n46569.00\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n55157.75\n47576.60\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n37058.00\n36545.50\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n21546.67\n20838.50\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n23348.67\n22531.00\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n42323.67\n42115.50\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n28938.60\n27619.00\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n25880.80\n27611.33\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n47345.67\n44523.29\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n18711.33\n18127.43\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n29087.29\n28746.38\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n20748.29\n20734.50\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n35933.71\n33880.62\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n15439.71\n14716.38\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n29787.50\n28516.22\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n18145.00\n18086.14\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n21617.00\n21244.50\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n29203.89\n29568.80\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n41363.67\n48119.71\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n22259.09\n22310.75\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n44939.56\n43151.60\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n16902.00\n17133.40\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n16930.00\n17009.33\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nuse qtm() to plot the lag_gdppc and w_ave_gdppc maps next to each other for quick comparison:\n\n\nCode\nw_avg_gdppc &lt;- qtm(hunan, \"lag_window_avg GDPPC\")\ntmap_arrange(lag_gdppc, w_avg_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nThis concept extends the idea of spatial lag by including the observation itself in the average calculation. It’s like creating a window that includes the value at a specific location and its neighbors, and then computing the average of all these values. This method is useful when you want to take into account both the value at a specific point and the influence of its surroundings. summarized from: Anselin\n\n\n\nSpatial window sum is similar to window average but without using row-standardized weights.\nLet’s add the diagonal element to the neighbor list:\n\n\nCode\nwm_qs &lt;- include.self(wm_q)\n\n\nNext, we assign binary weights:\n\n\nCode\nb_weights &lt;- lapply(wm_qs, function(x) 0*x + 1)\nb_weights2 &lt;- nb2listw(wm_qs, glist = b_weights, style = \"B\")\nb_weights2\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 536 \nPercentage nonzero weights: 6.921488 \nAverage number of links: 6.090909 \n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 536 1072 14160\n\n\nNow, we can compute the lag variable with lag.listw():\n\n\nCode\nw_sum_gdppc &lt;- list(hunan$NAME_3, lag.listw(b_weights2, hunan$GDPPC))\nw_sum_gdppc\n\n\n[[1]]\n [1] \"Anxiang\"       \"Hanshou\"       \"Jinshi\"        \"Li\"           \n [5] \"Linli\"         \"Shimen\"        \"Liuyang\"       \"Ningxiang\"    \n [9] \"Wangcheng\"     \"Anren\"         \"Guidong\"       \"Jiahe\"        \n[13] \"Linwu\"         \"Rucheng\"       \"Yizhang\"       \"Yongxing\"     \n[17] \"Zixing\"        \"Changning\"     \"Hengdong\"      \"Hengnan\"      \n[21] \"Hengshan\"      \"Leiyang\"       \"Qidong\"        \"Chenxi\"       \n[25] \"Zhongfang\"     \"Huitong\"       \"Jingzhou\"      \"Mayang\"       \n[29] \"Tongdao\"       \"Xinhuang\"      \"Xupu\"          \"Yuanling\"     \n[33] \"Zhijiang\"      \"Lengshuijiang\" \"Shuangfeng\"    \"Xinhua\"       \n[37] \"Chengbu\"       \"Dongan\"        \"Dongkou\"       \"Longhui\"      \n[41] \"Shaodong\"      \"Suining\"       \"Wugang\"        \"Xinning\"      \n[45] \"Xinshao\"       \"Shaoshan\"      \"Xiangxiang\"    \"Baojing\"      \n[49] \"Fenghuang\"     \"Guzhang\"       \"Huayuan\"       \"Jishou\"       \n[53] \"Longshan\"      \"Luxi\"          \"Yongshun\"      \"Anhua\"        \n[57] \"Nan\"           \"Yuanjiang\"     \"Jianghua\"      \"Lanshan\"      \n[61] \"Ningyuan\"      \"Shuangpai\"     \"Xintian\"       \"Huarong\"      \n[65] \"Linxiang\"      \"Miluo\"         \"Pingjiang\"     \"Xiangyin\"     \n[69] \"Cili\"          \"Chaling\"       \"Liling\"        \"Yanling\"      \n[73] \"You\"           \"Zhuzhou\"       \"Sangzhi\"       \"Yueyang\"      \n[77] \"Qiyang\"        \"Taojiang\"      \"Shaoyang\"      \"Lianyuan\"     \n[81] \"Hongjiang\"     \"Hengyang\"      \"Guiyang\"       \"Changsha\"     \n[85] \"Taoyuan\"       \"Xiangtan\"      \"Dao\"           \"Jiangyong\"    \n\n[[2]]\n [1] 147903 134605 131165 135423 134635 133381 238106 297281 344573 268982\n[11] 106510 136141 126832 103303 151645 196097 207589 143926 178242 175235\n[21] 138765 155699 160150 117145 113730  89002  63532 112988  59330  35930\n[31] 154439 145795 112587 107515 162322 145517  61826  79925  82589  83352\n[41] 119897 116749  81510  63530 151986 174193 210294  97361  96472 108936\n[51]  79819 108871  48531 128935  84305 188958 171869 148402  83813 104663\n[61] 155742  73336 112705  78084  58257 279414 237883 219273  83354  90124\n[71] 168462 165714 165668 311663 126892 229971 165876 271045 117731 256646\n[81] 126603 127467 295688 336838 267729 431516  85667  51028\n\n\nNext, we convert the lag variable listw object into a data.frame:\n\n\nCode\nw_sum_gdppc.res &lt;- as.data.frame(w_sum_gdppc)\ncolnames(w_sum_gdppc.res) &lt;- c(\"NAME_3\", \"w_sum GDPPC\")\n\n\nNow, we append w_sum GDPPC values to hunan:\n\n\nCode\nhunan &lt;- left_join(hunan, w_sum_gdppc.res)\n\n\nuse kable() To compare the values of lag GDPPC and Spatial window average\n\n\nCode\nhunan %&gt;%\n  select(\"County\", \"lag_sum GDPPC\", \"w_sum GDPPC\") %&gt;%\n  kable()\n\n\n\n\n\n\n\n\n\n\n\nCounty\nlag_sum GDPPC\nw_sum GDPPC\ngeometry\n\n\n\n\nAnxiang\n124236\n147903\nPOLYGON ((112.0625 29.75523…\n\n\nHanshou\n113624\n134605\nPOLYGON ((112.2288 29.11684…\n\n\nJinshi\n96573\n131165\nPOLYGON ((111.8927 29.6013,…\n\n\nLi\n110950\n135423\nPOLYGON ((111.3731 29.94649…\n\n\nLinli\n109081\n134635\nPOLYGON ((111.6324 29.76288…\n\n\nShimen\n106244\n133381\nPOLYGON ((110.8825 30.11675…\n\n\nLiuyang\n174988\n238106\nPOLYGON ((113.9905 28.5682,…\n\n\nNingxiang\n235079\n297281\nPOLYGON ((112.7181 28.38299…\n\n\nWangcheng\n273907\n344573\nPOLYGON ((112.7914 28.52688…\n\n\nAnren\n256221\n268982\nPOLYGON ((113.1757 26.82734…\n\n\nGuidong\n98013\n106510\nPOLYGON ((114.1799 26.20117…\n\n\nJiahe\n104050\n136141\nPOLYGON ((112.4425 25.74358…\n\n\nLinwu\n102846\n126832\nPOLYGON ((112.5914 25.55143…\n\n\nRucheng\n92017\n103303\nPOLYGON ((113.6759 25.87578…\n\n\nYizhang\n133831\n151645\nPOLYGON ((113.2621 25.68394…\n\n\nYongxing\n158446\n196097\nPOLYGON ((113.3169 26.41843…\n\n\nZixing\n141883\n207589\nPOLYGON ((113.7311 26.16259…\n\n\nChangning\n119508\n143926\nPOLYGON ((112.6144 26.60198…\n\n\nHengdong\n150757\n178242\nPOLYGON ((113.1056 27.21007…\n\n\nHengnan\n153324\n175235\nPOLYGON ((112.7599 26.98149…\n\n\nHengshan\n113593\n138765\nPOLYGON ((112.607 27.4689, …\n\n\nLeiyang\n129594\n155699\nPOLYGON ((112.9996 26.69276…\n\n\nQidong\n142149\n160150\nPOLYGON ((111.7818 27.0383,…\n\n\nChenxi\n100119\n117145\nPOLYGON ((110.2624 28.21778…\n\n\nZhongfang\n82884\n113730\nPOLYGON ((109.9431 27.72858…\n\n\nHuitong\n74668\n89002\nPOLYGON ((109.9419 27.10512…\n\n\nJingzhou\n43184\n63532\nPOLYGON ((109.8186 26.75842…\n\n\nMayang\n99244\n112988\nPOLYGON ((109.795 27.98008,…\n\n\nTongdao\n46549\n59330\nPOLYGON ((109.9294 26.46561…\n\n\nXinhuang\n20518\n35930\nPOLYGON ((109.227 27.43733,…\n\n\nXupu\n140576\n154439\nPOLYGON ((110.7189 28.30485…\n\n\nYuanling\n121601\n145795\nPOLYGON ((110.9652 28.99895…\n\n\nZhijiang\n92069\n112587\nPOLYGON ((109.8818 27.60661…\n\n\nLengshuijiang\n43258\n107515\nPOLYGON ((111.5307 27.81472…\n\n\nShuangfeng\n144567\n162322\nPOLYGON ((112.263 27.70421,…\n\n\nXinhua\n132119\n145517\nPOLYGON ((111.3345 28.19642…\n\n\nChengbu\n51694\n61826\nPOLYGON ((110.4455 26.69317…\n\n\nDongan\n59024\n79925\nPOLYGON ((111.4531 26.86812…\n\n\nDongkou\n69349\n82589\nPOLYGON ((110.6622 27.37305…\n\n\nLonghui\n73780\n83352\nPOLYGON ((110.985 27.65983,…\n\n\nShaodong\n94651\n119897\nPOLYGON ((111.9054 27.40254…\n\n\nSuining\n100680\n116749\nPOLYGON ((110.389 27.10006,…\n\n\nWugang\n69398\n81510\nPOLYGON ((110.9878 27.03345…\n\n\nXinning\n52798\n63530\nPOLYGON ((111.0736 26.84627…\n\n\nXinshao\n140472\n151986\nPOLYGON ((111.6013 27.58275…\n\n\nShaoshan\n118623\n174193\nPOLYGON ((112.5391 27.97742…\n\n\nXiangxiang\n180933\n210294\nPOLYGON ((112.4549 28.05783…\n\n\nBaojing\n82798\n97361\nPOLYGON ((109.7015 28.82844…\n\n\nFenghuang\n83090\n96472\nPOLYGON ((109.5239 28.19206…\n\n\nGuzhang\n97356\n108936\nPOLYGON ((109.8968 28.74034…\n\n\nHuayuan\n59482\n79819\nPOLYGON ((109.5647 28.61712…\n\n\nJishou\n77334\n108871\nPOLYGON ((109.8375 28.4696,…\n\n\nLongshan\n38777\n48531\nPOLYGON ((109.6337 29.62521…\n\n\nLuxi\n111463\n128935\nPOLYGON ((110.1067 28.41835…\n\n\nYongshun\n74715\n84305\nPOLYGON ((110.0003 29.29499…\n\n\nAnhua\n174391\n188958\nPOLYGON ((111.6034 28.63716…\n\n\nNan\n150558\n171869\nPOLYGON ((112.3232 29.46074…\n\n\nYuanjiang\n122144\n148402\nPOLYGON ((112.4391 29.1791,…\n\n\nJianghua\n68012\n83813\nPOLYGON ((111.6461 25.29661…\n\n\nLanshan\n84575\n104663\nPOLYGON ((112.2286 25.61123…\n\n\nNingyuan\n143045\n155742\nPOLYGON ((112.0715 26.09892…\n\n\nShuangpai\n51394\n73336\nPOLYGON ((111.8864 26.11957…\n\n\nXintian\n98279\n112705\nPOLYGON ((112.2578 26.0796,…\n\n\nHuarong\n47671\n78084\nPOLYGON ((112.9242 29.69134…\n\n\nLinxiang\n26360\n58257\nPOLYGON ((113.5502 29.67418…\n\n\nMiluo\n236917\n279414\nPOLYGON ((112.9902 29.02139…\n\n\nPingjiang\n220631\n237883\nPOLYGON ((113.8436 29.06152…\n\n\nXiangyin\n185290\n219273\nPOLYGON ((112.9173 28.98264…\n\n\nCili\n64640\n83354\nPOLYGON ((110.8822 29.69017…\n\n\nChaling\n70046\n90124\nPOLYGON ((113.7666 27.10573…\n\n\nLiling\n126971\n168462\nPOLYGON ((113.5673 27.94346…\n\n\nYanling\n144693\n165714\nPOLYGON ((113.9292 26.6154,…\n\n\nYou\n129404\n165668\nPOLYGON ((113.5879 27.41324…\n\n\nZhuzhou\n284074\n311663\nPOLYGON ((113.2493 28.02411…\n\n\nSangzhi\n112268\n126892\nPOLYGON ((110.556 29.40543,…\n\n\nYueyang\n203611\n229971\nPOLYGON ((113.343 29.61064,…\n\n\nQiyang\n145238\n165876\nPOLYGON ((111.5563 26.81318…\n\n\nTaojiang\n251536\n271045\nPOLYGON ((112.0508 28.67265…\n\n\nShaoyang\n108078\n117731\nPOLYGON ((111.5013 27.30207…\n\n\nLianyuan\n238300\n256646\nPOLYGON ((111.6789 28.02946…\n\n\nHongjiang\n108870\n126603\nPOLYGON ((110.1441 27.47513…\n\n\nHengyang\n108085\n127467\nPOLYGON ((112.7144 26.98613…\n\n\nGuiyang\n262835\n295688\nPOLYGON ((113.0811 26.04963…\n\n\nChangsha\n248182\n336838\nPOLYGON ((112.9421 28.03722…\n\n\nTaoyuan\n244850\n267729\nPOLYGON ((112.0612 29.32855…\n\n\nXiangtan\n404456\n431516\nPOLYGON ((113.0426 27.8942,…\n\n\nDao\n67608\n85667\nPOLYGON ((111.498 25.81679,…\n\n\nJiangyong\n33860\n51028\nPOLYGON ((111.3659 25.39472…\n\n\n\n\n\nFinally, we’ll use qtm() to plot the lag_sum GDPPC and w_sum_gdppc maps next to each other for quick comparison:\n\n\nCode\nw_sum_gdppc &lt;- qtm(hunan, \"w_sum GDPPC\")\ntmap_arrange(lag_sum_gdppc, w_sum_gdppc, asp=1, ncol=2)\n\n\n\n\n\n\nThis is similar to the spatial window average, but instead of averaging the values, it sums them up. This method calculates the total value by adding the value at a specific location to the sum of its neighboring values. It provides a more cumulative measure of spatial influence compared to the average. summarized from: Anselin"
  },
  {
    "objectID": "hands-on/hoe2-spatialweight.html#references",
    "href": "hands-on/hoe2-spatialweight.html#references",
    "title": "Hands-on Exercise 2: Spatial Weights and Application",
    "section": "8 References",
    "text": "8 References\n\nr4gdsa chapter 8\nAnselin - Weights Applications\nAnselin - Contiguity Weights\nGetis - Spatial Analysis Handbook"
  },
  {
    "objectID": "hands-on/hoe2-globalautocor.html",
    "href": "hands-on/hoe2-globalautocor.html",
    "title": "Hands-on Exercise 2: Global Measures of Spatial Autocorrelation",
    "section": "",
    "text": "Spaces are Clustered - Global Spatial Autocorrelation Illustration"
  },
  {
    "objectID": "hands-on/hoe2-globalautocor.html#overview",
    "href": "hands-on/hoe2-globalautocor.html#overview",
    "title": "Hands-on Exercise 2: Global Measures of Spatial Autocorrelation",
    "section": "1 Overview",
    "text": "1 Overview\nIn this part, we’ll explore Global and Local Measures of Spatial Autocorrelation (GLSA) using the spdep package. Specifically, this 2B exercise will focus on Global Measures of Spatial Autocorrelation while the Local Spatial Autocorrelation will be explored in 2C exercise. The new learning objectives includes: - Compute Global Spatial Autocorrelation (GSA) statistics using spdep. - Plot Moran scatterplot. - Compute and plot spatial correlogram with spdep. - Visualize the analysis output using the tmap package.\n\nGlobal measures of spatial autocorrelation provide a single summary statistic for an entire dataset, reflecting the overall degree of geographical clustering or dispersion. A commonly used global measure is Moran’s I, which helps to determine whether attribute values in a dataset are clustered together or spread apart. However, it doesn’t specify where these clusters or outliers are located on the map. Essentially, these measures give a general idea of spatial patterns across the whole study area but don’t provide detailed insights into local variations or specific areas summarized from: Wu and Kemp, 2019\n\n\n1.1 The analytical question\nIn spatial policy, local governments aim for an even distribution of development within a region. This exercise focuses on applying spatial statistical methods to investigate if development is evenly distributed in a province. If not, the next questions are: Is there evidence of spatial clustering? And if yes, where are these clusters?\nThe case study and data being explored is the same as previous exercise (2A), which are GDP per capita (GDPPR) in Hunan Province , People’s Republic of China.\n\n\n1.2 Setting Up the Analytical Tools\nEnsure that spdep, sf, tmap, and tidyverse packages in R are installed. These packages are used for importing and handling geospatial data, wrangling attribute data, computing spatial weights, and visualizing the results. The code below checks for and installs missing packages:\n\n\nCode\npacman::p_load(sf, spdep, tmap, tidyverse)"
  },
  {
    "objectID": "hands-on/hoe2-globalautocor.html#import-and-visualize-the-data",
    "href": "hands-on/hoe2-globalautocor.html#import-and-visualize-the-data",
    "title": "Hands-on Exercise 2: Global Measures of Spatial Autocorrelation",
    "section": "2 Import and Visualize the Data",
    "text": "2 Import and Visualize the Data\nSimilar to previous exercise, firstly the data needs to be imported, joined, and visualized to get the big picture.\n\n\nCode\n#import geospatial data\nhunan &lt;- st_read(dsn = \"../data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nCode\n# import aspatial data\nhunan2012 &lt;- read_csv(\"../data/aspatial/Hunan_2012.csv\")\n\n# perform relational join\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n# visualize the data\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\", n = 5, style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\", main.title.size = 1,\n            main.title.position = \"center\", legend.outside = TRUE,\n            legend.outside.position = \"bottom\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\", n = 5, style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\", main.title.size = 1,\n            main.title.position = \"center\", legend.outside = TRUE,\n            legend.outside.position = \"bottom\")\n\ntmap_arrange(equal, quantile, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on/hoe2-globalautocor.html#global-spatial-autocorrelation",
    "href": "hands-on/hoe2-globalautocor.html#global-spatial-autocorrelation",
    "title": "Hands-on Exercise 2: Global Measures of Spatial Autocorrelation",
    "section": "3 Global Spatial Autocorrelation",
    "text": "3 Global Spatial Autocorrelation\nIn this section, we’ll explore how to calculate global spatial autocorrelation statistics and conduct a test for spatial randomness across the entire study area.\n\n3.1 Computing Contiguity Spatial Weights\nBefore we can compute the global spatial autocorrelation statistics, we need to construct a spatial weights of the study area which use queen method in this example. After that weights needs to be assigned to each neighboring polygon, which use row-standardized weights matrix. Details on the concept was discussed in previous exercise.\n\n\nCode\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nsummary(wm_q)\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \nLink number distribution:\n\n 1  2  3  4  5  6  7  8  9 11 \n 2  2 12 16 24 14 11  4  2  1 \n2 least connected regions:\n30 65 with 1 link\n1 most connected region:\n85 with 11 links\n\n\nCode\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)\nrswm_q\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 448 \nPercentage nonzero weights: 5.785124 \nAverage number of links: 5.090909 \n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 88 7744 88 37.86334 365.9147\n\n\n\nstyle can take values “W”, “B”, “C”, “U”, “minmax” and “S”. B is the basic binary coding, W is row standardised (sums over all links to n), C is globally standardised (sums over all links to n), U is equal to C divided by the number of neighbours (sums over all links to unity), while S is the variance-stabilizing coding scheme proposed by Tiefelsdorf et al. 1999, p. 167-168 (sums over all links to n).\nIf zero policy is set to TRUE, weights vectors of zero length are inserted for regions without neighbour in the neighbours list. These will in turn generate lag values of zero, equivalent to the sum of products of the zero row t(rep(0, length=length(neighbours))) %*% x, for arbitrary numerical vector x of length length(neighbours). The spatially lagged value of x for the zero-neighbour region will then be zero, which may (or may not) be a sensible choice.\n\n\n\n3.2 Global Spatial Autocorrelation: Moran’s I\n\nMoran’s I testMonte Carlo Moran’s IVisualising Monte Carlo Moran’s I\n\n\nNow, let’s perform a test for Moran’s I statistic, which assesses spatial autocorrelation. The test is performed using moran.test() of spdep.\n\n\nCode\nmoran.test(hunan$GDPPC, listw=rswm_q, zero.policy = TRUE, na.action=na.omit)\n\n\n\n    Moran I test under randomisation\n\ndata:  hunan$GDPPC  \nweights: rswm_q    \n\nMoran I statistic standard deviate = 4.7351, p-value = 1.095e-06\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.300749970      -0.011494253       0.004348351 \n\n\n\nThe statistical output indicates a Moran’s I statistic of 0.30, which is a measure of spatial autocorrelation. The standard deviate is 4.7351, leading to a very low p-value of 1.095e-06. The alternative hypothesis suggests a “greater” spatial autocorrelation. Based on the output, we can conclude that there is a strong and significant positive spatial autocorrelation in the GDPPC of Hunan county. This means that counties with similar GDPPC tend to be close to each other on the map. In other words, there is a spatial pattern of high-income and low-income counties in Hunan.\n\n\n\nNext, perform a permutation test for Moran’s I using the moran.mc() function of spdep. This involves running 1000 simulations.\n\n\nCode\nset.seed(1234)\nbperm= moran.mc(hunan$GDPPC, \n                listw=rswm_q, \n                nsim=999, \n                zero.policy = TRUE, \n                na.action=na.omit)\nbperm\n\n\n\n    Monte-Carlo simulation of Moran I\n\ndata:  hunan$GDPPC \nweights: rswm_q  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.30075, observed rank = 1000, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nThe associated p-value is 0.001, indicating statistical significance. The alternative hypothesis of “greater” spatial autocorrelation aligns with the initial Moran’s I test. This Monte Carlo simulation provides additional evidence supporting the presence of positive spatial autocorrelation in the GDP per capita values across the study area.\n\n\n\nTo gain more insights, we plot the distribution of simulated Moran’s I values using a histogram. the code use hist() and abline() of R Graphics are used.\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] -0.01504572\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.004371574\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-0.18339 -0.06168 -0.02125 -0.01505  0.02611  0.27593 \n\n\nCode\nhist(bperm$res, \n     freq=TRUE, \n     breaks=20, \n     xlab=\"Simulated Moran's I\")\nabline(v=0, \n       col=\"red\") \n\n\n\n\n\n\nThe histogram indicates that the simulated Moran’s I values follow a normal distribution with it’s bell-shaped characteristic\n\nthe next code chunk perform similar task, but using ggplot package\n\n\nCode\n# Extract the res column and convert it to a data frame\nres_df &lt;- data.frame(res = bperm$res)\n\n# Plot the histogram using ggplot2\nggplot(res_df, aes(x = res)) +\n  geom_histogram(bins = 20) +\n  geom_vline(xintercept = 0, color = \"red\") +\n  xlab(\"Simulated Moran's I\")\n\n\n\n\n\n\n\n\n\n\n3.3 Global Spatial Autocorrelation: Geary’s\nIn this part, we explore Geary’s C statistics to understand spatial autocorrelation in our data. Geary’s C test helps us determine if there’s any pattern of similarity or dissimilarity between neighboring areas.\n\nGeary’s C testComputing Monte Carlo Geary’s CVisualising the Monte Carlo Geary’s C\n\n\nThe provided R code conducts Geary’s C test using the geary.test() function from the spdep package. This test essentially examines if the values in one region are significantly different from the values in neighboring regions.\n\n\nCode\ngeary.test(hunan$GDPPC, listw=rswm_q)\n\n\n\n    Geary C test under randomisation\n\ndata:  hunan$GDPPC \nweights: rswm_q \n\nGeary C statistic standard deviate = 3.6108, p-value = 0.0001526\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6907223         1.0000000         0.0073364 \n\n\n\nThe Geary’s C test results in a significant p-value (less than the typical significance level of 0.05), indicating that the spatial autocorrelation observed in the data is unlikely due to random chance. The Geary C statistic (0.6907) being less than the expectation (1.0000) suggests a pattern of dissimilarity between neighboring regions. Additionally, the variance (0.0073) provides information about the variability of this dissimilarity. Overall, these results suggest a non-random spatial pattern of dissimilarity in the distribution of the GDP per capita in the study area.\n\n\n\nThis code snippet uses Monte Carlo simulation to test Geary’s C statistic for spatial autocorrelation, by using geary.mc() of spdep. By comparing the observed statistic to a distribution of simulated values, it helps us assess whether the observed pattern is statistically significant.\n\n\nCode\nset.seed(1234)\nbperm=geary.mc(hunan$GDPPC, \n               listw=rswm_q, \n               nsim=999)\nbperm\n\n\n\n    Monte-Carlo simulation of Geary C\n\ndata:  hunan$GDPPC \nweights: rswm_q \nnumber of simulations + 1: 1000 \n\nstatistic = 0.69072, observed rank = 1, p-value = 0.001\nalternative hypothesis: greater\n\n\n\nThe observed Geary’s C statistic is 0.69072, and it ranks first among the simulated values, with a p-value of 0.001. This suggests that there is a strong spatial autocorrelation in the distribution of GDPPC values, indicating a pattern of either spatial similarity or dissimilarity among neighboring regions. The alternative hypothesis of greater spatial autocorrelation is supported by the low p-value, signifying that the observed spatial pattern is unlikely to have occurred by random chance alone..\n\n\n\nThe next step involves creating a histogram to understand the distribution of simulated values and to see where our observed value falls on the spectrum.\n\n\nCode\nmean(bperm$res[1:999])\n\n\n[1] 1.004402\n\n\nCode\nvar(bperm$res[1:999])\n\n\n[1] 0.007436493\n\n\nCode\nsummary(bperm$res[1:999])\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.7142  0.9502  1.0052  1.0044  1.0595  1.2722 \n\n\nCode\nhist(bperm$res, freq=TRUE, breaks=20, xlab=\"Simulated Geary c\")\nabline(v=1, col=\"red\") \n\n\n\n\n\n\nSimilar to previous result, this histogram also indicates that the simulated Geary c values follow a normal distribution with it’s bell-shaped characteristic\n\n\n4 Spatial Correlogram\nSpatial correlograms offer insights into spatial autocorrelation patterns by plotting autocorrelation indices against increasing distances. They are useful for exploratory analysis.\n\n4.1 Compute Moran’s I correlogram\nIn this part, the sp.correlogram() of spdep package computes a Moran’s I correlogram for GDPPC. The resulting plot illustrates how Moran’s I values change as the distance between regions increases. In the code chunk below,\n\n\nCode\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nIt’s important to inspect the full analysis report, which can be printed using the following code:\n\n\nCode\nprint(MI_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nThe spatial correlogram for hunan$GDPPC using Moran’s I method reveals that as the distance between regions increases, there is a statistically significant spatial autocorrelation. The estimate of Moran’s I indicates positive autocorrelation at various lag distances (1 to 6). The p-values associated with each lag distance are highly significant (indicated by the ***), suggesting that the observed spatial pattern is not due to random chance. This implies that regions with similar GDPPC values tend to cluster together, providing evidence for a non-random spatial distribution of economic development in Hunan province.\n\n\n\n4.2 Compute Geary’s C correlogram and plot\nSimilarly, we calculate a Geary’s C correlogram to understand how the spatial autocorrelation, measured by Geary’s C, changes with increasing distances.\n\n\nCode\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nPrint the analysis report for a more detailed understanding:\n\n\nCode\nprint(GC_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nThe Geary’s C correlogram for the GDPPC in Hunan Province indicates varying levels of spatial autocorrelation at different distance lags. The estimates at the first and second lags (distances) are significantly lower than the expected value, suggesting a pattern of positive spatial autocorrelation, meaning similar values tend to cluster together. However, as the distance increases, the autocorrelation becomes non-significant (lag 3), indicating a decrease in similarity between neighboring regions. Subsequently, at lags 4, 5, and 6, there is a mix of significant and non-significant autocorrelation, suggesting a complex spatial pattern with pockets of both similarity and dissimilarity at these distances."
  },
  {
    "objectID": "hands-on/hoe2-globalautocor.html#spatial-correlogram",
    "href": "hands-on/hoe2-globalautocor.html#spatial-correlogram",
    "title": "Hands-on Exercise 2: Global Measures of Spatial Autocorrelation",
    "section": "4 Spatial Correlogram",
    "text": "4 Spatial Correlogram\nSpatial correlograms offer insights into spatial autocorrelation patterns by plotting autocorrelation indices against increasing distances. They are useful for exploratory analysis.\n\n4.1 Compute Moran’s I correlogram\nIn this part, the sp.correlogram() of spdep package computes a Moran’s I correlogram for GDPPC. The resulting plot illustrates how Moran’s I values change as the distance between regions increases. In the code chunk below,\n\n\nCode\nMI_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"I\", \n                          style=\"W\")\nplot(MI_corr)\n\n\n\n\n\nIt’s important to inspect the full analysis report, which can be printed using the following code:\n\n\nCode\nprint(MI_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (88)  0.3007500  -0.0114943  0.0043484           4.7351       2.189e-06 ***\n2 (88)  0.2060084  -0.0114943  0.0020962           4.7505       2.029e-06 ***\n3 (88)  0.0668273  -0.0114943  0.0014602           2.0496        0.040400 *  \n4 (88)  0.0299470  -0.0114943  0.0011717           1.2107        0.226015    \n5 (88) -0.1530471  -0.0114943  0.0012440          -4.0134       5.984e-05 ***\n6 (88) -0.1187070  -0.0114943  0.0016791          -2.6164        0.008886 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nThe spatial correlogram for hunan$GDPPC using Moran’s I method reveals that as the distance between regions increases, there is a statistically significant spatial autocorrelation. The estimate of Moran’s I indicates positive autocorrelation at various lag distances (1 to 6). The p-values associated with each lag distance are highly significant (indicated by the ***), suggesting that the observed spatial pattern is not due to random chance. This implies that regions with similar GDPPC values tend to cluster together, providing evidence for a non-random spatial distribution of economic development in Hunan province.\n\n\n\n4.2 Compute Geary’s C correlogram and plot\nSimilarly, we calculate a Geary’s C correlogram to understand how the spatial autocorrelation, measured by Geary’s C, changes with increasing distances.\n\n\nCode\nGC_corr &lt;- sp.correlogram(wm_q, \n                          hunan$GDPPC, \n                          order=6, \n                          method=\"C\", \n                          style=\"W\")\nplot(GC_corr)\n\n\n\n\n\nPrint the analysis report for a more detailed understanding:\n\n\nCode\nprint(GC_corr)\n\n\nSpatial correlogram for hunan$GDPPC \nmethod: Geary's C\n        estimate expectation  variance standard deviate Pr(I) two sided    \n1 (88) 0.6907223   1.0000000 0.0073364          -3.6108       0.0003052 ***\n2 (88) 0.7630197   1.0000000 0.0049126          -3.3811       0.0007220 ***\n3 (88) 0.9397299   1.0000000 0.0049005          -0.8610       0.3892612    \n4 (88) 1.0098462   1.0000000 0.0039631           0.1564       0.8757128    \n5 (88) 1.2008204   1.0000000 0.0035568           3.3673       0.0007592 ***\n6 (88) 1.0773386   1.0000000 0.0058042           1.0151       0.3100407    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nThe Geary’s C correlogram for the GDPPC in Hunan Province indicates varying levels of spatial autocorrelation at different distance lags. The estimates at the first and second lags (distances) are significantly lower than the expected value, suggesting a pattern of positive spatial autocorrelation, meaning similar values tend to cluster together. However, as the distance increases, the autocorrelation becomes non-significant (lag 3), indicating a decrease in similarity between neighboring regions. Subsequently, at lags 4, 5, and 6, there is a mix of significant and non-significant autocorrelation, suggesting a complex spatial pattern with pockets of both similarity and dissimilarity at these distances."
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html",
    "href": "hands-on/hoe1-choropleth.html",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "",
    "text": "Painting Choropleth Map Illustration"
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html#overview",
    "href": "hands-on/hoe1-choropleth.html#overview",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "1 Overview",
    "text": "1 Overview\nIn this hands-on exercise, we will continue on Exploratory Data Analysis, specifically using Choropleth Mapping\nChoropleth mapping is a way to represent regions, like countries or states, by using patterns or colors to show different values. For instance, a social scientist might use a choropleth map to display where the older population is located in Singapore based on the Master Plan 2014 Subzone Boundary.\nIn this chapter, you’ll discover how to create accurate and meaningful choropleth maps using an R package called tmap."
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html#import-the-libraries",
    "href": "hands-on/hoe1-choropleth.html#import-the-libraries",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "2 Import The Libraries",
    "text": "2 Import The Libraries\nThe code chunk below install and load sf, tidyverse and tmap packages into R environment.\n\npacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html#importing-the-data",
    "href": "hands-on/hoe1-choropleth.html#importing-the-data",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "3 Importing The Data",
    "text": "3 Importing The Data\nWe’ll use two sets of information to make the choropleth map:\n\nMaster Plan 2014 Subzone Boundary (Web): This is a map file that shows the shape of different areas in Singapore, specifically at the planning subzone level. The data can be downloaded from Singapore Government\nSingapore Residents Data (June 2011-2020): This is a list of information about people living in Singapore, like how many people are in different age groups, their gender, and the type of homes they live in. This data is in a CSV file (respopagesextod2011to2020.csv). The data can be downloaded from the Department of Statistics, Singapore. Even though it doesn’t have actual location coordinates, it has fields called PA and SZ that can help match it to the shapes in the MP14_SUBZONE_WEB_PL file.\n\n\nGeospatial Data (Subzone Boundary)Attribute Data\n\n\nThe code below does the following 1. uses the st_read() function from the sf package to bring in the MP14_SUBZONE_WEB_PL shapefile into R, and import it as a simple feature data frame named mpsz. 2. display the data frame by calling mpsz\n\nmpsz &lt;- st_read(dsn = \"../data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\nNote that only the first ten records are displayed. By default, R shows a summary of only the first few rows to minimize resource usage and avoid overwhelming the user. To see more rows, you can use functions like head() and specify the n parameter, e.g. head(mpsz, n = 20) to display the first 20 rows.\n\n\n\nNext, we’re going to bring in the respopagsex2011to2020.csv file into RStudio and store it in a data table named popdata. We’ll do this using the read_csv() function from the readr package, as you can see in the code snippet below.\n\npopdata &lt;- read_csv(\"../data/aspatial/respopagesextod2011to2020.csv.gz\")"
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html#data-preparation",
    "href": "hands-on/hoe1-choropleth.html#data-preparation",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "4 Data Preparation",
    "text": "4 Data Preparation\nBefore making a special map, you need to create a table with data for the year 2020. This table should have information about different areas (PA, SZ) and various age groups like YOUNG (0-4 to 20-24), ECONOMY ACTIVE (25-29 to 60-64), AGED (65 and above), TOTAL (all age groups), and DEPENDENCY (the ratio of young and aged people to the economy-active group).\n\nData WranglingJoining the attribute data and geospatial data\n\n\nWe’ll be using some functions to shape our data the way we want: - pivot_wider() from tidyr package - mutate(), filter(), group_by(), and select() from dplyr package\nThe code will do the following steps in order: - Filter the data: It only keeps the rows where the Time column is 2020. - Group the data: It groups the data by PA (Planning Area), SZ (Subzone), and AG (Age Group). - Summarize the data: It calculates the sum of the Pop column for each group. - Reshape the data: It spreads the data wide, turning the Age Group values into separate columns. - Create new columns: It calculates the YOUNG, ECONOMY ACTIVE, AGED, TOTAL, and DEPENDENCY values based on the grouped and summarized data. - Select the columns: It picks the specific columns to be kept in the final data table.\n\n\nCode\n# Filter the 'popdata' dataset for the year 2020\npopdata2020 &lt;- popdata %&gt;%\n\n  # Keep only records where 'Time' is equal to 2020\n  filter(Time == 2020) %&gt;%\n\n  # Group the data by 'PA', 'SZ', and 'AG'\n  group_by(PA, SZ, AG) %&gt;%\n\n  # Summarize the data by calculating the sum of 'Pop' for each group\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n\n  # Ungroup the data to remove grouping constraints\n  ungroup() %&gt;%\n\n  # Reshape the data by widening it using 'AG' as column names and 'POP' as values\n  pivot_wider(names_from = AG, values_from = POP) %&gt;%\n\n  # Create a new column 'YOUNG' by summing specific columns\n  mutate(YOUNG = rowSums(.[3:6]) + rowSums(.[12])) %&gt;%\n\n  # Create a new column 'ECONOMY ACTIVE' by summing specific columns\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:11]) + rowSums(.[13:15])) %&gt;%\n\n  # Create a new column 'AGED' by summing specific columns\n  mutate(`AGED` = rowSums(.[16:21])) %&gt;%\n\n  # Create a new column 'TOTAL' by summing specific columns\n  mutate(`TOTAL` = rowSums(.[3:21])) %&gt;%\n\n  # Create a new column 'DEPENDENCY' by calculating a ratio\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`) / `ECONOMY ACTIVE`) %&gt;%\n\n  # Select specific columns for the final dataset\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n\n# Display a summary of the 'popdata2020' dataset\nglimpse(popdata2020)\n\n\nRows: 332\nColumns: 7\n$ PA               &lt;chr&gt; \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio…\n$ SZ               &lt;chr&gt; \"Ang Mo Kio Town Centre\", \"Cheng San\", \"Chong Boon\", …\n$ YOUNG            &lt;dbl&gt; 1440, 6640, 6150, 5540, 2100, 3960, 2220, 4690, 0, 12…\n$ `ECONOMY ACTIVE` &lt;dbl&gt; 2610, 15460, 13950, 12090, 3410, 8420, 4200, 11450, 0…\n$ AGED             &lt;dbl&gt; 760, 6050, 6470, 5120, 1310, 3610, 1530, 5100, 0, 750…\n$ TOTAL            &lt;dbl&gt; 4810, 28150, 26570, 22750, 6820, 15990, 7950, 21240, …\n$ DEPENDENCY       &lt;dbl&gt; 0.8429119, 0.8208279, 0.9046595, 0.8817204, 1.0000000…\n\n\nExport the Dataset\n\n\nCode\n# Install and load the 'writexl' package if not already installed\nif (!requireNamespace(\"writexl\", quietly = TRUE)) {\n  install.packages(\"writexl\")\n}\n\n# Load the 'writexl' package\nlibrary(writexl)\n\n# Export 'popdata2020' dataset to an Excel file named 'popdata2020.xlsx'\nwrite_xlsx(popdata2020, path = \"../data/aspatial/popdata2020.xlsx\")\n\n\n\n\nBefore we can combine our geographic and population data, we need to make sure the values in the PA and SZ fields are all in uppercase. This is because these values have a mix of upper- and lowercase, while SUBZONE_N and PLN_AREA_N are all in uppercase.\nthe following code will change the values in the PA and SZ columns to uppercase. After that, it will filters out rows where the ECONOMY ACTIVE column is greater than 0.\n\n\nCode\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\nglimpse(popdata2020)\n\n\nRows: 234\nColumns: 7\n$ PA               &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO…\n$ SZ               &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", …\n$ YOUNG            &lt;dbl&gt; 1440, 6640, 6150, 5540, 2100, 3960, 2220, 4690, 1220,…\n$ `ECONOMY ACTIVE` &lt;dbl&gt; 2610, 15460, 13950, 12090, 3410, 8420, 4200, 11450, 2…\n$ AGED             &lt;dbl&gt; 760, 6050, 6470, 5120, 1310, 3610, 1530, 5100, 750, 4…\n$ TOTAL            &lt;dbl&gt; 4810, 28150, 26570, 22750, 6820, 15990, 7950, 21240, …\n$ DEPENDENCY       &lt;dbl&gt; 0.8429119, 0.8208279, 0.9046595, 0.8817204, 1.0000000…\n\n\nNow, we’re using left_join() from the dplyr package to connect our geographical data and the population attribute table. This connection is made using planning subzone names, specifically SUBZONE_N in the geographical data and SZ in the attribute table, as the common identifier.\n\n\nCode\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nglimpse(mpsz_pop2020)\n\n\nRows: 323\nColumns: 22\n$ OBJECTID         &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16…\n$ SUBZONE_NO       &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, …\n$ SUBZONE_N        &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERS…\n$ SUBZONE_C        &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BM…\n$ CA_IND           &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\"…\n$ PLN_AREA_N       &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT M…\n$ PLN_AREA_C       &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\",…\n$ REGION_N         &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\",…\n$ REGION_C         &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC          &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13…\n$ FMEL_UPD_D       &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014…\n$ X_ADDR           &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 253…\n$ Y_ADDR           &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 299…\n$ SHAPE_Leng       &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 442…\n$ SHAPE_Area       &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.4…\n$ PA               &lt;chr&gt; NA, \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\", \"BUKI…\n$ YOUNG            &lt;dbl&gt; NA, 1200, 0, 3150, 2900, 3340, 3130, 0, 1290, 50, NA,…\n$ `ECONOMY ACTIVE` &lt;dbl&gt; NA, 2860, 40, 6900, 6020, 6800, 7700, 50, 2600, 140, …\n$ AGED             &lt;dbl&gt; NA, 2120, 10, 3320, 1740, 3420, 3610, 10, 610, 60, NA…\n$ TOTAL            &lt;dbl&gt; NA, 6180, 50, 13370, 10660, 13560, 14440, 60, 4500, 2…\n$ DEPENDENCY       &lt;dbl&gt; NA, 1.1608392, 0.2500000, 0.9376812, 0.7707641, 0.994…\n$ geometry         &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOL…\n\n\n\nleft_join() is used with mpsz simple feature data frame as the left data table to ensure that the output will be a simple features data frame.\n\nLastly, the write_rds() function is used to save our combined data (stored in the mpsz_pop2020 data frame) into an RDS file.\n\nwrite_rds(mpsz_pop2020, \"../data/rds/mpszpop2020.rds\")\n\n\nAn RDS file is a binary file format used in R to store single R objects. It stands for R Data Store. This file format is efficient for saving and loading R objects because it preserves the object’s structure, including its data type, attributes, and metadata. Unlike other formats like CSV or Excel, RDS files are tailored for R-specific objects and are typically smaller in size. When you save an object as an RDS file, you can later load it back into R using the read_rds() function to retrieve the exact R object with all its properties intact. It’s a handy way to store and share R data without losing any of the specific characteristics of the objects."
  },
  {
    "objectID": "hands-on/hoe1-choropleth.html#choropleth-mapping-geospatial-data-using-tmap",
    "href": "hands-on/hoe1-choropleth.html#choropleth-mapping-geospatial-data-using-tmap",
    "title": "Hands-on Exercise 1: Choropleth Mapping",
    "section": "5 Choropleth Mapping Geospatial Data using tmap",
    "text": "5 Choropleth Mapping Geospatial Data using tmap\nThere are two ways to make a thematic map using tmap: - Quick Approach: Use qtm() to swiftly draw a choropleth map. - Customizable Approach: Create a highly customizable thematic map by using tmap elements.\n\n5.1 Plotting choropleth map using qtm\nThe fastest way to draw a choropleth map using tmap is with qtm(). It’s straightforward and produces a solid default visualization in many cases.\nThe following code snippet will generate a standard choropleth map.\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, fill = \"DEPENDENCY\")\n\n\n\n\n\n\n5.2 Creating a choropleth map by using tmap’s elements\nDespite its quick and easy way of making a choropleth map, the limitation of using qtm() is that it makes it challenging to control the appearance of individual map layers. For a high-quality cartographic choropleth map, it’s better to use tmap’s drawing elements.\nThe next code will do the following steps: - tm_shape(): This sets the spatial object (mpsz_pop2020) to be used in the map.\n\ntm_fill(): It fills the polygons with colors based on the “DEPENDENCY” column, using the quantile method and a blue color palette.\ntm_layout(): Defines the layout elements, including the main title, legend settings, frame, and other stylistic elements.\ntm_borders(), tm_compass(), tm_scale_bar(), tm_grid(): These add map embellishments such as borders, compass, scale bar, and grid.\ntm_credits(): Adds a text credit at the bottom left of the map, mentioning the data sources.\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\neach of the tmap functions that are used to create the plot can be seen in the following panel.\n\nbase maptm_polygonstm_filltm_border\n\n\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”.\nThe default colour scheme used is YlOrRd of ColorBrewer.\nBy default, Missing value will be shaded in grey.\n\n\n\n\nwithout setting the border, the planning subzones will not have any boundary if the dependency value is the same\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\n\n\nParameters of tm_border(): - alpha = transparency. the default value is 1 (not transparent) - col = border colour, - lwd = border line width. The default is 1, and - lty = border line type. The default is “solid”.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1)\n\n\n\n\n\n\n\n\n\n5.3 Data Classification methods of tmap\nChoropleth maps usually use different ways to group data, and the goal is to organize a bunch of observations into specific ranges or groups.\ntmap offers ten methods to classify data, including fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo pick a data classification method, you use the style argument in tm_fill() or tm_polygons().\n\n5.3.1 Plotting choropleth maps with built-in classification methods\nThe following panel will compare various choropleth maps with built-in classification methods and constant n = 5\n\njenksequalsdprettyquantilehclustfisherfisher\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nUsing equal range data classification, the map is not too informative as the data is skewed\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"sd\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"pretty\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"hclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"fisher\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nVarious method of classification can give highly different result. One of the main contributor is due to skewness and presence of outliers in the data. Classification method which is insensitive to it will give monotonous map, where only a few region have different color, and vice versa. As an analyst, domain knowledge is required to decide which classification method is the most appropriate (i.e. whether small differences between the Dependency data matters). Ultimately, the method chosen should be able to support the best decision making.\n\nThe following panel will compare various choropleth maps with different number of classes\n\njenks 2 classesequal 6 classesequal 10 classesequal 20 classes\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 2,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 20,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nsimilar to classification method, number of classes could matter in showing differences between area. with n set as 2, even jenks method become monotonous, revealing the outlier area. on the other hand, with n set as high as 20, even the equal method start to show differences between region, albeit subtle (due to high degree of skewness/presence of extreme outliers)\n\n\n\n5.3.2 Plotting choropleth map with custom break\nthe automated break calculation in previous method can be overriden by explicitly set the break arguments.\nbefore starting, the following code will show descriptive statistics to be used for break reference.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nwith reference to the summary statistics result, the break point is set at 0.60, 0.70, 0.80, and 0.90. The arguments also requires to include minimum and maximum value.\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n5.4 Colour Scheme\nThe color scheme in tmap can be customized using user-defined or predefined color ramps from the RColorBrewer package.\nTo use a ColorBrewer palette, you assign the desired color to the palette argument of tm_fill(). If you want to change the color, you can do so by specifying the palette in the code.\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nThe above choropleth map is shaded in green. To reverse the color shade use “-” prefix.\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\nThe colour scheme also changed with the new setting.\n\n\n5.5 Map Layouts\nMap layouts refer to combining all map elements into a cohesive map, including objects, title, scale bar, compass, margins, aspect ratios, color settings, and data classification methods. In tmap, various legend options are available to change the placement, format, and appearance of the legend. You can use tm_fill() along with tm_layout() to customize the legend based on your preferences. To change the style of layout, use tmap_style(). The following panel show how the various options are used.\n\nAdding legendClassic Map StyleCartographic Furniture Map Style\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\n\n\n\n\nreset the tmap setting to default style.\n\ntmap_style(\"white\")\n\n\n\n5.6 Drawing Small Multiple Choropleth Maps\nSmall multiple choropleth maps, or facet maps, display many maps side-by-side or stacked vertically. tmap allows you to create small multiples in different ways, such as assigning multiple values to aesthetic arguments or using tm_facets().\nYou can also create small multiples by defining a group-by variable in tm_facets() or by creating multiple stand-alone maps with tmap_arrange(). Each method offers flexibility in visualizing spatial relationships.\n\nassigning multiple values to one aesthetic argumentsassigning multiple values to more than one aesthetic argumentsdefining a group-by variable in tm_facetscreating multiple stand-alone maps with tmap_arrange\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"), style = c(\"equal\", \"quantile\"), palette = list(\"Blues\",\"Greens\")) + tm_layout(legend.position = c(\"right\", \"bottom\"))\n\n\n\n\n\n\n\n\n\nCode\ntm_shape(mpsz_pop2020) +\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"Blues\",\n          thres.poly = 0) + \n  tm_facets(by=\"REGION_N\", \n            free.coords=TRUE, \n            drop.shapes=TRUE) +\n  tm_layout(legend.show = FALSE,\n            title.position = c(\"center\", \"center\"), \n            title.size = 20) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n\n\n\nCode\nyoungmap &lt;- tm_shape(mpsz_pop2020) + tm_polygons(\"YOUNG\", style = \"quantile\", palette = \"Blues\")\nagedmap &lt;- tm_shape(mpsz_pop2020) + tm_polygons(\"AGED\", style = \"quantile\", palette = \"Blues\")\ntmap_arrange(youngmap, agedmap, asp=1, ncol=2)\n\n\n\n\n\n\n\n\n\n\n5.7 Mapping Spatial Object Meeting a Selection Criterion\nInstead of creating small multiple choropleth maps, you can use selection functions to map spatial objects meeting specific criteria. This allows you to focus on specific regions or areas in the map based on your selection criterion. The following code choose Central Region as example\n\n\nCode\ntm_shape(mpsz_pop2020[mpsz_pop2020$REGION_N==\"CENTRAL REGION\", ])+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(legend.outside = TRUE,\n            legend.height = 0.45, \n            legend.width = 5.0,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "data/geospatial/MPSZ-2019.html",
    "href": "data/geospatial/MPSZ-2019.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false"
  },
  {
    "objectID": "data/geospatial/FinServ.html",
    "href": "data/geospatial/FinServ.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "data/geospatial/entertn.html",
    "href": "data/geospatial/entertn.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "data/geospatial/Business.html",
    "href": "data/geospatial/Business.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "data/geospatial/F&B.html",
    "href": "data/geospatial/F&B.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "data/geospatial/Liesure&Recreation.html",
    "href": "data/geospatial/Liesure&Recreation.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "data/geospatial/Retails.html",
    "href": "data/geospatial/Retails.html",
    "title": "ISSS624 - Applied Geospatial Analytics",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n       GEOGCRS[“WGS 84”,ENSEMBLE[“World Geodetic System 1984 ensemble”,MEMBER[“World Geodetic System 1984 (Transit)”],MEMBER[“World Geodetic System 1984 (G730)”],MEMBER[“World Geodetic System 1984 (G873)”],MEMBER[“World Geodetic System 1984 (G1150)”],MEMBER[“World Geodetic System 1984 (G1674)”],MEMBER[“World Geodetic System 1984 (G1762)”],MEMBER[“World Geodetic System 1984 (G2139)”],ELLIPSOID[“WGS 84”,6378137,298.257223563,LENGTHUNIT[“metre”,1]],ENSEMBLEACCURACY[2.0]],PRIMEM[“Greenwich”,0,ANGLEUNIT[“degree”,0.0174532925199433]],CS[ellipsoidal,2],AXIS[“geodetic latitude (Lat)”,north,ORDER[1],ANGLEUNIT[“degree”,0.0174532925199433]],AXIS[“geodetic longitude (Lon)”,east,ORDER[2],ANGLEUNIT[“degree”,0.0174532925199433]],USAGE[SCOPE[“Horizontal component of 3D system.”],AREA[“World.”],BBOX[-90,-180,90,180]],ID[“EPSG”,4326]] +proj=longlat +datum=WGS84 +no_defs 3452 4326 EPSG:4326 WGS 84 longlat EPSG:7030 true"
  },
  {
    "objectID": "hands-on/hoe1.html",
    "href": "hands-on/hoe1.html",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "",
    "text": "Data Wrangling Illustration"
  },
  {
    "objectID": "hands-on/hoe1.html#overview",
    "href": "hands-on/hoe1.html#overview",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "1 Overview",
    "text": "1 Overview\nThis hands-on exercise is about importing and wrangling geospatial data using appropriate R packages."
  },
  {
    "objectID": "hands-on/hoe1.html#getting-started",
    "href": "hands-on/hoe1.html#getting-started",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "2 Getting Started",
    "text": "2 Getting Started\nThe code chunk below install and load sf and tidyverse packages into R environment.\n\npacman::p_load(sf, tidyverse, tmap)"
  },
  {
    "objectID": "hands-on/hoe1.html#importing-geospatial-data",
    "href": "hands-on/hoe1.html#importing-geospatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "3 Importing Geospatial Data",
    "text": "3 Importing Geospatial Data\nThe data import process uses a tool called st_read. It is a function to read different types of maps, in the format/extension such as .shp, .dbf, .prj, and .shx. The function use the following parameters:\n\nLocation Instruction (dsn Parameter): This part is specifying where to find the map files. In our case, the maps are in a folder called “../data/geospatial.”\nLayer Instruction (layer Parameter): This part is specifying focus on a specific aspect of the maps. Think of the maps as a big book, and a layer is like a section that talks about a particular topic. In our example, we’re interested in a section named “MP14_SUBZONE_WEB_PL,” which contains information about areas called subzones.\n\n\nPolygon Data in Shapefile FormatPolyline Data in Shapefile FormGIS data in KML format\n\n\n\nmpsz &lt;- st_read(dsn = \"../data/geospatial\", layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\n\nShapefiles are a common geospatial vector data format used to represent geographic features such as points, lines, and polygons. In this case, MP14_SUBZONE_WEB_PL is a layer within the shapefile containing polygon features, which could represent, for example, subzones in a geographic region. The Master Plan 2014 Subzone Boundary (Web) data is a forward looking guiding plan for Singapore’s development in the medium term over the next 10 to 15 years Development Master Plan 2014. Subzones are divisions within a planning area which are usually centred around a focal point such as neighbourhood centre or activity node. There can be more than 10 subzones within a Planning Area. The data is sourced from Singapore Government\n\n\n\n\ncyclingpath &lt;- st_read(dsn = \"../data/geospatial\", layer = \"CyclingPathGazette\")\n\nReading layer `CyclingPathGazette' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 2558 features and 2 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 11854.32 ymin: 28347.98 xmax: 42626.09 ymax: 48948.15\nProjected CRS: SVY21\n\n\n\nThis code imports polyline feature data from a shapefile. Polylines are sequences of connected straight lines and are commonly used to represent linear features such as roads, rivers, or cycling paths. In this case, the data are line representations of an intra-town path around Singapore designated for cyclists, excluding park connectors. The data is sourced from Land Transport Authority\n\n\n\n\npreschool &lt;- st_read(dsn = \"../data/geospatial/PreSchoolsLocation.kml\")\n\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `C:\\ameernoor\\ISSS624\\data\\geospatial\\PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n\n\n\nThis code import GIS (Geographic Information System) in KML format. KML (Keyhole Markup Language) is an XML-based format often used for expressing geographic annotation and visualization within Internet-based, two-dimensional maps and three-dimensional Earth browsers. In this example, the code imports geospatial data representing the location of pre-schools (childcare centres and kindergartens) around Singapore from a KML file. The data is sourced from Singapore Government"
  },
  {
    "objectID": "hands-on/hoe1.html#checking-the-content-of-a-simple-feature-data-frame",
    "href": "hands-on/hoe1.html#checking-the-content-of-a-simple-feature-data-frame",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "4 Checking the Content of A Simple Feature Data Frame",
    "text": "4 Checking the Content of A Simple Feature Data Frame\nWhen working with a geospatial data frame like ‘mpsz’ (or any dataset in general), it’s essential to understand its structure and content. The following codes are for checking and understanding the data:\n\nExtracting Geometric Information with st_geometry.Overview of Data Structure with ‘glimpse’Previewing Data with ‘head’\n\n\nThe st_geometry function is used to extract the geometric information (shapes) from the mpsz (Master Plan Subzone Boundary 2014) feature data frame.\n\nst_geometry(mpsz)\n\nGeometry set for 323 features \nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 5 geometries:\n\n\n\nFrom the output of the code, it can be summarized that:\n\nThe dataset contains 323 features, each representing a geographic entity. The geometry type used is MULTIPOLYGON, indicating that these features consist of multiple connected polygons.\nThe dimension is XY, implying that the geometry is represented in a two-dimensional space with X and Y coordinates.\nThe bounding box provides the spatial extent of the dataset which includes xmin (minimum X-coordinate), ymin (minimum Y-coordinate), xmax (maximum X-coordinate), and ymax (maximum Y-coordinate)\nProjection Information: The data is projected in the SVY21 coordinate reference system (CRS). SVY21 is a coordinate system used in Singapore for accurate spatial representation.\nFirst 5 Geometries: The output displays the geometries for the first 5 features in the dataset, each represented as a MULTIPOLYGON.\n\n\n\n\nThe glimpse function is employed to obtain a quick overview of the structure and content of the ‘mpsz’ data frame, offering insights into its shape, variables and data types.\n\nglimpse(mpsz)\n\nRows: 323\nColumns: 16\n$ OBJECTID   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, …\n$ SUBZONE_NO &lt;int&gt; 1, 1, 3, 8, 3, 7, 9, 2, 13, 7, 12, 6, 1, 5, 1, 1, 3, 2, 2, …\n$ SUBZONE_N  &lt;chr&gt; \"MARINA SOUTH\", \"PEARL'S HILL\", \"BOAT QUAY\", \"HENDERSON HIL…\n$ SUBZONE_C  &lt;chr&gt; \"MSSZ01\", \"OTSZ01\", \"SRSZ03\", \"BMSZ08\", \"BMSZ03\", \"BMSZ07\",…\n$ CA_IND     &lt;chr&gt; \"Y\", \"Y\", \"Y\", \"N\", \"N\", \"N\", \"N\", \"Y\", \"N\", \"N\", \"N\", \"N\",…\n$ PLN_AREA_N &lt;chr&gt; \"MARINA SOUTH\", \"OUTRAM\", \"SINGAPORE RIVER\", \"BUKIT MERAH\",…\n$ PLN_AREA_C &lt;chr&gt; \"MS\", \"OT\", \"SR\", \"BM\", \"BM\", \"BM\", \"BM\", \"SR\", \"QT\", \"QT\",…\n$ REGION_N   &lt;chr&gt; \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENT…\n$ REGION_C   &lt;chr&gt; \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\", \"CR\",…\n$ INC_CRC    &lt;chr&gt; \"5ED7EB253F99252E\", \"8C7149B9EB32EEFC\", \"C35FEFF02B13E0E5\",…\n$ FMEL_UPD_D &lt;date&gt; 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05, 2014-12-05…\n$ X_ADDR     &lt;dbl&gt; 31595.84, 28679.06, 29654.96, 26782.83, 26201.96, 25358.82,…\n$ Y_ADDR     &lt;dbl&gt; 29220.19, 29782.05, 29974.66, 29933.77, 30005.70, 29991.38,…\n$ SHAPE_Leng &lt;dbl&gt; 5267.381, 3506.107, 1740.926, 3313.625, 2825.594, 4428.913,…\n$ SHAPE_Area &lt;dbl&gt; 1630379.27, 559816.25, 160807.50, 595428.89, 387429.44, 103…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((31495.56 30..., MULTIPOLYGON (…\n\n\n\nFrom the output of the code, it can be summarized that the dataset contains 323 row and 16 columns, with various data type including integer (int), characters/string (chr), date, double-precision floating-point/64bit float (dbl), and multipolygon\n\n\n\nThe head function is utilized to display the initial 5 rows of the ‘mpsz’ data frame, providing a glimpse of its data values. The n=5 parameter specifies the number of rows to be shown (in this case, the first 5 rows).\n\nhead(mpsz, n=5)\n\nSimple feature collection with 5 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 25867.68 ymin: 28369.47 xmax: 32362.39 ymax: 30435.54\nProjected CRS: SVY21\n  OBJECTID SUBZONE_NO      SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1        1          1   MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2        2          1   PEARL'S HILL    OTSZ01      Y          OUTRAM\n3        3          3      BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4        4          8 HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5        5          3        REDHILL    BMSZ03      N     BUKIT MERAH\n  PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1         MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2         OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3         SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4         BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5         BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n    Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1 29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2 29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3 29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4 29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5 30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n\n\n\nThe output describes the data as a Simple feature collection with 5 features and 15 fields. Note that the features will change in accordance with the numer in the ‘n’ parameter changed. Field represents the number of columns in the dataset. Note that it only count 15 columns in the dataset as opposed to 16 columns in ‘glimpse’ function. It is because of the ‘geometry’ column is not counted as a ‘geometry’ column is not counted as a ‘simple feature’."
  },
  {
    "objectID": "hands-on/hoe1.html#visualizing-the-geospatial-data-on-chartplot",
    "href": "hands-on/hoe1.html#visualizing-the-geospatial-data-on-chartplot",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "5 Visualizing the Geospatial Data on Chart/Plot",
    "text": "5 Visualizing the Geospatial Data on Chart/Plot\nIn geospatial data science, by looking at the feature information is not enough. We are also interested to visualise the geospatial features. THe following visualization use plot function from sf library. Note that ‘plot()’ function is mean for plotting the geospatial object for quick look. For high cartographic quality plot, other R package such as tmap should be used.\n\nPlotting All FeaturesPlotting Only the Geometric ShapesPlotting Based on a Specific Attribute\n\n\nThe plot function is used to visualize all features in the ‘mpsz’ dataset. The max.plot parameter limits the display to a maximum of 15 features\n\nplot(mpsz, max.plot = 15)\n\n\n\n\n\n\nHere, the plot function is applied to display only the geometric shapes from the ‘mpsz’ dataset. The st_geometry function extracts the geometries, and the plot focuses solely on the spatial representation.\n\nplot(st_geometry(mpsz))\n\n\n\n\n\n\nThis code utilizes the plot function to visualize features from the ‘mpsz’ dataset based on the attribute “PLN_AREA_N.” The resulting plot highlights spatial distributions based on the specified attribute, providing insights into the geographic distribution of the selected feature.\n\nplot(mpsz[\"PLN_AREA_N\"])"
  },
  {
    "objectID": "hands-on/hoe1.html#working-with-projection",
    "href": "hands-on/hoe1.html#working-with-projection",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "6 Working with Projection",
    "text": "6 Working with Projection\nMap projection is an important property of a geospatial data. In order to perform geoprocessing using two geospatial data, we need to ensure that both geospatial data are projected using similar coordinate system. In this section, you will learn how to project a simple feature data frame from one coordinate system to another coordinate system. The technical term of this process is called projection transformation.\n\n6.1 Assigning EPSG code to a simple feature data frame\nOne of the common issue that can happen during importing geospatial data into R is that the coordinate system of the source data was either missing (such as due to missing .proj for ESRI shapefile) or wrongly assigned during the importing process.\n\nChecking default EPSG CodeCorrecting EPSG CodeChecking Correction Result\n\n\nThe st_crs is a function to retrieve coordinate reference system from sf or sfc object. In this case, it is used to obtain the current EPSG code of the ‘mpsz’ dataset, providing information about its current coordinate reference system. The EPSG code (European Petroleum Survey Group) is a standardized identifier used to uniquely reference a coordinate reference system.\n\nst_crs(mpsz)\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"SVY21[WGS84]\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\nAlthough mpsz data frame is projected in svy21 but when we read until the end of the print, it indicates that the EPSG is 9001. This is a wrong EPSG code because the correct EPSG code for svy21 should be 3414. This code assigns the EPSG code 3414 to the ‘mpsz’ dataset, ensuring that it adheres to the SVY21 coordinate reference system (EPSG 3414) for accurate spatial representation.\n\nmpsz3414 &lt;- st_set_crs(mpsz, 3414)\n\n\n\nThe following code is to re-run st_crs to verify that the correction was successful by displaying the updated EPSG code (EPSG 3414) of the ‘mpsz3414’ dataset.\n\nst_crs(mpsz3414)\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n\n\n\n\n\n\n\n6.2 Transforming the projection of preschool from wgs84 to svy21\nIn geospatial analytics, it is very common for us to transform the original data from geographic coordinate system to projected coordinate system. This is because geographic coordinate system is not appropriate if the analysis need to use distance or/and area measurements. This following code utilizes st_transform to convert the projection of the preschool dataset from the WGS84 coordinate system to the SVY21 coordinate system (EPSG 3414). This transformation ensures compatibility with other spatial data in the SVY21 projection.\n\npreschool3414 &lt;- st_transform(preschool, crs = 3414)"
  },
  {
    "objectID": "hands-on/hoe1.html#importing-and-converting-an-aspatial-data",
    "href": "hands-on/hoe1.html#importing-and-converting-an-aspatial-data",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "7 Importing and Converting an Aspatial Data",
    "text": "7 Importing and Converting an Aspatial Data\nIn practice, it is not unusual that we will come across data such as listing of Inside Airbnb. We call this kind of data aspatial data. This is because it is not a geospatial data but among the data fields, there are two fields that capture the x- and y-coordinates of the data points. In this section, you will learn how to import an aspatial data into R environment and save it as a tibble data frame. Next, you will convert it into a simple feature data frame.\n\nImporting the aspatial dataCreating a simple feature data frame from an aspatial data frame\n\n\nSince listings data set is in csv file format, we will use read_csv() of readr package to import listing.csv as shown the code chunk below. The output R object is called listings and it is a tibble data frame.\n\nlistings &lt;- read_csv(\"../data/aspatial/listings.csv\")\n\nDisplaying the Aspatial Data This code displays the content of the ‘listings’ data frame, providing a preview of its structure and values.\n\nlist(listings)\n\n[[1]]\n# A tibble: 3,483 × 18\n       id name      host_id host_name neighbourhood_group neighbourhood latitude\n    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt; &lt;chr&gt;     &lt;chr&gt;               &lt;chr&gt;            &lt;dbl&gt;\n 1  71609 Villa in…  367042 Belinda   East Region         Tampines          1.35\n 2  71896 Home in …  367042 Belinda   East Region         Tampines          1.35\n 3  71903 Home in …  367042 Belinda   East Region         Tampines          1.35\n 4 275343 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 5 275344 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 6 289234 Home in …  367042 Belinda   East Region         Tampines          1.34\n 7 294281 Rental u… 1521514 Elizabeth Central Region      Newton            1.31\n 8 324945 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n 9 330095 Rental u… 1439258 Kay       Central Region      Bukit Merah       1.29\n10 369141 Place to… 1521514 Elizabeth Central Region      Newton            1.31\n# ℹ 3,473 more rows\n# ℹ 11 more variables: longitude &lt;dbl&gt;, room_type &lt;chr&gt;, price &lt;dbl&gt;,\n#   minimum_nights &lt;dbl&gt;, number_of_reviews &lt;dbl&gt;, last_review &lt;date&gt;,\n#   reviews_per_month &lt;dbl&gt;, calculated_host_listings_count &lt;dbl&gt;,\n#   availability_365 &lt;dbl&gt;, number_of_reviews_ltm &lt;dbl&gt;, license &lt;chr&gt;\n\n\n\nThe output reveals that listing tibble data frame consists of 4252 rows and 16 columns. Two useful fields we are going to use in the next phase are latitude and longitude. Note that they are in decimal degree format. As a best guess, we will assume that the data is in wgs84 Geographic Coordinate System.\n\n\n\nThis code converts the listings data frame into a simple feature data frame named listings_sf. It assigns coordinates and transforms the CRS to SVY21 (EPSG 3414) for accurate spatial representation\n\nlistings_sf &lt;- st_as_sf(listings, coords = c(\"longitude\", \"latitude\"), crs=4326) %&gt;% st_transform(crs = 3414)\n\n\nThings to learn from the arguments above: - coords argument requires you to provide the column name of the x-coordinates first then followed by the column name of the y-coordinates. - crs argument requires you to provide the coordinates system in epsg format. EPSG: 4326 is wgs84 Geographic Coordinate System and EPSG: 3414 is Singapore SVY21 Projected Coordinate System. You can search for other country’s epsg code by referring to epsg.io. - %&gt;% is used to nest st_transform() to transform the newly created simple feature data frame into svy21 projected coordinates system.\n\nexamine the content using glimpse function\n\nglimpse(listings_sf)\n\nRows: 3,483\nColumns: 17\n$ id                             &lt;dbl&gt; 71609, 71896, 71903, 275343, 275344, 28…\n$ name                           &lt;chr&gt; \"Villa in Singapore · ★4.44 · 2 bedroom…\n$ host_id                        &lt;dbl&gt; 367042, 367042, 367042, 1439258, 143925…\n$ host_name                      &lt;chr&gt; \"Belinda\", \"Belinda\", \"Belinda\", \"Kay\",…\n$ neighbourhood_group            &lt;chr&gt; \"East Region\", \"East Region\", \"East Reg…\n$ neighbourhood                  &lt;chr&gt; \"Tampines\", \"Tampines\", \"Tampines\", \"Bu…\n$ room_type                      &lt;chr&gt; \"Private room\", \"Private room\", \"Privat…\n$ price                          &lt;dbl&gt; 150, 80, 80, 55, 69, 220, 85, 75, 45, 7…\n$ minimum_nights                 &lt;dbl&gt; 92, 92, 92, 60, 60, 92, 92, 60, 60, 92,…\n$ number_of_reviews              &lt;dbl&gt; 20, 24, 47, 22, 17, 12, 133, 18, 6, 81,…\n$ last_review                    &lt;date&gt; 2020-01-17, 2019-10-13, 2020-01-09, 20…\n$ reviews_per_month              &lt;dbl&gt; 0.14, 0.16, 0.31, 0.17, 0.12, 0.09, 0.9…\n$ calculated_host_listings_count &lt;dbl&gt; 5, 5, 5, 52, 52, 5, 7, 52, 52, 7, 7, 1,…\n$ availability_365               &lt;dbl&gt; 89, 89, 89, 275, 274, 89, 365, 365, 365…\n$ number_of_reviews_ltm          &lt;dbl&gt; 0, 0, 0, 0, 3, 0, 0, 1, 3, 0, 0, 0, 0, …\n$ license                        &lt;chr&gt; NA, NA, NA, \"S0399\", \"S0399\", NA, NA, \"…\n$ geometry                       &lt;POINT [m]&gt; POINT (41972.5 36390.05), POINT (…\n\n\nTable above shows the content of listing_sf. Notice that a new column called geometry has been added into the data frame. On the other hand, the longitude and latitude columns have been dropped from the data frame."
  },
  {
    "objectID": "hands-on/hoe1.html#geoprocessing-with-sf-package",
    "href": "hands-on/hoe1.html#geoprocessing-with-sf-package",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "8 Geoprocessing with sf package",
    "text": "8 Geoprocessing with sf package\nBesides providing functions to handling (i.e. importing, exporting, assigning projection, transforming projection etc) geospatial data, sf package also offers a wide range of geoprocessing (also known as GIS analysis) functions. In this section, you will learn how to perform two commonly used geoprocessing functions, namely buffering and point in polygon count.\n\nBufferingPoint-in-polygon count\n\n\nThe scenario: The authority is planning to upgrade the exiting cycling path. To do so, they need to acquire 5 metres of reserved land on the both sides of the current cycling path. You are tasked to\nThe solution: determine the extend of the land need to be acquired and their total area. This code calculates 5-meter buffers around cycling paths and stores the result in the ‘buffer_cycling’ dataset.\n\nbuffer_cycling &lt;- st_buffer(cyclingpath, dist=5, nQuadSegs = 30)\n\ncalculate the area of buffers The code adds a new column, ‘AREA,’ to the ‘buffer_cycling’ dataset, containing the calculated area of each buffer.\n\nbuffer_cycling$AREA &lt;- st_area(buffer_cycling)\n\nderive the total land involved\n\nsum(buffer_cycling$AREA)\n\n1774367 [m^2]\n\n\n\n\nThe scenario A pre-school service group want to find out the numbers of pre-schools in each Planning Subzone.\n** The solution: The code counts the number of pre-schools within each Planning Subzone using the st_intersects() function and updates the ‘PreSch Count’ column in the ‘mpsz3414’ dataset. Next, length() of Base R is used to calculate numbers of pre-schools that fall inside each planning subzone.\n\nmpsz3414$'PreSch Count'&lt;- lengths(st_intersects(mpsz3414, preschool3414)) \n\nchecking the summary statistics\n\nsummary(mpsz3414$`PreSch Count`)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   0.00    0.00    4.00    7.09   10.00   72.00 \n\n\nchecking the subzone with most number of pre-school To list the planning subzone with the most number of pre-school, the top_n() of dplyr package is used as shown in the code chunk below.\n\ntop_n(mpsz3414, 1, `PreSch Count`)\n\nSimple feature collection with 1 feature and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 39655.33 ymin: 35966 xmax: 42940.57 ymax: 38622.37\nProjected CRS: SVY21 / Singapore TM\n  OBJECTID SUBZONE_NO     SUBZONE_N SUBZONE_C CA_IND PLN_AREA_N PLN_AREA_C\n1      189          2 TAMPINES EAST    TMSZ02      N   TAMPINES         TM\n     REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR   Y_ADDR SHAPE_Leng\n1 EAST REGION       ER 21658EAAF84F4D8D 2014-12-05 41122.55 37392.39   10180.62\n  SHAPE_Area                       geometry PreSch Count\n1    4339824 MULTIPOLYGON (((42196.76 38...           72\n\n\ncalculating the density of pre-school by planning subzone This code calculates the area of each Planning Subzone and adds a new column, ‘Area,’ to the ‘mpsz3414’ dataset.\n\nmpsz3414$Area &lt;- mpsz3414 %&gt;%\n  st_area()\n\ncompute pre-schoold density The code computes the density of pre-schools per square kilometer for each Planning Subzone, providing a measure of the concentration of educational facilities in different areas.\n\nmpsz3414 &lt;- mpsz3414 %&gt;%\n  mutate(`PreSch Density` = `PreSch Count`/Area * 1000000)"
  },
  {
    "objectID": "hands-on/hoe1.html#exploratory-data-analysis-eda",
    "href": "hands-on/hoe1.html#exploratory-data-analysis-eda",
    "title": "Hands-on Exercise 1: Geospatial Data Wrangling with R",
    "section": "9 Exploratory Data Analysis (EDA)",
    "text": "9 Exploratory Data Analysis (EDA)\nIn practice, many geospatial analytics start with Exploratory Data Analysis. In this section, you will learn how to use appropriate ggplot2 functions to create functional and yet truthful statistical graphs for EDA purposes.\n\nPlotting histogram for PreSch DensityPlot better histogram using GG PlotPlot a scatterplot using GGPlot\n\n\nThe histogram visualizes the distribution of pre-school density across different Planning Subzones, providing insights into the variation and concentration of pre-schools in Singapore.\n\nhist(mpsz3414$`PreSch Density`)\n\n\n\n\n\n\nThis GG Plot-generated histogram offers a more detailed view of pre-school density, allowing for a nuanced exploration of the distribution in Planning Subzones. The chart provides additional context on the prevalence of single pre-school areas versus those with higher concentrations.\n\n\nCode\nggplot(data=mpsz3414, \n       aes(x= as.numeric(`PreSch Density`)))+\n  geom_histogram(bins=20, \n                 color=\"black\", \n                 fill=\"light blue\") +\n  labs(title = \"Are pre-school even distributed in Singapore?\",\n       subtitle= \"There are many planning sub-zones with a single pre-school, on the other hand, \\nthere are two planning sub-zones with at least 20 pre-schools\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Frequency\")\n\n\n\n\n\n\n\nThis scatterplot employs GG Plot to illustrate the relationship between pre-school density and count in different Planning Subzones. It helps identify patterns, clusters, or outliers, facilitating a comprehensive understanding of the distribution and concentration of pre-schools. The chart is limited to a specific range for clarity in visualization.\n\n\nCode\nggplot(data=mpsz3414, \n       aes(y = `PreSch Count`, \n           x= as.numeric(`PreSch Density`)))+\n  geom_point(color=\"black\", \n             fill=\"light blue\") +\n  xlim(0, 40) +\n  ylim(0, 40) +\n  labs(title = \"\",\n      x = \"Pre-school density (per km sq)\",\n      y = \"Pre-school count\")"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html",
    "href": "hands-on/hoe2-localautocor.html",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "",
    "text": "Zoomed Clusters of Wealthy vs Poor Area - Local Spatial Autocorrelation Illustration"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#overview",
    "href": "hands-on/hoe2-localautocor.html#overview",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "1 Overview",
    "text": "1 Overview\nThis exercise is a follow up of 2B exercise on exploring Global and Local Measures of Spatial Autocorrelation (GLSA) using the spdep package. Specifically, this 2C exercise will focus on Local Measures of Spatial Autocorrelation.\nThe new learning objectives includes: - Compute Local Indicator of Spatial Association (LISA) statistics to detect clusters and outliers. - Compute Getis-Ord’s Gi-statistics to identify hotspots or cold spots. - Visualize the analysis output using the tmap package.\n\nLocal measures of spatial autocorrelation, in contrast, focus on the relationships between each observation and its immediate surroundings. Instead of a single summary statistic, they provide specific scores for each observation, which help to understand more about the spatial structure in the data. These measures can tell us where specific clusters or outliers are located within the map. They are based on the same general principles as global measures but are more detailed, sometimes mathematically related to the global measures. Local Indicators of Spatial Association (LISAs) are a common example of this type of measure, offering a detailed view of spatial patterns and relationships at a local level. summarized from: Rey et al., 2020"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#getting-started",
    "href": "hands-on/hoe2-localautocor.html#getting-started",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "2 Getting Started",
    "text": "2 Getting Started\nload the packages\n\n\nCode\npacman::p_load(sf, spdep, tmap, tidyverse)\n\n\nimport, join, and visualize the data\n\n\nCode\n#import geospatial data\nhunan &lt;- st_read(dsn = \"../data/geospatial\", \n                 layer = \"Hunan\")\n\n\nReading layer `Hunan' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 88 features and 7 fields\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 108.7831 ymin: 24.6342 xmax: 114.2544 ymax: 30.12812\nGeodetic CRS:  WGS 84\n\n\nCode\n# import aspatial data\nhunan2012 &lt;- read_csv(\"../data/aspatial/Hunan_2012.csv\")\n\n# perform relational join\nhunan &lt;- left_join(hunan, hunan2012) %&gt;%\n  select(1:4, 7, 15)\n\n# visualize the data\nequal &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\", n = 5, style = \"equal\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal interval classification\", main.title.size = 1,\n            main.title.position = \"center\", legend.outside = TRUE,\n            legend.outside.position = \"bottom\")\n\nquantile &lt;- tm_shape(hunan) +\n  tm_fill(\"GDPPC\", n = 5, style = \"quantile\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(main.title = \"Equal quantile classification\", main.title.size = 1,\n            main.title.position = \"center\", legend.outside = TRUE,\n            legend.outside.position = \"bottom\")\n\ntmap_arrange(equal, quantile, asp=1, ncol=2)\n\n\n\n\n\ncarry-over important variables from previous exercise\n\n\nCode\nwm_q &lt;- poly2nb(hunan, queen=TRUE)\nrswm_q &lt;- nb2listw(wm_q, style=\"W\", zero.policy = TRUE)"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#cluster-and-outlier-analysis",
    "href": "hands-on/hoe2-localautocor.html#cluster-and-outlier-analysis",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "3 Cluster and Outlier Analysis",
    "text": "3 Cluster and Outlier Analysis\nLocal Indicators of Spatial Association (LISA) are statistical tools that help us identify clusters or outliers in the spatial distribution of a variable. Imagine studying cancer rates in different neighborhoods of a city; LISA would reveal whether there are areas with unusually high or low rates, indicating a spatial pattern beyond random chance. In this section, we’ll focus on applying LISA, particularly local Moran’s I, to detect clusters and outliers in the GDP per capita of Hunan Province, China, in 2012.\n\n3.1 Computing and Mapping local Moran’s I\nTo calculate local Moran’s I, we use the localmoran() function of spdep package. This function computes various statistics, such as Ii, E.Ii, Var.Ii, Z.Ii, and Pr(), indicating the local spatial autocorrelation for each region.\n\n\nCode\nfips &lt;- order(hunan$County)\nlocalMI &lt;- localmoran(hunan$GDPPC, rswm_q)\nhead(localMI)\n\n\n            Ii          E.Ii       Var.Ii        Z.Ii Pr(z != E(Ii))\n1 -0.001468468 -2.815006e-05 4.723841e-04 -0.06626904      0.9471636\n2  0.025878173 -6.061953e-04 1.016664e-02  0.26266425      0.7928094\n3 -0.011987646 -5.366648e-03 1.133362e-01 -0.01966705      0.9843090\n4  0.001022468 -2.404783e-07 5.105969e-06  0.45259801      0.6508382\n5  0.014814881 -6.829362e-05 1.449949e-03  0.39085814      0.6959021\n6 -0.038793829 -3.860263e-04 6.475559e-03 -0.47728835      0.6331568\n\n\n\nlocalmoran() function returns a matrix of values whose columns are: - Ii: the local Moran’s I statistics - E.Ii: the expectation of local moran statistic under the randomisation hypothesis - Var.Ii: the variance of local moran statistic under the randomisation hypothesis - Z.Ii:the standard deviate of local moran statistic - Pr(): the p-value of local moran statistic\n\nThe following code displays the content of the local Moran matrix by using printCoefmat().\n\n\nCode\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=hunan$County[fips]),\n  check.names=FALSE)\n\n\n                       Ii        E.Ii      Var.Ii        Z.Ii Pr.z....E.Ii..\nAnhua         -2.2493e-02 -5.0048e-03  5.8235e-02 -7.2467e-02         0.9422\nAnren         -3.9932e-01 -7.0111e-03  7.0348e-02 -1.4791e+00         0.1391\nAnxiang       -1.4685e-03 -2.8150e-05  4.7238e-04 -6.6269e-02         0.9472\nBaojing        3.4737e-01 -5.0089e-03  8.3636e-02  1.2185e+00         0.2230\nChaling        2.0559e-02 -9.6812e-04  2.7711e-02  1.2932e-01         0.8971\nChangning     -2.9868e-05 -9.0010e-09  1.5105e-07 -7.6828e-02         0.9388\nChangsha       4.9022e+00 -2.1348e-01  2.3194e+00  3.3590e+00         0.0008\nChengbu        7.3725e-01 -1.0534e-02  2.2132e-01  1.5895e+00         0.1119\nChenxi         1.4544e-01 -2.8156e-03  4.7116e-02  6.8299e-01         0.4946\nCili           7.3176e-02 -1.6747e-03  4.7902e-02  3.4200e-01         0.7324\nDao            2.1420e-01 -2.0824e-03  4.4123e-02  1.0297e+00         0.3032\nDongan         1.5210e-01 -6.3485e-04  1.3471e-02  1.3159e+00         0.1882\nDongkou        5.2918e-01 -6.4461e-03  1.0748e-01  1.6338e+00         0.1023\nFenghuang      1.8013e-01 -6.2832e-03  1.3257e-01  5.1198e-01         0.6087\nGuidong       -5.9160e-01 -1.3086e-02  3.7003e-01 -9.5104e-01         0.3416\nGuiyang        1.8240e-01 -3.6908e-03  3.2610e-02  1.0305e+00         0.3028\nGuzhang        2.8466e-01 -8.5054e-03  1.4152e-01  7.7931e-01         0.4358\nHanshou        2.5878e-02 -6.0620e-04  1.0167e-02  2.6266e-01         0.7928\nHengdong       9.9964e-03 -4.9063e-04  6.7742e-03  1.2742e-01         0.8986\nHengnan        2.8064e-02 -3.2160e-04  3.7597e-03  4.6294e-01         0.6434\nHengshan      -5.8201e-03 -3.0437e-05  5.1076e-04 -2.5618e-01         0.7978\nHengyang       6.2997e-02 -1.3046e-03  2.1865e-02  4.3486e-01         0.6637\nHongjiang      1.8790e-01 -2.3019e-03  3.1725e-02  1.0678e+00         0.2856\nHuarong       -1.5389e-02 -1.8667e-03  8.1030e-02 -4.7503e-02         0.9621\nHuayuan        8.3772e-02 -8.5569e-04  2.4495e-02  5.4072e-01         0.5887\nHuitong        2.5997e-01 -5.2447e-03  1.1077e-01  7.9685e-01         0.4255\nJiahe         -1.2431e-01 -3.0550e-03  5.1111e-02 -5.3633e-01         0.5917\nJianghua       2.8651e-01 -3.8280e-03  8.0968e-02  1.0204e+00         0.3076\nJiangyong      2.4337e-01 -2.7082e-03  1.1746e-01  7.1800e-01         0.4728\nJingzhou       1.8270e-01 -8.5106e-04  2.4363e-02  1.1759e+00         0.2396\nJinshi        -1.1988e-02 -5.3666e-03  1.1334e-01 -1.9667e-02         0.9843\nJishou        -2.8680e-01 -2.6305e-03  4.4028e-02 -1.3543e+00         0.1756\nLanshan        6.3334e-02 -9.6365e-04  2.0441e-02  4.4972e-01         0.6529\nLeiyang        1.1581e-02 -1.4948e-04  2.5082e-03  2.3422e-01         0.8148\nLengshuijiang -1.7903e+00 -8.2129e-02  2.1598e+00 -1.1623e+00         0.2451\nLi             1.0225e-03 -2.4048e-07  5.1060e-06  4.5260e-01         0.6508\nLianyuan      -1.4672e-01 -1.8983e-03  1.9145e-02 -1.0467e+00         0.2952\nLiling         1.3774e+00 -1.5097e-02  4.2601e-01  2.1335e+00         0.0329\nLinli          1.4815e-02 -6.8294e-05  1.4499e-03  3.9086e-01         0.6959\nLinwu         -2.4621e-03 -9.0703e-06  1.9258e-04 -1.7676e-01         0.8597\nLinxiang       6.5904e-02 -2.9028e-03  2.5470e-01  1.3634e-01         0.8916\nLiuyang        3.3688e+00 -7.7502e-02  1.5180e+00  2.7972e+00         0.0052\nLonghui        8.0801e-01 -1.1377e-02  1.5538e-01  2.0787e+00         0.0376\nLongshan       7.5663e-01 -1.1100e-02  3.1449e-01  1.3690e+00         0.1710\nLuxi           1.8177e-01 -2.4855e-03  3.4249e-02  9.9561e-01         0.3194\nMayang         2.1852e-01 -5.8773e-03  9.8049e-02  7.1663e-01         0.4736\nMiluo          1.8704e+00 -1.6927e-02  2.7925e-01  3.5715e+00         0.0004\nNan           -9.5789e-03 -4.9497e-04  6.8341e-03 -1.0988e-01         0.9125\nNingxiang      1.5607e+00 -7.3878e-02  8.0012e-01  1.8274e+00         0.0676\nNingyuan       2.0910e-01 -7.0884e-03  8.2306e-02  7.5356e-01         0.4511\nPingjiang     -9.8964e-01 -2.6457e-03  5.6027e-02 -4.1698e+00         0.0000\nQidong         1.1806e-01 -2.1207e-03  2.4747e-02  7.6396e-01         0.4449\nQiyang         6.1966e-02 -7.3374e-04  8.5743e-03  6.7712e-01         0.4983\nRucheng       -3.6992e-01 -8.8999e-03  2.5272e-01 -7.1814e-01         0.4727\nSangzhi        2.5053e-01 -4.9470e-03  6.8000e-02  9.7972e-01         0.3272\nShaodong      -3.2659e-02 -3.6592e-05  5.0546e-04 -1.4510e+00         0.1468\nShaoshan       2.1223e+00 -5.0227e-02  1.3668e+00  1.8583e+00         0.0631\nShaoyang       5.9499e-01 -1.1253e-02  1.3012e-01  1.6807e+00         0.0928\nShimen        -3.8794e-02 -3.8603e-04  6.4756e-03 -4.7729e-01         0.6332\nShuangfeng     9.2835e-03 -2.2867e-03  3.1516e-02  6.5174e-02         0.9480\nShuangpai      8.0591e-02 -3.1366e-04  8.9838e-03  8.5358e-01         0.3933\nSuining        3.7585e-01 -3.5933e-03  4.1870e-02  1.8544e+00         0.0637\nTaojiang      -2.5394e-01 -1.2395e-03  1.4477e-02 -2.1002e+00         0.0357\nTaoyuan        1.4729e-02 -1.2039e-04  8.5103e-04  5.0903e-01         0.6107\nTongdao        4.6482e-01 -6.9870e-03  1.9879e-01  1.0582e+00         0.2900\nWangcheng      4.4220e+00 -1.1067e-01  1.3596e+00  3.8873e+00         0.0001\nWugang         7.1003e-01 -7.8144e-03  1.0710e-01  2.1935e+00         0.0283\nXiangtan       2.4530e-01 -3.6457e-04  3.2319e-03  4.3213e+00         0.0000\nXiangxiang     2.6271e-01 -1.2703e-03  2.1290e-02  1.8092e+00         0.0704\nXiangyin       5.4525e-01 -4.7442e-03  7.9236e-02  1.9539e+00         0.0507\nXinhua         1.1810e-01 -6.2649e-03  8.6001e-02  4.2409e-01         0.6715\nXinhuang       1.5725e-01 -4.1820e-03  3.6648e-01  2.6667e-01         0.7897\nXinning        6.8928e-01 -9.6674e-03  2.0328e-01  1.5502e+00         0.1211\nXinshao        5.7578e-02 -8.5932e-03  1.1769e-01  1.9289e-01         0.8470\nXintian       -7.4050e-03 -5.1493e-03  1.0877e-01 -6.8395e-03         0.9945\nXupu           3.2406e-01 -5.7468e-03  5.7735e-02  1.3726e+00         0.1699\nYanling       -6.9021e-02 -5.9211e-04  9.9306e-03 -6.8667e-01         0.4923\nYizhang       -2.6844e-01 -2.2463e-03  4.7588e-02 -1.2202e+00         0.2224\nYongshun       6.3064e-01 -1.1350e-02  1.8830e-01  1.4795e+00         0.1390\nYongxing       4.3411e-01 -9.0735e-03  1.5088e-01  1.1409e+00         0.2539\nYou            7.8750e-02 -7.2728e-03  1.2116e-01  2.4714e-01         0.8048\nYuanjiang      2.0004e-04 -1.7760e-04  2.9798e-03  6.9181e-03         0.9945\nYuanling       8.7298e-03 -2.2981e-06  2.3221e-05  1.8121e+00         0.0700\nYueyang        4.1189e-02 -1.9768e-04  2.3113e-03  8.6085e-01         0.3893\nZhijiang       1.0476e-01 -7.8123e-04  1.3100e-02  9.2214e-01         0.3565\nZhongfang     -2.2685e-01 -2.1455e-03  3.5927e-02 -1.1855e+00         0.2358\nZhuzhou        3.2864e-01 -5.2432e-04  7.2391e-03  3.8688e+00         0.0001\nZixing        -7.6849e-01 -8.8210e-02  9.4057e-01 -7.0144e-01         0.4830\n\n\n\nlocal Moran’s Ilocal Moran’s I valueslocal Moran’s I p-valuesMapping both local Moran’s I values and p-values\n\n\nTo visualize the local Moran’s I, we append the local Moran’s I dataframe to the hunan SpatialPolygonDataFrame, creating hunan.localMI. We can then use tmap to create choropleth maps.\n\n\nCode\nhunan.localMI &lt;- cbind(hunan,localMI) %&gt;%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n\n\n\n\nthe code below uses tmap to plot a choropleth map of local Moran’s I values.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.outside = TRUE, legend.outside.position = \"right\")\n\n\n\n\n\n\n\nConsidering both Ii values and their p-values is essential. The code chunk below creates a choropleth map of Moran’s I p-values.\n\n\nCode\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5) +\n  tm_layout(legend.outside = TRUE, legend.outside.position = \"right\")\n\n\n\n\n\n\n\nFor a comprehensive interpretation, it’s beneficial to plot both the local Moran’s I values and their corresponding p-values side by side.\n\n\nCode\nlocalMI.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\", \n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n\npvalue.map &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(localMI.map, pvalue.map, asp=1, ncol=2)"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#creating-a-lisa-cluster-map",
    "href": "hands-on/hoe2-localautocor.html#creating-a-lisa-cluster-map",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "4 Creating a LISA Cluster Map",
    "text": "4 Creating a LISA Cluster Map\nThe LISA Cluster Map helps us identify significant spatial clusters by color-coding areas based on their type of spatial autocorrelation. To generate this map, we start by plotting the Moran scatterplot.\n\nA LISA (Local Indicators of Spatial Association) Cluster Map is a tool used in geography and spatial analysis to identify areas of significant spatial autocorrelation in a dataset. It visually represents regions where observed values (like population density, temperature, etc.) are either similar or dissimilar to their neighboring areas. The map highlights clusters of high values near high values (high-high), low values near low values (low-low), and areas where high values are near low values (high-low) and vice versa. This visualization helps to easily identify areas of similar or dissimilar values and understand spatial patterns and relationships within the data. In essence, it’s a way to see where certain types of values are grouped together on a map.\n\n\nMoran scatterplotMoran scatterplot with standardised variableLISA map\n\n\nThe Moran scatterplot illustrates how the values of a variable at each location relate to the average values at neighboring locations. The code below uses moran.plot() from the spdep package to create this plot for the GDPPC.\n\n\nCode\nnci &lt;- moran.plot(hunan$GDPPC, rswm_q,\n                  labels=as.character(hunan$County), \n                  xlab=\"GDPPC 2012\", \n                  ylab=\"Spatially Lag GDPPC 2012\")\n\n\n\n\n\nThe plot is divided into four quadrants. The top right quadrant represents areas with high GDPPC surrounded by areas with average GDPPC – these are the high-high locations.\n\n\nTo enhance the analysis, we standardize the GDPPC variable using the scale() function. Then, we plot the Moran scatterplot again.\nThe as.vector() added to the end is to make sure that the data type we get is a vector that map neatly into the dataframe.\n\n\nCode\nhunan$Z.GDPPC &lt;- scale(hunan$GDPPC) %&gt;% \n  as.vector\nnci2 &lt;- moran.plot(hunan$Z.GDPPC, rswm_q,\n                   labels=as.character(hunan$County),\n                   xlab=\"z-GDPPC 2012\", \n                   ylab=\"Spatially Lag z-GDPPC 2012\")\n\n\n\n\n\n\n\nThe following code prepares the LISA cluster map by categorizing areas into low-low, low-high, high-low, high-high, or insignificant clusters, and plot it into a map.\n\n\nCode\n# Create an empty vector to store the quadrant information for each area\nquadrant &lt;- vector(mode=\"numeric\",length=nrow(localMI))\n\n# Calculate the spatially lagged variable (DV) by subtracting the mean from the lagged GDPPC\nhunan$lag_GDPPC &lt;- lag.listw(rswm_q, hunan$GDPPC)\nDV &lt;- hunan$lag_GDPPC - mean(hunan$lag_GDPPC)\n\n# Calculate the local Moran's I values (LM_I) by subtracting the mean from the original values\nLM_I &lt;- localMI[,1] - mean(localMI[,1])\n\n# Set the significance level for the local Moran's I\nsignif &lt;- 0.05       \n\n# Categorize areas into different quadrants based on their DV and LM_I values\nquadrant[DV &lt; 0 & LM_I &gt; 0] &lt;- 1  # Low values surrounded by high values (low-high)\nquadrant[DV &gt; 0 & LM_I &lt; 0] &lt;- 2  # High values surrounded by low values (high-low)\nquadrant[DV &lt; 0 & LM_I &lt; 0] &lt;- 3  # Low values surrounded by low values (low-low)\nquadrant[DV &gt; 0 & LM_I &gt; 0] &lt;- 4  # High values surrounded by high values (high-high)\n\n# Identify areas with non-significant Moran's I values and label them as 0\nquadrant[localMI[,5] &gt; signif] &lt;- 0\n\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\ntm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\n\n\n\n\nFor effective interpretation, it is better to plot both the local Moran’s I values map and its corresponding p-values map next to each other.\nThe code chunk below will be used to create such visualisation.\n\n\nCode\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\nhunan.localMI$quadrant &lt;- quadrant\ncolors &lt;- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters &lt;- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap &lt;- tm_shape(hunan.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(gdppc, LISAmap, \n             asp=1, ncol=2)\n\n\n\n\n\nWe can also include the local Moran’s I map and p-value map as shown below for easy comparison.\n\n\n\n\n\n\nThe LISA maps show significant spatial clustering of economic activity. Counties with a high GDP per Capita geographically clustered together indicates positive spatial autocorrelation. Conversely, areas with low Moran’s I values (orange) indicate counties with lower GDP per Capita that may be surrounded by higher-income counties. But, previous data processing section shows that some of the negative area might actually be richer, but the technical calculation averaged it down."
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#hot-spot-and-cold-spot-area-analysis",
    "href": "hands-on/hoe2-localautocor.html#hot-spot-and-cold-spot-area-analysis",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "5 Hot Spot and Cold Spot Area Analysis",
    "text": "5 Hot Spot and Cold Spot Area Analysis\nIn addition to finding clusters and outliers, localized spatial statistics can help identify hot spot and cold spot areas. The term ‘hot spot’ generally refers to a region or value that is higher relative to its surroundings. The Getis and Ord’s G-statistics is a spatial statistical method that detects spatial anomalies by examining neighbors within a specified proximity to identify where either high or low values cluster spatially. Statistically significant hot spots are areas with high values where neighboring areas also exhibit high values. The analysis involves three steps: deriving a spatial weight matrix, computing Gi statistics, and mapping Gi statistics.\n\n5.1 Deriving distance-based weight matrix\nInitially, we need to define new neighbors based on distance rather than shared borders, which was considered in spatial autocorrelation. Two types of distance-based proximity matrices are fixed distance weight matrix and adaptive distance weight matrix.\n\nDeriving the centroidDetermine the cut-off distanceComputing fixed distance weight matrix\n\n\nFirst, we need points associated with each polygon, and to achieve this, we use the st_centroid() function. Longitude and latitude values are extracted separately and combined into a coordinate matrix.\n\n\nCode\nlongitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[1]])\nlatitude &lt;- map_dbl(hunan$geometry, ~st_centroid(.x)[[2]])\ncoords &lt;- cbind(longitude, latitude)\n\n\n\n\nWe determine the upper limit for the distance band by finding the k nearest neighbors for each point and calculating the distance between them.\n\n\nCode\n#coords &lt;- coordinates(hunan)\nk1 &lt;- knn2nb(knearneigh(coords))\nk1dists &lt;- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  24.79   32.57   38.01   39.07   44.52   61.79 \n\n\nThe summary indicates the largest first nearest neighbor distance is 61.79 km, setting this as the upper threshold ensures all units have at least one neighbor.\n\n\nNow, we calculate the distance weight matrix bt using a fixed distance of 62 km and dnearneigh() function\n\n\nCode\nwm_d62 &lt;- dnearneigh(coords, 0, 62, longlat = TRUE)\nwm_d62\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \n\n\nThen, we convert the neighbor object into a spatial weights object named wm62_lw using nb2listw().\n\n\nCode\nwm62_lw &lt;- nb2listw(wm_d62, style = 'B')\nsummary(wm62_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 324 \nPercentage nonzero weights: 4.183884 \nAverage number of links: 3.681818 \nLink number distribution:\n\n 1  2  3  4  5  6 \n 6 15 14 26 20  7 \n6 least connected regions:\n6 15 30 32 56 65 with 1 link\n7 most connected regions:\n21 28 35 45 50 52 82 with 6 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1   S2\nB 88 7744 324 648 5440\n\n\n\n\n\n\n\n5.2 Computing adaptive distance weight matrix\nFixed distance weight matrices tend to assign more neighbors to densely settled areas and fewer neighbors to less densely settled areas. To control the number of neighbors directly, we use k-nearest neighbors and specify k.\n\n\nCode\nknn &lt;- knn2nb(knearneigh(coords, k=8))\nknn\n\n\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\n\n\nThen, we convert the neighbor object into a spatial weights object\n\n\nCode\nknn_lw &lt;- nb2listw(knn, style = 'B')\nsummary(knn_lw)\n\n\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 88 \nNumber of nonzero links: 704 \nPercentage nonzero weights: 9.090909 \nAverage number of links: 8 \nNon-symmetric neighbours list\nLink number distribution:\n\n 8 \n88 \n88 least connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n88 most connected regions:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 with 8 links\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0   S1    S2\nB 88 7744 704 1300 23014"
  },
  {
    "objectID": "hands-on/hoe2-localautocor.html#computing-gi-statistics",
    "href": "hands-on/hoe2-localautocor.html#computing-gi-statistics",
    "title": "Hands-on Exercise 2: Local Measures of Spatial Autocorrelation",
    "section": "6 Computing Gi statistics",
    "text": "6 Computing Gi statistics\nGi statistics help us find areas with unusually high or low values compared to their neighbors\n\n\n6.1 Gi statistics using fixed distance\nThe first code chunk computes Gi statistics using a fixed distance weight matrix (wm62_lw). The resulting Gi values are Z-scores, where greater values indicate stronger clustering intensity. We then join these Gi values to the original data frame for visualization.\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.fixed &lt;- localG(hunan$GDPPC, wm62_lw)\ngi.fixed\n\n\n [1]  0.436075843 -0.265505650 -0.073033665  0.413017033  0.273070579\n [6] -0.377510776  2.863898821  2.794350420  5.216125401  0.228236603\n[11]  0.951035346 -0.536334231  0.176761556  1.195564020 -0.033020610\n[16]  1.378081093 -0.585756761 -0.419680565  0.258805141  0.012056111\n[21] -0.145716531 -0.027158687 -0.318615290 -0.748946051 -0.961700582\n[26] -0.796851342 -1.033949773 -0.460979158 -0.885240161 -0.266671512\n[31] -0.886168613 -0.855476971 -0.922143185 -1.162328599  0.735582222\n[36] -0.003358489 -0.967459309 -1.259299080 -1.452256513 -1.540671121\n[41] -1.395011407 -1.681505286 -1.314110709 -0.767944457 -0.192889342\n[46]  2.720804542  1.809191360 -1.218469473 -0.511984469 -0.834546363\n[51] -0.908179070 -1.541081516 -1.192199867 -1.075080164 -1.631075961\n[56] -0.743472246  0.418842387  0.832943753 -0.710289083 -0.449718820\n[61] -0.493238743 -1.083386776  0.042979051  0.008596093  0.136337469\n[66]  2.203411744  2.690329952  4.453703219 -0.340842743 -0.129318589\n[71]  0.737806634 -1.246912658  0.666667559  1.088613505 -0.985792573\n[76]  1.233609606 -0.487196415  1.626174042 -1.060416797  0.425361422\n[81] -0.837897118 -0.314565243  0.371456331  4.424392623 -0.109566928\n[86]  1.364597995 -1.029658605 -0.718000620\nattr(,\"internals\")\n               Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.064192949 0.05747126 2.375922e-04  0.436075843   6.627817e-01\n [2,] 0.042300020 0.04597701 1.917951e-04 -0.265505650   7.906200e-01\n [3,] 0.044961480 0.04597701 1.933486e-04 -0.073033665   9.417793e-01\n [4,] 0.039475779 0.03448276 1.461473e-04  0.413017033   6.795941e-01\n [5,] 0.049767939 0.04597701 1.927263e-04  0.273070579   7.847990e-01\n [6,] 0.008825335 0.01149425 4.998177e-05 -0.377510776   7.057941e-01\n [7,] 0.050807266 0.02298851 9.435398e-05  2.863898821   4.184617e-03\n [8,] 0.083966739 0.04597701 1.848292e-04  2.794350420   5.200409e-03\n [9,] 0.115751554 0.04597701 1.789361e-04  5.216125401   1.827045e-07\n[10,] 0.049115587 0.04597701 1.891013e-04  0.228236603   8.194623e-01\n[11,] 0.045819180 0.03448276 1.420884e-04  0.951035346   3.415864e-01\n[12,] 0.049183846 0.05747126 2.387633e-04 -0.536334231   5.917276e-01\n[13,] 0.048429181 0.04597701 1.924532e-04  0.176761556   8.596957e-01\n[14,] 0.034733752 0.02298851 9.651140e-05  1.195564020   2.318667e-01\n[15,] 0.011262043 0.01149425 4.945294e-05 -0.033020610   9.736582e-01\n[16,] 0.065131196 0.04597701 1.931870e-04  1.378081093   1.681783e-01\n[17,] 0.027587075 0.03448276 1.385862e-04 -0.585756761   5.580390e-01\n[18,] 0.029409313 0.03448276 1.461397e-04 -0.419680565   6.747188e-01\n[19,] 0.061466754 0.05747126 2.383385e-04  0.258805141   7.957856e-01\n[20,] 0.057656917 0.05747126 2.371303e-04  0.012056111   9.903808e-01\n[21,] 0.066518379 0.06896552 2.820326e-04 -0.145716531   8.841452e-01\n[22,] 0.045599896 0.04597701 1.928108e-04 -0.027158687   9.783332e-01\n[23,] 0.030646753 0.03448276 1.449523e-04 -0.318615290   7.500183e-01\n[24,] 0.035635552 0.04597701 1.906613e-04 -0.748946051   4.538897e-01\n[25,] 0.032606647 0.04597701 1.932888e-04 -0.961700582   3.362000e-01\n[26,] 0.035001352 0.04597701 1.897172e-04 -0.796851342   4.255374e-01\n[27,] 0.012746354 0.02298851 9.812587e-05 -1.033949773   3.011596e-01\n[28,] 0.061287917 0.06896552 2.773884e-04 -0.460979158   6.448136e-01\n[29,] 0.014277403 0.02298851 9.683314e-05 -0.885240161   3.760271e-01\n[30,] 0.009622875 0.01149425 4.924586e-05 -0.266671512   7.897221e-01\n[31,] 0.014258398 0.02298851 9.705244e-05 -0.886168613   3.755267e-01\n[32,] 0.005453443 0.01149425 4.986245e-05 -0.855476971   3.922871e-01\n[33,] 0.043283712 0.05747126 2.367109e-04 -0.922143185   3.564539e-01\n[34,] 0.020763514 0.03448276 1.393165e-04 -1.162328599   2.451020e-01\n[35,] 0.081261843 0.06896552 2.794398e-04  0.735582222   4.619850e-01\n[36,] 0.057419907 0.05747126 2.338437e-04 -0.003358489   9.973203e-01\n[37,] 0.013497133 0.02298851 9.624821e-05 -0.967459309   3.333145e-01\n[38,] 0.019289310 0.03448276 1.455643e-04 -1.259299080   2.079223e-01\n[39,] 0.025996272 0.04597701 1.892938e-04 -1.452256513   1.464303e-01\n[40,] 0.016092694 0.03448276 1.424776e-04 -1.540671121   1.233968e-01\n[41,] 0.035952614 0.05747126 2.379439e-04 -1.395011407   1.630124e-01\n[42,] 0.031690963 0.05747126 2.350604e-04 -1.681505286   9.266481e-02\n[43,] 0.018750079 0.03448276 1.433314e-04 -1.314110709   1.888090e-01\n[44,] 0.015449080 0.02298851 9.638666e-05 -0.767944457   4.425202e-01\n[45,] 0.065760689 0.06896552 2.760533e-04 -0.192889342   8.470456e-01\n[46,] 0.098966900 0.05747126 2.326002e-04  2.720804542   6.512325e-03\n[47,] 0.085415780 0.05747126 2.385746e-04  1.809191360   7.042128e-02\n[48,] 0.038816536 0.05747126 2.343951e-04 -1.218469473   2.230456e-01\n[49,] 0.038931873 0.04597701 1.893501e-04 -0.511984469   6.086619e-01\n[50,] 0.055098610 0.06896552 2.760948e-04 -0.834546363   4.039732e-01\n[51,] 0.033405005 0.04597701 1.916312e-04 -0.908179070   3.637836e-01\n[52,] 0.043040784 0.06896552 2.829941e-04 -1.541081516   1.232969e-01\n[53,] 0.011297699 0.02298851 9.615920e-05 -1.192199867   2.331829e-01\n[54,] 0.040968457 0.05747126 2.356318e-04 -1.075080164   2.823388e-01\n[55,] 0.023629663 0.04597701 1.877170e-04 -1.631075961   1.028743e-01\n[56,] 0.006281129 0.01149425 4.916619e-05 -0.743472246   4.571958e-01\n[57,] 0.063918654 0.05747126 2.369553e-04  0.418842387   6.753313e-01\n[58,] 0.070325003 0.05747126 2.381374e-04  0.832943753   4.048765e-01\n[59,] 0.025947288 0.03448276 1.444058e-04 -0.710289083   4.775249e-01\n[60,] 0.039752578 0.04597701 1.915656e-04 -0.449718820   6.529132e-01\n[61,] 0.049934283 0.05747126 2.334965e-04 -0.493238743   6.218439e-01\n[62,] 0.030964195 0.04597701 1.920248e-04 -1.083386776   2.786368e-01\n[63,] 0.058129184 0.05747126 2.343319e-04  0.042979051   9.657182e-01\n[64,] 0.046096514 0.04597701 1.932637e-04  0.008596093   9.931414e-01\n[65,] 0.012459080 0.01149425 5.008051e-05  0.136337469   8.915545e-01\n[66,] 0.091447733 0.05747126 2.377744e-04  2.203411744   2.756574e-02\n[67,] 0.049575872 0.02298851 9.766513e-05  2.690329952   7.138140e-03\n[68,] 0.107907212 0.04597701 1.933581e-04  4.453703219   8.440175e-06\n[69,] 0.019616151 0.02298851 9.789454e-05 -0.340842743   7.332220e-01\n[70,] 0.032923393 0.03448276 1.454032e-04 -0.129318589   8.971056e-01\n[71,] 0.030317663 0.02298851 9.867859e-05  0.737806634   4.606320e-01\n[72,] 0.019437582 0.03448276 1.455870e-04 -1.246912658   2.124295e-01\n[73,] 0.055245460 0.04597701 1.932838e-04  0.666667559   5.049845e-01\n[74,] 0.074278054 0.05747126 2.383538e-04  1.088613505   2.763244e-01\n[75,] 0.013269580 0.02298851 9.719982e-05 -0.985792573   3.242349e-01\n[76,] 0.049407829 0.03448276 1.463785e-04  1.233609606   2.173484e-01\n[77,] 0.028605749 0.03448276 1.455139e-04 -0.487196415   6.261191e-01\n[78,] 0.039087662 0.02298851 9.801040e-05  1.626174042   1.039126e-01\n[79,] 0.031447120 0.04597701 1.877464e-04 -1.060416797   2.889550e-01\n[80,] 0.064005294 0.05747126 2.359641e-04  0.425361422   6.705732e-01\n[81,] 0.044606529 0.05747126 2.357330e-04 -0.837897118   4.020885e-01\n[82,] 0.063700493 0.06896552 2.801427e-04 -0.314565243   7.530918e-01\n[83,] 0.051142205 0.04597701 1.933560e-04  0.371456331   7.102977e-01\n[84,] 0.102121112 0.04597701 1.610278e-04  4.424392623   9.671399e-06\n[85,] 0.021901462 0.02298851 9.843172e-05 -0.109566928   9.127528e-01\n[86,] 0.064931813 0.04597701 1.929430e-04  1.364597995   1.723794e-01\n[87,] 0.031747344 0.04597701 1.909867e-04 -1.029658605   3.031703e-01\n[88,] 0.015893319 0.02298851 9.765131e-05 -0.718000620   4.727569e-01\nattr(,\"cluster\")\n [1] Low  Low  High High High High High High High Low  Low  High Low  Low  Low \n[16] High High High High Low  High High Low  Low  High Low  Low  Low  Low  Low \n[31] Low  Low  Low  High Low  Low  Low  Low  Low  Low  High Low  Low  Low  Low \n[46] High High Low  Low  Low  Low  High Low  Low  Low  Low  Low  High Low  Low \n[61] Low  Low  Low  High High High Low  High Low  Low  High Low  High High Low \n[76] High Low  Low  Low  Low  Low  Low  High High Low  High Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = hunan$GDPPC, listw = wm62_lw)\nattr(,\"class\")\n[1] \"localG\"\n\n\nThe Gi statistics, represented as Z-scores, are now linked to the original data frame. We visualize these values on a map using a choropleth map, where colors indicate the intensity and direction of clustering.\n\n\nCode\n# Combine the Gi statistics with the original data frame 'hunan'\n# Convert the Gi vector ('gi.fixed') to a matrix and bind it to the original data frame ('hunan')\n# Rename the newly added column to 'gstat_fixed'\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.fixed)) %&gt;%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n\n# Create a quick thematic map (qtm) of the original data frame ('hunan') for GDP per capita ('GDPPC')\ngdppc &lt;- qtm(hunan, \"GDPPC\")\n\n# Create a thematic map (Gimap) for Gi statistics using the 'tm' package\n# Shape the map based on the combined data frame ('hunan.gi')\nGimap &lt;-tm_shape(hunan.gi) +\n  # Fill the map with colors based on 'gstat_fixed' column\n  tm_fill(col = \"gstat_fixed\", \n          # Use the 'pretty' style for color breaks\n          style = \"pretty\",\n          # Choose the RdBu color palette\n          palette=\"-RdBu\",\n          # Set the title for the legend\n          title = \"local Gi\") +\n  # Add semi-transparent borders to map features\n  tm_borders(alpha = 0.5)\n\n# Arrange the original GDP per capita map and the Gi map side by side\ntmap_arrange(gdppc, Gimap, asp=1, ncol=2)\n\n\n\n\n\n\nThe Gi* map (Getis-Ord Gi* statistic) for the GDP per Capita of counties in Hunan, China, suggests spatial hotspots and cold spots of economic wealth. The map on the right indicates areas with high Gi* values (in red), revealing clusters of counties with significantly high GDP per Capita—these are the hotspots of economic activity. Conversely, the blue areas represent cold spots with low Gi* values, indicating clusters of counties with low GDP per Capita. Notably, the central to northeast region shows a strong concentration of wealth with a Gi* value between 5 to 6, indicating a very high degree of clustering of economic affluence. This pattern highlights the unequal distribution of economic wealth across the region, with certain areas being significantly more prosperous than others, which can inform targeted economic development and policy intervention strategies.\n\n\n\n6.2 Gi statistics using adaptive distance\nNow, we repeat the process using an adaptive distance weight matrix (knn_lw). This allows us to consider different distances for each location based on their neighbors, providing a more flexible approach.\n\n\nCode\nfips &lt;- order(hunan$County)\ngi.adaptive &lt;- localG(hunan$GDPPC, knn_lw)\nhunan.gi &lt;- cbind(hunan, as.matrix(gi.adaptive)) %&gt;%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n\n\nThe Gi values based on adaptive distance weights are joined to the original data frame. Again, we visualize these values on a choropleth map to observe patterns.\n\n\nCode\ngdppc&lt;- qtm(hunan, \"GDPPC\")\n\nGimap &lt;- tm_shape(hunan.gi) + \n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\", \n          palette=\"-RdBu\", \n          title = \"local Gi\") + \n  tm_borders(alpha = 0.5)\n\ntmap_arrange(gdppc, \n             Gimap, \n             asp=1, \n             ncol=2)\n\n\n\n\n\n\nThe Gi map with adaptive distance shows a clear delineation of economic clustering across the Hunan area. Compared to the previous fixed distance Gi map, the adaptive distance approach may provide a more nuanced view of spatial relationships, adjusting for varying densities of counties. This can highlight economic disparities more precisely, as the fixed distance may overemphasize or underrepresent clustering due to uniform application of distance across varied geographical spaces. The adaptive map might therefore offer a more accurate representation of spatial economic patterns, potentially revealing more localized clusters that are not as apparent with a fixed distance approach."
  },
  {
    "objectID": "hands-on/hoe3.html",
    "href": "hands-on/hoe3.html",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Spatial interaction is the movement of people, goods, or information between different places. It includes things like shipping goods, energy transfer, global trade of rare items, as well as flight schedules, traffic during busy times, and people walking around.\nImagine each movement as a specific trip from one place to another. We can represent these trips using a table where one side shows where the journey starts, and the other side shows where it ends. This table is called an origin/destination matrix or a spatial interaction matrix.\nIn this practical exercise, we will learn to create this matrix using data about how many passengers travel between different bus stops. The data is from LTA DataMall\nLearning Objectives:\n\nImport and extract Origin-Destination (OD) data for a specific time period.\nImport and store geospatial data, such as bus stops and MRT (MPSZ), as sf tibble data frame objects.\nAssign planning subzone codes to bus stops in the sf tibble data frame.\nCreate geospatial data representing desire lines based on the OD data.\nVisualize passenger volume between origin and destination bus stops using the desire lines data."
  },
  {
    "objectID": "hands-on/hoe3.html#overview",
    "href": "hands-on/hoe3.html#overview",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "",
    "text": "Spatial interaction is the movement of people, goods, or information between different places. It includes things like shipping goods, energy transfer, global trade of rare items, as well as flight schedules, traffic during busy times, and people walking around.\nImagine each movement as a specific trip from one place to another. We can represent these trips using a table where one side shows where the journey starts, and the other side shows where it ends. This table is called an origin/destination matrix or a spatial interaction matrix.\nIn this practical exercise, we will learn to create this matrix using data about how many passengers travel between different bus stops. The data is from LTA DataMall\nLearning Objectives:\n\nImport and extract Origin-Destination (OD) data for a specific time period.\nImport and store geospatial data, such as bus stops and MRT (MPSZ), as sf tibble data frame objects.\nAssign planning subzone codes to bus stops in the sf tibble data frame.\nCreate geospatial data representing desire lines based on the OD data.\nVisualize passenger volume between origin and destination bus stops using the desire lines data."
  },
  {
    "objectID": "hands-on/hoe3.html#getting-started",
    "href": "hands-on/hoe3.html#getting-started",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "2 Getting Started",
    "text": "2 Getting Started\nWe’ll employ various R packages which will be loading using pacman on the following code\n\n\nCode\n#pacman::p_load' ensures all specified packages are installed and loaded\npacman::p_load(tmap, sf, DT, stplanr, performance,\n               ggpubr, tidyverse)\n\n\n\n\n\n\n\n\nLibrary Descriptions\n\n\n\n\n\n\ntmap: A comprehensive package for creating thematic maps that are static, interactive, or animated, specializing in visualizing geospatial data.\nsf: An R package that provides simple features access for handling and manipulating geospatial data, enabling easy and straightforward operations on geographic data.\nDT: This package is an R interface to the DataTables library, and it allows for the creation of interactive tables in R Markdown documents and Shiny applications.\nstplanr: Designed for sustainable transport planning with R, this package assists in working with spatial data on transport systems, including the creation of desire lines, route networks, and more.\nperformance: This package is used for checking the performance of statistical models, including diagnostics for regression models, making it easier to assess model quality and fit.\nggpubr: Provides a convenient interface to ggplot2, especially for creating publication-ready plots with minimal amounts of code adjustments.\ntidyverse: A collection of R packages designed for data science that makes it easier to import, tidy, transform, visualize, and model data."
  },
  {
    "objectID": "hands-on/hoe3.html#preparing-the-flow-data",
    "href": "hands-on/hoe3.html#preparing-the-flow-data",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "3 Preparing the Flow Data",
    "text": "3 Preparing the Flow Data\n\nImporting the OD Data\nWe begin by importing the Passenger Volume by Origin Destination Bus Stops:\n\n\nCode\n# The dataset is converted to a dataframe with appropriate data types\nodbus202308 &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202308.csv.gz\")\nodbus202308 &lt;- data.frame(lapply(odbus202308, factor))\nodbus202308$TOTAL_TRIPS &lt;- as.numeric(odbus202308$TOTAL_TRIPS)\nodbus202308$TIME_PER_HOUR &lt;- as.numeric(odbus202308$TIME_PER_HOUR)\n\n# display the summary of the dataset\nglimpse(odbus202308)\n\n\nRows: 5,709,512\nColumns: 7\n$ YEAR_MONTH          &lt;fct&gt; 2023-08, 2023-08, 2023-08, 2023-08, 2023-08, 2023-…\n$ DAY_TYPE            &lt;fct&gt; WEEKDAY, WEEKENDS/HOLIDAY, WEEKENDS/HOLIDAY, WEEKD…\n$ TIME_PER_HOUR       &lt;dbl&gt; 17, 17, 15, 15, 18, 18, 18, 18, 8, 18, 15, 11, 11,…\n$ PT_TYPE             &lt;fct&gt; BUS, BUS, BUS, BUS, BUS, BUS, BUS, BUS, BUS, BUS, …\n$ ORIGIN_PT_CODE      &lt;fct&gt; 04168, 04168, 80119, 80119, 44069, 44069, 20281, 2…\n$ DESTINATION_PT_CODE &lt;fct&gt; 10051, 10051, 90079, 90079, 17229, 17229, 20141, 2…\n$ TOTAL_TRIPS         &lt;dbl&gt; 7, 2, 3, 10, 5, 4, 3, 22, 3, 3, 7, 1, 3, 1, 3, 1, …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nread_csv from readr package is used to read a CSV file into R, converting it to a data frame.\ndata.frame from base R converts the list (from lapply) into a data frame.\nlapply from base R applies the factor function to each column in the data frame, converting them to factors.\nas.numeric converts factors or character vectors to numeric values.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure and contents.\n\n\n\n\n\n\nExtracting the Study Data\nFor this exercise, our focus is on weekday commuting flows between 6 and 9 AM.\n\n\nCode\n# Filtering and aggregating data for specific time and day\nodbus6_9 &lt;- odbus202308 %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE, DESTINATION_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\n\n# save the output in rds format\nwrite_rds(odbus6_9, \"../data/rds/odbus6_9.rds\")\n\n# code for re-importing the rds file (for future use)\nodbus6_9 &lt;- read_rds(\"../data/rds/odbus6_9.rds\")\n\n# Displaying the data in an interactive table format\ndatatable(odbus6_9)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nfilter from dplyr package is used to subset rows based on specific conditions, here filtering data for specific days and times.\ngroup_by from dplyr package groups the data for summarization.\nsummarise from dplyr package aggregates the data within each group, here summing up total trips.\nwrite_rds from base R saves an R object to a file in RDS format.\nread_rds (or readRDS) from base R re-imports an R object from an RDS file.\ndatatable from DT package creates an interactive table widget for dynamic data interaction.\n\n\n\n\n\n\n\n\n\n\nWhat & Why RDS Format?\n\n\n\n\n\nThe RDS format in R is a specialized file format used for storing single R objects. It’s a compact binary format that preserves the exact structure of the saved object, including metadata. This format is particularly efficient for saving and loading objects in R, as it ensures that the object is restored exactly as it was when saved, without any need for reformatting or reassembling data.\nUsing the RDS format is beneficial because it allows for fast and efficient storage and retrieval of R objects, making it ideal for situations where you need to save an object and reload it later in another session without any loss of information. The functions write_rds and read_rds (or writeRDS and readRDS in base R) are used for saving to and reading from this format, respectively. RDS is especially useful for large datasets or complex objects where preservation of structure is crucial."
  },
  {
    "objectID": "hands-on/hoe3.html#working-with-geospatial-data",
    "href": "hands-on/hoe3.html#working-with-geospatial-data",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "4 Working with Geospatial Data",
    "text": "4 Working with Geospatial Data\nWe’ll use two geospatial datasets:\n\nBusStop: Locations of bus stops from LTA DataMall as of July 2023.\nMPSZ-2019: URA Master Plan 2019 sub-zone boundaries.\n\n\nImporting Geospatial Data\nThe datasets will be imported as follows:\n\n\nCode\n# Importing and transforming the BusStop and mpsz data\nbusstop &lt;- st_read(dsn = \"../data/geospatial\", layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\nmpsz &lt;- st_read(dsn = \"../data/geospatial\", layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `MPSZ-2019' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# export the data for future use\nwrite_rds(mpsz, \"../data/rds/mpsz.rds\")\n\n# show the output\nmpsz\n\n\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21 / Singapore TM\nFirst 10 features:\n                 SUBZONE_N SUBZONE_C       PLN_AREA_N PLN_AREA_C       REGION_N\n1              MARINA EAST    MESZ01      MARINA EAST         ME CENTRAL REGION\n2         INSTITUTION HILL    RVSZ05     RIVER VALLEY         RV CENTRAL REGION\n3           ROBERTSON QUAY    SRSZ01  SINGAPORE RIVER         SR CENTRAL REGION\n4  JURONG ISLAND AND BUKOM    WISZ01  WESTERN ISLANDS         WI    WEST REGION\n5             FORT CANNING    MUSZ02           MUSEUM         MU CENTRAL REGION\n6         MARINA EAST (MP)    MPSZ05    MARINE PARADE         MP CENTRAL REGION\n7                   SUDONG    WISZ03  WESTERN ISLANDS         WI    WEST REGION\n8                  SEMAKAU    WISZ02  WESTERN ISLANDS         WI    WEST REGION\n9           SOUTHERN GROUP    SISZ02 SOUTHERN ISLANDS         SI CENTRAL REGION\n10                 SENTOSA    SISZ01 SOUTHERN ISLANDS         SI CENTRAL REGION\n   REGION_C                       geometry\n1        CR MULTIPOLYGON (((33222.98 29...\n2        CR MULTIPOLYGON (((28481.45 30...\n3        CR MULTIPOLYGON (((28087.34 30...\n4        WR MULTIPOLYGON (((14557.7 304...\n5        CR MULTIPOLYGON (((29542.53 31...\n6        CR MULTIPOLYGON (((35279.55 30...\n7        WR MULTIPOLYGON (((15772.59 21...\n8        WR MULTIPOLYGON (((19843.41 21...\n9        CR MULTIPOLYGON (((30870.53 22...\n10       CR MULTIPOLYGON (((26879.04 26...\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_read from sf package imports spatial data into R, specifying the data source (dsn) and layer.\nst_transform from sf package transforms the coordinate reference system (CRS) of spatial data, here to CRS 3414.\nwrite_rds from base R saves an R object (in this case, the transformed mpsz data) to a file in RDS format."
  },
  {
    "objectID": "hands-on/hoe3.html#geospatial-data-wrangling",
    "href": "hands-on/hoe3.html#geospatial-data-wrangling",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "5 Geospatial Data Wrangling",
    "text": "5 Geospatial Data Wrangling\n\n1. Combining Busstop and mpsz2. Append Planning Subzone Code to Attribute Dataset3. Checking for Duplicates4. Update Destination Subzone Code5. Re-checking for Duplicates6. Prepare Data for Visualization7. Export Output for Future Use\n\n\nWe’ll merge the planning subzone codes from the mpsz dataset into the busstop dataset.\n\n\nCode\n# Merging data and retaining essential columns\nbusstop_mpsz &lt;- st_intersection(busstop, mpsz) %&gt;%\n  select(BUS_STOP_N, SUBZONE_C) %&gt;%\n  st_drop_geometry()\n\n# Note: Five bus stops outside Singapore's boundary are excluded (Malaysia).\n\n# Viewing the combined data\ndatatable(busstop_mpsz)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_intersection from sf package is used to find the intersection of two spatial objects, here busstop and mpsz. It returns the areas that are common to both spatial objects.\nselect from dplyr package is used to keep only specific columns (BUS_STOP_N, SUBZONE_C) in the resulting data frame.\nst_drop_geometry from sf package removes the geometry column from a spatial object, converting it into a regular data frame.\ndatatable from DT package creates an interactive table widget for viewing and interacting with the data.\nThe note mentions that five bus stops outside Singapore’s boundary are excluded as a result of the spatial intersection.\n\n\n\n\n\n\nNow, let’s append the planning subzone codes to the odbus6_9 dataset:\n\n\nCode\n# Joining and renaming columns for clarity\nod_data &lt;- left_join(odbus6_9, busstop_mpsz, by = c(\"ORIGIN_PT_CODE\" = \"BUS_STOP_N\")) %&gt;%\n  rename(ORIGIN_BS = ORIGIN_PT_CODE, ORIGIN_SZ = SUBZONE_C, DESTIN_BS = DESTINATION_PT_CODE)\n\n# check the data\nglimpse(od_data)\n\n\nRows: 227,098\nColumns: 4\nGroups: ORIGIN_BS [5,005]\n$ ORIGIN_BS &lt;chr&gt; \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012…\n$ DESTIN_BS &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 60021, 6003…\n$ TRIPS     &lt;dbl&gt; 177, 111, 40, 87, 184, 18, 22, 16, 12, 21, 2, 3, 1, 1, 1, 1,…\n$ ORIGIN_SZ &lt;chr&gt; \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nleft_join from dplyr package merges two data frames based on matching values in their columns. The left_join function specifically keeps all rows from the left data frame and adds matching rows from the right data frame. If there is no match, the right side will contain NA.\nrename from dplyr package changes the names of columns in a data frame for clarity or convenience. In this case, it’s used to rename ORIGIN_PT_CODE to ORIGIN_BS, SUBZONE_C to ORIGIN_SZ, and DESTINATION_PT_CODE to DESTIN_BS.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\n\n\nChecking for duplicate records is crucial, if duplicates exist, we keep only unique records:\n\n\nCode\n# Identifying any duplicate records\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\n# Retaining only unique records\nod_data &lt;- unique(od_data)\n\n# check the data\nglimpse(od_data)\n\n\nRows: 226,610\nColumns: 4\nGroups: ORIGIN_BS [5,005]\n$ ORIGIN_BS &lt;chr&gt; \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012…\n$ DESTIN_BS &lt;fct&gt; 01112, 01113, 01121, 01211, 01311, 07371, 60011, 60021, 6003…\n$ TRIPS     &lt;dbl&gt; 177, 111, 40, 87, 184, 18, 22, 16, 12, 21, 2, 3, 1, 1, 1, 1,…\n$ ORIGIN_SZ &lt;chr&gt; \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ngroup_by_all from dplyr package groups a data frame by all of its variables, creating groups based on every column present.\nfilter from dplyr package is used to subset rows that meet a certain condition. Here, it retains rows where the number of rows in a group is greater than one, effectively identifying duplicates.\nungroup from dplyr package removes the grouping structure from the data frame.\nunique from base R package is used to remove duplicate rows from a data frame, keeping only unique records.\nglimpse from dplyr package provides a quick overview of the data frame’s structure, including column types and the first few entries in each column.\n\n\n\n\n\n\nWe’ll now complete the dataset with destination subzone codes:\n\n\nCode\n# Further enriching the dataset with destination subzone codes\nod_data &lt;- left_join(od_data, busstop_mpsz, by = c(\"DESTIN_BS\" = \"BUS_STOP_N\")) %&gt;%\n   rename(DESTIN_SZ = SUBZONE_C)\n\n# check the data\nglimpse(od_data)\n\n\nRows: 227,458\nColumns: 5\nGroups: ORIGIN_BS [5,005]\n$ ORIGIN_BS &lt;chr&gt; \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012…\n$ DESTIN_BS &lt;chr&gt; \"01112\", \"01113\", \"01121\", \"01211\", \"01311\", \"07371\", \"60011…\n$ TRIPS     &lt;dbl&gt; 177, 111, 40, 87, 184, 18, 22, 16, 12, 21, 2, 3, 1, 1, 1, 1,…\n$ ORIGIN_SZ &lt;chr&gt; \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", …\n$ DESTIN_SZ &lt;chr&gt; \"RCSZ10\", \"DTSZ01\", \"RCSZ04\", \"KLSZ09\", \"KLSZ06\", \"KLSZ06\", …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nleft_join from dplyr package merges two data frames based on matching values in their columns. The left_join function specifically keeps all rows from the left data frame and adds matching rows from the right data frame. If there is no match, the right side will contain NA.\nrename from dplyr package changes the names of columns in a data frame for clarity or convenience. In this case, it’s used to rename ORIGIN_PT_CODE to ORIGIN_BS, SUBZONE_C to ORIGIN_SZ, and DESTINATION_PT_CODE to DESTIN_BS.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\n\n\nChecking for and removing any remaining duplicates:\n\n\nCode\n# Re-checking for duplicates\nduplicate &lt;- od_data %&gt;%\n  group_by_all() %&gt;%\n  filter(n()&gt;1) %&gt;%\n  ungroup()\n\n# Retaining only unique records\nod_data &lt;- unique(od_data)\n\n# Check the data\nglimpse(od_data)\n\n\nRows: 226,846\nColumns: 5\nGroups: ORIGIN_BS [5,005]\n$ ORIGIN_BS &lt;chr&gt; \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012\", \"01012…\n$ DESTIN_BS &lt;chr&gt; \"01112\", \"01113\", \"01121\", \"01211\", \"01311\", \"07371\", \"60011…\n$ TRIPS     &lt;dbl&gt; 177, 111, 40, 87, 184, 18, 22, 16, 12, 21, 2, 3, 1, 1, 1, 1,…\n$ ORIGIN_SZ &lt;chr&gt; \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", \"RCSZ10\", …\n$ DESTIN_SZ &lt;chr&gt; \"RCSZ10\", \"DTSZ01\", \"RCSZ04\", \"KLSZ09\", \"KLSZ06\", \"KLSZ06\", …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ngroup_by_all from dplyr package groups a data frame by all of its variables, creating groups based on every column present.\nfilter from dplyr package is used to subset rows that meet a certain condition. Here, it retains rows where the number of rows in a group is greater than one, effectively identifying duplicates.\nungroup from dplyr package removes the grouping structure from the data frame.\nunique from base R package is used to remove duplicate rows from a data frame, keeping only unique records.\nglimpse from dplyr package provides a quick overview of the data frame’s structure, including column types and the first few entries in each column.\n\n\n\n\n\n\nFinally, we’ll prepare the data for visualisation:\n\n\nCode\n# Final data preparation step\nod_data &lt;- od_data %&gt;%\n  drop_na() %&gt;%\n  group_by(ORIGIN_SZ, DESTIN_SZ) %&gt;%\n  summarise(MORNING_PEAK = sum(TRIPS))\n\n# check the final data\nglimpse(od_data)\n\n\nRows: 20,595\nColumns: 3\nGroups: ORIGIN_SZ [309]\n$ ORIGIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01…\n$ DESTIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06…\n$ MORNING_PEAK &lt;dbl&gt; 1866, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 14…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ndrop_na from tidyr package is used to remove rows with missing values (NA) in the data frame.\ngroup_by from dplyr package is used to create groups in the data frame for summarization, here grouping by ORIGIN_SZ and DESTIN_SZ.\nsummarise (or summarize) from dplyr package calculates summary statistics for each group, here summing up the TRIPS for each ORIGIN_SZ and DESTIN_SZ combination.\nglimpse from dplyr package provides a transposed summary of the data frame, giving a quick look at its structure, including the types of columns and the first few entries in each column.\n\n\n\n\n\n\nExport the output to rds for future usage.\n\n\nCode\nwrite_rds(od_data, \"../data/rds/od_data.rds\")"
  },
  {
    "objectID": "hands-on/hoe3.html#visualising-spatial-interaction",
    "href": "hands-on/hoe3.html#visualising-spatial-interaction",
    "title": "Hands-on Exercise 3: Processing and Visualising Flow Data",
    "section": "6 Visualising Spatial Interaction",
    "text": "6 Visualising Spatial Interaction\nWe’ll now create and visualize desire lines using the stplanr package.\n\n1. Removing Intra-zonal Flows2. Creating Desire Lines3. Visualising All Desire Lines4. Visualising Focused Desire Lines\n\n\nIntra-zonal flows are not required for our analysis:\n\n\nCode\n# Removing intra-zonal flows for clarity in visualization\nod_data1 &lt;- od_data[od_data$ORIGIN_SZ != od_data$DESTIN_SZ,]\n\n# check the output\nglimpse(od_data1)\n\n\nRows: 20,304\nColumns: 3\nGroups: ORIGIN_SZ [309]\n$ ORIGIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01…\n$ DESTIN_SZ    &lt;chr&gt; \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06\", \"AMSZ07…\n$ MORNING_PEAK &lt;dbl&gt; 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 141, 655…\n\n\n\n\nHere’s how to create desire lines using the od2line() function:\n\n\n\n\n\n\nWhat is Desire Lines?\n\n\n\n\n\nIn the context of transport planning, desire lines are like the paths people would naturally prefer to take when going from one place to another. Think of them as the routes you would choose if you could walk or travel in a straight line, without any obstacles.\nImagine a park where there’s a paved path, but people consistently walk across the grass to get from one side to the other. The worn-down grassy trail is the desire line – it shows where people naturally want to walk, even if it’s not the officially designated path.\nIn transport planning, understanding these desire lines helps city planners decide where to put roads, sidewalks, or public transportation routes. It’s about making sure the infrastructure fits the way people actually move around, making travel more efficient and convenient for everyone.\n\n\n\n\n\nCode\nflowLine &lt;- od2line(flow = od_data1, zones = mpsz, zone_code = \"SUBZONE_C\")\n# Generating desire lines between different zones\n\nglimpse(flowLine)\n\n\nRows: 20,304\nColumns: 4\n$ ORIGIN_SZ    &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01…\n$ DESTIN_SZ    &lt;chr&gt; \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMSZ06\", \"AMSZ07…\n$ MORNING_PEAK &lt;dbl&gt; 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 141, 655…\n$ geometry     &lt;LINESTRING [m]&gt; LINESTRING (29501.77 39419...., LINESTRING (29…\n\n\nCode\n# check the output\n\n\n\n\nWithout any filtering, the desire lines are quite messy with various flows entangled.\n\n\nCode\n# Enable tmap to automatically check and fix invalid polygons\ntmap_options(check.and.fix = TRUE)\n\n# Now create your plot\ntm_shape(mpsz) +\n  tm_polygons() +\n  flowLine %&gt;%\n  tm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\",\n           style = \"quantile\",\n           scale = c(0.1, 1, 3, 5, 7, 10),\n           n = 6,\n           alpha = 0.3)\n\n\n\n\n\nCode\n# Thematic map showing the intensity of commuting flows\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_options from tmap package sets options for tmap functions. Here, it is set to automatically check and fix invalid polygons in spatial data.\ntm_shape from tmap package prepares spatial data for plotting.\ntm_polygons from tmap package adds a layer of polygons to the map, in this case, the mpsz data.\ntm_lines from tmap package adds a layer of lines to the map. The properties of the lines (like width and transparency) are set based on the variable MORNING_PEAK, with the style defined as “quantile” and specific scaling parameters.\nThe code snippet creates a thematic map that visually represents the intensity of commuting flows.\n\n\n\n\n\n\nFocusing on selected flows can be insightful, especially when data are skewed:\n\n\nCode\ntmap_mode(\"view\")\ntmap_options(check.and.fix = TRUE)\n\n\nflowLine %&gt;%  \n  filter(MORNING_PEAK &gt;= 5000) %&gt;%\n  tm_shape() +\n  tm_lines(lwd = \"MORNING_PEAK\", col = \"orange\", style = \"quantile\", scale = c(0.1, 1, 3, 5, 7, 10), n = 6, alpha = 0.3)\n\n\n\n\n\n\n\nCode\n# Filtering and visualizing only significant flows\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nfilter from dplyr package is used to subset rows based on a condition, here retaining rows where the value of MORNING_PEAK is greater than or equal to 5000.\ntm_shape from tmap package prepares the filtered data for plotting.\ntm_lines from tmap package adds a layer of lines to the map, with properties (like width, color, and transparency) set based on the MORNING_PEAK variable. The style is set to “quantile”, with a specific scale and number of breaks (n) for line width, and the color is set to orange.\nThis code snippet creates a thematic map that visually represents only the significant commuting flows based on the specified threshold for MORNING_PEAK."
  },
  {
    "objectID": "in-class/ice1.html",
    "href": "in-class/ice1.html",
    "title": "In-class Exercise 1: Preparing the Data Flow",
    "section": "",
    "text": "Preparing Data Flow Illustration"
  },
  {
    "objectID": "in-class/ice1.html#getting-started",
    "href": "in-class/ice1.html#getting-started",
    "title": "In-class Exercise 1: Preparing the Data Flow",
    "section": "1 Getting Started",
    "text": "1 Getting Started\nThe code chunk below load the following packages: - tmap: for thematic mapping - sf : for geospatial data handling - tidyverse for non-spatial data handling.\n\npacman::p_load(tmap, sf, tidyverse)\n# load the libraries, the pacman itself will only be loaded temporarily"
  },
  {
    "objectID": "in-class/ice1.html#preparing-the-data-flow",
    "href": "in-class/ice1.html#preparing-the-data-flow",
    "title": "In-class Exercise 1: Preparing the Data Flow",
    "section": "2 Preparing the Data Flow",
    "text": "2 Preparing the Data Flow\n\n2.1 Importing the Aspatial data\nImport the Passenger Volume by Origin Destination Bus Stops data set downloaded from LTA DataMall by using read_csv() of readr package.\n\nodbus &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202308.csv.gz\")\nhead(odbus)\n\n\nChange Character Data Type to Numerical Factor\nodbus08 is a tibble dataframe. However, ORIGIN_PT_CODE and DESTINATION_PT_CODE are in character format. These are transformed into factors (categorical data type) for further analysis.\n\nodbus$ORIGIN_PT_CODE &lt;- as.factor(odbus$ORIGIN_PT_CODE)\nodbus$DESTINATION_PT_CODE &lt;- as.factor(odbus$DESTINATION_PT_CODE)\n\n\n\nExtracting the data for analysis\nextract commuting flows by extracting Origin bus stop codes and number of trips for weekdays between 7 and 9 o’clock, into a new dataframe:\n\n\nCode\norigtrip_7_9 &lt;- odbus %&gt;%\n  filter(DAY_TYPE == \"WEEKDAY\") %&gt;%\n  filter(TIME_PER_HOUR &gt;= 7 &\n           TIME_PER_HOUR &lt;= 9) %&gt;%\n  group_by(ORIGIN_PT_CODE) %&gt;%\n  summarise(TRIPS = sum(TOTAL_TRIPS))\nglimpse(origtrip_7_9)\n# the %&gt;% sign is for stepping the process in order \n\n\n\n\n\n2.2 Importing the geospatial data\nTwo geospatial data will be used in this exercise both data contain coordinate in geometry column:\n\nbusstop &lt;- st_read(dsn = \"../data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414) # the st_transform is for projection\nglimpse(busstop)\n\n\nmpsz &lt;- st_read(dsn = \"../data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\nglimpse(mpsz)"
  },
  {
    "objectID": "in-class/ice3.html",
    "href": "in-class/ice3.html",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "in-class/ice3.html#distance-matrix-computation",
    "href": "in-class/ice3.html#distance-matrix-computation",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "3.1 Distance Matrix Computation",
    "text": "3.1 Distance Matrix Computation\nNotice that the previous imported data is a sf tibble dataframe object class. Computing distance can take longer with the sf based data. To make it faster, use Spatial Polygons Dataframe. Conver the data using as.Spatial().\n\n\nCode\nmpsz_sp &lt;- as(mpsz, \"Spatial\")\nmpsz_sp\n\n\nclass       : SpatialPolygonsDataFrame \nfeatures    : 332 \nextent      : 2667.538, 56396.44, 15748.72, 50256.33  (xmin, xmax, ymin, ymax)\ncrs         : +proj=tmerc +lat_0=1.36666666666667 +lon_0=103.833333333333 +k=1 +x_0=28001.642 +y_0=38744.572 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \nvariables   : 6\nnames       : SUBZONE_N, SUBZONE_C, PLN_AREA_N, PLN_AREA_C,       REGION_N, REGION_C \nmin values  : ADMIRALTY,    AMSZ01, ANG MO KIO,         AM, CENTRAL REGION,       CR \nmax values  :    YUNNAN,    YSSZ09,     YISHUN,         YS,    WEST REGION,       WR \n\n\nNext, spDists() of sp package will be used to compute the Euclidean distance between the centroids of the planning subzones.\n\nDo you know why the distance is calculated between two centroids of a pair of spatial polygons? The distance between two centroids of spatial polygons is commonly calculated as a measure of proximity or spatial relationship between the polygons. This approach simplifies spatial analysis by representing each polygon as a single point (centroid), providing a straightforward measure of the overall spatial separation or closeness between the features.\n\n\n\nCode\n# generate generic R Matrix object\ndist &lt;- spDists(mpsz_sp, \n                longlat = FALSE)\n# show the output\nhead(dist, n=c(10, 10))\n\n\n           [,1]       [,2]      [,3]      [,4]       [,5]      [,6]      [,7]\n [1,]     0.000  3926.0025  3939.108 20252.964  2989.9839  1431.330 19211.836\n [2,]  3926.003     0.0000   305.737 16513.865   951.8314  5254.066 16242.523\n [3,]  3939.108   305.7370     0.000 16412.062  1045.9088  5299.849 16026.146\n [4,] 20252.964 16513.8648 16412.062     0.000 17450.3044 21665.795  7229.017\n [5,]  2989.984   951.8314  1045.909 17450.304     0.0000  4303.232 17020.916\n [6,]  1431.330  5254.0664  5299.849 21665.795  4303.2323     0.000 20617.082\n [7,] 19211.836 16242.5230 16026.146  7229.017 17020.9161 20617.082     0.000\n [8,] 14960.942 12749.4101 12477.871 11284.279 13336.0421 16281.453  5606.082\n [9,]  7515.256  7934.8082  7649.776 18427.503  7801.6163  8403.896 14810.930\n[10,]  6391.342  4975.0021  4669.295 15469.566  5226.8731  7707.091 13111.391\n           [,8]      [,9]     [,10]\n [1,] 14960.942  7515.256  6391.342\n [2,] 12749.410  7934.808  4975.002\n [3,] 12477.871  7649.776  4669.295\n [4,] 11284.279 18427.503 15469.566\n [5,] 13336.042  7801.616  5226.873\n [6,] 16281.453  8403.896  7707.091\n [7,]  5606.082 14810.930 13111.391\n [8,]     0.000  9472.024  8575.490\n [9,]  9472.024     0.000  3780.800\n[10,]  8575.490  3780.800     0.000\n\n\nOutput of dist is a matrix object class of R that does not have any column headers and row headers are not labeled with the planning subzone codes. Therefore the next step is to label it."
  },
  {
    "objectID": "in-class/ice3.html#labelling-column-and-row-heanders-of-a-distance-matrix",
    "href": "in-class/ice3.html#labelling-column-and-row-heanders-of-a-distance-matrix",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "3.2 Labelling column and row heanders of a distance matrix",
    "text": "3.2 Labelling column and row heanders of a distance matrix\nCreate list of the headers\n\n\nCode\nsz_names &lt;- mpsz$SUBZONE_C\n\n# check the output\nsz_names\n\n\n  [1] \"MESZ01\" \"RVSZ05\" \"SRSZ01\" \"WISZ01\" \"MUSZ02\" \"MPSZ05\" \"WISZ03\" \"WISZ02\"\n  [9] \"SISZ02\" \"SISZ01\" \"BMSZ17\" \"DTSZ10\" \"SVSZ01\" \"BMSZ01\" \"BMSZ15\" \"DTSZ09\"\n [17] \"BMSZ16\" \"BMSZ14\" \"DTSZ07\" \"DTSZ08\" \"BMSZ11\" \"BMSZ13\" \"QTSZ14\" \"DTSZ11\"\n [25] \"BMSZ05\" \"BMSZ12\" \"BMSZ02\" \"OTSZ03\" \"DTSZ04\" \"DTSZ05\" \"OTSZ04\" \"BMSZ10\"\n [33] \"DTSZ12\" \"BMSZ04\" \"DTSZ06\" \"MSSZ01\" \"OTSZ01\" \"SRSZ03\" \"BMSZ08\" \"BMSZ03\"\n [41] \"BMSZ07\" \"BMSZ09\" \"SRSZ02\" \"QTSZ13\" \"QTSZ07\" \"QTSZ12\" \"BMSZ06\" \"QTSZ04\"\n [49] \"RCSZ06\" \"RCSZ03\" \"QTSZ08\" \"KLSZ05\" \"QTSZ03\" \"QTSZ10\" \"TNSZ03\" \"NTSZ04\"\n [57] \"CLSZ08\" \"NTSZ05\" \"BDSZ07\" \"CLSZ07\" \"PNSZ05\" \"JESZ11\" \"NTSZ01\" \"KLSZ04\"\n [65] \"MPSZ02\" \"ORSZ02\" \"NTSZ06\" \"RCSZ02\" \"PNSZ04\" \"DTSZ03\" \"MUSZ03\" \"RVSZ04\"\n [73] \"DTSZ02\" \"QTSZ06\" \"RVSZ03\" \"QTSZ15\" \"MUSZ01\" \"DTSZ01\" \"RCSZ10\" \"RVSZ02\"\n [81] \"MPSZ04\" \"QTSZ11\" \"RVSZ01\" \"ORSZ03\" \"RCSZ09\" \"TNSZ02\" \"RCSZ05\" \"RCSZ08\"\n [89] \"RCSZ07\" \"RCSZ04\" \"DTSZ13\" \"QTSZ05\" \"ORSZ01\" \"MPSZ03\" \"PNSZ01\" \"GLSZ01\"\n [97] \"JESZ07\" \"BLSZ01\" \"BTSZ06\" \"BDSZ03\" \"NVSZ04\" \"CLSZ02\" \"GLSZ02\" \"TPSZ07\"\n[105] \"BDSZ04\" \"TPSZ02\" \"JESZ06\" \"BTSZ03\" \"GLSZ03\" \"TPSZ11\" \"TPSZ09\" \"TSSZ03\"\n[113] \"TPSZ06\" \"TPSZ04\" \"JWSZ06\" \"JWSZ07\" \"RCSZ01\" \"NTSZ03\" \"JESZ10\" \"BLSZ03\"\n[121] \"BLSZ04\" \"QTSZ01\" \"KLSZ06\" \"NTSZ02\" \"CLSZ09\" \"QTSZ09\" \"CLSZ06\" \"KLSZ07\"\n[129] \"KLSZ03\" \"KLSZ08\" \"BTSZ04\" \"BTSZ08\" \"TNSZ01\" \"CLSZ05\" \"BDSZ08\" \"PNSZ03\"\n[137] \"PNSZ02\" \"TNSZ04\" \"NVSZ02\" \"BLSZ02\" \"BDSZ05\" \"CLSZ04\" \"BTSZ07\" \"GLSZ05\"\n[145] \"JESZ09\" \"JESZ08\" \"KLSZ02\" \"CLSZ03\" \"NVSZ03\" \"BDSZ06\" \"KLSZ01\" \"NVSZ01\"\n[153] \"TSSZ02\" \"SGSZ06\" \"BSSZ03\" \"TMSZ03\" \"BKSZ03\" \"HGSZ09\" \"CBSZ01\" \"PLSZ02\"\n[161] \"BKSZ02\" \"HGSZ06\" \"AMSZ03\" \"SGSZ04\" \"HGSZ01\" \"PRSZ07\" \"BPSZ06\" \"PRSZ05\"\n[169] \"TMSZ01\" \"AMSZ02\" \"AMSZ01\" \"AMSZ06\" \"SGSZ02\" \"THSZ02\" \"SGSZ03\" \"BKSZ04\"\n[177] \"JWSZ01\" \"BPSZ07\" \"TMSZ02\" \"HGSZ07\" \"PRSZ08\" \"BKSZ05\" \"CLSZ01\" \"NVSZ05\"\n[185] \"BTSZ05\" \"TPSZ12\" \"JWSZ05\" \"TPSZ05\" \"JESZ03\" \"TPSZ03\" \"TPSZ10\" \"TPSZ08\"\n[193] \"JWSZ04\" \"JESZ04\" \"TPSZ01\" \"BDSZ01\" \"JESZ02\" \"BKSZ09\" \"JWSZ09\" \"BDSZ02\"\n[201] \"BTSZ01\" \"BTSZ02\" \"TMSZ05\" \"TMSZ04\" \"JWSZ02\" \"BKSZ08\" \"BKSZ06\" \"BKSZ07\"\n[209] \"SGSZ07\" \"HGSZ08\" \"TSSZ01\" \"JESZ01\" \"JWSZ08\" \"SGSZ05\" \"JWSZ03\" \"SLSZ04\"\n[217] \"SKSZ04\" \"SLSZ01\" \"YSSZ08\" \"MDSZ01\" \"PGSZ07\" \"YSSZ04\" \"YSSZ05\" \"PGSZ01\"\n[225] \"MDSZ03\" \"YSSZ01\" \"PRSZ03\" \"BKSZ01\" \"PLSZ01\" \"HGSZ03\" \"HGSZ10\" \"HGSZ02\"\n[233] \"AMSZ07\" \"BPSZ05\" \"CKSZ02\" \"HGSZ04\" \"PLSZ03\" \"BPSZ04\" \"SESZ01\" \"CKSZ04\"\n[241] \"PRSZ02\" \"AMSZ09\" \"HGSZ05\" \"CKSZ01\" \"CKSZ03\" \"BPSZ03\" \"BPSZ01\" \"BPSZ02\"\n[249] \"SGSZ01\" \"SESZ05\" \"AMSZ12\" \"AMSZ10\" \"PRSZ06\" \"AMSZ08\" \"PRSZ04\" \"CKSZ05\"\n[257] \"SESZ02\" \"AMSZ11\" \"CHSZ01\" \"SESZ03\" \"SESZ04\" \"SESZ07\" \"SESZ06\" \"PGSZ04\"\n[265] \"CKSZ06\" \"PRSZ01\" \"PGSZ03\" \"PGSZ05\" \"SKSZ03\" \"YSSZ06\" \"PGSZ02\" \"PGSZ06\"\n[273] \"CCSZ01\" \"SBSZ06\" \"SBSZ07\" \"SBSZ08\" \"KLSZ09\" \"TSSZ04\" \"TSSZ05\" \"WCSZ03\"\n[281] \"WCSZ02\" \"JESZ05\" \"THSZ03\" \"THSZ04\" \"THSZ01\" \"THSZ06\" \"THSZ05\" \"PLSZ04\"\n[289] \"CHSZ02\" \"QTSZ02\" \"CHSZ03\" \"OTSZ02\" \"MPSZ01\" \"GLSZ04\" \"SLSZ03\" \"SKSZ02\"\n[297] \"WDSZ04\" \"WDSZ05\" \"YSSZ03\" \"WCSZ01\" \"SLSZ02\" \"YSSZ09\" \"WDSZ01\" \"NESZ01\"\n[305] \"SMSZ03\" \"YSSZ02\" \"WDSZ02\" \"WDSZ06\" \"SBSZ02\" \"SKSZ01\" \"SKSZ05\" \"WDSZ03\"\n[313] \"SBSZ03\" \"WDSZ07\" \"SBSZ01\" \"WDSZ08\" \"SMSZ04\" \"SBSZ05\" \"LKSZ01\" \"SMSZ01\"\n[321] \"SBSZ09\" \"SBSZ04\" \"SMSZ02\" \"WDSZ09\" \"PLSZ05\" \"MDSZ02\" \"YSSZ07\" \"BSSZ01\"\n[329] \"AMSZ05\" \"AMSZ04\" \"BSSZ02\" \"TSSZ06\"\n\n\nattach SUBZONE_C to row and column for distance matrix matching ahead\n\n\nCode\ncolnames(dist) &lt;- paste0(sz_names)\nrownames(dist) &lt;- paste0(sz_names)"
  },
  {
    "objectID": "in-class/ice3.html#pivoting-distance-value-by-subzone_c",
    "href": "in-class/ice3.html#pivoting-distance-value-by-subzone_c",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "3.3 Pivoting distance value by SUBZONE_C",
    "text": "3.3 Pivoting distance value by SUBZONE_C\nNext, pivot the distance matrix into a long table by using the row and column subzone codes using this code.\n\n\nCode\ndistPair &lt;- melt(dist) %&gt;%\n  rename(dist = value)\nhead(distPair, 10)\n\n\n     Var1   Var2      dist\n1  MESZ01 MESZ01     0.000\n2  RVSZ05 MESZ01  3926.003\n3  SRSZ01 MESZ01  3939.108\n4  WISZ01 MESZ01 20252.964\n5  MUSZ02 MESZ01  2989.984\n6  MPSZ05 MESZ01  1431.330\n7  WISZ03 MESZ01 19211.836\n8  WISZ02 MESZ01 14960.942\n9  SISZ02 MESZ01  7515.256\n10 SISZ01 MESZ01  6391.342\n\n\n\n\n\n\n\n\nWarning!\n\n\n\ndo not sort the data because the sequence will be broken"
  },
  {
    "objectID": "in-class/ice3.html#updating-intra-zonal-distances",
    "href": "in-class/ice3.html#updating-intra-zonal-distances",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "3.4 Updating intra-zonal distances",
    "text": "3.4 Updating intra-zonal distances\nIn this section, we are going to append a constant value to replace the intra-zonal distance of 0.\nFirst, we will select and find out the minimum value of the distance by using summary().\n\n\nCode\ndistPair %&gt;%\n  filter(dist &gt; 0) %&gt;%\n  summary()\n\n\n      Var1             Var2             dist        \n MESZ01 :   331   MESZ01 :   331   Min.   :  173.8  \n RVSZ05 :   331   RVSZ05 :   331   1st Qu.: 7149.5  \n SRSZ01 :   331   SRSZ01 :   331   Median :11890.0  \n WISZ01 :   331   WISZ01 :   331   Mean   :12229.4  \n MUSZ02 :   331   MUSZ02 :   331   3rd Qu.:16401.7  \n MPSZ05 :   331   MPSZ05 :   331   Max.   :49894.4  \n (Other):107906   (Other):107906                    \n\n\nThe constant distant selected for intra-zones must be below the minimum distance (173.8). 50m is picked as the fix distance to be put into intra-zones distance.\n\n\nCode\ndistPair$dist &lt;- ifelse(distPair$dist == 0,\n                        50, distPair$dist)\n\n# check the output\nsummary(distPair)\n\n\n      Var1             Var2             dist      \n MESZ01 :   332   MESZ01 :   332   Min.   :   50  \n RVSZ05 :   332   RVSZ05 :   332   1st Qu.: 7097  \n SRSZ01 :   332   SRSZ01 :   332   Median :11864  \n WISZ01 :   332   WISZ01 :   332   Mean   :12193  \n MUSZ02 :   332   MUSZ02 :   332   3rd Qu.:16388  \n MPSZ05 :   332   MPSZ05 :   332   Max.   :49894  \n (Other):108232   (Other):108232                  \n\n\nnotice that the minimum value has change (i.e. 0 within-distance has changed to 50)\n\n\n\n\n\n\nalternative method to calculate the within-distance!\n\n\n\n\ncalculate the parameter\ncalculate the distance\n\n\n\nThe code chunk below is used to rename the origin and destination fields.\n\n\nCode\ndistPair &lt;- distPair %&gt;%\n  rename(orig = Var1,\n         dest = Var2)\n\n\nLastly, the code chunk below is used to save the dataframe for future use.\n\n\nCode\nwrite_rds(distPair, \"../data/rds/distPair.rds\")"
  },
  {
    "objectID": "in-class/ice3.html#separating-intra-flow-from-passenger-volume-df",
    "href": "in-class/ice3.html#separating-intra-flow-from-passenger-volume-df",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "4.1 Separating intra-flow from passenger volume df",
    "text": "4.1 Separating intra-flow from passenger volume df\nCode chunk below is used to add three new fields in flow_data dataframe.\n\n\nCode\nflow_data$FlowNoIntra &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0, flow_data$TRIPS)\nflow_data$offset &lt;- ifelse(\n  flow_data$ORIGIN_SZ == flow_data$DESTIN_SZ, \n  0.000001, 1)"
  },
  {
    "objectID": "in-class/ice3.html#combining-passenger-volume-data-with-distance-value",
    "href": "in-class/ice3.html#combining-passenger-volume-data-with-distance-value",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "4.2 Combining passenger volume data with distance value",
    "text": "4.2 Combining passenger volume data with distance value\nBefore we can join flow_data and distPair, we need to convert data value type of ORIGIN_SZ and DESTIN_SZ fields of flow_data dataframe into factor data type.\n\n\nCode\nflow_data$ORIGIN_SZ &lt;- as.factor(flow_data$ORIGIN_SZ)\nflow_data$DESTIN_SZ &lt;- as.factor(flow_data$DESTIN_SZ)\n\n\nNow, left_join() of dplyr will be used to flow_data dataframe and distPair dataframe. The output is called flow_data1.\n\n\nCode\nflow_data1 &lt;- flow_data %&gt;%\n  left_join (distPair,\n             by = c(\"ORIGIN_SZ\" = \"orig\",\n                    \"DESTIN_SZ\" = \"dest\"))\n\n# check the output\nprint(flow_data1)\n\n\n# A tibble: 20,595 × 6\n# Groups:   ORIGIN_SZ [309]\n   ORIGIN_SZ DESTIN_SZ TRIPS FlowNoIntra   offset  dist\n   &lt;fct&gt;     &lt;fct&gt;     &lt;dbl&gt;       &lt;dbl&gt;    &lt;dbl&gt; &lt;dbl&gt;\n 1 AMSZ01    AMSZ01     1866           0 0.000001   50 \n 2 AMSZ01    AMSZ02     8726        8726 1         810.\n 3 AMSZ01    AMSZ03    12598       12598 1        1361.\n 4 AMSZ01    AMSZ04     2098        2098 1         840.\n 5 AMSZ01    AMSZ05     7718        7718 1        1077.\n 6 AMSZ01    AMSZ06     1631        1631 1         805.\n 7 AMSZ01    AMSZ07     1308        1308 1        1799.\n 8 AMSZ01    AMSZ08     2261        2261 1        2576.\n 9 AMSZ01    AMSZ09     1526        1526 1        1204.\n10 AMSZ01    AMSZ10      141         141 1        1418.\n# ℹ 20,585 more rows"
  },
  {
    "objectID": "in-class/ice3.html#importing-population-data",
    "href": "in-class/ice3.html#importing-population-data",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "5.1 Importing population data",
    "text": "5.1 Importing population data\n\n\nCode\npop &lt;- read_csv(\"../data/aspatial/pop.csv\")\n\n# check the output\npop\n\n\n# A tibble: 332 × 5\n   PA         SZ                     AGE7_12 AGE13_24 AGE25_64\n   &lt;chr&gt;      &lt;chr&gt;                    &lt;dbl&gt;    &lt;dbl&gt;    &lt;dbl&gt;\n 1 ANG MO KIO ANG MO KIO TOWN CENTRE     310      710     2780\n 2 ANG MO KIO CHENG SAN                 1140     2770    15700\n 3 ANG MO KIO CHONG BOON                1010     2650    14240\n 4 ANG MO KIO KEBUN BAHRU               1050     2390    12460\n 5 ANG MO KIO SEMBAWANG HILLS            420     1120     3620\n 6 ANG MO KIO SHANGRI-LA                 810     1920     9650\n 7 ANG MO KIO TAGORE                     390     1150     4350\n 8 ANG MO KIO TOWNSVILLE                 980     2000    11320\n 9 ANG MO KIO YIO CHU KANG                 0        0        0\n10 ANG MO KIO YIO CHU KANG EAST          260      650     2500\n# ℹ 322 more rows"
  },
  {
    "objectID": "in-class/ice3.html#geospatial-data-wrangling",
    "href": "in-class/ice3.html#geospatial-data-wrangling",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "5.2 Geospatial data wrangling",
    "text": "5.2 Geospatial data wrangling\n\n\nCode\npop &lt;- pop %&gt;%\n  left_join(mpsz,\n            by = c(\"PA\" = \"PLN_AREA_N\",\n                   \"SZ\" = \"SUBZONE_N\")) %&gt;%\n  select(1:6) %&gt;%\n  rename(SZ_NAME = SZ,\n         SZ = SUBZONE_C)\n\n# check the output\nglimpse(pop)\n\n\nRows: 332\nColumns: 6\n$ PA       &lt;chr&gt; \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG …\n$ SZ_NAME  &lt;chr&gt; \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", \"KEBUN B…\n$ AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 1050, 420, 810, 390, 980, 0, 260, 0, 1190, 6…\n$ AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2390, 1120, 1920, 1150, 2000, 0, 650, 0, 326…\n$ AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 12460, 3620, 9650, 4350, 11320, 0, 2500, …\n$ SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ06\", \"AMSZ07\", \"AMSZ05\", \"…\n\n\n\nthis is the useful trick of how to merge two table that has different reference column."
  },
  {
    "objectID": "in-class/ice3.html#preparing-origin-destination-attribute",
    "href": "in-class/ice3.html#preparing-origin-destination-attribute",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "5.3 Preparing origin & destination attribute",
    "text": "5.3 Preparing origin & destination attribute\n\n\nCode\n# Preparing origin attribute\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            by = c(ORIGIN_SZ = \"SZ\")) %&gt;%\n  rename(ORIGIN_AGE7_12 = AGE7_12,\n         ORIGIN_AGE13_24 = AGE13_24,\n         ORIGIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\n# Preparing destination attribute\nflow_data1 &lt;- flow_data1 %&gt;%\n  left_join(pop,\n            # use a subzone code\n            by = c(DESTIN_SZ = \"SZ\")) %&gt;%\n  rename(DESTIN_AGE7_12 = AGE7_12,\n         DESTIN_AGE13_24 = AGE13_24,\n         DESTIN_AGE25_64 = AGE25_64) %&gt;%\n  select(-c(PA, SZ_NAME))\n\n# check the output\nglimpse(flow_data1)\n\n\nRows: 20,595\nColumns: 12\nGroups: ORIGIN_SZ [309]\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1866, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526,…\n$ FlowNoIntra     &lt;dbl&gt; 0, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 14…\n$ offset          &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00…\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…\n\n\n\nInstead of doing simple join, this join use origin subzone code and destination subzone code. Having population for both is useful for the transport planning analysis as depending on the case, you might need to look at either the origin or destination population. It also conform with the general factors of geospatial flow analysis which consists of push and pull factors\n\nWe will called the output data file SIM_data. it is in rds data file format.\n\n\nCode\nglimpse(flow_data1)\n\n\nRows: 20,595\nColumns: 12\nGroups: ORIGIN_SZ [309]\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1866, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526,…\n$ FlowNoIntra     &lt;dbl&gt; 0, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 14…\n$ offset          &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00…\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…\n\n\n\n\nCode\nwrite_rds(flow_data1, \"../data/rds/SIM_data.rds\")"
  },
  {
    "objectID": "in-class/ice3.html#importing-the-modelling-data",
    "href": "in-class/ice3.html#importing-the-modelling-data",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.1 Importing the modelling data",
    "text": "6.1 Importing the modelling data\nFirstly, let us import the modelling data by using the code chunk below.\n\n\nCode\nSIM_data &lt;- read_rds(\"../data/rds/SIM_data.rds\")\n\n# check the output\nglimpse(SIM_data)\n\n\nRows: 20,595\nColumns: 12\nGroups: ORIGIN_SZ [309]\n$ ORIGIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMSZ01\", \"AMS…\n$ DESTIN_SZ       &lt;chr&gt; \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ04\", \"AMSZ05\", \"AMS…\n$ TRIPS           &lt;dbl&gt; 1866, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526,…\n$ FlowNoIntra     &lt;dbl&gt; 0, 8726, 12598, 2098, 7718, 1631, 1308, 2261, 1526, 14…\n$ offset          &lt;dbl&gt; 1e-06, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00, 1e+00…\n$ dist            &lt;dbl&gt; 50.0000, 810.4491, 1360.9294, 840.4432, 1076.7916, 805…\n$ ORIGIN_AGE7_12  &lt;dbl&gt; 310, 310, 310, 310, 310, 310, 310, 310, 310, 310, 310,…\n$ ORIGIN_AGE13_24 &lt;dbl&gt; 710, 710, 710, 710, 710, 710, 710, 710, 710, 710, 710,…\n$ ORIGIN_AGE25_64 &lt;dbl&gt; 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, 2780, …\n$ DESTIN_AGE7_12  &lt;dbl&gt; 310, 1140, 1010, 980, 810, 1050, 420, 390, 1190, 0, 0,…\n$ DESTIN_AGE13_24 &lt;dbl&gt; 710, 2770, 2650, 2000, 1920, 2390, 1120, 1150, 3260, 0…\n$ DESTIN_AGE25_64 &lt;dbl&gt; 2780, 15700, 14240, 11320, 9650, 12460, 3620, 4350, 13…"
  },
  {
    "objectID": "in-class/ice3.html#visualising-the-dependent-variable",
    "href": "in-class/ice3.html#visualising-the-dependent-variable",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.2 Visualising the dependent variable",
    "text": "6.2 Visualising the dependent variable\nFirstly, let us plot the distribution of the dependent variable (i.e. TRIPS) by using histogram method by using the code chunk below.\n\n\nCode\nggplot(data = SIM_data,\n       aes(x = TRIPS)) +\n  geom_histogram()\n\n\n\n\n\nNotice that the distribution is highly skewed and not resemble bell shape or also known as normal distribution.\nNext, let us visualise the relation between the dependent variable and one of the key independent variable in Spatial Interaction Model, namely distance.\n\n\nCode\nggplot(data = SIM_data,\n       aes(x = dist,\n           y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n\n\n\n\nNotice that their relationship hardly resemble linear relationship.\nOn the other hand, if we plot the scatter plot by using the log transformed version of both variables, we can see that their relationship is more resemble linear relationship.\n\n\nCode\nggplot(data = SIM_data,\n       aes(x = log(dist),\n           y = log(TRIPS))) +\n  geom_point() +\n  geom_smooth(method = lm)"
  },
  {
    "objectID": "in-class/ice3.html#checking-for-variables-with-zero-values",
    "href": "in-class/ice3.html#checking-for-variables-with-zero-values",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.3 Checking for variables with zero values",
    "text": "6.3 Checking for variables with zero values\nSince Poisson Regression is based of log and log 0 is undefined, it is important for us to ensure that no 0 values in the explanatory variables.\nIn the code chunk below, summary() of Base R is used to compute the summary statistics of all variables in SIM_data data frame.\n\n\nCode\nsummary(SIM_data)\n\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS         FlowNoIntra      \n Length:20595       Length:20595       Min.   :     1   Min.   :     0.0  \n Class :character   Class :character   1st Qu.:    17   1st Qu.:    15.0  \n Mode  :character   Mode  :character   Median :    82   Median :    77.0  \n                                       Mean   :  1035   Mean   :   867.4  \n                                       3rd Qu.:   418   3rd Qu.:   382.0  \n                                       Max.   :294318   Max.   :193431.0  \n     offset              dist       ORIGIN_AGE7_12   ORIGIN_AGE13_24\n Min.   :0.000001   Min.   :   50   Min.   :   0.0   Min.   :    0  \n 1st Qu.:1.000000   1st Qu.: 3351   1st Qu.:  50.0   1st Qu.:  100  \n Median :1.000000   Median : 6108   Median : 510.0   Median : 1140  \n Mean   :0.985870   Mean   : 6952   Mean   : 890.6   Mean   : 1958  \n 3rd Qu.:1.000000   3rd Qu.: 9849   3rd Qu.:1360.0   3rd Qu.: 3010  \n Max.   :1.000000   Max.   :26136   Max.   :6340.0   Max.   :16380  \n ORIGIN_AGE25_64 DESTIN_AGE7_12   DESTIN_AGE13_24 DESTIN_AGE25_64\n Min.   :    0   Min.   :   0.0   Min.   :    0   Min.   :    0  \n 1st Qu.:  730   1st Qu.:  10.0   1st Qu.:   60   1st Qu.:  630  \n Median : 5730   Median : 510.0   Median : 1090   Median : 5640  \n Mean   : 9111   Mean   : 847.9   Mean   : 1879   Mean   : 8753  \n 3rd Qu.:14200   3rd Qu.:1200.0   3rd Qu.: 2920   3rd Qu.:13650  \n Max.   :74610   Max.   :6340.0   Max.   :16380   Max.   :74610  \n\n\nThe print report above reveals that variables ORIGIN_AGE7_12, ORIGIN_AGE13_24, ORIGIN_AGE25_64,DESTIN_AGE7_12, DESTIN_AGE13_24, DESTIN_AGE25_64 consist of 0 values.\nIn view of this, code chunk below will be used to replace zero values to 0.99.\n\n\nCode\nSIM_data$DESTIN_AGE7_12 &lt;- ifelse(\n  SIM_data$DESTIN_AGE7_12 == 0,\n  0.99, SIM_data$DESTIN_AGE7_12)\nSIM_data$DESTIN_AGE13_24 &lt;- ifelse(\n  SIM_data$DESTIN_AGE13_24 == 0,\n  0.99, SIM_data$DESTIN_AGE13_24)\nSIM_data$DESTIN_AGE25_64 &lt;- ifelse(\n  SIM_data$DESTIN_AGE25_64 == 0,\n  0.99, SIM_data$DESTIN_AGE25_64)\nSIM_data$ORIGIN_AGE7_12 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE7_12 == 0,\n  0.99, SIM_data$ORIGIN_AGE7_12)\nSIM_data$ORIGIN_AGE13_24 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE13_24 == 0,\n  0.99, SIM_data$ORIGIN_AGE13_24)\nSIM_data$ORIGIN_AGE25_64 &lt;- ifelse(\n  SIM_data$ORIGIN_AGE25_64 == 0,\n  0.99, SIM_data$ORIGIN_AGE25_64)\n\n# check the summary again\nsummary(SIM_data)\n\n\n  ORIGIN_SZ          DESTIN_SZ             TRIPS         FlowNoIntra      \n Length:20595       Length:20595       Min.   :     1   Min.   :     0.0  \n Class :character   Class :character   1st Qu.:    17   1st Qu.:    15.0  \n Mode  :character   Mode  :character   Median :    82   Median :    77.0  \n                                       Mean   :  1035   Mean   :   867.4  \n                                       3rd Qu.:   418   3rd Qu.:   382.0  \n                                       Max.   :294318   Max.   :193431.0  \n     offset              dist       ORIGIN_AGE7_12    ORIGIN_AGE13_24   \n Min.   :0.000001   Min.   :   50   Min.   :   0.99   Min.   :    0.99  \n 1st Qu.:1.000000   1st Qu.: 3351   1st Qu.:  50.00   1st Qu.:  100.00  \n Median :1.000000   Median : 6108   Median : 510.00   Median : 1140.00  \n Mean   :0.985870   Mean   : 6952   Mean   : 890.79   Mean   : 1958.29  \n 3rd Qu.:1.000000   3rd Qu.: 9849   3rd Qu.:1360.00   3rd Qu.: 3010.00  \n Max.   :1.000000   Max.   :26136   Max.   :6340.00   Max.   :16380.00  \n ORIGIN_AGE25_64    DESTIN_AGE7_12    DESTIN_AGE13_24    DESTIN_AGE25_64   \n Min.   :    0.99   Min.   :   0.99   Min.   :    0.99   Min.   :    0.99  \n 1st Qu.:  730.00   1st Qu.:  10.00   1st Qu.:   60.00   1st Qu.:  630.00  \n Median : 5730.00   Median : 510.00   Median : 1090.00   Median : 5640.00  \n Mean   : 9111.14   Mean   : 848.09   Mean   : 1878.77   Mean   : 8752.82  \n 3rd Qu.:14200.00   3rd Qu.:1200.00   3rd Qu.: 2920.00   3rd Qu.:13650.00  \n Max.   :74610.00   Max.   :6340.00   Max.   :16380.00   Max.   :74610.00  \n\n\nNotice that all the 0 values have been replaced by 0.99."
  },
  {
    "objectID": "in-class/ice3.html#unconstrained-spatial-interaction-model",
    "href": "in-class/ice3.html#unconstrained-spatial-interaction-model",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.4 Unconstrained Spatial Interaction Model",
    "text": "6.4 Unconstrained Spatial Interaction Model\nIn this section, you will learn how to calibrate an unconstrained spatial interaction model by using glm() of Base Stats. The explanatory variables are origin population by different age cohort, destination population by different age cohort (i.e. ORIGIN_AGE25_64) and distance between origin and destination in km (i.e. dist).\nThe code chunk used to calibrate to model is shown below:\n\n\nCode\nuncSIM &lt;- glm(formula = TRIPS ~ \n                log(ORIGIN_AGE25_64) + \n                log(DESTIN_AGE25_64) +\n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nuncSIM\n\n\n\nCall:  glm(formula = TRIPS ~ log(ORIGIN_AGE25_64) + log(DESTIN_AGE25_64) + \n    log(dist), family = poisson(link = \"log\"), data = SIM_data, \n    na.action = na.exclude)\n\nCoefficients:\n         (Intercept)  log(ORIGIN_AGE25_64)  log(DESTIN_AGE25_64)  \n            10.22832               0.27718               0.02411  \n           log(dist)  \n            -0.71469  \n\nDegrees of Freedom: 20594 Total (i.e. Null);  20591 Residual\nNull Deviance:      88880000 \nResidual Deviance: 53020000     AIC: 53150000"
  },
  {
    "objectID": "in-class/ice3.html#r-squared-function",
    "href": "in-class/ice3.html#r-squared-function",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.5 R-squared function",
    "text": "6.5 R-squared function\nThe model by default doesn’t calculate the R-Squared. In order to measure how much variation of the trips can be accounted by the model we will write a function to calculate R-Squared value as shown below.\n\n\nCode\nCalcRSquared &lt;- function(observed,estimated){\n  r &lt;- cor(observed,estimated)\n  R2 &lt;- r^2\n  R2\n}\n\n\nNext, we will compute the R-squared of the unconstrained SIM by using the code chunk below.\n\n\nCode\nCalcRSquared(uncSIM$data$TRIPS, uncSIM$fitted.values)\n\n\n[1] 0.1967139\n\n\n\n\nCode\nr2_mcfadden(uncSIM)\n\n\n# R2 for Generalized Linear Regression\n       R2: 0.403\n  adj. R2: 0.403"
  },
  {
    "objectID": "in-class/ice3.html#origin-production-constrained-sim",
    "href": "in-class/ice3.html#origin-production-constrained-sim",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.6 Origin (Production) constrained SIM",
    "text": "6.6 Origin (Production) constrained SIM\nIn this section, we will fit an origin constrained SIM by using the code chunk below.\n\n\nCode\norcSIM &lt;- glm(formula = TRIPS ~ \n                 ORIGIN_SZ +\n                 log(DESTIN_AGE25_64) +\n                 log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(orcSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + log(DESTIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          12.2572696  0.0033923  3613.272  &lt; 2e-16 ***\nORIGIN_SZAMSZ02       1.1212940  0.0039607   283.101  &lt; 2e-16 ***\nORIGIN_SZAMSZ03       0.6787221  0.0040298   168.427  &lt; 2e-16 ***\nORIGIN_SZAMSZ04       0.0636727  0.0045251    14.071  &lt; 2e-16 ***\nORIGIN_SZAMSZ05      -0.1296956  0.0051665   -25.103  &lt; 2e-16 ***\nORIGIN_SZAMSZ06       0.4646209  0.0046414   100.103  &lt; 2e-16 ***\nORIGIN_SZAMSZ07      -1.2315871  0.0081619  -150.895  &lt; 2e-16 ***\nORIGIN_SZAMSZ08      -0.8741408  0.0075459  -115.843  &lt; 2e-16 ***\nORIGIN_SZAMSZ09       0.2398512  0.0048975    48.975  &lt; 2e-16 ***\nORIGIN_SZAMSZ10       0.2244468  0.0045595    49.226  &lt; 2e-16 ***\nORIGIN_SZAMSZ11      -1.4593622  0.0098202  -148.608  &lt; 2e-16 ***\nORIGIN_SZAMSZ12      -1.4677469  0.0095357  -153.921  &lt; 2e-16 ***\nORIGIN_SZBDSZ01       1.1106031  0.0038840   285.940  &lt; 2e-16 ***\nORIGIN_SZBDSZ02       0.5793879  0.0044817   129.279  &lt; 2e-16 ***\nORIGIN_SZBDSZ03       1.0615203  0.0040366   262.976  &lt; 2e-16 ***\nORIGIN_SZBDSZ04       1.8081125  0.0034995   516.672  &lt; 2e-16 ***\nORIGIN_SZBDSZ05       0.8010218  0.0039584   202.362  &lt; 2e-16 ***\nORIGIN_SZBDSZ06       0.9819301  0.0040389   243.116  &lt; 2e-16 ***\nORIGIN_SZBDSZ07      -0.7462355  0.0068016  -109.715  &lt; 2e-16 ***\nORIGIN_SZBDSZ08      -0.6166486  0.0064772   -95.203  &lt; 2e-16 ***\nORIGIN_SZBKSZ01      -0.1949723  0.0055333   -35.236  &lt; 2e-16 ***\nORIGIN_SZBKSZ02       0.5449125  0.0044864   121.459  &lt; 2e-16 ***\nORIGIN_SZBKSZ03       0.8673677  0.0042071   206.167  &lt; 2e-16 ***\nORIGIN_SZBKSZ04       0.0297416  0.0051862     5.735 9.77e-09 ***\nORIGIN_SZBKSZ05       0.0432635  0.0049218     8.790  &lt; 2e-16 ***\nORIGIN_SZBKSZ06       0.1661698  0.0051314    32.383  &lt; 2e-16 ***\nORIGIN_SZBKSZ07       0.8341305  0.0039471   211.330  &lt; 2e-16 ***\nORIGIN_SZBKSZ08       0.1716913  0.0045799    37.488  &lt; 2e-16 ***\nORIGIN_SZBKSZ09       0.1324636  0.0048567    27.274  &lt; 2e-16 ***\nORIGIN_SZBLSZ01      -1.1815847  0.0105831  -111.648  &lt; 2e-16 ***\nORIGIN_SZBLSZ02      -1.9027359  0.0157452  -120.845  &lt; 2e-16 ***\nORIGIN_SZBLSZ03      -3.1794436  0.0356395   -89.211  &lt; 2e-16 ***\nORIGIN_SZBLSZ04      -1.9390262  0.0190190  -101.952  &lt; 2e-16 ***\nORIGIN_SZBMSZ01       0.0422565  0.0044140     9.573  &lt; 2e-16 ***\nORIGIN_SZBMSZ02      -1.1557535  0.0061561  -187.741  &lt; 2e-16 ***\nORIGIN_SZBMSZ03      -0.4645261  0.0050813   -91.420  &lt; 2e-16 ***\nORIGIN_SZBMSZ04      -0.0188526  0.0044369    -4.249 2.15e-05 ***\nORIGIN_SZBMSZ05      -1.2949324  0.0067112  -192.951  &lt; 2e-16 ***\nORIGIN_SZBMSZ06      -1.8316625  0.0106920  -171.311  &lt; 2e-16 ***\nORIGIN_SZBMSZ07      -0.3965595  0.0048890   -81.112  &lt; 2e-16 ***\nORIGIN_SZBMSZ08      -0.4426364  0.0048874   -90.568  &lt; 2e-16 ***\nORIGIN_SZBMSZ09      -1.1520773  0.0064126  -179.659  &lt; 2e-16 ***\nORIGIN_SZBMSZ10      -1.3498102  0.0071277  -189.375  &lt; 2e-16 ***\nORIGIN_SZBMSZ11      -0.7587589  0.0056716  -133.781  &lt; 2e-16 ***\nORIGIN_SZBMSZ12      -1.0123456  0.0075871  -133.430  &lt; 2e-16 ***\nORIGIN_SZBMSZ13      -0.0326386  0.0048100    -6.786 1.16e-11 ***\nORIGIN_SZBMSZ14      -0.5068184  0.0056570   -89.592  &lt; 2e-16 ***\nORIGIN_SZBMSZ15      -0.2700839  0.0051562   -52.381  &lt; 2e-16 ***\nORIGIN_SZBMSZ16      -1.3018102  0.0066844  -194.754  &lt; 2e-16 ***\nORIGIN_SZBMSZ17      -1.7002849  0.0099997  -170.034  &lt; 2e-16 ***\nORIGIN_SZBPSZ01       0.2670882  0.0048127    55.496  &lt; 2e-16 ***\nORIGIN_SZBPSZ02       0.3029033  0.0052799    57.369  &lt; 2e-16 ***\nORIGIN_SZBPSZ03       0.5460184  0.0049083   111.245  &lt; 2e-16 ***\nORIGIN_SZBPSZ04       0.6201988  0.0043235   143.448  &lt; 2e-16 ***\nORIGIN_SZBPSZ05       0.7093808  0.0040011   177.298  &lt; 2e-16 ***\nORIGIN_SZBPSZ06      -1.0264891  0.0074092  -138.543  &lt; 2e-16 ***\nORIGIN_SZBPSZ07      -0.7883103  0.0071685  -109.969  &lt; 2e-16 ***\nORIGIN_SZBSSZ01      -0.0579461  0.0047779   -12.128  &lt; 2e-16 ***\nORIGIN_SZBSSZ02       0.2422283  0.0043752    55.363  &lt; 2e-16 ***\nORIGIN_SZBSSZ03       0.2542201  0.0042320    60.070  &lt; 2e-16 ***\nORIGIN_SZBTSZ01       0.0436110  0.0046547     9.369  &lt; 2e-16 ***\nORIGIN_SZBTSZ02      -1.0024374  0.0067691  -148.091  &lt; 2e-16 ***\nORIGIN_SZBTSZ03      -0.2061598  0.0050780   -40.598  &lt; 2e-16 ***\nORIGIN_SZBTSZ04      -0.9023295  0.0087625  -102.976  &lt; 2e-16 ***\nORIGIN_SZBTSZ05      -1.6251914  0.0096449  -168.503  &lt; 2e-16 ***\nORIGIN_SZBTSZ06      -0.8480543  0.0065978  -128.537  &lt; 2e-16 ***\nORIGIN_SZBTSZ07      -2.0292996  0.0104316  -194.534  &lt; 2e-16 ***\nORIGIN_SZBTSZ08      -1.2640422  0.0079299  -159.401  &lt; 2e-16 ***\nORIGIN_SZCCSZ01      -1.6771075  0.0118019  -142.105  &lt; 2e-16 ***\nORIGIN_SZCHSZ01      -1.0912676  0.0099165  -110.045  &lt; 2e-16 ***\nORIGIN_SZCHSZ02      -0.4514736  0.0068723   -65.695  &lt; 2e-16 ***\nORIGIN_SZCHSZ03       0.5201937  0.0051526   100.957  &lt; 2e-16 ***\nORIGIN_SZCKSZ01       0.4643065  0.0043433   106.901  &lt; 2e-16 ***\nORIGIN_SZCKSZ02       0.9712995  0.0043842   221.545  &lt; 2e-16 ***\nORIGIN_SZCKSZ03       0.9651436  0.0039914   241.809  &lt; 2e-16 ***\nORIGIN_SZCKSZ04       1.3776079  0.0041025   335.799  &lt; 2e-16 ***\nORIGIN_SZCKSZ05       1.1403408  0.0046546   244.994  &lt; 2e-16 ***\nORIGIN_SZCKSZ06       1.1814517  0.0047394   249.284  &lt; 2e-16 ***\nORIGIN_SZCLSZ01      -0.2625408  0.0060463   -43.421  &lt; 2e-16 ***\nORIGIN_SZCLSZ02      -1.5833035  0.0111998  -141.369  &lt; 2e-16 ***\nORIGIN_SZCLSZ03      -0.6651994  0.0063921  -104.066  &lt; 2e-16 ***\nORIGIN_SZCLSZ04       0.7306030  0.0040000   182.652  &lt; 2e-16 ***\nORIGIN_SZCLSZ05      -1.7395269  0.0113461  -153.316  &lt; 2e-16 ***\nORIGIN_SZCLSZ06       0.9151166  0.0037622   243.237  &lt; 2e-16 ***\nORIGIN_SZCLSZ07      -0.1290062  0.0047742   -27.022  &lt; 2e-16 ***\nORIGIN_SZCLSZ08       0.2831183  0.0053130    53.288  &lt; 2e-16 ***\nORIGIN_SZCLSZ09      -1.7014889  0.0141617  -120.147  &lt; 2e-16 ***\nORIGIN_SZDTSZ01      -1.8145219  0.0079086  -229.438  &lt; 2e-16 ***\nORIGIN_SZDTSZ02      -1.7116162  0.0074074  -231.068  &lt; 2e-16 ***\nORIGIN_SZDTSZ03      -2.7281355  0.0134862  -202.291  &lt; 2e-16 ***\nORIGIN_SZDTSZ04      -4.8770124  0.1768059   -27.584  &lt; 2e-16 ***\nORIGIN_SZDTSZ05      -3.1783516  0.0248945  -127.673  &lt; 2e-16 ***\nORIGIN_SZDTSZ06      -2.9790538  0.0184580  -161.397  &lt; 2e-16 ***\nORIGIN_SZDTSZ07      -2.0587311  0.0234708   -87.715  &lt; 2e-16 ***\nORIGIN_SZDTSZ08      -2.6020132  0.0120040  -216.761  &lt; 2e-16 ***\nORIGIN_SZDTSZ09      -3.1137420  0.0238669  -130.463  &lt; 2e-16 ***\nORIGIN_SZDTSZ10      -2.4198270  0.0126801  -190.837  &lt; 2e-16 ***\nORIGIN_SZDTSZ11      -2.4192801  0.0124179  -194.822  &lt; 2e-16 ***\nORIGIN_SZDTSZ12      -3.4779254  0.0258344  -134.624  &lt; 2e-16 ***\nORIGIN_SZDTSZ13      -2.4434777  0.0138218  -176.784  &lt; 2e-16 ***\nORIGIN_SZGLSZ01      -1.3115899  0.0077081  -170.158  &lt; 2e-16 ***\nORIGIN_SZGLSZ02       0.2730786  0.0043545    62.712  &lt; 2e-16 ***\nORIGIN_SZGLSZ03       0.2478516  0.0043346    57.179  &lt; 2e-16 ***\nORIGIN_SZGLSZ04       1.0058548  0.0036748   273.720  &lt; 2e-16 ***\nORIGIN_SZGLSZ05       0.7072126  0.0038732   182.591  &lt; 2e-16 ***\nORIGIN_SZHGSZ01       0.3007989  0.0042707    70.434  &lt; 2e-16 ***\nORIGIN_SZHGSZ02       0.6581956  0.0041215   159.696  &lt; 2e-16 ***\nORIGIN_SZHGSZ03       0.3816820  0.0044541    85.692  &lt; 2e-16 ***\nORIGIN_SZHGSZ04       1.0312270  0.0038239   269.679  &lt; 2e-16 ***\nORIGIN_SZHGSZ05       1.3474590  0.0037638   358.002  &lt; 2e-16 ***\nORIGIN_SZHGSZ06      -0.0008560  0.0047716    -0.179    0.858    \nORIGIN_SZHGSZ07       0.6783256  0.0040470   167.613  &lt; 2e-16 ***\nORIGIN_SZHGSZ08       0.2694945  0.0046363    58.127  &lt; 2e-16 ***\nORIGIN_SZHGSZ09      -0.3546400  0.0059699   -59.405  &lt; 2e-16 ***\nORIGIN_SZHGSZ10      -3.5666964  0.0406525   -87.736  &lt; 2e-16 ***\nORIGIN_SZJESZ01       0.4529442  0.0044005   102.930  &lt; 2e-16 ***\nORIGIN_SZJESZ02       0.3211377  0.0044029    72.938  &lt; 2e-16 ***\nORIGIN_SZJESZ03       0.3064323  0.0046509    65.887  &lt; 2e-16 ***\nORIGIN_SZJESZ04      -0.7940371  0.0072484  -109.547  &lt; 2e-16 ***\nORIGIN_SZJESZ05      -2.0200755  0.0124785  -161.885  &lt; 2e-16 ***\nORIGIN_SZJESZ06       0.3574364  0.0042945    83.232  &lt; 2e-16 ***\nORIGIN_SZJESZ07      -1.6623511  0.0097460  -170.567  &lt; 2e-16 ***\nORIGIN_SZJESZ08      -0.5936736  0.0084664   -70.122  &lt; 2e-16 ***\nORIGIN_SZJESZ09       0.5925988  0.0043747   135.460  &lt; 2e-16 ***\nORIGIN_SZJESZ10      -1.8928884  0.0174179  -108.675  &lt; 2e-16 ***\nORIGIN_SZJESZ11      -1.9498962  0.0176831  -110.269  &lt; 2e-16 ***\nORIGIN_SZJWSZ01       0.3397470  0.0055918    60.758  &lt; 2e-16 ***\nORIGIN_SZJWSZ02       0.9872669  0.0040137   245.972  &lt; 2e-16 ***\nORIGIN_SZJWSZ03       1.3117797  0.0037866   346.426  &lt; 2e-16 ***\nORIGIN_SZJWSZ04       1.4410492  0.0038105   378.182  &lt; 2e-16 ***\nORIGIN_SZJWSZ05      -1.2965989  0.0110930  -116.885  &lt; 2e-16 ***\nORIGIN_SZJWSZ06      -0.6945608  0.0086716   -80.096  &lt; 2e-16 ***\nORIGIN_SZJWSZ07      -2.0864854  0.0190587  -109.477  &lt; 2e-16 ***\nORIGIN_SZJWSZ08       2.0611243  0.0036751   560.841  &lt; 2e-16 ***\nORIGIN_SZJWSZ09       1.9210266  0.0035021   548.532  &lt; 2e-16 ***\nORIGIN_SZKLSZ01       0.1862217  0.0042349    43.973  &lt; 2e-16 ***\nORIGIN_SZKLSZ02      -0.4125654  0.0052719   -78.258  &lt; 2e-16 ***\nORIGIN_SZKLSZ03      -0.4641146  0.0053630   -86.540  &lt; 2e-16 ***\nORIGIN_SZKLSZ04      -1.6469790  0.0075243  -218.888  &lt; 2e-16 ***\nORIGIN_SZKLSZ05      -0.5708516  0.0062612   -91.173  &lt; 2e-16 ***\nORIGIN_SZKLSZ06      -0.6135703  0.0050199  -122.229  &lt; 2e-16 ***\nORIGIN_SZKLSZ07      -0.9243953  0.0065292  -141.580  &lt; 2e-16 ***\nORIGIN_SZKLSZ08      -0.8402631  0.0057370  -146.463  &lt; 2e-16 ***\nORIGIN_SZKLSZ09      -1.5443628  0.0071835  -214.989  &lt; 2e-16 ***\nORIGIN_SZLKSZ01      -3.0498721  0.0325902   -93.582  &lt; 2e-16 ***\nORIGIN_SZMDSZ01      -2.2872480  0.0220629  -103.670  &lt; 2e-16 ***\nORIGIN_SZMDSZ02      -0.9139494  0.0097760   -93.490  &lt; 2e-16 ***\nORIGIN_SZMDSZ03      -1.7584031  0.0142443  -123.446  &lt; 2e-16 ***\nORIGIN_SZMPSZ01      -0.7418280  0.0063752  -116.361  &lt; 2e-16 ***\nORIGIN_SZMPSZ02      -0.4049433  0.0056898   -71.170  &lt; 2e-16 ***\nORIGIN_SZMPSZ03       0.4293520  0.0042584   100.826  &lt; 2e-16 ***\nORIGIN_SZMSSZ01      -5.2500139  0.2582191   -20.332  &lt; 2e-16 ***\nORIGIN_SZMUSZ01      -1.2678739  0.0063126  -200.850  &lt; 2e-16 ***\nORIGIN_SZMUSZ02      -3.3942329  0.0181446  -187.066  &lt; 2e-16 ***\nORIGIN_SZMUSZ03      -1.8581351  0.0074767  -248.523  &lt; 2e-16 ***\nORIGIN_SZNTSZ01      -2.4562075  0.0264752   -92.774  &lt; 2e-16 ***\nORIGIN_SZNTSZ02      -2.6884420  0.0153396  -175.261  &lt; 2e-16 ***\nORIGIN_SZNTSZ03      -1.0303438  0.0068334  -150.781  &lt; 2e-16 ***\nORIGIN_SZNTSZ05      -2.9962455  0.0381225   -78.595  &lt; 2e-16 ***\nORIGIN_SZNTSZ06      -3.3552120  0.0417904   -80.287  &lt; 2e-16 ***\nORIGIN_SZNVSZ01       0.6548716  0.0038396   170.557  &lt; 2e-16 ***\nORIGIN_SZNVSZ02      -0.5361448  0.0053627   -99.976  &lt; 2e-16 ***\nORIGIN_SZNVSZ03      -1.0528433  0.0064538  -163.134  &lt; 2e-16 ***\nORIGIN_SZNVSZ04      -1.3381785  0.0079171  -169.024  &lt; 2e-16 ***\nORIGIN_SZNVSZ05      -2.5754839  0.0143828  -179.067  &lt; 2e-16 ***\nORIGIN_SZORSZ01      -3.4040375  0.0362979   -93.781  &lt; 2e-16 ***\nORIGIN_SZORSZ02      -1.3352978  0.0065131  -205.018  &lt; 2e-16 ***\nORIGIN_SZORSZ03      -1.7229476  0.0075332  -228.713  &lt; 2e-16 ***\nORIGIN_SZOTSZ01      -1.8245855  0.0081594  -223.619  &lt; 2e-16 ***\nORIGIN_SZOTSZ02      -1.9273604  0.0094606  -203.725  &lt; 2e-16 ***\nORIGIN_SZOTSZ03      -0.8069204  0.0057452  -140.452  &lt; 2e-16 ***\nORIGIN_SZOTSZ04      -0.7940269  0.0094023   -84.451  &lt; 2e-16 ***\nORIGIN_SZPGSZ01      -0.5446157  0.0094909   -57.383  &lt; 2e-16 ***\nORIGIN_SZPGSZ02      -0.2397058  0.0059692   -40.157  &lt; 2e-16 ***\nORIGIN_SZPGSZ03       1.1783844  0.0038896   302.957  &lt; 2e-16 ***\nORIGIN_SZPGSZ04       1.3000300  0.0038964   333.647  &lt; 2e-16 ***\nORIGIN_SZPGSZ05       0.5408202  0.0048536   111.427  &lt; 2e-16 ***\nORIGIN_SZPLSZ01      -0.4449592  0.0083124   -53.530  &lt; 2e-16 ***\nORIGIN_SZPLSZ02      -1.3633297  0.0119902  -113.704  &lt; 2e-16 ***\nORIGIN_SZPLSZ03      -2.9115692  0.0335677   -86.737  &lt; 2e-16 ***\nORIGIN_SZPLSZ04      -2.9023724  0.0287202  -101.057  &lt; 2e-16 ***\nORIGIN_SZPLSZ05      -2.1073402  0.0177182  -118.937  &lt; 2e-16 ***\nORIGIN_SZPNSZ01       1.7040086  0.0039994   426.071  &lt; 2e-16 ***\nORIGIN_SZPNSZ02      -0.4002217  0.0098818   -40.501  &lt; 2e-16 ***\nORIGIN_SZPNSZ03      -1.8693822  0.0176894  -105.678  &lt; 2e-16 ***\nORIGIN_SZPNSZ04      -2.4096607  0.0245671   -98.085  &lt; 2e-16 ***\nORIGIN_SZPNSZ05      -1.8960264  0.0204403   -92.759  &lt; 2e-16 ***\nORIGIN_SZPRSZ01      -0.5425870  0.0095462   -56.838  &lt; 2e-16 ***\nORIGIN_SZPRSZ02       1.1920907  0.0040336   295.540  &lt; 2e-16 ***\nORIGIN_SZPRSZ03       0.9184264  0.0040785   225.187  &lt; 2e-16 ***\nORIGIN_SZPRSZ04      -0.0751974  0.0062876   -11.960  &lt; 2e-16 ***\nORIGIN_SZPRSZ05       1.3805921  0.0038601   357.658  &lt; 2e-16 ***\nORIGIN_SZPRSZ06      -0.3837116  0.0070846   -54.161  &lt; 2e-16 ***\nORIGIN_SZPRSZ07      -2.4584271  0.0177702  -138.345  &lt; 2e-16 ***\nORIGIN_SZPRSZ08       0.2235210  0.0053221    41.999  &lt; 2e-16 ***\nORIGIN_SZQTSZ01      -0.3595589  0.0058016   -61.976  &lt; 2e-16 ***\nORIGIN_SZQTSZ02      -0.7358763  0.0055570  -132.424  &lt; 2e-16 ***\nORIGIN_SZQTSZ03      -0.2046825  0.0049273   -41.541  &lt; 2e-16 ***\nORIGIN_SZQTSZ04      -1.1088186  0.0067100  -165.250  &lt; 2e-16 ***\nORIGIN_SZQTSZ05      -0.2193014  0.0049742   -44.088  &lt; 2e-16 ***\nORIGIN_SZQTSZ06      -0.5989010  0.0057359  -104.413  &lt; 2e-16 ***\nORIGIN_SZQTSZ07      -1.4949944  0.0082826  -180.498  &lt; 2e-16 ***\nORIGIN_SZQTSZ08      -0.2099139  0.0051293   -40.924  &lt; 2e-16 ***\nORIGIN_SZQTSZ09      -0.5306478  0.0058251   -91.097  &lt; 2e-16 ***\nORIGIN_SZQTSZ10      -0.4512726  0.0057866   -77.986  &lt; 2e-16 ***\nORIGIN_SZQTSZ11      -1.4759004  0.0090242  -163.549  &lt; 2e-16 ***\nORIGIN_SZQTSZ12      -1.1911006  0.0085137  -139.904  &lt; 2e-16 ***\nORIGIN_SZQTSZ13      -0.2161536  0.0053915   -40.091  &lt; 2e-16 ***\nORIGIN_SZQTSZ14      -1.4897181  0.0083117  -179.232  &lt; 2e-16 ***\nORIGIN_SZQTSZ15      -0.7477987  0.0090161   -82.941  &lt; 2e-16 ***\nORIGIN_SZRCSZ01      -0.6762835  0.0058785  -115.044  &lt; 2e-16 ***\nORIGIN_SZRCSZ02      -2.1258129  0.0156784  -135.589  &lt; 2e-16 ***\nORIGIN_SZRCSZ03      -1.4399103  0.0078671  -183.030  &lt; 2e-16 ***\nORIGIN_SZRCSZ04      -2.3099870  0.0123228  -187.456  &lt; 2e-16 ***\nORIGIN_SZRCSZ05      -2.6222453  0.0136375  -192.281  &lt; 2e-16 ***\nORIGIN_SZRCSZ06      -0.5427707  0.0077544   -69.995  &lt; 2e-16 ***\nORIGIN_SZRCSZ08      -2.6176399  0.0179817  -145.572  &lt; 2e-16 ***\nORIGIN_SZRCSZ09      -1.9918704  0.0131464  -151.515  &lt; 2e-16 ***\nORIGIN_SZRCSZ10      -1.8807519  0.0078372  -239.977  &lt; 2e-16 ***\nORIGIN_SZRVSZ01      -2.7768113  0.0139448  -199.129  &lt; 2e-16 ***\nORIGIN_SZRVSZ02      -1.2333052  0.0074671  -165.164  &lt; 2e-16 ***\nORIGIN_SZRVSZ03      -2.0800925  0.0113273  -183.636  &lt; 2e-16 ***\nORIGIN_SZRVSZ04      -2.2042043  0.0173312  -127.181  &lt; 2e-16 ***\nORIGIN_SZRVSZ05      -2.2883530  0.0135606  -168.750  &lt; 2e-16 ***\nORIGIN_SZSBSZ01       0.8761288  0.0047107   185.987  &lt; 2e-16 ***\nORIGIN_SZSBSZ02      -0.5335854  0.0068864   -77.484  &lt; 2e-16 ***\nORIGIN_SZSBSZ03       1.0956192  0.0040819   268.409  &lt; 2e-16 ***\nORIGIN_SZSBSZ04       0.8241213  0.0047312   174.189  &lt; 2e-16 ***\nORIGIN_SZSBSZ05       0.0023653  0.0057903     0.408    0.683    \nORIGIN_SZSBSZ06      -1.4914450  0.0137999  -108.077  &lt; 2e-16 ***\nORIGIN_SZSBSZ07      -0.6571146  0.0094394   -69.614  &lt; 2e-16 ***\nORIGIN_SZSBSZ08      -0.8442772  0.0096352   -87.625  &lt; 2e-16 ***\nORIGIN_SZSBSZ09      -0.3064340  0.0072204   -42.440  &lt; 2e-16 ***\nORIGIN_SZSESZ02       1.1589509  0.0038964   297.442  &lt; 2e-16 ***\nORIGIN_SZSESZ03       1.3881796  0.0036936   375.831  &lt; 2e-16 ***\nORIGIN_SZSESZ04       1.0524974  0.0042260   249.052  &lt; 2e-16 ***\nORIGIN_SZSESZ05      -0.0564228  0.0051174   -11.026  &lt; 2e-16 ***\nORIGIN_SZSESZ06       1.0440818  0.0040293   259.121  &lt; 2e-16 ***\nORIGIN_SZSESZ07      -2.1820069  0.0150605  -144.882  &lt; 2e-16 ***\nORIGIN_SZSGSZ01      -0.8092938  0.0073395  -110.266  &lt; 2e-16 ***\nORIGIN_SZSGSZ02      -1.0735865  0.0086924  -123.508  &lt; 2e-16 ***\nORIGIN_SZSGSZ03       0.4033899  0.0045448    88.758  &lt; 2e-16 ***\nORIGIN_SZSGSZ04       0.3064766  0.0042752    71.688  &lt; 2e-16 ***\nORIGIN_SZSGSZ05      -1.6035741  0.0089939  -178.295  &lt; 2e-16 ***\nORIGIN_SZSGSZ06       0.4487510  0.0040601   110.526  &lt; 2e-16 ***\nORIGIN_SZSGSZ07      -0.4956594  0.0053568   -92.529  &lt; 2e-16 ***\nORIGIN_SZSKSZ01      -0.1479711  0.0070814   -20.896  &lt; 2e-16 ***\nORIGIN_SZSKSZ02       0.3170221  0.0052617    60.251  &lt; 2e-16 ***\nORIGIN_SZSKSZ03      -0.3532955  0.0064310   -54.936  &lt; 2e-16 ***\nORIGIN_SZSKSZ04      -2.0951054  0.0205180  -102.110  &lt; 2e-16 ***\nORIGIN_SZSKSZ05      -1.1107362  0.0128652   -86.337  &lt; 2e-16 ***\nORIGIN_SZSLSZ01      -3.0575264  0.0267883  -114.137  &lt; 2e-16 ***\nORIGIN_SZSLSZ04      -0.2971794  0.0062148   -47.818  &lt; 2e-16 ***\nORIGIN_SZSRSZ01      -1.6849961  0.0080872  -208.354  &lt; 2e-16 ***\nORIGIN_SZSRSZ02      -1.7795845  0.0078321  -227.218  &lt; 2e-16 ***\nORIGIN_SZSRSZ03      -2.9319335  0.0175878  -166.703  &lt; 2e-16 ***\nORIGIN_SZSVSZ01      -4.0241271  0.0567990   -70.849  &lt; 2e-16 ***\nORIGIN_SZTHSZ01      -1.7036328  0.0363923   -46.813  &lt; 2e-16 ***\nORIGIN_SZTHSZ03      -1.8017255  0.0161459  -111.590  &lt; 2e-16 ***\nORIGIN_SZTHSZ04      -2.6751882  0.0251165  -106.511  &lt; 2e-16 ***\nORIGIN_SZTHSZ06      -2.1120029  0.0149976  -140.823  &lt; 2e-16 ***\nORIGIN_SZTMSZ01       0.9092740  0.0044891   202.550  &lt; 2e-16 ***\nORIGIN_SZTMSZ02       2.2887849  0.0034150   670.215  &lt; 2e-16 ***\nORIGIN_SZTMSZ03       1.5450987  0.0036606   422.093  &lt; 2e-16 ***\nORIGIN_SZTMSZ04       0.9778404  0.0042052   232.532  &lt; 2e-16 ***\nORIGIN_SZTMSZ05      -0.2336931  0.0065677   -35.582  &lt; 2e-16 ***\nORIGIN_SZTNSZ01      -1.2750543  0.0069423  -183.665  &lt; 2e-16 ***\nORIGIN_SZTNSZ02      -1.1577323  0.0065583  -176.529  &lt; 2e-16 ***\nORIGIN_SZTNSZ03      -1.6369087  0.0087512  -187.050  &lt; 2e-16 ***\nORIGIN_SZTNSZ04      -0.7124980  0.0060485  -117.797  &lt; 2e-16 ***\nORIGIN_SZTPSZ01      -0.6310450  0.0055166  -114.391  &lt; 2e-16 ***\nORIGIN_SZTPSZ02       0.4834635  0.0038861   124.408  &lt; 2e-16 ***\nORIGIN_SZTPSZ03      -0.3603214  0.0053561   -67.274  &lt; 2e-16 ***\nORIGIN_SZTPSZ04      -0.1342562  0.0050550   -26.559  &lt; 2e-16 ***\nORIGIN_SZTPSZ05      -0.1562347  0.0053099   -29.424  &lt; 2e-16 ***\nORIGIN_SZTPSZ06       0.3199803  0.0052927    60.457  &lt; 2e-16 ***\nORIGIN_SZTPSZ07      -0.2968771  0.0057224   -51.880  &lt; 2e-16 ***\nORIGIN_SZTPSZ08      -0.7926332  0.0075233  -105.356  &lt; 2e-16 ***\nORIGIN_SZTPSZ09      -0.4045617  0.0056964   -71.021  &lt; 2e-16 ***\nORIGIN_SZTPSZ10      -0.5376511  0.0061383   -87.589  &lt; 2e-16 ***\nORIGIN_SZTPSZ11       0.2588880  0.0045921    56.377  &lt; 2e-16 ***\nORIGIN_SZTPSZ12      -0.4225728  0.0055988   -75.476  &lt; 2e-16 ***\nORIGIN_SZTSSZ01      -3.7467870  0.0498600   -75.146  &lt; 2e-16 ***\nORIGIN_SZTSSZ02       0.5058653  0.0063176    80.072  &lt; 2e-16 ***\nORIGIN_SZTSSZ03       0.6462577  0.0061046   105.864  &lt; 2e-16 ***\nORIGIN_SZTSSZ04       0.5993265  0.0063391    94.544  &lt; 2e-16 ***\nORIGIN_SZTSSZ05      -0.8641353  0.0117636   -73.458  &lt; 2e-16 ***\nORIGIN_SZTSSZ06      -1.0589688  0.0142616   -74.253  &lt; 2e-16 ***\nORIGIN_SZWCSZ01       0.4621239  0.0058731    78.685  &lt; 2e-16 ***\nORIGIN_SZWCSZ02      -2.6525127  0.0266061   -99.696  &lt; 2e-16 ***\nORIGIN_SZWCSZ03      -4.3369080  0.1291395   -33.583  &lt; 2e-16 ***\nORIGIN_SZWDSZ01       1.4189977  0.0037443   378.974  &lt; 2e-16 ***\nORIGIN_SZWDSZ02       1.2245458  0.0041590   294.432  &lt; 2e-16 ***\nORIGIN_SZWDSZ03       2.2497227  0.0036310   619.591  &lt; 2e-16 ***\nORIGIN_SZWDSZ04       1.2932832  0.0043466   297.541  &lt; 2e-16 ***\nORIGIN_SZWDSZ05       0.7227242  0.0043728   165.279  &lt; 2e-16 ***\nORIGIN_SZWDSZ06       1.2863430  0.0041281   311.603  &lt; 2e-16 ***\nORIGIN_SZWDSZ07      -0.0704585  0.0067853   -10.384  &lt; 2e-16 ***\nORIGIN_SZWDSZ08      -0.0999039  0.0064851   -15.405  &lt; 2e-16 ***\nORIGIN_SZWDSZ09       1.4918246  0.0039823   374.609  &lt; 2e-16 ***\nORIGIN_SZYSSZ01       0.0491501  0.0048620    10.109  &lt; 2e-16 ***\nORIGIN_SZYSSZ02       1.0569803  0.0044148   239.416  &lt; 2e-16 ***\nORIGIN_SZYSSZ03       1.9680202  0.0037549   524.125  &lt; 2e-16 ***\nORIGIN_SZYSSZ04       0.9772633  0.0039924   244.778  &lt; 2e-16 ***\nORIGIN_SZYSSZ05       0.2284194  0.0049481    46.163  &lt; 2e-16 ***\nORIGIN_SZYSSZ06      -0.9728595  0.0088031  -110.513  &lt; 2e-16 ***\nORIGIN_SZYSSZ07      -0.7317909  0.0083972   -87.147  &lt; 2e-16 ***\nORIGIN_SZYSSZ08       0.0293379  0.0054995     5.335 9.57e-08 ***\nORIGIN_SZYSSZ09       1.4941665  0.0038008   393.122  &lt; 2e-16 ***\nlog(DESTIN_AGE25_64)  0.0233376  0.0000707   330.078  &lt; 2e-16 ***\nlog(dist)            -0.6992470  0.0001103 -6341.237  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 88883132  on 20594  degrees of freedom\nResidual deviance: 38641306  on 20284  degrees of freedom\nAIC: 38771033\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\n\nCode\nCalcRSquared(orcSIM$data$TRIPS, orcSIM$fitted.values)\n\n\n[1] 0.3917151"
  },
  {
    "objectID": "in-class/ice3.html#destination-constrained",
    "href": "in-class/ice3.html#destination-constrained",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.7 Destination constrained",
    "text": "6.7 Destination constrained\nIn this section, we will fit a destination constrained SIM by using the code chunk below.\n\n\nCode\ndecSIM &lt;- glm(formula = TRIPS ~ \n                DESTIN_SZ + \n                log(ORIGIN_AGE25_64) + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(decSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ DESTIN_SZ + log(ORIGIN_AGE25_64) + log(dist), \n    family = poisson(link = \"log\"), data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                       Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)          10.7544783  0.0030778  3494.224  &lt; 2e-16 ***\nDESTIN_SZAMSZ02       0.2842784  0.0038567    73.710  &lt; 2e-16 ***\nDESTIN_SZAMSZ03       0.4311221  0.0036823   117.079  &lt; 2e-16 ***\nDESTIN_SZAMSZ04      -0.8007388  0.0054756  -146.237  &lt; 2e-16 ***\nDESTIN_SZAMSZ05      -0.8581992  0.0052691  -162.875  &lt; 2e-16 ***\nDESTIN_SZAMSZ06      -0.6858516  0.0052062  -131.737  &lt; 2e-16 ***\nDESTIN_SZAMSZ07      -1.7152759  0.0089336  -192.002  &lt; 2e-16 ***\nDESTIN_SZAMSZ08      -0.8492781  0.0058007  -146.409  &lt; 2e-16 ***\nDESTIN_SZAMSZ09      -0.8315432  0.0054654  -152.147  &lt; 2e-16 ***\nDESTIN_SZAMSZ10       0.5098596  0.0038774   131.496  &lt; 2e-16 ***\nDESTIN_SZAMSZ11       0.1428305  0.0066949    21.334  &lt; 2e-16 ***\nDESTIN_SZAMSZ12      -0.6776163  0.0061136  -110.838  &lt; 2e-16 ***\nDESTIN_SZBDSZ01       0.6859492  0.0034558   198.491  &lt; 2e-16 ***\nDESTIN_SZBDSZ02      -0.0650460  0.0044247   -14.701  &lt; 2e-16 ***\nDESTIN_SZBDSZ03       0.1535219  0.0038934    39.432  &lt; 2e-16 ***\nDESTIN_SZBDSZ04       1.1610114  0.0031908   363.861  &lt; 2e-16 ***\nDESTIN_SZBDSZ05       0.5402216  0.0035351   152.817  &lt; 2e-16 ***\nDESTIN_SZBDSZ06       0.3405709  0.0038462    88.547  &lt; 2e-16 ***\nDESTIN_SZBDSZ07      -0.7850130  0.0077583  -101.184  &lt; 2e-16 ***\nDESTIN_SZBDSZ08      -1.5454694  0.0090502  -170.766  &lt; 2e-16 ***\nDESTIN_SZBKSZ01      -0.8865585  0.0056112  -157.997  &lt; 2e-16 ***\nDESTIN_SZBKSZ02      -0.0322555  0.0046131    -6.992 2.71e-12 ***\nDESTIN_SZBKSZ03      -0.3163073  0.0048345   -65.427  &lt; 2e-16 ***\nDESTIN_SZBKSZ04       0.2299458  0.0042654    53.910  &lt; 2e-16 ***\nDESTIN_SZBKSZ05      -0.5607967  0.0049507  -113.275  &lt; 2e-16 ***\nDESTIN_SZBKSZ06      -0.7635426  0.0055115  -138.536  &lt; 2e-16 ***\nDESTIN_SZBKSZ07       0.4333388  0.0036382   119.110  &lt; 2e-16 ***\nDESTIN_SZBKSZ08      -1.0067557  0.0062984  -159.844  &lt; 2e-16 ***\nDESTIN_SZBKSZ09      -0.2171145  0.0045109   -48.131  &lt; 2e-16 ***\nDESTIN_SZBLSZ01      -0.0916339  0.0058702   -15.610  &lt; 2e-16 ***\nDESTIN_SZBLSZ02       0.8721431  0.0057725   151.086  &lt; 2e-16 ***\nDESTIN_SZBLSZ03       1.7192914  0.0063042   272.722  &lt; 2e-16 ***\nDESTIN_SZBLSZ04       0.4513896  0.0103799    43.487  &lt; 2e-16 ***\nDESTIN_SZBMSZ01      -0.0938854  0.0040617   -23.115  &lt; 2e-16 ***\nDESTIN_SZBMSZ02      -0.4640402  0.0043367  -107.003  &lt; 2e-16 ***\nDESTIN_SZBMSZ03      -0.8431024  0.0052166  -161.619  &lt; 2e-16 ***\nDESTIN_SZBMSZ04      -0.5076804  0.0044859  -113.172  &lt; 2e-16 ***\nDESTIN_SZBMSZ05      -0.5560107  0.0053786  -103.375  &lt; 2e-16 ***\nDESTIN_SZBMSZ06      -1.6557020  0.0091469  -181.012  &lt; 2e-16 ***\nDESTIN_SZBMSZ07      -0.0433223  0.0039372   -11.003  &lt; 2e-16 ***\nDESTIN_SZBMSZ08      -1.0924453  0.0053523  -204.108  &lt; 2e-16 ***\nDESTIN_SZBMSZ09      -1.9925313  0.0084765  -235.065  &lt; 2e-16 ***\nDESTIN_SZBMSZ10      -1.6125983  0.0070600  -228.413  &lt; 2e-16 ***\nDESTIN_SZBMSZ11      -1.4951070  0.0065271  -229.062  &lt; 2e-16 ***\nDESTIN_SZBMSZ12      -1.0089277  0.0067882  -148.629  &lt; 2e-16 ***\nDESTIN_SZBMSZ13      -0.2564068  0.0043203   -59.349  &lt; 2e-16 ***\nDESTIN_SZBMSZ14      -1.0339214  0.0068113  -151.796  &lt; 2e-16 ***\nDESTIN_SZBMSZ15      -1.1402099  0.0061096  -186.625  &lt; 2e-16 ***\nDESTIN_SZBMSZ16      -1.4639092  0.0064083  -228.439  &lt; 2e-16 ***\nDESTIN_SZBMSZ17      -1.3756233  0.0075163  -183.019  &lt; 2e-16 ***\nDESTIN_SZBPSZ01      -0.4144672  0.0048362   -85.702  &lt; 2e-16 ***\nDESTIN_SZBPSZ02      -1.3855434  0.0077314  -179.210  &lt; 2e-16 ***\nDESTIN_SZBPSZ03      -1.0821948  0.0071960  -150.388  &lt; 2e-16 ***\nDESTIN_SZBPSZ04      -0.5978653  0.0053735  -111.263  &lt; 2e-16 ***\nDESTIN_SZBPSZ05       0.6144057  0.0035375   173.686  &lt; 2e-16 ***\nDESTIN_SZBPSZ06      -0.6599947  0.0065643  -100.543  &lt; 2e-16 ***\nDESTIN_SZBPSZ07      -0.3935038  0.0066280   -59.370  &lt; 2e-16 ***\nDESTIN_SZBSSZ01      -0.1330548  0.0040959   -32.485  &lt; 2e-16 ***\nDESTIN_SZBSSZ02      -0.6723597  0.0046826  -143.587  &lt; 2e-16 ***\nDESTIN_SZBSSZ03       0.2323470  0.0035879    64.759  &lt; 2e-16 ***\nDESTIN_SZBTSZ01       0.2201042  0.0037721    58.351  &lt; 2e-16 ***\nDESTIN_SZBTSZ02      -0.5616989  0.0056783   -98.919  &lt; 2e-16 ***\nDESTIN_SZBTSZ03      -0.1094260  0.0044112   -24.807  &lt; 2e-16 ***\nDESTIN_SZBTSZ04      -1.5480721  0.0088248  -175.424  &lt; 2e-16 ***\nDESTIN_SZBTSZ05      -0.6457278  0.0060380  -106.945  &lt; 2e-16 ***\nDESTIN_SZBTSZ06      -0.8461376  0.0055675  -151.979  &lt; 2e-16 ***\nDESTIN_SZBTSZ07      -1.8056009  0.0084486  -213.717  &lt; 2e-16 ***\nDESTIN_SZBTSZ08      -1.1684703  0.0073421  -159.147  &lt; 2e-16 ***\nDESTIN_SZCCSZ01      -0.5873222  0.0062887   -93.393  &lt; 2e-16 ***\nDESTIN_SZCHSZ01      -0.8919204  0.0076306  -116.887  &lt; 2e-16 ***\nDESTIN_SZCHSZ02       0.1715306  0.0047410    36.180  &lt; 2e-16 ***\nDESTIN_SZCHSZ03       1.8317483  0.0034465   531.484  &lt; 2e-16 ***\nDESTIN_SZCKSZ01      -0.1736070  0.0045215   -38.396  &lt; 2e-16 ***\nDESTIN_SZCKSZ02      -0.4057962  0.0048588   -83.517  &lt; 2e-16 ***\nDESTIN_SZCKSZ03       0.8039981  0.0035410   227.055  &lt; 2e-16 ***\nDESTIN_SZCKSZ04      -0.6234057  0.0056195  -110.937  &lt; 2e-16 ***\nDESTIN_SZCKSZ05      -0.2374672  0.0058197   -40.804  &lt; 2e-16 ***\nDESTIN_SZCKSZ06       0.6855188  0.0043127   158.955  &lt; 2e-16 ***\nDESTIN_SZCLSZ01       0.5971829  0.0042068   141.958  &lt; 2e-16 ***\nDESTIN_SZCLSZ02      -2.1086874  0.0116870  -180.431  &lt; 2e-16 ***\nDESTIN_SZCLSZ03      -0.9473942  0.0065915  -143.730  &lt; 2e-16 ***\nDESTIN_SZCLSZ04       0.1727454  0.0039508    43.724  &lt; 2e-16 ***\nDESTIN_SZCLSZ05      -0.9604930  0.0068922  -139.359  &lt; 2e-16 ***\nDESTIN_SZCLSZ06       0.1958679  0.0037619    52.066  &lt; 2e-16 ***\nDESTIN_SZCLSZ07      -0.5245235  0.0047575  -110.253  &lt; 2e-16 ***\nDESTIN_SZCLSZ08      -0.3842019  0.0052616   -73.020  &lt; 2e-16 ***\nDESTIN_SZCLSZ09       0.3507891  0.0056529    62.055  &lt; 2e-16 ***\nDESTIN_SZDTSZ01      -0.8139268  0.0048763  -166.915  &lt; 2e-16 ***\nDESTIN_SZDTSZ02      -0.8764834  0.0048218  -181.775  &lt; 2e-16 ***\nDESTIN_SZDTSZ03      -1.0713079  0.0056029  -191.205  &lt; 2e-16 ***\nDESTIN_SZDTSZ04      -1.1612049  0.0125653   -92.414  &lt; 2e-16 ***\nDESTIN_SZDTSZ05      -1.1554964  0.0088096  -131.164  &lt; 2e-16 ***\nDESTIN_SZDTSZ06      -0.9495244  0.0056955  -166.715  &lt; 2e-16 ***\nDESTIN_SZDTSZ07      -2.0195022  0.0209759   -96.277  &lt; 2e-16 ***\nDESTIN_SZDTSZ08      -0.5385311  0.0043871  -122.754  &lt; 2e-16 ***\nDESTIN_SZDTSZ09      -1.3557589  0.0096701  -140.201  &lt; 2e-16 ***\nDESTIN_SZDTSZ10      -1.5547723  0.0088951  -174.790  &lt; 2e-16 ***\nDESTIN_SZDTSZ11      -0.6096089  0.0047472  -128.414  &lt; 2e-16 ***\nDESTIN_SZDTSZ12      -2.5528352  0.0171936  -148.476  &lt; 2e-16 ***\nDESTIN_SZDTSZ13      -1.8700821  0.0097461  -191.880  &lt; 2e-16 ***\nDESTIN_SZGLSZ01       0.1395801  0.0045185    30.891  &lt; 2e-16 ***\nDESTIN_SZGLSZ02      -0.2215239  0.0041878   -52.897  &lt; 2e-16 ***\nDESTIN_SZGLSZ03       0.5305704  0.0035148   150.953  &lt; 2e-16 ***\nDESTIN_SZGLSZ04       0.4909619  0.0034415   142.658  &lt; 2e-16 ***\nDESTIN_SZGLSZ05       0.2789833  0.0035946    77.611  &lt; 2e-16 ***\nDESTIN_SZHGSZ01       0.4828098  0.0035262   136.921  &lt; 2e-16 ***\nDESTIN_SZHGSZ02      -0.4108850  0.0046526   -88.313  &lt; 2e-16 ***\nDESTIN_SZHGSZ03      -1.0120680  0.0057393  -176.340  &lt; 2e-16 ***\nDESTIN_SZHGSZ04      -0.1510585  0.0040498   -37.300  &lt; 2e-16 ***\nDESTIN_SZHGSZ05      -0.0317293  0.0040499    -7.834 4.71e-15 ***\nDESTIN_SZHGSZ06      -0.7387780  0.0050170  -147.255  &lt; 2e-16 ***\nDESTIN_SZHGSZ07       0.2848829  0.0037586    75.794  &lt; 2e-16 ***\nDESTIN_SZHGSZ08      -0.1747518  0.0042881   -40.753  &lt; 2e-16 ***\nDESTIN_SZHGSZ09       0.4955605  0.0043403   114.177  &lt; 2e-16 ***\nDESTIN_SZHGSZ10      -2.7988711  0.0247620  -113.031  &lt; 2e-16 ***\nDESTIN_SZJESZ01      -0.0758996  0.0045726   -16.599  &lt; 2e-16 ***\nDESTIN_SZJESZ02      -0.4300445  0.0047711   -90.135  &lt; 2e-16 ***\nDESTIN_SZJESZ03      -0.4320075  0.0050294   -85.897  &lt; 2e-16 ***\nDESTIN_SZJESZ04       0.1591352  0.0051327    31.004  &lt; 2e-16 ***\nDESTIN_SZJESZ05      -0.7026679  0.0079778   -88.078  &lt; 2e-16 ***\nDESTIN_SZJESZ06       0.6240016  0.0036527   170.832  &lt; 2e-16 ***\nDESTIN_SZJESZ07      -0.7797674  0.0065106  -119.769  &lt; 2e-16 ***\nDESTIN_SZJESZ08      -0.3112521  0.0065040   -47.856  &lt; 2e-16 ***\nDESTIN_SZJESZ09      -0.2554206  0.0049023   -52.102  &lt; 2e-16 ***\nDESTIN_SZJESZ10       0.8982130  0.0060479   148.517  &lt; 2e-16 ***\nDESTIN_SZJESZ11       1.1158030  0.0056855   196.254  &lt; 2e-16 ***\nDESTIN_SZJWSZ01      -0.1421579  0.0054897   -25.896  &lt; 2e-16 ***\nDESTIN_SZJWSZ02      -0.1998764  0.0047858   -41.764  &lt; 2e-16 ***\nDESTIN_SZJWSZ03       0.7305091  0.0036739   198.837  &lt; 2e-16 ***\nDESTIN_SZJWSZ04       1.1620904  0.0034094   340.844  &lt; 2e-16 ***\nDESTIN_SZJWSZ05       0.0798337  0.0051584    15.476  &lt; 2e-16 ***\nDESTIN_SZJWSZ06       0.6143926  0.0047591   129.099  &lt; 2e-16 ***\nDESTIN_SZJWSZ07      -0.6933967  0.0215336   -32.201  &lt; 2e-16 ***\nDESTIN_SZJWSZ08       0.5692668  0.0041424   137.425  &lt; 2e-16 ***\nDESTIN_SZJWSZ09       1.5977471  0.0031439   508.206  &lt; 2e-16 ***\nDESTIN_SZKLSZ01      -0.5100828  0.0044070  -115.744  &lt; 2e-16 ***\nDESTIN_SZKLSZ02      -0.7448952  0.0051360  -145.034  &lt; 2e-16 ***\nDESTIN_SZKLSZ03      -1.1356547  0.0054828  -207.131  &lt; 2e-16 ***\nDESTIN_SZKLSZ04      -1.5526978  0.0069498  -223.417  &lt; 2e-16 ***\nDESTIN_SZKLSZ05      -0.6954976  0.0061482  -113.122  &lt; 2e-16 ***\nDESTIN_SZKLSZ06      -0.9305524  0.0049534  -187.861  &lt; 2e-16 ***\nDESTIN_SZKLSZ07      -0.9602322  0.0054427  -176.425  &lt; 2e-16 ***\nDESTIN_SZKLSZ08      -0.0682538  0.0040067   -17.035  &lt; 2e-16 ***\nDESTIN_SZKLSZ09      -1.8633662  0.0074100  -251.467  &lt; 2e-16 ***\nDESTIN_SZLKSZ01      -1.4555600  0.0194246   -74.934  &lt; 2e-16 ***\nDESTIN_SZMDSZ01      -0.9205158  0.0151847   -60.621  &lt; 2e-16 ***\nDESTIN_SZMDSZ02      -0.8530309  0.0093758   -90.982  &lt; 2e-16 ***\nDESTIN_SZMDSZ03      -2.6279135  0.0214513  -122.506  &lt; 2e-16 ***\nDESTIN_SZMPSZ01      -0.9379614  0.0063215  -148.375  &lt; 2e-16 ***\nDESTIN_SZMPSZ02      -0.7981221  0.0053387  -149.498  &lt; 2e-16 ***\nDESTIN_SZMPSZ03      -0.1189503  0.0042521   -27.974  &lt; 2e-16 ***\nDESTIN_SZMSSZ01      -2.9742837  0.0754302   -39.431  &lt; 2e-16 ***\nDESTIN_SZMUSZ01      -1.0789767  0.0052588  -205.176  &lt; 2e-16 ***\nDESTIN_SZMUSZ02      -1.4883519  0.0081593  -182.412  &lt; 2e-16 ***\nDESTIN_SZMUSZ03      -1.0844740  0.0051780  -209.439  &lt; 2e-16 ***\nDESTIN_SZNTSZ01      -2.5081050  0.0218327  -114.878  &lt; 2e-16 ***\nDESTIN_SZNTSZ02      -1.8745053  0.0091064  -205.844  &lt; 2e-16 ***\nDESTIN_SZNTSZ03      -1.3526210  0.0071449  -189.314  &lt; 2e-16 ***\nDESTIN_SZNTSZ05      -1.5799884  0.0168031   -94.030  &lt; 2e-16 ***\nDESTIN_SZNTSZ06      -2.7007796  0.0268534  -100.575  &lt; 2e-16 ***\nDESTIN_SZNVSZ01      -0.2170594  0.0039180   -55.400  &lt; 2e-16 ***\nDESTIN_SZNVSZ02      -0.4885292  0.0045283  -107.883  &lt; 2e-16 ***\nDESTIN_SZNVSZ03      -0.4266774  0.0045732   -93.300  &lt; 2e-16 ***\nDESTIN_SZNVSZ04      -2.1083372  0.0096520  -218.435  &lt; 2e-16 ***\nDESTIN_SZNVSZ05      -1.6998039  0.0076754  -221.462  &lt; 2e-16 ***\nDESTIN_SZORSZ01      -1.8517320  0.0180727  -102.460  &lt; 2e-16 ***\nDESTIN_SZORSZ02      -0.1337264  0.0040315   -33.170  &lt; 2e-16 ***\nDESTIN_SZORSZ03      -0.8867178  0.0051682  -171.570  &lt; 2e-16 ***\nDESTIN_SZOTSZ01      -1.5251540  0.0066856  -228.125  &lt; 2e-16 ***\nDESTIN_SZOTSZ02      -0.8898234  0.0060551  -146.955  &lt; 2e-16 ***\nDESTIN_SZOTSZ03      -1.5830128  0.0066076  -239.575  &lt; 2e-16 ***\nDESTIN_SZOTSZ04      -1.6713218  0.0095654  -174.727  &lt; 2e-16 ***\nDESTIN_SZPGSZ01      -1.7557523  0.0139239  -126.096  &lt; 2e-16 ***\nDESTIN_SZPGSZ02      -0.6203081  0.0056497  -109.796  &lt; 2e-16 ***\nDESTIN_SZPGSZ03       0.5839537  0.0036165   161.467  &lt; 2e-16 ***\nDESTIN_SZPGSZ04       0.2932457  0.0039200    74.807  &lt; 2e-16 ***\nDESTIN_SZPGSZ05      -0.7680694  0.0064170  -119.692  &lt; 2e-16 ***\nDESTIN_SZPLSZ01       0.2996748  0.0055417    54.077  &lt; 2e-16 ***\nDESTIN_SZPLSZ02      -1.0304855  0.0105925   -97.285  &lt; 2e-16 ***\nDESTIN_SZPLSZ03       0.2810055  0.0079192    35.484  &lt; 2e-16 ***\nDESTIN_SZPLSZ04       0.0979554  0.0077745    12.600  &lt; 2e-16 ***\nDESTIN_SZPLSZ05      -0.2631702  0.0092023   -28.598  &lt; 2e-16 ***\nDESTIN_SZPNSZ01       1.3763953  0.0043673   315.160  &lt; 2e-16 ***\nDESTIN_SZPNSZ02       1.9495227  0.0056086   347.593  &lt; 2e-16 ***\nDESTIN_SZPNSZ03       1.2682898  0.0063574   199.498  &lt; 2e-16 ***\nDESTIN_SZPNSZ04       2.2043895  0.0062029   355.382  &lt; 2e-16 ***\nDESTIN_SZPNSZ05       1.4510981  0.0085470   169.779  &lt; 2e-16 ***\nDESTIN_SZPRSZ01      -0.5227217  0.0064447   -81.109  &lt; 2e-16 ***\nDESTIN_SZPRSZ02       0.0071364  0.0044295     1.611  0.10716    \nDESTIN_SZPRSZ03       0.8826983  0.0034383   256.728  &lt; 2e-16 ***\nDESTIN_SZPRSZ04      -0.6916099  0.0076043   -90.949  &lt; 2e-16 ***\nDESTIN_SZPRSZ05       0.0514085  0.0042404    12.123  &lt; 2e-16 ***\nDESTIN_SZPRSZ06       0.6308976  0.0043312   145.663  &lt; 2e-16 ***\nDESTIN_SZPRSZ07      -1.2823462  0.0101052  -126.900  &lt; 2e-16 ***\nDESTIN_SZPRSZ08      -0.6839480  0.0059022  -115.880  &lt; 2e-16 ***\nDESTIN_SZQTSZ01      -1.2525761  0.0081381  -153.915  &lt; 2e-16 ***\nDESTIN_SZQTSZ02      -1.5688066  0.0069717  -225.023  &lt; 2e-16 ***\nDESTIN_SZQTSZ03      -0.7788391  0.0057643  -135.115  &lt; 2e-16 ***\nDESTIN_SZQTSZ04      -1.0494929  0.0060113  -174.586  &lt; 2e-16 ***\nDESTIN_SZQTSZ05      -0.8787358  0.0052678  -166.812  &lt; 2e-16 ***\nDESTIN_SZQTSZ06      -1.1509624  0.0057286  -200.916  &lt; 2e-16 ***\nDESTIN_SZQTSZ07      -1.5545926  0.0092974  -167.208  &lt; 2e-16 ***\nDESTIN_SZQTSZ08       0.0925594  0.0041608    22.246  &lt; 2e-16 ***\nDESTIN_SZQTSZ09      -0.3361120  0.0050421   -66.661  &lt; 2e-16 ***\nDESTIN_SZQTSZ10      -0.3992278  0.0046792   -85.319  &lt; 2e-16 ***\nDESTIN_SZQTSZ11      -0.0812029  0.0049649   -16.355  &lt; 2e-16 ***\nDESTIN_SZQTSZ12      -0.4611852  0.0060190   -76.622  &lt; 2e-16 ***\nDESTIN_SZQTSZ13       0.1938269  0.0042970    45.107  &lt; 2e-16 ***\nDESTIN_SZQTSZ14      -0.1786807  0.0050797   -35.175  &lt; 2e-16 ***\nDESTIN_SZQTSZ15       0.1077121  0.0059041    18.244  &lt; 2e-16 ***\nDESTIN_SZRCSZ01      -1.1748182  0.0061019  -192.533  &lt; 2e-16 ***\nDESTIN_SZRCSZ02      -2.2155688  0.0150485  -147.228  &lt; 2e-16 ***\nDESTIN_SZRCSZ03      -1.1411216  0.0079271  -143.951  &lt; 2e-16 ***\nDESTIN_SZRCSZ04      -2.3802643  0.0110853  -214.723  &lt; 2e-16 ***\nDESTIN_SZRCSZ05      -2.4902964  0.0115138  -216.288  &lt; 2e-16 ***\nDESTIN_SZRCSZ06      -2.0403985  0.0131477  -155.190  &lt; 2e-16 ***\nDESTIN_SZRCSZ08      -2.2575983  0.0126788  -178.061  &lt; 2e-16 ***\nDESTIN_SZRCSZ09      -1.4314909  0.0099334  -144.109  &lt; 2e-16 ***\nDESTIN_SZRCSZ10      -1.2087170  0.0057812  -209.079  &lt; 2e-16 ***\nDESTIN_SZRVSZ01      -2.0913677  0.0094462  -221.399  &lt; 2e-16 ***\nDESTIN_SZRVSZ02      -2.2172184  0.0123002  -180.259  &lt; 2e-16 ***\nDESTIN_SZRVSZ03      -2.4430526  0.0109800  -222.500  &lt; 2e-16 ***\nDESTIN_SZRVSZ04      -2.1093568  0.0151723  -139.026  &lt; 2e-16 ***\nDESTIN_SZRVSZ05      -1.8205586  0.0113968  -159.743  &lt; 2e-16 ***\nDESTIN_SZSBSZ01       0.0341079  0.0051219     6.659 2.75e-11 ***\nDESTIN_SZSBSZ02      -0.9434174  0.0066889  -141.042  &lt; 2e-16 ***\nDESTIN_SZSBSZ03       0.7580848  0.0037726   200.946  &lt; 2e-16 ***\nDESTIN_SZSBSZ04       0.3681192  0.0045548    80.820  &lt; 2e-16 ***\nDESTIN_SZSBSZ05      -0.6636922  0.0062550  -106.105  &lt; 2e-16 ***\nDESTIN_SZSBSZ06      -2.3085673  0.0211679  -109.060  &lt; 2e-16 ***\nDESTIN_SZSBSZ07      -0.1535895  0.0132984   -11.549  &lt; 2e-16 ***\nDESTIN_SZSBSZ08       1.8331070  0.0042436   431.966  &lt; 2e-16 ***\nDESTIN_SZSBSZ09       1.1019346  0.0043139   255.436  &lt; 2e-16 ***\nDESTIN_SZSESZ02      -0.0331664  0.0041744    -7.945 1.94e-15 ***\nDESTIN_SZSESZ03       0.7795130  0.0033616   231.891  &lt; 2e-16 ***\nDESTIN_SZSESZ04      -0.5233151  0.0049127  -106.522  &lt; 2e-16 ***\nDESTIN_SZSESZ05      -0.0680997  0.0041639   -16.355  &lt; 2e-16 ***\nDESTIN_SZSESZ06      -0.4259112  0.0050952   -83.591  &lt; 2e-16 ***\nDESTIN_SZSESZ07      -2.7408513  0.0200848  -136.464  &lt; 2e-16 ***\nDESTIN_SZSGSZ01      -0.2220681  0.0050154   -44.277  &lt; 2e-16 ***\nDESTIN_SZSGSZ02       0.1571425  0.0045272    34.711  &lt; 2e-16 ***\nDESTIN_SZSGSZ03      -0.2261526  0.0042946   -52.660  &lt; 2e-16 ***\nDESTIN_SZSGSZ04      -0.2248776  0.0043414   -51.799  &lt; 2e-16 ***\nDESTIN_SZSGSZ05      -1.8169721  0.0076843  -236.454  &lt; 2e-16 ***\nDESTIN_SZSGSZ06       0.5056863  0.0034431   146.868  &lt; 2e-16 ***\nDESTIN_SZSGSZ07      -0.3125875  0.0044256   -70.632  &lt; 2e-16 ***\nDESTIN_SZSISZ01      -1.4108241  0.0200736   -70.282  &lt; 2e-16 ***\nDESTIN_SZSKSZ01       0.1519040  0.0058959    25.764  &lt; 2e-16 ***\nDESTIN_SZSKSZ02       0.1206667  0.0059173    20.392  &lt; 2e-16 ***\nDESTIN_SZSKSZ03       0.2271475  0.0050553    44.933  &lt; 2e-16 ***\nDESTIN_SZSKSZ04      -0.3226828  0.0122955   -26.244  &lt; 2e-16 ***\nDESTIN_SZSKSZ05       0.3828177  0.0093083    41.127  &lt; 2e-16 ***\nDESTIN_SZSLSZ01      -0.1437078  0.0066352   -21.658  &lt; 2e-16 ***\nDESTIN_SZSLSZ04      -0.3148252  0.0055407   -56.821  &lt; 2e-16 ***\nDESTIN_SZSRSZ01      -1.5337059  0.0067560  -227.014  &lt; 2e-16 ***\nDESTIN_SZSRSZ02      -1.6868178  0.0084825  -198.859  &lt; 2e-16 ***\nDESTIN_SZSRSZ03      -1.6154544  0.0077337  -208.886  &lt; 2e-16 ***\nDESTIN_SZSVSZ01      -3.2208870  0.0556290   -57.899  &lt; 2e-16 ***\nDESTIN_SZTHSZ01      -2.6968053  0.0331414   -81.373  &lt; 2e-16 ***\nDESTIN_SZTHSZ03      -1.5397800  0.0185714   -82.911  &lt; 2e-16 ***\nDESTIN_SZTHSZ04      -2.1028004  0.0189657  -110.874  &lt; 2e-16 ***\nDESTIN_SZTHSZ06      -0.8463339  0.0105837   -79.966  &lt; 2e-16 ***\nDESTIN_SZTMSZ01       0.1408655  0.0045968    30.644  &lt; 2e-16 ***\nDESTIN_SZTMSZ02       1.7840540  0.0030328   588.257  &lt; 2e-16 ***\nDESTIN_SZTMSZ03       0.8761093  0.0034123   256.753  &lt; 2e-16 ***\nDESTIN_SZTMSZ04       0.9279782  0.0034956   265.467  &lt; 2e-16 ***\nDESTIN_SZTMSZ05       0.7251426  0.0043728   165.831  &lt; 2e-16 ***\nDESTIN_SZTNSZ01      -0.6461319  0.0048962  -131.967  &lt; 2e-16 ***\nDESTIN_SZTNSZ02      -1.4175346  0.0063417  -223.527  &lt; 2e-16 ***\nDESTIN_SZTNSZ03      -1.4387860  0.0078047  -184.348  &lt; 2e-16 ***\nDESTIN_SZTNSZ04      -0.9596368  0.0058085  -165.212  &lt; 2e-16 ***\nDESTIN_SZTPSZ01      -0.4308093  0.0047748   -90.225  &lt; 2e-16 ***\nDESTIN_SZTPSZ02       0.2298095  0.0034491    66.629  &lt; 2e-16 ***\nDESTIN_SZTPSZ03      -0.3633392  0.0048621   -74.728  &lt; 2e-16 ***\nDESTIN_SZTPSZ04      -1.5435318  0.0068323  -225.916  &lt; 2e-16 ***\nDESTIN_SZTPSZ05      -0.7878038  0.0051291  -153.596  &lt; 2e-16 ***\nDESTIN_SZTPSZ06      -0.2302491  0.0059194   -38.898  &lt; 2e-16 ***\nDESTIN_SZTPSZ07      -1.6384615  0.0093336  -175.544  &lt; 2e-16 ***\nDESTIN_SZTPSZ08      -1.3106964  0.0072787  -180.072  &lt; 2e-16 ***\nDESTIN_SZTPSZ09      -0.5340740  0.0053383  -100.046  &lt; 2e-16 ***\nDESTIN_SZTPSZ10      -0.6923468  0.0067313  -102.855  &lt; 2e-16 ***\nDESTIN_SZTPSZ11      -0.3157414  0.0044419   -71.083  &lt; 2e-16 ***\nDESTIN_SZTPSZ12      -0.7150679  0.0054086  -132.209  &lt; 2e-16 ***\nDESTIN_SZTSSZ01      -0.1925873  0.0187108   -10.293  &lt; 2e-16 ***\nDESTIN_SZTSSZ02       1.2687738  0.0077142   164.473  &lt; 2e-16 ***\nDESTIN_SZTSSZ03       2.0454651  0.0055935   365.683  &lt; 2e-16 ***\nDESTIN_SZTSSZ04       1.9140305  0.0058153   329.139  &lt; 2e-16 ***\nDESTIN_SZTSSZ05       2.0435564  0.0064391   317.368  &lt; 2e-16 ***\nDESTIN_SZTSSZ06       0.9954141  0.0109280    91.088  &lt; 2e-16 ***\nDESTIN_SZWCSZ01       1.6560834  0.0040593   407.975  &lt; 2e-16 ***\nDESTIN_SZWCSZ02      -0.1341972  0.0102862   -13.046  &lt; 2e-16 ***\nDESTIN_SZWCSZ03      -1.5152439  0.0236971   -63.942  &lt; 2e-16 ***\nDESTIN_SZWDSZ01       1.6938261  0.0032123   527.292  &lt; 2e-16 ***\nDESTIN_SZWDSZ02      -0.1398727  0.0050461   -27.719  &lt; 2e-16 ***\nDESTIN_SZWDSZ03       1.3486310  0.0033673   400.508  &lt; 2e-16 ***\nDESTIN_SZWDSZ04       0.2678174  0.0048596    55.111  &lt; 2e-16 ***\nDESTIN_SZWDSZ05       0.3375247  0.0045944    73.464  &lt; 2e-16 ***\nDESTIN_SZWDSZ06       0.6686614  0.0036977   180.829  &lt; 2e-16 ***\nDESTIN_SZWDSZ07       0.7000912  0.0057454   121.853  &lt; 2e-16 ***\nDESTIN_SZWDSZ08       0.9491777  0.0052819   179.703  &lt; 2e-16 ***\nDESTIN_SZWDSZ09       0.5929994  0.0042996   137.919  &lt; 2e-16 ***\nDESTIN_SZYSSZ01       1.3385552  0.0034421   388.881  &lt; 2e-16 ***\nDESTIN_SZYSSZ02       0.3976804  0.0043811    90.771  &lt; 2e-16 ***\nDESTIN_SZYSSZ03      -0.0163261  0.0047699    -3.423  0.00062 ***\nDESTIN_SZYSSZ04       0.1898015  0.0043696    43.437  &lt; 2e-16 ***\nDESTIN_SZYSSZ05      -1.4769782  0.0091390  -161.613  &lt; 2e-16 ***\nDESTIN_SZYSSZ06      -1.1722255  0.0071348  -164.297  &lt; 2e-16 ***\nDESTIN_SZYSSZ07      -0.7645400  0.0086822   -88.059  &lt; 2e-16 ***\nDESTIN_SZYSSZ08       0.7420003  0.0035755   207.525  &lt; 2e-16 ***\nDESTIN_SZYSSZ09       0.5275341  0.0036041   146.370  &lt; 2e-16 ***\nlog(ORIGIN_AGE25_64)  0.2386409  0.0001137  2098.153  &lt; 2e-16 ***\nlog(dist)            -0.6978605  0.0001106 -6307.089  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 88883132  on 20594  degrees of freedom\nResidual deviance: 37371399  on 20283  degrees of freedom\nAIC: 37501128\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\n\nCode\nCalcRSquared(decSIM$data$TRIPS, decSIM$fitted.values)\n\n\n[1] 0.493885"
  },
  {
    "objectID": "in-class/ice3.html#doubly-constrained",
    "href": "in-class/ice3.html#doubly-constrained",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.8 Doubly constrained",
    "text": "6.8 Doubly constrained\nIn this section, we will fit a doubly constrained SIM by using the code chunk below.\n\n\nCode\ndbcSIM &lt;- glm(formula = TRIPS ~ \n                ORIGIN_SZ + \n                DESTIN_SZ + \n                log(dist),\n              family = poisson(link = \"log\"),\n              data = SIM_data,\n              na.action = na.exclude)\nsummary(dbcSIM)\n\n\n\nCall:\nglm(formula = TRIPS ~ ORIGIN_SZ + DESTIN_SZ + log(dist), family = poisson(link = \"log\"), \n    data = SIM_data, na.action = na.exclude)\n\nCoefficients:\n                  Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)     12.4969974  0.0040560  3081.143  &lt; 2e-16 ***\nORIGIN_SZAMSZ02  1.0585352  0.0040651   260.394  &lt; 2e-16 ***\nORIGIN_SZAMSZ03  0.6135064  0.0041129   149.165  &lt; 2e-16 ***\nORIGIN_SZAMSZ04  0.2234400  0.0045742    48.848  &lt; 2e-16 ***\nORIGIN_SZAMSZ05  0.0805773  0.0052347    15.393  &lt; 2e-16 ***\nORIGIN_SZAMSZ06  0.6097174  0.0047523   128.298  &lt; 2e-16 ***\nORIGIN_SZAMSZ07 -0.9071313  0.0082206  -110.349  &lt; 2e-16 ***\nORIGIN_SZAMSZ08 -0.7119432  0.0076480   -93.089  &lt; 2e-16 ***\nORIGIN_SZAMSZ09  0.4215134  0.0049866    84.529  &lt; 2e-16 ***\nORIGIN_SZAMSZ10  0.1528793  0.0046441    32.919  &lt; 2e-16 ***\nORIGIN_SZAMSZ11 -1.5725619  0.0100603  -156.313  &lt; 2e-16 ***\nORIGIN_SZAMSZ12 -1.4789510  0.0096129  -153.851  &lt; 2e-16 ***\nORIGIN_SZBDSZ01  0.8347089  0.0040177   207.758  &lt; 2e-16 ***\nORIGIN_SZBDSZ02  0.4469370  0.0046180    96.782  &lt; 2e-16 ***\nORIGIN_SZBDSZ03  0.8343885  0.0041582   200.662  &lt; 2e-16 ***\nORIGIN_SZBDSZ04  1.4640644  0.0036149   405.008  &lt; 2e-16 ***\nORIGIN_SZBDSZ05  0.5923638  0.0040717   145.483  &lt; 2e-16 ***\nORIGIN_SZBDSZ06  0.8072327  0.0041885   192.727  &lt; 2e-16 ***\nORIGIN_SZBDSZ07 -0.6448177  0.0070077   -92.016  &lt; 2e-16 ***\nORIGIN_SZBDSZ08 -0.4406728  0.0065497   -67.281  &lt; 2e-16 ***\nORIGIN_SZBKSZ01 -0.0658852  0.0056722   -11.615  &lt; 2e-16 ***\nORIGIN_SZBKSZ02  0.6191879  0.0047239   131.075  &lt; 2e-16 ***\nORIGIN_SZBKSZ03  1.0465666  0.0044145   237.072  &lt; 2e-16 ***\nORIGIN_SZBKSZ04 -0.0295930  0.0053939    -5.486 4.10e-08 ***\nORIGIN_SZBKSZ05  0.2000655  0.0050727    39.440  &lt; 2e-16 ***\nORIGIN_SZBKSZ06  0.3291624  0.0053213    61.857  &lt; 2e-16 ***\nORIGIN_SZBKSZ07  0.8013047  0.0041211   194.440  &lt; 2e-16 ***\nORIGIN_SZBKSZ08  0.3492390  0.0047076    74.187  &lt; 2e-16 ***\nORIGIN_SZBKSZ09  0.1382536  0.0050302    27.485  &lt; 2e-16 ***\nORIGIN_SZBLSZ01 -1.7064146  0.0107886  -158.168  &lt; 2e-16 ***\nORIGIN_SZBLSZ02 -2.7844825  0.0160509  -173.478  &lt; 2e-16 ***\nORIGIN_SZBLSZ03 -5.0982841  0.0360710  -141.340  &lt; 2e-16 ***\nORIGIN_SZBLSZ04 -2.7782971  0.0197491  -140.680  &lt; 2e-16 ***\nORIGIN_SZBMSZ01  0.1189019  0.0045203    26.304  &lt; 2e-16 ***\nORIGIN_SZBMSZ02 -0.9645711  0.0062329  -154.756  &lt; 2e-16 ***\nORIGIN_SZBMSZ03 -0.1832371  0.0051937   -35.281  &lt; 2e-16 ***\nORIGIN_SZBMSZ04  0.2762267  0.0045627    60.540  &lt; 2e-16 ***\nORIGIN_SZBMSZ05 -1.0171637  0.0067988  -149.608  &lt; 2e-16 ***\nORIGIN_SZBMSZ06 -1.3103122  0.0108482  -120.786  &lt; 2e-16 ***\nORIGIN_SZBMSZ07 -0.3034128  0.0050059   -60.612  &lt; 2e-16 ***\nORIGIN_SZBMSZ08 -0.1440184  0.0049756   -28.945  &lt; 2e-16 ***\nORIGIN_SZBMSZ09 -0.7416821  0.0064917  -114.250  &lt; 2e-16 ***\nORIGIN_SZBMSZ10 -0.9403180  0.0072095  -130.428  &lt; 2e-16 ***\nORIGIN_SZBMSZ11 -0.3870364  0.0057654   -67.131  &lt; 2e-16 ***\nORIGIN_SZBMSZ12 -0.6539074  0.0078371   -83.438  &lt; 2e-16 ***\nORIGIN_SZBMSZ13  0.0637862  0.0049636    12.851  &lt; 2e-16 ***\nORIGIN_SZBMSZ14 -0.1466269  0.0058604   -25.020  &lt; 2e-16 ***\nORIGIN_SZBMSZ15  0.1335255  0.0053046    25.172  &lt; 2e-16 ***\nORIGIN_SZBMSZ16 -0.9840092  0.0067507  -145.765  &lt; 2e-16 ***\nORIGIN_SZBMSZ17 -1.3928312  0.0100778  -138.207  &lt; 2e-16 ***\nORIGIN_SZBPSZ01  0.5543538  0.0049891   111.113  &lt; 2e-16 ***\nORIGIN_SZBPSZ02  0.8631047  0.0055229   156.277  &lt; 2e-16 ***\nORIGIN_SZBPSZ03  1.0974914  0.0051871   211.580  &lt; 2e-16 ***\nORIGIN_SZBPSZ04  0.8279752  0.0044952   184.190  &lt; 2e-16 ***\nORIGIN_SZBPSZ05  0.6829984  0.0041756   163.567  &lt; 2e-16 ***\nORIGIN_SZBPSZ06 -0.8675522  0.0075597  -114.761  &lt; 2e-16 ***\nORIGIN_SZBPSZ07 -0.6910822  0.0074107   -93.255  &lt; 2e-16 ***\nORIGIN_SZBSSZ01  0.0379090  0.0048734     7.779 7.33e-15 ***\nORIGIN_SZBSSZ02  0.3650074  0.0044337    82.326  &lt; 2e-16 ***\nORIGIN_SZBSSZ03  0.2151802  0.0043036    50.000  &lt; 2e-16 ***\nORIGIN_SZBTSZ01  0.0193421  0.0047842     4.043 5.28e-05 ***\nORIGIN_SZBTSZ02 -0.8627500  0.0068646  -125.682  &lt; 2e-16 ***\nORIGIN_SZBTSZ03 -0.1632234  0.0052269   -31.227  &lt; 2e-16 ***\nORIGIN_SZBTSZ04 -0.5694261  0.0090629   -62.830  &lt; 2e-16 ***\nORIGIN_SZBTSZ05 -1.4629727  0.0097759  -149.652  &lt; 2e-16 ***\nORIGIN_SZBTSZ06 -0.6595061  0.0067083   -98.312  &lt; 2e-16 ***\nORIGIN_SZBTSZ07 -1.6934731  0.0104883  -161.463  &lt; 2e-16 ***\nORIGIN_SZBTSZ08 -1.0536365  0.0080677  -130.599  &lt; 2e-16 ***\nORIGIN_SZCCSZ01 -1.5992805  0.0119339  -134.012  &lt; 2e-16 ***\nORIGIN_SZCHSZ01 -1.1701468  0.0100471  -116.467  &lt; 2e-16 ***\nORIGIN_SZCHSZ02 -0.7770700  0.0070575  -110.105  &lt; 2e-16 ***\nORIGIN_SZCHSZ03 -0.6149688  0.0054235  -113.390  &lt; 2e-16 ***\nORIGIN_SZCKSZ01  0.5649842  0.0045198   125.002  &lt; 2e-16 ***\nORIGIN_SZCKSZ02  1.2687266  0.0046708   271.632  &lt; 2e-16 ***\nORIGIN_SZCKSZ03  0.9259840  0.0042289   218.968  &lt; 2e-16 ***\nORIGIN_SZCKSZ04  1.8273092  0.0044373   411.810  &lt; 2e-16 ***\nORIGIN_SZCKSZ05  1.6304834  0.0054119   301.276  &lt; 2e-16 ***\nORIGIN_SZCKSZ06  1.1141202  0.0060601   183.846  &lt; 2e-16 ***\nORIGIN_SZCLSZ01 -0.5063730  0.0062711   -80.747  &lt; 2e-16 ***\nORIGIN_SZCLSZ02 -1.2071079  0.0112862  -106.954  &lt; 2e-16 ***\nORIGIN_SZCLSZ03 -0.5135109  0.0065376   -78.547  &lt; 2e-16 ***\nORIGIN_SZCLSZ04  0.7781677  0.0041424   187.855  &lt; 2e-16 ***\nORIGIN_SZCLSZ05 -1.6265795  0.0114806  -141.681  &lt; 2e-16 ***\nORIGIN_SZCLSZ06  0.9038801  0.0038966   231.966  &lt; 2e-16 ***\nORIGIN_SZCLSZ07 -0.0696302  0.0049005   -14.209  &lt; 2e-16 ***\nORIGIN_SZCLSZ08  0.2472209  0.0056402    43.832  &lt; 2e-16 ***\nORIGIN_SZCLSZ09 -2.1290439  0.0145332  -146.495  &lt; 2e-16 ***\nORIGIN_SZDTSZ01 -1.4448077  0.0079621  -181.461  &lt; 2e-16 ***\nORIGIN_SZDTSZ02 -1.3905811  0.0074516  -186.616  &lt; 2e-16 ***\nORIGIN_SZDTSZ03 -2.4388315  0.0135161  -180.440  &lt; 2e-16 ***\nORIGIN_SZDTSZ04 -4.6567555  0.1768256   -26.335  &lt; 2e-16 ***\nORIGIN_SZDTSZ05 -2.8937655  0.0249101  -116.168  &lt; 2e-16 ***\nORIGIN_SZDTSZ06 -2.7736191  0.0184754  -150.125  &lt; 2e-16 ***\nORIGIN_SZDTSZ07 -1.5431077  0.0235495   -65.526  &lt; 2e-16 ***\nORIGIN_SZDTSZ08 -2.3597869  0.0120595  -195.678  &lt; 2e-16 ***\nORIGIN_SZDTSZ09 -2.6807399  0.0239658  -111.857  &lt; 2e-16 ***\nORIGIN_SZDTSZ10 -2.0497135  0.0127305  -161.008  &lt; 2e-16 ***\nORIGIN_SZDTSZ11 -2.0960362  0.0125222  -167.385  &lt; 2e-16 ***\nORIGIN_SZDTSZ12 -3.0478200  0.0258594  -117.861  &lt; 2e-16 ***\nORIGIN_SZDTSZ13 -2.0650275  0.0138674  -148.913  &lt; 2e-16 ***\nORIGIN_SZGLSZ01 -1.3667829  0.0078027  -175.168  &lt; 2e-16 ***\nORIGIN_SZGLSZ02  0.2837204  0.0044427    63.863  &lt; 2e-16 ***\nORIGIN_SZGLSZ03  0.0617651  0.0044254    13.957  &lt; 2e-16 ***\nORIGIN_SZGLSZ04  0.9877879  0.0037691   262.076  &lt; 2e-16 ***\nORIGIN_SZGLSZ05  0.6022436  0.0039570   152.196  &lt; 2e-16 ***\nORIGIN_SZHGSZ01  0.1991867  0.0043549    45.739  &lt; 2e-16 ***\nORIGIN_SZHGSZ02  0.6822466  0.0042133   161.929  &lt; 2e-16 ***\nORIGIN_SZHGSZ03  0.5240765  0.0045300   115.689  &lt; 2e-16 ***\nORIGIN_SZHGSZ04  1.0093933  0.0039061   258.414  &lt; 2e-16 ***\nORIGIN_SZHGSZ05  1.3344098  0.0038616   345.556  &lt; 2e-16 ***\nORIGIN_SZHGSZ06  0.1114608  0.0048345    23.055  &lt; 2e-16 ***\nORIGIN_SZHGSZ07  0.5728434  0.0041369   138.472  &lt; 2e-16 ***\nORIGIN_SZHGSZ08  0.1603633  0.0047329    33.883  &lt; 2e-16 ***\nORIGIN_SZHGSZ09 -0.6404905  0.0061647  -103.897  &lt; 2e-16 ***\nORIGIN_SZHGSZ10 -3.2186440  0.0407330   -79.018  &lt; 2e-16 ***\nORIGIN_SZJESZ01  0.4865136  0.0045985   105.799  &lt; 2e-16 ***\nORIGIN_SZJESZ02  0.3896517  0.0045631    85.392  &lt; 2e-16 ***\nORIGIN_SZJESZ03  0.3699308  0.0048219    76.719  &lt; 2e-16 ***\nORIGIN_SZJESZ04 -0.9600960  0.0074627  -128.653  &lt; 2e-16 ***\nORIGIN_SZJESZ05 -2.0530997  0.0125837  -163.155  &lt; 2e-16 ***\nORIGIN_SZJESZ06  0.2250878  0.0044617    50.448  &lt; 2e-16 ***\nORIGIN_SZJESZ07 -1.6329910  0.0098352  -166.036  &lt; 2e-16 ***\nORIGIN_SZJESZ08 -0.8496068  0.0087262   -97.363  &lt; 2e-16 ***\nORIGIN_SZJESZ09  0.5250890  0.0045997   114.157  &lt; 2e-16 ***\nORIGIN_SZJESZ10 -2.6979788  0.0178824  -150.874  &lt; 2e-16 ***\nORIGIN_SZJESZ11 -2.9343236  0.0181710  -161.484  &lt; 2e-16 ***\nORIGIN_SZJWSZ01  0.5050356  0.0059817    84.429  &lt; 2e-16 ***\nORIGIN_SZJWSZ02  1.0284036  0.0042065   244.480  &lt; 2e-16 ***\nORIGIN_SZJWSZ03  1.1767024  0.0040388   291.349  &lt; 2e-16 ***\nORIGIN_SZJWSZ04  0.9879552  0.0041159   240.034  &lt; 2e-16 ***\nORIGIN_SZJWSZ05 -1.7689426  0.0112643  -157.040  &lt; 2e-16 ***\nORIGIN_SZJWSZ06 -1.1128041  0.0089465  -124.384  &lt; 2e-16 ***\nORIGIN_SZJWSZ07 -1.8271393  0.0196741   -92.870  &lt; 2e-16 ***\nORIGIN_SZJWSZ08  2.0485221  0.0040451   506.417  &lt; 2e-16 ***\nORIGIN_SZJWSZ09  1.4092915  0.0037779   373.039  &lt; 2e-16 ***\nORIGIN_SZKLSZ01  0.3013119  0.0043140    69.844  &lt; 2e-16 ***\nORIGIN_SZKLSZ02 -0.2604935  0.0053520   -48.672  &lt; 2e-16 ***\nORIGIN_SZKLSZ03 -0.3381835  0.0054299   -62.281  &lt; 2e-16 ***\nORIGIN_SZKLSZ04 -1.3123255  0.0075688  -173.386  &lt; 2e-16 ***\nORIGIN_SZKLSZ05 -0.2874114  0.0064393   -44.634  &lt; 2e-16 ***\nORIGIN_SZKLSZ06 -0.3292034  0.0050852   -64.738  &lt; 2e-16 ***\nORIGIN_SZKLSZ07 -0.6745380  0.0066048  -102.128  &lt; 2e-16 ***\nORIGIN_SZKLSZ08 -0.7463159  0.0058127  -128.393  &lt; 2e-16 ***\nORIGIN_SZKLSZ09 -1.2047347  0.0072276  -166.686  &lt; 2e-16 ***\nORIGIN_SZLKSZ01 -2.4757562  0.0330011   -75.020  &lt; 2e-16 ***\nORIGIN_SZMDSZ01 -1.6719701  0.0233312   -71.662  &lt; 2e-16 ***\nORIGIN_SZMDSZ02 -0.9907626  0.0100552   -98.532  &lt; 2e-16 ***\nORIGIN_SZMDSZ03 -1.3852942  0.0145185   -95.416  &lt; 2e-16 ***\nORIGIN_SZMPSZ01 -0.6401960  0.0064785   -98.818  &lt; 2e-16 ***\nORIGIN_SZMPSZ02 -0.4100916  0.0057738   -71.026  &lt; 2e-16 ***\nORIGIN_SZMPSZ03  0.4045439  0.0043620    92.742  &lt; 2e-16 ***\nORIGIN_SZMSSZ01 -4.6281771  0.2589989   -17.869  &lt; 2e-16 ***\nORIGIN_SZMUSZ01 -0.9259692  0.0063669  -145.435  &lt; 2e-16 ***\nORIGIN_SZMUSZ02 -2.9035388  0.0181864  -159.655  &lt; 2e-16 ***\nORIGIN_SZMUSZ03 -1.5266527  0.0075187  -203.048  &lt; 2e-16 ***\nORIGIN_SZNTSZ01 -2.4591778  0.0264981   -92.806  &lt; 2e-16 ***\nORIGIN_SZNTSZ02 -2.2829191  0.0153859  -148.377  &lt; 2e-16 ***\nORIGIN_SZNTSZ03 -0.6895668  0.0069140   -99.734  &lt; 2e-16 ***\nORIGIN_SZNTSZ05 -2.6608966  0.0381505   -69.747  &lt; 2e-16 ***\nORIGIN_SZNTSZ06 -2.9170745  0.0418365   -69.726  &lt; 2e-16 ***\nORIGIN_SZNVSZ01  0.8294000  0.0039285   211.125  &lt; 2e-16 ***\nORIGIN_SZNVSZ02 -0.3623933  0.0054461   -66.542  &lt; 2e-16 ***\nORIGIN_SZNVSZ03 -0.9534548  0.0065276  -146.065  &lt; 2e-16 ***\nORIGIN_SZNVSZ04 -1.1185507  0.0079621  -140.484  &lt; 2e-16 ***\nORIGIN_SZNVSZ05 -2.3846251  0.0144101  -165.483  &lt; 2e-16 ***\nORIGIN_SZORSZ01 -3.0416618  0.0363234   -83.738  &lt; 2e-16 ***\nORIGIN_SZORSZ02 -1.1396769  0.0065822  -173.146  &lt; 2e-16 ***\nORIGIN_SZORSZ03 -1.4183029  0.0075866  -186.948  &lt; 2e-16 ***\nORIGIN_SZOTSZ01 -1.4248909  0.0082256  -173.227  &lt; 2e-16 ***\nORIGIN_SZOTSZ02 -1.6613037  0.0095479  -173.997  &lt; 2e-16 ***\nORIGIN_SZOTSZ03 -0.4208618  0.0058305   -72.182  &lt; 2e-16 ***\nORIGIN_SZOTSZ04 -0.4992767  0.0094839   -52.645  &lt; 2e-16 ***\nORIGIN_SZPGSZ01  0.7068700  0.0114505    61.733  &lt; 2e-16 ***\nORIGIN_SZPGSZ02 -0.2125532  0.0060915   -34.894  &lt; 2e-16 ***\nORIGIN_SZPGSZ03  1.0452900  0.0040272   259.556  &lt; 2e-16 ***\nORIGIN_SZPGSZ04  1.1928688  0.0040335   295.741  &lt; 2e-16 ***\nORIGIN_SZPGSZ05  0.6360577  0.0050326   126.388  &lt; 2e-16 ***\nORIGIN_SZPLSZ01 -0.7134222  0.0086869   -82.126  &lt; 2e-16 ***\nORIGIN_SZPLSZ02 -1.1549832  0.0121921   -94.732  &lt; 2e-16 ***\nORIGIN_SZPLSZ03 -3.4626403  0.0341188  -101.488  &lt; 2e-16 ***\nORIGIN_SZPLSZ04 -3.3319503  0.0291243  -114.405  &lt; 2e-16 ***\nORIGIN_SZPLSZ05 -2.2494482  0.0180739  -124.458  &lt; 2e-16 ***\nORIGIN_SZPNSZ01  0.9408740  0.0049059   191.784  &lt; 2e-16 ***\nORIGIN_SZPNSZ02 -1.8458038  0.0112962  -163.400  &lt; 2e-16 ***\nORIGIN_SZPNSZ03 -2.9084875  0.0180972  -160.715  &lt; 2e-16 ***\nORIGIN_SZPNSZ04 -4.7294338  0.0253115  -186.849  &lt; 2e-16 ***\nORIGIN_SZPNSZ05 -3.6917514  0.0221409  -166.739  &lt; 2e-16 ***\nORIGIN_SZPRSZ01 -0.5249244  0.0098223   -53.442  &lt; 2e-16 ***\nORIGIN_SZPRSZ02  1.0782251  0.0041892   257.385  &lt; 2e-16 ***\nORIGIN_SZPRSZ03  0.4979912  0.0042288   117.761  &lt; 2e-16 ***\nORIGIN_SZPRSZ04 -0.2698254  0.0065625   -41.116  &lt; 2e-16 ***\nORIGIN_SZPRSZ05  1.1813902  0.0040044   295.020  &lt; 2e-16 ***\nORIGIN_SZPRSZ06 -0.8899822  0.0072810  -122.234  &lt; 2e-16 ***\nORIGIN_SZPRSZ07 -2.5601915  0.0178807  -143.182  &lt; 2e-16 ***\nORIGIN_SZPRSZ08  0.0891621  0.0054741    16.288  &lt; 2e-16 ***\nORIGIN_SZQTSZ01  0.1053491  0.0059887    17.591  &lt; 2e-16 ***\nORIGIN_SZQTSZ02 -0.4509932  0.0056347   -80.038  &lt; 2e-16 ***\nORIGIN_SZQTSZ03  0.1074403  0.0050690    21.195  &lt; 2e-16 ***\nORIGIN_SZQTSZ04 -0.9488308  0.0068053  -139.425  &lt; 2e-16 ***\nORIGIN_SZQTSZ05  0.0816099  0.0051045    15.988  &lt; 2e-16 ***\nORIGIN_SZQTSZ06 -0.3183846  0.0058467   -54.455  &lt; 2e-16 ***\nORIGIN_SZQTSZ07 -1.2162553  0.0083632  -145.430  &lt; 2e-16 ***\nORIGIN_SZQTSZ08 -0.2116394  0.0052931   -39.984  &lt; 2e-16 ***\nORIGIN_SZQTSZ09 -0.4600715  0.0059520   -77.297  &lt; 2e-16 ***\nORIGIN_SZQTSZ10 -0.3870119  0.0059269   -65.297  &lt; 2e-16 ***\nORIGIN_SZQTSZ11 -1.5551482  0.0091487  -169.986  &lt; 2e-16 ***\nORIGIN_SZQTSZ12 -1.1249732  0.0087131  -129.112  &lt; 2e-16 ***\nORIGIN_SZQTSZ13 -0.3368401  0.0055854   -60.307  &lt; 2e-16 ***\nORIGIN_SZQTSZ14 -1.4603472  0.0084380  -173.068  &lt; 2e-16 ***\nORIGIN_SZQTSZ15 -1.0770799  0.0095415  -112.884  &lt; 2e-16 ***\nORIGIN_SZRCSZ01 -0.3990011  0.0059609   -66.936  &lt; 2e-16 ***\nORIGIN_SZRCSZ02 -1.7209712  0.0157109  -109.540  &lt; 2e-16 ***\nORIGIN_SZRCSZ03 -0.9157002  0.0079829  -114.708  &lt; 2e-16 ***\nORIGIN_SZRCSZ04 -2.0999136  0.0123473  -170.070  &lt; 2e-16 ***\nORIGIN_SZRCSZ05 -2.1120232  0.0136706  -154.493  &lt; 2e-16 ***\nORIGIN_SZRCSZ06 -0.2396834  0.0078165   -30.664  &lt; 2e-16 ***\nORIGIN_SZRCSZ08 -2.3205294  0.0180477  -128.578  &lt; 2e-16 ***\nORIGIN_SZRCSZ09 -1.6751682  0.0131884  -127.018  &lt; 2e-16 ***\nORIGIN_SZRCSZ10 -1.5468207  0.0078843  -196.191  &lt; 2e-16 ***\nORIGIN_SZRVSZ01 -2.4370886  0.0139860  -174.252  &lt; 2e-16 ***\nORIGIN_SZRVSZ02 -0.6962962  0.0075705   -91.975  &lt; 2e-16 ***\nORIGIN_SZRVSZ03 -1.4729227  0.0113978  -129.229  &lt; 2e-16 ***\nORIGIN_SZRVSZ04 -1.7851931  0.0173663  -102.796  &lt; 2e-16 ***\nORIGIN_SZRVSZ05 -1.6959294  0.0137815  -123.058  &lt; 2e-16 ***\nORIGIN_SZSBSZ01  0.9346035  0.0052711   177.305  &lt; 2e-16 ***\nORIGIN_SZSBSZ02 -0.6345971  0.0070356   -90.198  &lt; 2e-16 ***\nORIGIN_SZSBSZ03  0.6466352  0.0043863   147.421  &lt; 2e-16 ***\nORIGIN_SZSBSZ04  0.2844137  0.0051901    54.799  &lt; 2e-16 ***\nORIGIN_SZSBSZ05 -0.0315396  0.0060369    -5.224 1.75e-07 ***\nORIGIN_SZSBSZ06 -0.9467078  0.0144656   -65.445  &lt; 2e-16 ***\nORIGIN_SZSBSZ07 -0.1393199  0.0104412   -13.343  &lt; 2e-16 ***\nORIGIN_SZSBSZ08 -2.0852218  0.0100783  -206.901  &lt; 2e-16 ***\nORIGIN_SZSBSZ09 -1.0766873  0.0075667  -142.293  &lt; 2e-16 ***\nORIGIN_SZSESZ02  1.1929837  0.0039976   298.428  &lt; 2e-16 ***\nORIGIN_SZSESZ03  1.2050114  0.0037979   317.281  &lt; 2e-16 ***\nORIGIN_SZSESZ04  1.1772849  0.0043782   268.900  &lt; 2e-16 ***\nORIGIN_SZSESZ05 -0.0832362  0.0052039   -15.995  &lt; 2e-16 ***\nORIGIN_SZSESZ06  1.1906711  0.0041427   287.415  &lt; 2e-16 ***\nORIGIN_SZSESZ07 -1.9365539  0.0150835  -128.389  &lt; 2e-16 ***\nORIGIN_SZSGSZ01 -0.8164219  0.0075108  -108.699  &lt; 2e-16 ***\nORIGIN_SZSGSZ02 -1.2122141  0.0087858  -137.975  &lt; 2e-16 ***\nORIGIN_SZSGSZ03  0.3942694  0.0046328    85.104  &lt; 2e-16 ***\nORIGIN_SZSGSZ04  0.3471163  0.0043489    79.817  &lt; 2e-16 ***\nORIGIN_SZSGSZ05 -1.4932087  0.0090230  -165.489  &lt; 2e-16 ***\nORIGIN_SZSGSZ06  0.3553651  0.0041347    85.946  &lt; 2e-16 ***\nORIGIN_SZSGSZ07 -0.4461572  0.0054205   -82.309  &lt; 2e-16 ***\nORIGIN_SZSKSZ01 -0.1754109  0.0075712   -23.168  &lt; 2e-16 ***\nORIGIN_SZSKSZ02  0.3778613  0.0056560    66.807  &lt; 2e-16 ***\nORIGIN_SZSKSZ03 -0.3211144  0.0066773   -48.090  &lt; 2e-16 ***\nORIGIN_SZSKSZ04 -1.8579156  0.0218864   -84.889  &lt; 2e-16 ***\nORIGIN_SZSKSZ05 -1.1791036  0.0150172   -78.517  &lt; 2e-16 ***\nORIGIN_SZSLSZ01 -2.9386230  0.0269159  -109.178  &lt; 2e-16 ***\nORIGIN_SZSLSZ04 -0.3162287  0.0063166   -50.063  &lt; 2e-16 ***\nORIGIN_SZSRSZ01 -1.2357537  0.0081725  -151.208  &lt; 2e-16 ***\nORIGIN_SZSRSZ02 -1.4119003  0.0078902  -178.944  &lt; 2e-16 ***\nORIGIN_SZSRSZ03 -2.4401744  0.0176796  -138.022  &lt; 2e-16 ***\nORIGIN_SZSVSZ01 -3.1123828  0.0690011   -45.106  &lt; 2e-16 ***\nORIGIN_SZTHSZ01 -2.1288324  0.0364590   -58.390  &lt; 2e-16 ***\nORIGIN_SZTHSZ03 -1.0800575  0.0166298   -64.947  &lt; 2e-16 ***\nORIGIN_SZTHSZ04 -1.8515092  0.0253268   -73.105  &lt; 2e-16 ***\nORIGIN_SZTHSZ06 -1.7602926  0.0151912  -115.876  &lt; 2e-16 ***\nORIGIN_SZTMSZ01  0.5636227  0.0046859   120.280  &lt; 2e-16 ***\nORIGIN_SZTMSZ02  1.6637870  0.0035614   467.174  &lt; 2e-16 ***\nORIGIN_SZTMSZ03  1.1602498  0.0038039   305.014  &lt; 2e-16 ***\nORIGIN_SZTMSZ04  0.3914037  0.0044252    88.448  &lt; 2e-16 ***\nORIGIN_SZTMSZ05 -0.8440109  0.0068916  -122.469  &lt; 2e-16 ***\nORIGIN_SZTNSZ01 -1.0098810  0.0070227  -143.802  &lt; 2e-16 ***\nORIGIN_SZTNSZ02 -0.8202286  0.0066367  -123.589  &lt; 2e-16 ***\nORIGIN_SZTNSZ03 -1.2654603  0.0088505  -142.982  &lt; 2e-16 ***\nORIGIN_SZTNSZ04 -0.3634416  0.0061635   -58.966  &lt; 2e-16 ***\nORIGIN_SZTPSZ01 -0.4368116  0.0056105   -77.856  &lt; 2e-16 ***\nORIGIN_SZTPSZ02  0.5475521  0.0039618   138.209  &lt; 2e-16 ***\nORIGIN_SZTPSZ03 -0.3623128  0.0054592   -66.367  &lt; 2e-16 ***\nORIGIN_SZTPSZ04  0.0472206  0.0051346     9.196  &lt; 2e-16 ***\nORIGIN_SZTPSZ05  0.0839462  0.0054103    15.516  &lt; 2e-16 ***\nORIGIN_SZTPSZ06  0.7233657  0.0060194   120.171  &lt; 2e-16 ***\nORIGIN_SZTPSZ07 -0.1165915  0.0058183   -20.039  &lt; 2e-16 ***\nORIGIN_SZTPSZ08 -0.4935634  0.0076322   -64.669  &lt; 2e-16 ***\nORIGIN_SZTPSZ09 -0.4433213  0.0058146   -76.243  &lt; 2e-16 ***\nORIGIN_SZTPSZ10 -0.3389133  0.0062514   -54.214  &lt; 2e-16 ***\nORIGIN_SZTPSZ11  0.2873925  0.0047071    61.055  &lt; 2e-16 ***\nORIGIN_SZTPSZ12 -0.4040528  0.0056796   -71.141  &lt; 2e-16 ***\nORIGIN_SZTSSZ01 -3.9404955  0.0511551   -77.030  &lt; 2e-16 ***\nORIGIN_SZTSSZ02 -0.0018479  0.0082813    -0.223  0.82343    \nORIGIN_SZTSSZ03 -0.2699457  0.0082589   -32.685  &lt; 2e-16 ***\nORIGIN_SZTSSZ04 -0.5500880  0.0085283   -64.501  &lt; 2e-16 ***\nORIGIN_SZTSSZ05 -2.5923354  0.0136981  -189.248  &lt; 2e-16 ***\nORIGIN_SZTSSZ06 -2.7750672  0.0207483  -133.749  &lt; 2e-16 ***\nORIGIN_SZWCSZ01 -0.5072529  0.0067650   -74.982  &lt; 2e-16 ***\nORIGIN_SZWCSZ02 -2.5295897  0.0269185   -93.972  &lt; 2e-16 ***\nORIGIN_SZWCSZ03 -4.6345070  0.1291550   -35.883  &lt; 2e-16 ***\nORIGIN_SZWDSZ01  0.8534772  0.0039216   217.634  &lt; 2e-16 ***\nORIGIN_SZWDSZ02  1.0317707  0.0043850   235.293  &lt; 2e-16 ***\nORIGIN_SZWDSZ03  1.6509819  0.0040202   410.668  &lt; 2e-16 ***\nORIGIN_SZWDSZ04  1.2229578  0.0047770   256.008  &lt; 2e-16 ***\nORIGIN_SZWDSZ05  0.5691316  0.0046162   123.291  &lt; 2e-16 ***\nORIGIN_SZWDSZ06  0.9562165  0.0044186   216.408  &lt; 2e-16 ***\nORIGIN_SZWDSZ07 -0.3917521  0.0072004   -54.407  &lt; 2e-16 ***\nORIGIN_SZWDSZ08 -0.6830954  0.0068347   -99.945  &lt; 2e-16 ***\nORIGIN_SZWDSZ09  1.3693027  0.0043386   315.608  &lt; 2e-16 ***\nORIGIN_SZYSSZ01 -0.3751982  0.0050361   -74.502  &lt; 2e-16 ***\nORIGIN_SZYSSZ02  1.0075483  0.0047931   210.210  &lt; 2e-16 ***\nORIGIN_SZYSSZ03  2.2177900  0.0040349   549.658  &lt; 2e-16 ***\nORIGIN_SZYSSZ04  0.9548457  0.0041373   230.787  &lt; 2e-16 ***\nORIGIN_SZYSSZ05  0.4236718  0.0050438    83.998  &lt; 2e-16 ***\nORIGIN_SZYSSZ06 -0.7525483  0.0089103   -84.458  &lt; 2e-16 ***\nORIGIN_SZYSSZ07 -0.6721337  0.0089496   -75.102  &lt; 2e-16 ***\nORIGIN_SZYSSZ08 -0.3396947  0.0056923   -59.676  &lt; 2e-16 ***\nORIGIN_SZYSSZ09  1.2294006  0.0039909   308.050  &lt; 2e-16 ***\nDESTIN_SZAMSZ02  0.0212709  0.0039724     5.355 8.57e-08 ***\nDESTIN_SZAMSZ03  0.2829126  0.0037637    75.168  &lt; 2e-16 ***\nDESTIN_SZAMSZ04 -0.8166601  0.0055347  -147.554  &lt; 2e-16 ***\nDESTIN_SZAMSZ05 -0.7648420  0.0053352  -143.359  &lt; 2e-16 ***\nDESTIN_SZAMSZ06 -0.6380634  0.0053428  -119.426  &lt; 2e-16 ***\nDESTIN_SZAMSZ07 -1.5207616  0.0089938  -169.091  &lt; 2e-16 ***\nDESTIN_SZAMSZ08 -0.7419371  0.0058825  -126.127  &lt; 2e-16 ***\nDESTIN_SZAMSZ09 -0.8788486  0.0055617  -158.018  &lt; 2e-16 ***\nDESTIN_SZAMSZ10  0.1894040  0.0039531    47.913  &lt; 2e-16 ***\nDESTIN_SZAMSZ11  0.0370421  0.0069016     5.367 8.00e-08 ***\nDESTIN_SZAMSZ12 -0.5190607  0.0061740   -84.072  &lt; 2e-16 ***\nDESTIN_SZBDSZ01  0.5370660  0.0035894   149.626  &lt; 2e-16 ***\nDESTIN_SZBDSZ02 -0.2428610  0.0045728   -53.110  &lt; 2e-16 ***\nDESTIN_SZBDSZ03 -0.0095698  0.0040276    -2.376  0.01750 *  \nDESTIN_SZBDSZ04  0.8345819  0.0033243   251.051  &lt; 2e-16 ***\nDESTIN_SZBDSZ05  0.5055376  0.0036518   138.436  &lt; 2e-16 ***\nDESTIN_SZBDSZ06  0.1812864  0.0040112    45.195  &lt; 2e-16 ***\nDESTIN_SZBDSZ07 -0.5687652  0.0080201   -70.917  &lt; 2e-16 ***\nDESTIN_SZBDSZ08 -1.6260042  0.0091348  -178.000  &lt; 2e-16 ***\nDESTIN_SZBKSZ01 -1.0764994  0.0057530  -187.120  &lt; 2e-16 ***\nDESTIN_SZBKSZ02 -0.2697310  0.0048881   -55.181  &lt; 2e-16 ***\nDESTIN_SZBKSZ03 -0.7403258  0.0050911  -145.416  &lt; 2e-16 ***\nDESTIN_SZBKSZ04  0.0415910  0.0045034     9.235  &lt; 2e-16 ***\nDESTIN_SZBKSZ05 -0.5704291  0.0051211  -111.387  &lt; 2e-16 ***\nDESTIN_SZBKSZ06 -0.9682480  0.0056964  -169.975  &lt; 2e-16 ***\nDESTIN_SZBKSZ07  0.2463411  0.0038360    64.218  &lt; 2e-16 ***\nDESTIN_SZBKSZ08 -1.1008311  0.0064540  -170.567  &lt; 2e-16 ***\nDESTIN_SZBKSZ09 -0.2022715  0.0046881   -43.145  &lt; 2e-16 ***\nDESTIN_SZBLSZ01 -0.5097594  0.0060108   -84.807  &lt; 2e-16 ***\nDESTIN_SZBLSZ02  0.5806200  0.0060120    96.578  &lt; 2e-16 ***\nDESTIN_SZBLSZ03  1.8410470  0.0066529   276.726  &lt; 2e-16 ***\nDESTIN_SZBLSZ04  0.0161749  0.0108488     1.491  0.13598    \nDESTIN_SZBMSZ01  0.0218457  0.0041700     5.239 1.62e-07 ***\nDESTIN_SZBMSZ02 -0.1967427  0.0044200   -44.512  &lt; 2e-16 ***\nDESTIN_SZBMSZ03 -0.4999541  0.0053306   -93.790  &lt; 2e-16 ***\nDESTIN_SZBMSZ04 -0.2311784  0.0046248   -49.987  &lt; 2e-16 ***\nDESTIN_SZBMSZ05 -0.3630986  0.0054769   -66.296  &lt; 2e-16 ***\nDESTIN_SZBMSZ06 -1.1302471  0.0092860  -121.715  &lt; 2e-16 ***\nDESTIN_SZBMSZ07  0.2407815  0.0040494    59.461  &lt; 2e-16 ***\nDESTIN_SZBMSZ08 -0.7442788  0.0054448  -136.694  &lt; 2e-16 ***\nDESTIN_SZBMSZ09 -1.5042187  0.0085538  -175.853  &lt; 2e-16 ***\nDESTIN_SZBMSZ10 -1.1378856  0.0071431  -159.299  &lt; 2e-16 ***\nDESTIN_SZBMSZ11 -1.1675270  0.0066120  -176.577  &lt; 2e-16 ***\nDESTIN_SZBMSZ12 -0.5698308  0.0070286   -81.073  &lt; 2e-16 ***\nDESTIN_SZBMSZ13 -0.0104176  0.0044756    -2.328  0.01993 *  \nDESTIN_SZBMSZ14 -0.6480912  0.0070776   -91.569  &lt; 2e-16 ***\nDESTIN_SZBMSZ15 -0.8581693  0.0062693  -136.884  &lt; 2e-16 ***\nDESTIN_SZBMSZ16 -1.1423629  0.0064708  -176.542  &lt; 2e-16 ***\nDESTIN_SZBMSZ17 -1.2143234  0.0075834  -160.129  &lt; 2e-16 ***\nDESTIN_SZBPSZ01 -0.7596013  0.0050666  -149.924  &lt; 2e-16 ***\nDESTIN_SZBPSZ02 -1.7082230  0.0080433  -212.378  &lt; 2e-16 ***\nDESTIN_SZBPSZ03 -1.5429267  0.0075931  -203.200  &lt; 2e-16 ***\nDESTIN_SZBPSZ04 -0.8872948  0.0055938  -158.621  &lt; 2e-16 ***\nDESTIN_SZBPSZ05  0.3316874  0.0037543    88.348  &lt; 2e-16 ***\nDESTIN_SZBPSZ06 -0.6154441  0.0067549   -91.111  &lt; 2e-16 ***\nDESTIN_SZBPSZ07 -0.3954562  0.0069046   -57.274  &lt; 2e-16 ***\nDESTIN_SZBSSZ01  0.0789878  0.0041826    18.885  &lt; 2e-16 ***\nDESTIN_SZBSSZ02 -0.6337749  0.0047468  -133.517  &lt; 2e-16 ***\nDESTIN_SZBSSZ03  0.3008353  0.0036538    82.334  &lt; 2e-16 ***\nDESTIN_SZBTSZ01  0.2629300  0.0039101    67.243  &lt; 2e-16 ***\nDESTIN_SZBTSZ02 -0.4963909  0.0058033   -85.536  &lt; 2e-16 ***\nDESTIN_SZBTSZ03  0.0814188  0.0045518    17.887  &lt; 2e-16 ***\nDESTIN_SZBTSZ04 -1.1161976  0.0091052  -122.589  &lt; 2e-16 ***\nDESTIN_SZBTSZ05 -0.3074690  0.0061759   -49.785  &lt; 2e-16 ***\nDESTIN_SZBTSZ06 -0.5880653  0.0056608  -103.884  &lt; 2e-16 ***\nDESTIN_SZBTSZ07 -1.3998784  0.0085076  -164.545  &lt; 2e-16 ***\nDESTIN_SZBTSZ08 -0.6244650  0.0075045   -83.212  &lt; 2e-16 ***\nDESTIN_SZCCSZ01 -0.5123929  0.0063901   -80.185  &lt; 2e-16 ***\nDESTIN_SZCHSZ01 -0.9998923  0.0077438  -129.122  &lt; 2e-16 ***\nDESTIN_SZCHSZ02  0.0621056  0.0048893    12.702  &lt; 2e-16 ***\nDESTIN_SZCHSZ03  1.4555708  0.0036060   403.647  &lt; 2e-16 ***\nDESTIN_SZCKSZ01 -0.4774709  0.0047535  -100.446  &lt; 2e-16 ***\nDESTIN_SZCKSZ02 -0.9370856  0.0051723  -181.173  &lt; 2e-16 ***\nDESTIN_SZCKSZ03  0.2983688  0.0038435    77.629  &lt; 2e-16 ***\nDESTIN_SZCKSZ04 -1.5092455  0.0060183  -250.775  &lt; 2e-16 ***\nDESTIN_SZCKSZ05 -1.2145509  0.0067838  -179.038  &lt; 2e-16 ***\nDESTIN_SZCKSZ06  0.0421656  0.0056670     7.441 1.00e-13 ***\nDESTIN_SZCLSZ01  0.3142187  0.0044184    71.116  &lt; 2e-16 ***\nDESTIN_SZCLSZ02 -1.9618889  0.0117883  -166.427  &lt; 2e-16 ***\nDESTIN_SZCLSZ03 -0.7988579  0.0067421  -118.488  &lt; 2e-16 ***\nDESTIN_SZCLSZ04  0.0259200  0.0041309     6.275 3.50e-10 ***\nDESTIN_SZCLSZ05 -0.6920042  0.0070194   -98.584  &lt; 2e-16 ***\nDESTIN_SZCLSZ06  0.0702605  0.0039083    17.977  &lt; 2e-16 ***\nDESTIN_SZCLSZ07 -0.3972061  0.0048830   -81.345  &lt; 2e-16 ***\nDESTIN_SZCLSZ08 -0.3499790  0.0055651   -62.889  &lt; 2e-16 ***\nDESTIN_SZCLSZ09  0.3533134  0.0058814    60.073  &lt; 2e-16 ***\nDESTIN_SZDTSZ01 -0.5411121  0.0049356  -109.634  &lt; 2e-16 ***\nDESTIN_SZDTSZ02 -0.8213585  0.0048727  -168.565  &lt; 2e-16 ***\nDESTIN_SZDTSZ03 -1.0179997  0.0056475  -180.258  &lt; 2e-16 ***\nDESTIN_SZDTSZ04 -0.5433688  0.0126789   -42.856  &lt; 2e-16 ***\nDESTIN_SZDTSZ05 -0.6487212  0.0088807   -73.048  &lt; 2e-16 ***\nDESTIN_SZDTSZ06 -0.8628224  0.0057349  -150.452  &lt; 2e-16 ***\nDESTIN_SZDTSZ07 -2.0585223  0.0210230   -97.917  &lt; 2e-16 ***\nDESTIN_SZDTSZ08 -0.4152232  0.0044429   -93.458  &lt; 2e-16 ***\nDESTIN_SZDTSZ09 -1.5080394  0.0097037  -155.408  &lt; 2e-16 ***\nDESTIN_SZDTSZ10 -1.3500981  0.0089622  -150.643  &lt; 2e-16 ***\nDESTIN_SZDTSZ11 -0.5259863  0.0048010  -109.558  &lt; 2e-16 ***\nDESTIN_SZDTSZ12 -2.5158236  0.0172211  -146.090  &lt; 2e-16 ***\nDESTIN_SZDTSZ13 -1.6178759  0.0097938  -165.193  &lt; 2e-16 ***\nDESTIN_SZGLSZ01  0.1461275  0.0046141    31.670  &lt; 2e-16 ***\nDESTIN_SZGLSZ02 -0.1602193  0.0042850   -37.390  &lt; 2e-16 ***\nDESTIN_SZGLSZ03  0.5046388  0.0035978   140.264  &lt; 2e-16 ***\nDESTIN_SZGLSZ04  0.4369077  0.0035501   123.068  &lt; 2e-16 ***\nDESTIN_SZGLSZ05  0.2520370  0.0036831    68.430  &lt; 2e-16 ***\nDESTIN_SZHGSZ01  0.3279213  0.0036059    90.941  &lt; 2e-16 ***\nDESTIN_SZHGSZ02 -0.5829297  0.0047545  -122.607  &lt; 2e-16 ***\nDESTIN_SZHGSZ03 -1.1893809  0.0058267  -204.127  &lt; 2e-16 ***\nDESTIN_SZHGSZ04 -0.3964425  0.0041451   -95.642  &lt; 2e-16 ***\nDESTIN_SZHGSZ05 -0.4403649  0.0041783  -105.392  &lt; 2e-16 ***\nDESTIN_SZHGSZ06 -0.8011955  0.0050828  -157.628  &lt; 2e-16 ***\nDESTIN_SZHGSZ07  0.1490727  0.0038535    38.685  &lt; 2e-16 ***\nDESTIN_SZHGSZ08 -0.2156487  0.0043763   -49.276  &lt; 2e-16 ***\nDESTIN_SZHGSZ09  0.1522236  0.0044428    34.263  &lt; 2e-16 ***\nDESTIN_SZHGSZ10 -2.8955741  0.0248050  -116.733  &lt; 2e-16 ***\nDESTIN_SZJESZ01 -0.3098208  0.0047959   -64.601  &lt; 2e-16 ***\nDESTIN_SZJESZ02 -0.6223816  0.0049321  -126.190  &lt; 2e-16 ***\nDESTIN_SZJESZ03 -0.5971486  0.0052144  -114.519  &lt; 2e-16 ***\nDESTIN_SZJESZ04  0.0173079  0.0053590     3.230  0.00124 ** \nDESTIN_SZJESZ05 -0.8521583  0.0080888  -105.351  &lt; 2e-16 ***\nDESTIN_SZJESZ06  0.3952453  0.0038269   103.280  &lt; 2e-16 ***\nDESTIN_SZJESZ07 -0.8696356  0.0066130  -131.503  &lt; 2e-16 ***\nDESTIN_SZJESZ08 -0.6342860  0.0067009   -94.657  &lt; 2e-16 ***\nDESTIN_SZJESZ09 -0.3500299  0.0051279   -68.261  &lt; 2e-16 ***\nDESTIN_SZJESZ10  0.6192648  0.0063329    97.786  &lt; 2e-16 ***\nDESTIN_SZJESZ11  0.9360443  0.0059973   156.077  &lt; 2e-16 ***\nDESTIN_SZJWSZ01 -0.6625099  0.0059080  -112.138  &lt; 2e-16 ***\nDESTIN_SZJWSZ02 -0.6867611  0.0050263  -136.632  &lt; 2e-16 ***\nDESTIN_SZJWSZ03  0.3031811  0.0039776    76.223  &lt; 2e-16 ***\nDESTIN_SZJWSZ04  0.8344520  0.0037186   224.400  &lt; 2e-16 ***\nDESTIN_SZJWSZ05 -0.2633202  0.0053072   -49.616  &lt; 2e-16 ***\nDESTIN_SZJWSZ06 -0.0623491  0.0050037   -12.461  &lt; 2e-16 ***\nDESTIN_SZJWSZ07 -1.6306274  0.0223236   -73.045  &lt; 2e-16 ***\nDESTIN_SZJWSZ08 -0.5420094  0.0046487  -116.595  &lt; 2e-16 ***\nDESTIN_SZJWSZ09  1.0365683  0.0034297   302.234  &lt; 2e-16 ***\nDESTIN_SZKLSZ01 -0.3569836  0.0044945   -79.427  &lt; 2e-16 ***\nDESTIN_SZKLSZ02 -0.6429310  0.0052168  -123.243  &lt; 2e-16 ***\nDESTIN_SZKLSZ03 -0.9704296  0.0055471  -174.944  &lt; 2e-16 ***\nDESTIN_SZKLSZ04 -1.3962110  0.0069945  -199.616  &lt; 2e-16 ***\nDESTIN_SZKLSZ05 -0.5953513  0.0063276   -94.089  &lt; 2e-16 ***\nDESTIN_SZKLSZ06 -0.6770517  0.0050226  -134.802  &lt; 2e-16 ***\nDESTIN_SZKLSZ07 -0.7274809  0.0055218  -131.746  &lt; 2e-16 ***\nDESTIN_SZKLSZ08  0.0493524  0.0040820    12.090  &lt; 2e-16 ***\nDESTIN_SZKLSZ09 -1.5586206  0.0074523  -209.147  &lt; 2e-16 ***\nDESTIN_SZLKSZ01 -1.9047138  0.0197061   -96.656  &lt; 2e-16 ***\nDESTIN_SZMDSZ01 -1.2712247  0.0160789   -79.062  &lt; 2e-16 ***\nDESTIN_SZMDSZ02 -1.0010547  0.0096166  -104.097  &lt; 2e-16 ***\nDESTIN_SZMDSZ03 -2.0703270  0.0218088   -94.931  &lt; 2e-16 ***\nDESTIN_SZMPSZ01 -0.6695947  0.0064333  -104.083  &lt; 2e-16 ***\nDESTIN_SZMPSZ02 -0.6640970  0.0054230  -122.460  &lt; 2e-16 ***\nDESTIN_SZMPSZ03 -0.0951997  0.0043704   -21.783  &lt; 2e-16 ***\nDESTIN_SZMSSZ01 -0.9979383  0.0759047   -13.147  &lt; 2e-16 ***\nDESTIN_SZMUSZ01 -0.9602828  0.0053143  -180.697  &lt; 2e-16 ***\nDESTIN_SZMUSZ02 -1.0521166  0.0082228  -127.952  &lt; 2e-16 ***\nDESTIN_SZMUSZ03 -0.9765909  0.0052272  -186.828  &lt; 2e-16 ***\nDESTIN_SZNTSZ01 -2.1111260  0.0218705   -96.528  &lt; 2e-16 ***\nDESTIN_SZNTSZ02 -1.5324942  0.0091559  -167.377  &lt; 2e-16 ***\nDESTIN_SZNTSZ03 -1.1935318  0.0072244  -165.208  &lt; 2e-16 ***\nDESTIN_SZNTSZ05 -1.5114097  0.0168727   -89.577  &lt; 2e-16 ***\nDESTIN_SZNTSZ06 -2.7592232  0.0268902  -102.611  &lt; 2e-16 ***\nDESTIN_SZNVSZ01 -0.1815153  0.0040106   -45.259  &lt; 2e-16 ***\nDESTIN_SZNVSZ02 -0.2820867  0.0046155   -61.117  &lt; 2e-16 ***\nDESTIN_SZNVSZ03 -0.1956032  0.0046496   -42.069  &lt; 2e-16 ***\nDESTIN_SZNVSZ04 -1.8227237  0.0096989  -187.932  &lt; 2e-16 ***\nDESTIN_SZNVSZ05 -1.3712249  0.0077136  -177.766  &lt; 2e-16 ***\nDESTIN_SZORSZ01 -1.2808954  0.0181517   -70.566  &lt; 2e-16 ***\nDESTIN_SZORSZ02  0.0824898  0.0041150    20.046  &lt; 2e-16 ***\nDESTIN_SZORSZ03 -0.7141548  0.0052332  -136.466  &lt; 2e-16 ***\nDESTIN_SZOTSZ01 -1.0697784  0.0067540  -158.391  &lt; 2e-16 ***\nDESTIN_SZOTSZ02 -0.4465540  0.0061639   -72.446  &lt; 2e-16 ***\nDESTIN_SZOTSZ03 -1.3138121  0.0066820  -196.618  &lt; 2e-16 ***\nDESTIN_SZOTSZ04 -1.5743681  0.0095944  -164.093  &lt; 2e-16 ***\nDESTIN_SZPGSZ01 -2.1260559  0.0167939  -126.597  &lt; 2e-16 ***\nDESTIN_SZPGSZ02 -0.7178052  0.0058166  -123.406  &lt; 2e-16 ***\nDESTIN_SZPGSZ03  0.2347146  0.0037782    62.123  &lt; 2e-16 ***\nDESTIN_SZPGSZ04 -0.1184075  0.0040899   -28.951  &lt; 2e-16 ***\nDESTIN_SZPGSZ05 -0.9588375  0.0067080  -142.939  &lt; 2e-16 ***\nDESTIN_SZPLSZ01 -0.1309268  0.0058014   -22.568  &lt; 2e-16 ***\nDESTIN_SZPLSZ02 -1.4113389  0.0107771  -130.957  &lt; 2e-16 ***\nDESTIN_SZPLSZ03  0.1881257  0.0081365    23.121  &lt; 2e-16 ***\nDESTIN_SZPLSZ04  0.1419113  0.0080571    17.613  &lt; 2e-16 ***\nDESTIN_SZPLSZ05 -0.4409430  0.0094284   -46.767  &lt; 2e-16 ***\nDESTIN_SZPNSZ01  0.0127564  0.0049799     2.562  0.01042 *  \nDESTIN_SZPNSZ02  1.2394787  0.0065988   187.835  &lt; 2e-16 ***\nDESTIN_SZPNSZ03  0.3634629  0.0067099    54.168  &lt; 2e-16 ***\nDESTIN_SZPNSZ04  2.1946171  0.0072301   303.538  &lt; 2e-16 ***\nDESTIN_SZPNSZ05  1.5485032  0.0097438   158.922  &lt; 2e-16 ***\nDESTIN_SZPRSZ01 -0.9228195  0.0066380  -139.021  &lt; 2e-16 ***\nDESTIN_SZPRSZ02 -0.3678822  0.0046424   -79.243  &lt; 2e-16 ***\nDESTIN_SZPRSZ03  0.7074649  0.0035800   197.618  &lt; 2e-16 ***\nDESTIN_SZPRSZ04 -0.6419324  0.0079623   -80.622  &lt; 2e-16 ***\nDESTIN_SZPRSZ05 -0.2874392  0.0044366   -64.788  &lt; 2e-16 ***\nDESTIN_SZPRSZ06  0.3167539  0.0044782    70.733  &lt; 2e-16 ***\nDESTIN_SZPRSZ07 -0.9335464  0.0102137   -91.401  &lt; 2e-16 ***\nDESTIN_SZPRSZ08 -0.7662610  0.0060648  -126.345  &lt; 2e-16 ***\nDESTIN_SZQTSZ01 -1.2079143  0.0083951  -143.883  &lt; 2e-16 ***\nDESTIN_SZQTSZ02 -1.3354906  0.0070473  -189.504  &lt; 2e-16 ***\nDESTIN_SZQTSZ03 -0.6001551  0.0059455  -100.944  &lt; 2e-16 ***\nDESTIN_SZQTSZ04 -0.6398175  0.0061084  -104.743  &lt; 2e-16 ***\nDESTIN_SZQTSZ05 -0.5613413  0.0054048  -103.860  &lt; 2e-16 ***\nDESTIN_SZQTSZ06 -0.8389724  0.0058324  -143.846  &lt; 2e-16 ***\nDESTIN_SZQTSZ07 -1.3235470  0.0093878  -140.986  &lt; 2e-16 ***\nDESTIN_SZQTSZ08  0.2274850  0.0043088    52.796  &lt; 2e-16 ***\nDESTIN_SZQTSZ09 -0.3359291  0.0051673   -65.010  &lt; 2e-16 ***\nDESTIN_SZQTSZ10 -0.1962281  0.0048045   -40.842  &lt; 2e-16 ***\nDESTIN_SZQTSZ11  0.0100431  0.0050805     1.977  0.04806 *  \nDESTIN_SZQTSZ12 -0.2604810  0.0061775   -42.166  &lt; 2e-16 ***\nDESTIN_SZQTSZ13  0.3010790  0.0044751    67.279  &lt; 2e-16 ***\nDESTIN_SZQTSZ14  0.0740166  0.0051988    14.237  &lt; 2e-16 ***\nDESTIN_SZQTSZ15  0.1675994  0.0062441    26.841  &lt; 2e-16 ***\nDESTIN_SZRCSZ01 -0.9580522  0.0061887  -154.806  &lt; 2e-16 ***\nDESTIN_SZRCSZ02 -2.1263939  0.0150787  -141.020  &lt; 2e-16 ***\nDESTIN_SZRCSZ03 -1.0527261  0.0080307  -131.088  &lt; 2e-16 ***\nDESTIN_SZRCSZ04 -2.0184300  0.0111212  -181.493  &lt; 2e-16 ***\nDESTIN_SZRCSZ05 -2.3238789  0.0115431  -201.322  &lt; 2e-16 ***\nDESTIN_SZRCSZ06 -1.7143998  0.0131848  -130.029  &lt; 2e-16 ***\nDESTIN_SZRCSZ08 -1.6904781  0.0127611  -132.471  &lt; 2e-16 ***\nDESTIN_SZRCSZ09 -1.1324345  0.0099814  -113.455  &lt; 2e-16 ***\nDESTIN_SZRCSZ10 -0.8341453  0.0058363  -142.924  &lt; 2e-16 ***\nDESTIN_SZRVSZ01 -1.5882649  0.0094934  -167.303  &lt; 2e-16 ***\nDESTIN_SZRVSZ02 -2.0656791  0.0123820  -166.829  &lt; 2e-16 ***\nDESTIN_SZRVSZ03 -1.9361222  0.0110427  -175.331  &lt; 2e-16 ***\nDESTIN_SZRVSZ04 -1.7014368  0.0152183  -111.802  &lt; 2e-16 ***\nDESTIN_SZRVSZ05 -1.1189145  0.0115951   -96.499  &lt; 2e-16 ***\nDESTIN_SZSBSZ01 -0.3509015  0.0058148   -60.346  &lt; 2e-16 ***\nDESTIN_SZSBSZ02 -0.9490327  0.0068384  -138.780  &lt; 2e-16 ***\nDESTIN_SZSBSZ03  0.5970627  0.0041057   145.421  &lt; 2e-16 ***\nDESTIN_SZSBSZ04  0.3282617  0.0050417    65.110  &lt; 2e-16 ***\nDESTIN_SZSBSZ05 -0.6767984  0.0065382  -103.514  &lt; 2e-16 ***\nDESTIN_SZSBSZ06 -1.9662132  0.0221676   -88.698  &lt; 2e-16 ***\nDESTIN_SZSBSZ07 -1.4830253  0.0147100  -100.817  &lt; 2e-16 ***\nDESTIN_SZSBSZ08  1.4025670  0.0045971   305.098  &lt; 2e-16 ***\nDESTIN_SZSBSZ09  0.7352030  0.0046218   159.071  &lt; 2e-16 ***\nDESTIN_SZSESZ02 -0.4269253  0.0043125   -98.997  &lt; 2e-16 ***\nDESTIN_SZSESZ03  0.4312759  0.0034755   124.090  &lt; 2e-16 ***\nDESTIN_SZSESZ04 -0.8494715  0.0051132  -166.134  &lt; 2e-16 ***\nDESTIN_SZSESZ05 -0.2378639  0.0042519   -55.943  &lt; 2e-16 ***\nDESTIN_SZSESZ06 -0.8000748  0.0052837  -151.422  &lt; 2e-16 ***\nDESTIN_SZSESZ07 -3.1154914  0.0201116  -154.910  &lt; 2e-16 ***\nDESTIN_SZSGSZ01 -0.0275765  0.0051348    -5.371 7.85e-08 ***\nDESTIN_SZSGSZ02 -0.1030591  0.0045922   -22.442  &lt; 2e-16 ***\nDESTIN_SZSGSZ03 -0.3454896  0.0043826   -78.833  &lt; 2e-16 ***\nDESTIN_SZSGSZ04 -0.2080882  0.0044260   -47.015  &lt; 2e-16 ***\nDESTIN_SZSGSZ05 -1.6681309  0.0077157  -216.201  &lt; 2e-16 ***\nDESTIN_SZSGSZ06  0.4524550  0.0035146   128.735  &lt; 2e-16 ***\nDESTIN_SZSGSZ07 -0.3110815  0.0044927   -69.242  &lt; 2e-16 ***\nDESTIN_SZSISZ01 -1.0254158  0.0201490   -50.892  &lt; 2e-16 ***\nDESTIN_SZSKSZ01 -0.4099505  0.0063142   -64.925  &lt; 2e-16 ***\nDESTIN_SZSKSZ02 -0.4577556  0.0064008   -71.516  &lt; 2e-16 ***\nDESTIN_SZSKSZ03 -0.3053993  0.0053253   -57.349  &lt; 2e-16 ***\nDESTIN_SZSKSZ04 -0.7399435  0.0131881   -56.107  &lt; 2e-16 ***\nDESTIN_SZSKSZ05 -0.2185195  0.0109232   -20.005  &lt; 2e-16 ***\nDESTIN_SZSLSZ01 -0.5530820  0.0067386   -82.077  &lt; 2e-16 ***\nDESTIN_SZSLSZ04 -0.7675349  0.0056414  -136.053  &lt; 2e-16 ***\nDESTIN_SZSRSZ01 -1.0280717  0.0068351  -150.410  &lt; 2e-16 ***\nDESTIN_SZSRSZ02 -1.3648802  0.0085433  -159.759  &lt; 2e-16 ***\nDESTIN_SZSRSZ03 -1.4232536  0.0077757  -183.039  &lt; 2e-16 ***\nDESTIN_SZSVSZ01 -1.5450264  0.0678568   -22.769  &lt; 2e-16 ***\nDESTIN_SZTHSZ01 -3.4849698  0.0332037  -104.957  &lt; 2e-16 ***\nDESTIN_SZTHSZ03 -2.0915968  0.0191235  -109.373  &lt; 2e-16 ***\nDESTIN_SZTHSZ04 -2.4816319  0.0191469  -129.610  &lt; 2e-16 ***\nDESTIN_SZTHSZ06 -1.2146563  0.0107822  -112.654  &lt; 2e-16 ***\nDESTIN_SZTMSZ01 -0.1795562  0.0048237   -37.224  &lt; 2e-16 ***\nDESTIN_SZTMSZ02  1.3459495  0.0031928   421.557  &lt; 2e-16 ***\nDESTIN_SZTMSZ03  0.6155716  0.0035825   171.825  &lt; 2e-16 ***\nDESTIN_SZTMSZ04  0.8812566  0.0036848   239.160  &lt; 2e-16 ***\nDESTIN_SZTMSZ05  0.7011240  0.0046012   152.378  &lt; 2e-16 ***\nDESTIN_SZTNSZ01 -0.3870757  0.0049760   -77.788  &lt; 2e-16 ***\nDESTIN_SZTNSZ02 -0.9949268  0.0064182  -155.016  &lt; 2e-16 ***\nDESTIN_SZTNSZ03 -0.9978034  0.0079010  -126.288  &lt; 2e-16 ***\nDESTIN_SZTNSZ04 -0.8085834  0.0059076  -136.872  &lt; 2e-16 ***\nDESTIN_SZTPSZ01 -0.2290991  0.0048608   -47.132  &lt; 2e-16 ***\nDESTIN_SZTPSZ02  0.2932592  0.0035262    83.166  &lt; 2e-16 ***\nDESTIN_SZTPSZ03 -0.1524046  0.0049960   -30.506  &lt; 2e-16 ***\nDESTIN_SZTPSZ04 -1.5546156  0.0068975  -225.390  &lt; 2e-16 ***\nDESTIN_SZTPSZ05 -0.8451520  0.0052213  -161.867  &lt; 2e-16 ***\nDESTIN_SZTPSZ06 -0.4801699  0.0068484   -70.114  &lt; 2e-16 ***\nDESTIN_SZTPSZ07 -1.6202115  0.0094773  -170.958  &lt; 2e-16 ***\nDESTIN_SZTPSZ08 -1.2079178  0.0073927  -163.393  &lt; 2e-16 ***\nDESTIN_SZTPSZ09 -0.2848465  0.0054706   -52.068  &lt; 2e-16 ***\nDESTIN_SZTPSZ10 -0.9056787  0.0068525  -132.167  &lt; 2e-16 ***\nDESTIN_SZTPSZ11 -0.2396166  0.0045591   -52.557  &lt; 2e-16 ***\nDESTIN_SZTPSZ12 -0.5960675  0.0054969  -108.438  &lt; 2e-16 ***\nDESTIN_SZTSSZ01 -0.4670670  0.0195128   -23.936  &lt; 2e-16 ***\nDESTIN_SZTSSZ02 -0.2880986  0.0096690   -29.796  &lt; 2e-16 ***\nDESTIN_SZTSSZ03  0.6128605  0.0075844    80.805  &lt; 2e-16 ***\nDESTIN_SZTSSZ04  0.7145093  0.0077311    92.420  &lt; 2e-16 ***\nDESTIN_SZTSSZ05  1.5840051  0.0081297   194.841  &lt; 2e-16 ***\nDESTIN_SZTSSZ06  1.4119631  0.0162860    86.698  &lt; 2e-16 ***\nDESTIN_SZWCSZ01  1.1481065  0.0046985   244.356  &lt; 2e-16 ***\nDESTIN_SZWCSZ02 -1.0364062  0.0105727   -98.027  &lt; 2e-16 ***\nDESTIN_SZWCSZ03 -2.2979112  0.0237591   -96.717  &lt; 2e-16 ***\nDESTIN_SZWDSZ01  0.9778749  0.0034042   287.257  &lt; 2e-16 ***\nDESTIN_SZWDSZ02 -0.6843440  0.0053440  -128.059  &lt; 2e-16 ***\nDESTIN_SZWDSZ03  0.6697853  0.0038300   174.877  &lt; 2e-16 ***\nDESTIN_SZWDSZ04 -0.4215144  0.0054825   -76.883  &lt; 2e-16 ***\nDESTIN_SZWDSZ05 -0.0626035  0.0048976   -12.782  &lt; 2e-16 ***\nDESTIN_SZWDSZ06  0.2330792  0.0039807    58.552  &lt; 2e-16 ***\nDESTIN_SZWDSZ07 -0.2057066  0.0061765   -33.305  &lt; 2e-16 ***\nDESTIN_SZWDSZ08  0.1936142  0.0056566    34.228  &lt; 2e-16 ***\nDESTIN_SZWDSZ09 -0.2671763  0.0047455   -56.301  &lt; 2e-16 ***\nDESTIN_SZYSSZ01  0.9919868  0.0036639   270.743  &lt; 2e-16 ***\nDESTIN_SZYSSZ02 -0.1925947  0.0048104   -40.037  &lt; 2e-16 ***\nDESTIN_SZYSSZ03 -1.1480259  0.0052039  -220.610  &lt; 2e-16 ***\nDESTIN_SZYSSZ04 -0.2304262  0.0045926   -50.173  &lt; 2e-16 ***\nDESTIN_SZYSSZ05 -1.7879632  0.0092881  -192.501  &lt; 2e-16 ***\nDESTIN_SZYSSZ06 -1.2562397  0.0072268  -173.830  &lt; 2e-16 ***\nDESTIN_SZYSSZ07 -0.5439553  0.0092673   -58.696  &lt; 2e-16 ***\nDESTIN_SZYSSZ08  0.6465839  0.0037045   174.540  &lt; 2e-16 ***\nDESTIN_SZYSSZ09  0.1198061  0.0037926    31.589  &lt; 2e-16 ***\nlog(dist)       -0.6771805  0.0001165 -5810.772  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 88883132  on 20594  degrees of freedom\nResidual deviance: 29961664  on 19976  degrees of freedom\nAIC: 30092008\n\nNumber of Fisher Scoring iterations: 7\n\n\nWe can examine how the constraints hold for destinations this time.\n\n\nCode\nCalcRSquared(dbcSIM$data$TRIPS, dbcSIM$fitted.values)\n\n\n[1] 0.5726181\n\n\nNotice that there is a relatively greater improvement in the R^2 value."
  },
  {
    "objectID": "in-class/ice3.html#model-comparison",
    "href": "in-class/ice3.html#model-comparison",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.9 Model comparison",
    "text": "6.9 Model comparison\nAnother useful model performance measure for continuous dependent variable is Root Mean Squared Error. In this sub-section, you will learn how to use compare_performance() of performance package\nFirst of all, let us create a list called model_list by using the code chunk below.\n\n\nCode\nmodel_list &lt;- list(unconstrained=uncSIM,\n                   originConstrained=orcSIM,\n                   destinationConstrained=decSIM,\n                   doublyConstrained=dbcSIM)\n\n\nNext, we will compute the RMSE of all the models in model_list file by using the code chunk below.\n\n\nCode\ncompare_performance(model_list,\n                    metrics = \"RMSE\")\n\n\n# Comparison of Model Performance Indices\n\nName                   | Model |     RMSE\n-----------------------------------------\nunconstrained          |   glm | 4653.362\noriginConstrained      |   glm | 4091.480\ndestinationConstrained |   glm | 3717.931\ndoublyConstrained      |   glm | 3548.660\n\n\nThe print above reveals that doubly constrained SIM is the best model among all the four SIMs because it has the smallest RMSE value of 1487.111."
  },
  {
    "objectID": "in-class/ice3.html#visualising-fitted",
    "href": "in-class/ice3.html#visualising-fitted",
    "title": "In-class Exercise 3 - Calibrating Spatial Interaction Models with R",
    "section": "6.10 Visualising fitted",
    "text": "6.10 Visualising fitted\nIn this section, you will learn how to visualise the observed values and the fitted values.\nFirstly we will extract the fitted values from each model by using the code chunk below.\n\n\nCode\ndf &lt;- as.data.frame(uncSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\nNext, we will join the values to SIM_data data frame.\n\n\nCode\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(uncTRIPS = \"uncSIM$fitted.values\")\n\n\nRepeat the same step by for Origin Constrained SIM (i.e. orcSIM)\n\n\nCode\ndf &lt;- as.data.frame(orcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\n\n\nCode\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(orcTRIPS = \"orcSIM$fitted.values\")\n\n\nRepeat the same step by for Destination Constrained SIM (i.e. decSIM)\n\n\nCode\ndf &lt;- as.data.frame(decSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\n\n\nCode\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(decTRIPS = \"decSIM$fitted.values\")\n\n\nRepeat the same step by for Doubly Constrained SIM (i.e. dbcSIM)\n\n\nCode\ndf &lt;- as.data.frame(dbcSIM$fitted.values) %&gt;%\n  round(digits = 0)\n\n\n\n\nCode\nSIM_data &lt;- SIM_data %&gt;%\n  cbind(df) %&gt;%\n  rename(dbcTRIPS = \"dbcSIM$fitted.values\")\n\n\n\n\nCode\nunc_p &lt;- ggplot(data = SIM_data,\n                aes(x = uncTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\norc_p &lt;- ggplot(data = SIM_data,\n                aes(x = orcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndec_p &lt;- ggplot(data = SIM_data,\n                aes(x = decTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\ndbc_p &lt;- ggplot(data = SIM_data,\n                aes(x = dbcTRIPS,\n                    y = TRIPS)) +\n  geom_point() +\n  geom_smooth(method = lm)\n\n# Use patchwork to arrange the plots\n(unc_p | orc_p) / (dec_p | dbc_p)"
  },
  {
    "objectID": "in-class/ice5.html",
    "href": "in-class/ice5.html",
    "title": "In-class Exercise 4 - Spatial Econometric Interaction Models (SIEM)",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "in-class/ice5.html#building-the-geographical-map",
    "href": "in-class/ice5.html#building-the-geographical-map",
    "title": "In-class Exercise 4 - Spatial Econometric Interaction Models (SIEM)",
    "section": "3.1 Building the geographical map",
    "text": "3.1 Building the geographical map\nShapefile will be imported into R environment as a sf tibble data.frame called mpsz\n\n\nCode\nmpsz &lt;- st_read(dsn = \"../data/geospatial\",\n                layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs=3414)  %&gt;%\n  mutate(\n    SUBZONE_N = as.factor(SUBZONE_N),\n    SUBZONE_C = as.factor(SUBZONE_C),\n    PLN_AREA_N = as.factor(PLN_AREA_N),\n    PLN_AREA_C = as.factor(PLN_AREA_C),\n    REGION_N = as.factor(REGION_N),\n    REGION_C = as.factor(REGION_C),\n  )\n\n\nReading layer `MPSZ-2019' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nCode\n# check the output\nglimpse(mpsz)\n\n\nRows: 332\nColumns: 7\n$ SUBZONE_N  &lt;fct&gt; MARINA EAST, INSTITUTION HILL, ROBERTSON QUAY, JURONG ISLAN…\n$ SUBZONE_C  &lt;fct&gt; MESZ01, RVSZ05, SRSZ01, WISZ01, MUSZ02, MPSZ05, WISZ03, WIS…\n$ PLN_AREA_N &lt;fct&gt; MARINA EAST, RIVER VALLEY, SINGAPORE RIVER, WESTERN ISLANDS…\n$ PLN_AREA_C &lt;fct&gt; ME, RV, SR, WI, MU, MP, WI, WI, SI, SI, BM, DT, SV, BM, BM,…\n$ REGION_N   &lt;fct&gt; CENTRAL REGION, CENTRAL REGION, CENTRAL REGION, WEST REGION…\n$ REGION_C   &lt;fct&gt; CR, CR, CR, WR, CR, CR, WR, WR, CR, CR, CR, CR, CR, CR, CR,…\n$ geometry   &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((33222.98 29..., MULTIPOLYGON (…\n\n\n\n\nCode\nbusstop &lt;- st_read(dsn = \"../data/geospatial\",\n                   layer = \"BusStop\") %&gt;%\n  st_transform(crs = 3414)\n\n\nReading layer `BusStop' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n\nCode\n# check the data\nglimpse(busstop)\n\n\nRows: 5,159\nColumns: 4\n$ BUS_STOP_N &lt;chr&gt; \"22069\", \"32071\", \"44331\", \"96081\", \"11561\", \"66191\", \"2338…\n$ BUS_ROOF_N &lt;chr&gt; \"B06\", \"B23\", \"B01\", \"B05\", \"B05\", \"B03\", \"B02A\", \"B02\", \"B…\n$ LOC_DESC   &lt;chr&gt; \"OPP CEVA LOGISTICS\", \"AFT TRACK 13\", \"BLK 239\", \"GRACE IND…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\nIn this study our analysis will be focused on planning subzone with bus stop. In view of this, the code chunk below will be used to perform Point-in-Polygon count analysis.\n\nthis is a code, fix it later\n#####} eval: false mpsz_busstop &lt;- st_intersection(busstop, mpsz) %&gt;% filter = BUSSTOP_COUNT\n\n\neval can be set to true once the flow is fix\n\n\nCode\ncentroids &lt;- suppressWarnings({\nst_point_on_surface(st_geometry(mpsz_busstop))\n})\n\nmpsz_nb &lt;- list(\n  \"by_contiguity\" = poly2nb(mpsz_busstop),\n  \"by_distance\" = dnearneigh(centroids, d1 = 0, d2 = 5000),\n  \"by_knn\" = knn2nb(knearneigh(centroids,3))\n  )\n\n\n\n\nCode\nmpsz_nb"
  },
  {
    "objectID": "in-class/ice5.html#preparing-the-spatial-weight",
    "href": "in-class/ice5.html#preparing-the-spatial-weight",
    "title": "In-class Exercise 4 - Spatial Econometric Interaction Models (SIEM)",
    "section": "3.2 Preparing the Spatial Weight",
    "text": "3.2 Preparing the Spatial Weight\n\n\nCode\nschools &lt;- read_rds(\"../data/rds/schools.rds\")\n\n\nimport the rest\n\nThings to learn\nLet us retrieve by using the code chunk below\n\n\nCode\nmpsz_nb &lt;- read_rds(\"../data/rds/mpsz_nb.rds\")\nmpsz_flow &lt;- read_rds(\"../data/rds/mpsz_flow.rds\")\nmpsz_var &lt;- read_rds(\"../data/rds/mpsz_var.rds\")\n\n\ncheck the data\n\n\nCode\nglimpse(mpsz_nb)\n\n\nList of 3\n $ by_contiguity:List of 313\n  ..$ : int [1:4] 2 3 66 69\n  ..$ : int [1:7] 1 3 32 37 38 69 80\n  ..$ : int [1:7] 1 2 38 65 66 67 71\n  ..$ : int [1:4] 47 75 87 281\n  ..$ : int [1:2] 6 9\n  ..$ : int [1:8] 5 7 8 9 10 12 16 19\n  ..$ : int [1:5] 6 11 12 19 23\n  ..$ : int [1:4] 6 19 28 31\n  ..$ : int [1:7] 5 6 10 13 17 18 70\n  ..$ : int [1:5] 6 9 12 13 16\n  ..$ : int [1:5] 7 14 15 19 23\n  ..$ : int [1:6] 6 7 10 16 20 23\n  ..$ : int [1:6] 9 10 16 17 21 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:5] 11 14 19 23 25\n  ..$ : int [1:9] 6 10 12 13 20 22 27 29 34\n  ..$ : int [1:5] 9 13 18 21 41\n  ..$ : int [1:5] 9 17 39 41 70\n  ..$ : int [1:9] 6 7 8 11 15 25 28 30 31\n  ..$ : int [1:6] 12 16 23 27 32 280\n  ..$ : int [1:6] 13 17 22 36 40 41\n  ..$ : int [1:7] 13 16 21 29 34 35 36\n  ..$ : int [1:10] 7 11 12 14 15 20 25 26 32 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:8] 15 19 23 24 26 30 33 67\n  ..$ : int [1:6] 23 24 25 32 33 38\n  ..$ : int [1:5] 16 20 29 32 37\n  ..$ : int [1:5] 8 19 30 31 64\n  ..$ : int [1:5] 16 22 27 34 37\n  ..$ : int [1:5] 19 25 28 64 67\n  ..$ : int [1:4] 8 19 28 64\n  ..$ : int [1:9] 2 20 23 26 27 33 37 38 280\n  ..$ : int [1:6] 24 25 26 32 38 67\n  ..$ : int [1:6] 16 22 29 35 37 42\n  ..$ : int [1:5] 22 34 36 42 85\n  ..$ : int [1:8] 21 22 35 40 41 42 68 85\n  ..$ : int [1:7] 2 27 29 32 34 42 80\n  ..$ : int [1:6] 2 3 26 32 33 67\n  ..$ : int [1:6] 18 41 51 54 70 76\n  ..$ : int [1:6] 21 36 41 43 46 68\n  ..$ : int [1:8] 17 18 21 36 39 40 46 76\n  ..$ : int [1:6] 34 35 36 37 80 85\n  ..$ : int [1:6] 40 46 48 68 85 278\n  ..$ : int [1:4] 61 82 110 121\n  ..$ : int [1:5] 62 73 79 83 116\n  ..$ : int [1:8] 40 41 43 49 68 76 115 278\n  ..$ : int [1:5] 4 58 84 281 282\n  ..$ : int [1:5] 43 68 85 136 278\n  ..$ : int [1:5] 46 54 76 115 119\n  ..$ : int [1:7] 80 85 86 125 126 131 136\n  ..$ : int [1:6] 39 54 70 118 120 127\n  ..$ : int [1:5] 61 78 111 121 132\n  ..$ : int [1:4] 75 87 128 134\n  ..$ : int [1:7] 39 49 51 76 119 120 135\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:4] 112 118 138 139\n  ..$ : int [1:3] 60 117 126\n  ..$ : int [1:7] 47 84 116 122 123 266 282\n  ..$ : int [1:4] 87 134 137 281\n  ..$ : int [1:8] 57 69 74 77 78 86 117 126\n  ..$ : int [1:5] 44 52 71 78 121\n  ..$ : int [1:6] 45 73 79 82 110 116\n  ..$ : int [1:4] 55 114 129 130\n  ..$ : int [1:5] 28 30 31 67 84\n  ..$ : int [1:5] 3 67 71 73 79\n  ..$ : int [1:5] 1 3 69 71 78\n  ..$ : int [1:11] 3 25 30 33 38 64 65 72 73 81 ...\n  ..$ : int [1:6] 36 40 43 46 48 85\n  ..$ : int [1:8] 1 2 60 66 74 77 78 80\n  ..$ : int [1:5] 9 18 39 51 118\n  ..$ : int [1:7] 3 61 65 66 78 79 82\n  ..$ : int [1:5] 67 73 81 83 84\n  ..$ : int [1:7] 45 62 65 67 72 79 83\n  ..$ : int [1:5] 60 69 77 78 80\n  ..$ : int [1:4] 4 53 87 281\n  ..$ : int [1:5] 39 41 46 49 54\n  ..$ : int [1:5] 60 69 74 80 86\n  ..$ : int [1:7] 52 60 61 66 69 71 74\n  ..$ : int [1:7] 45 62 65 71 73 82 110\n  ..$ : int [1:9] 2 37 42 50 69 74 77 85 86\n  ..$ : int [1:5] 67 72 83 84 266\n  ..$ : int [1:5] 44 62 71 79 110\n  ..$ : int [1:6] 45 72 73 81 116 266\n  ..$ : int [1:7] 47 58 64 67 72 81 266\n  ..$ : int [1:9] 35 36 42 43 48 50 68 80 136\n  ..$ : int [1:5] 50 60 77 80 126\n  ..$ : int [1:6] 4 53 59 75 134 281\n  ..$ : int [1:9] 91 105 108 109 129 130 133 203 287\n  ..$ : int [1:6] 96 103 122 140 178 282\n  ..$ : int [1:7] 100 127 138 141 175 181 271\n  ..$ : int [1:7] 88 108 129 133 139 179 185\n  ..$ : int [1:6] 101 125 131 136 177 194\n  ..$ : int [1:6] 98 102 134 137 188 192\n  ..$ : int [1:5] 126 131 142 176 177\n  ..$ : int [1:7] 101 119 124 135 175 190 193\n  ..$ : int [1:7] 89 102 103 137 178 202 282\n  ..$ : int [1:6] 99 104 106 107 144 145\n  ..$ : int [1:7] 93 134 143 149 188 192 196\n  ..$ : int [1:7] 97 107 142 145 176 182 187\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language poly2nb(pl = mpsz_busstop)\n  ..- attr(*, \"type\")= chr \"queen\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_distance  :List of 313\n  ..$ : int [1:91] 2 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 3 5 6 7 8 9 10 11 12 ...\n  ..$ : int [1:91] 1 2 4 6 7 8 9 10 11 12 ...\n  ..$ : int [1:56] 3 6 7 8 11 14 15 19 23 24 ...\n  ..$ : int [1:34] 1 2 6 7 8 9 10 11 12 13 ...\n  ..$ : int [1:62] 1 2 3 4 5 7 8 9 10 11 ...\n  ..$ : int [1:74] 1 2 3 4 5 6 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 4 5 6 7 10 11 12 ...\n  ..$ : int [1:53] 1 2 3 5 6 7 10 11 12 13 ...\n  ..$ : int [1:74] 1 2 3 5 6 7 8 9 11 12 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:76] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:64] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:44] 2 9 10 12 13 16 17 20 21 22 ...\n  ..$ : int [1:73] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:80] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:72] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:82] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:79] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:82] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:81] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:75] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:78] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:67] 1 2 3 4 5 6 7 8 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:83] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:87] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 5 6 7 9 10 11 12 ...\n  ..$ : int [1:75] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:89] 1 2 3 5 6 7 8 9 10 11 ...\n  ..$ : int [1:86] 1 2 3 4 5 6 7 8 9 10 ...\n  ..$ : int [1:41] 9 10 13 17 18 21 22 29 34 35 ...\n  ..$ : int [1:59] 1 2 9 10 12 13 16 17 18 20 ...\n  ..$ : int [1:49] 2 9 10 13 16 17 18 20 21 22 ...\n  ..$ : int [1:89] 1 2 3 6 7 9 10 11 12 13 ...\n  ..$ : int [1:63] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:97] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:54] 9 10 13 16 17 18 21 22 29 34 ...\n  ..$ : int [1:71] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:65] 1 2 9 10 13 16 17 18 20 21 ...\n  ..$ : int [1:43] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:87] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:38] 18 39 40 41 43 46 48 49 54 56 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 10 11 12 13 ...\n  ..$ : int [1:16] 59 75 87 93 98 102 128 134 137 143 ...\n  ..$ : int [1:41] 18 36 39 40 41 43 46 48 49 50 ...\n  ..$ : int [1:12] 63 88 105 109 113 114 129 130 146 203 ...\n  ..$ : int [1:30] 49 51 54 70 76 90 91 95 100 112 ...\n  ..$ : int [1:96] 1 2 3 7 10 11 12 13 14 15 ...\n  ..$ : int [1:84] 1 2 3 4 7 8 11 14 15 19 ...\n  ..$ : int [1:35] 4 31 47 53 58 64 75 81 83 84 ...\n  ..$ : int [1:101] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:13] 55 88 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:85] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:66] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:99] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:24] 17 18 39 40 41 43 46 48 49 51 ...\n  ..$ : int [1:96] 1 2 3 4 6 7 8 9 10 11 ...\n  ..$ : int [1:89] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:92] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:100] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:21] 4 47 53 58 59 87 89 93 96 98 ...\n  ..$ : int [1:39] 17 18 21 35 36 39 40 41 42 43 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:97] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:93] 1 2 3 6 7 8 9 10 11 12 ...\n  ..$ : int [1:90] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:95] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:94] 1 2 3 4 6 7 8 10 11 12 ...\n  ..$ : int [1:88] 1 2 3 4 6 7 8 11 12 14 ...\n  ..$ : int [1:74] 1 2 3 9 10 12 13 16 17 18 ...\n  ..$ : int [1:93] 1 2 3 7 9 10 11 12 13 14 ...\n  ..$ : int [1:27] 4 47 53 58 59 75 84 89 93 96 ...\n  ..$ : int [1:21] 55 63 91 105 108 109 113 114 129 130 ...\n  ..$ : int [1:68] 3 4 44 45 47 52 58 59 61 62 ...\n  ..$ : int [1:45] 49 51 54 56 76 91 95 100 101 112 ...\n  ..$ : int [1:32] 56 63 88 90 100 108 109 112 113 114 ...\n  ..$ : int [1:51] 35 36 39 40 41 42 43 46 48 49 ...\n  ..$ : int [1:27] 53 59 75 87 89 96 98 102 103 128 ...\n  ..$ : int [1:71] 1 2 3 22 27 29 34 35 36 37 ...\n  ..$ : int [1:47] 39 43 46 48 49 51 54 56 76 85 ...\n  ..$ : int [1:59] 4 44 45 47 58 59 62 64 72 73 ...\n  ..$ : int [1:82] 1 3 33 38 44 45 47 52 57 58 ...\n  ..$ : int [1:23] 53 59 75 87 93 102 128 134 137 143 ...\n  ..$ : int [1:79] 1 2 3 38 44 45 50 52 57 58 ...\n  .. [list output truncated]\n  ..- attr(*, \"class\")= chr \"nb\"\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language dnearneigh(x = centroids, d1 = 0, d2 = 5000)\n  ..- attr(*, \"dnn\")= num [1:2] 0 5000\n  ..- attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n  ..- attr(*, \"nbtype\")= chr \"distance\"\n  ..- attr(*, \"sym\")= logi TRUE\n $ by_knn       :List of 313\n  ..$ : int [1:3] 2 66 69\n  ..$ : int [1:3] 1 37 69\n  ..$ : int [1:3] 38 65 71\n  ..$ : int [1:3] 31 47 281\n  ..$ : int [1:3] 6 7 12\n  ..$ : int [1:3] 7 8 19\n  ..$ : int [1:3] 11 14 23\n  ..$ : int [1:3] 19 28 31\n  ..$ : int [1:3] 10 13 17\n  ..$ : int [1:3] 13 16 22\n  ..$ : int [1:3] 7 14 15\n  ..$ : int [1:3] 7 20 23\n  ..$ : int [1:3] 10 16 22\n  ..$ : int [1:3] 11 15 23\n  ..$ : int [1:3] 11 14 25\n  ..$ : int [1:3] 10 13 29\n  ..$ : int [1:3] 9 21 36\n  ..$ : int [1:3] 17 40 41\n  ..$ : int [1:3] 8 11 15\n  ..$ : int [1:3] 12 27 280\n  ..$ : int [1:3] 17 35 36\n  ..$ : int [1:3] 13 34 35\n  ..$ : int [1:3] 11 14 280\n  ..$ : int [1:3] 25 26 33\n  ..$ : int [1:3] 24 26 30\n  ..$ : int [1:3] 24 25 33\n  ..$ : int [1:3] 20 29 37\n  ..$ : int [1:3] 25 30 31\n  ..$ : int [1:3] 16 27 34\n  ..$ : int [1:3] 24 25 28\n  ..$ : int [1:3] 8 28 30\n  ..$ : int [1:3] 23 38 280\n  ..$ : int [1:3] 24 26 38\n  ..$ : int [1:3] 22 29 35\n  ..$ : int [1:3] 22 34 42\n  ..$ : int [1:3] 21 35 68\n  ..$ : int [1:3] 2 27 29\n  ..$ : int [1:3] 3 26 33\n  ..$ : int [1:3] 41 46 76\n  ..$ : int [1:3] 36 41 68\n  ..$ : int [1:3] 18 39 40\n  ..$ : int [1:3] 34 35 80\n  ..$ : int [1:3] 46 48 85\n  ..$ : int [1:3] 61 82 110\n  ..$ : int [1:3] 62 81 83\n  ..$ : int [1:3] 43 48 278\n  ..$ : int [1:3] 4 58 266\n  ..$ : int [1:3] 43 85 278\n  ..$ : int [1:3] 54 76 119\n  ..$ : int [1:3] 80 85 131\n  ..$ : int [1:3] 54 118 120\n  ..$ : int [1:3] 61 78 111\n  ..$ : int [1:3] 75 93 134\n  ..$ : int [1:3] 51 76 120\n  ..$ : int [1:3] 63 130 267\n  ..$ : int [1:3] 112 138 139\n  ..$ : int [1:3] 60 86 117\n  ..$ : int [1:3] 122 123 266\n  ..$ : int [1:3] 75 87 137\n  ..$ : int [1:3] 57 74 86\n  ..$ : int [1:3] 44 52 82\n  ..$ : int [1:3] 45 83 110\n  ..$ : int [1:3] 55 114 130\n  ..$ : int [1:3] 67 72 84\n  ..$ : int [1:3] 3 67 73\n  ..$ : int [1:3] 1 71 78\n  ..$ : int [1:3] 33 65 73\n  ..$ : int [1:3] 40 43 85\n  ..$ : int [1:3] 1 74 78\n  ..$ : int [1:3] 39 51 76\n  ..$ : int [1:3] 3 66 82\n  ..$ : int [1:3] 73 81 83\n  ..$ : int [1:3] 72 79 82\n  ..$ : int [1:3] 60 69 77\n  ..$ : int [1:3] 59 87 281\n  ..$ : int [1:3] 39 49 54\n  ..$ : int [1:3] 74 80 86\n  ..$ : int [1:3] 52 66 69\n  ..$ : int [1:3] 44 73 82\n  ..$ : int [1:3] 42 77 86\n  ..$ : int [1:3] 72 83 266\n  ..$ : int [1:3] 44 73 79\n  ..$ : int [1:3] 45 62 81\n  ..$ : int [1:3] 72 81 266\n  ..$ : int [1:3] 43 48 68\n  ..$ : int [1:3] 60 74 77\n  ..$ : int [1:3] 59 75 281\n  ..$ : int [1:3] 109 129 130\n  ..$ : int [1:3] 96 103 140\n  ..$ : int [1:3] 100 141 181\n  ..$ : int [1:3] 108 133 179\n  ..$ : int [1:3] 125 136 177\n  ..$ : int [1:3] 134 188 192\n  ..$ : int [1:3] 126 142 176\n  ..$ : int [1:3] 135 141 193\n  ..$ : int [1:3] 89 102 178\n  ..$ : int [1:3] 104 106 107\n  ..$ : int [1:3] 143 149 192\n  ..$ : int [1:3] 107 182 187\n  .. [list output truncated]\n  ..- attr(*, \"region.id\")= chr [1:313] \"1\" \"2\" \"3\" \"4\" ...\n  ..- attr(*, \"call\")= language knearneigh(x = centroids, k = 3)\n  ..- attr(*, \"sym\")= logi FALSE\n  ..- attr(*, \"type\")= chr \"knn\"\n  ..- attr(*, \"knn-k\")= num 3\n  ..- attr(*, \"class\")= chr \"nb\"\n\n\n\n\nCode\nglimpse(mpsz_flow)\n\n\nRows: 97,969\nColumns: 4\n$ ORIGIN_SZ &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ17\", …\n$ DESTIN_SZ &lt;chr&gt; \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", \"RVSZ05\", …\n$ DISTANCE  &lt;dbl&gt; 0.0000, 305.7370, 951.8314, 5254.0664, 4975.0021, 3176.1592,…\n$ TRIPS     &lt;dbl&gt; 67, 549, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, …\n\n\n\n\nCode\nglimpse(mpsz_var)\n\n\nRows: 313\nColumns: 14\n$ SZ_NAME        &lt;chr&gt; \"INSTITUTION HILL\", \"ROBERTSON QUAY\", \"FORT CANNING\", \"…\n$ SZ_CODE        &lt;chr&gt; \"RVSZ05\", \"SRSZ01\", \"MUSZ02\", \"MPSZ05\", \"SISZ01\", \"BMSZ…\n$ BUSSTOP_COUNT  &lt;int&gt; 2, 10, 6, 2, 1, 10, 5, 4, 21, 11, 2, 9, 6, 1, 4, 7, 24,…\n$ AGE7_12        &lt;dbl&gt; 330, 320, 0, 0, 200, 0, 0, 0, 350, 470, 0, 300, 390, 0,…\n$ AGE13_24       &lt;dbl&gt; 360, 350, 10, 0, 260, 0, 0, 0, 460, 1160, 0, 760, 890, …\n$ AGE25_64       &lt;dbl&gt; 2260, 2200, 30, 0, 1440, 0, 0, 0, 2600, 6260, 630, 4350…\n$ geometry       &lt;MULTIPOLYGON [m]&gt; MULTIPOLYGON (((28481.45 30..., MULTIPOLYG…\n$ SCHOOL_COUNT   &lt;int&gt; 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 1, 0, 0, 0, 1, 0, 0…\n$ BUSINESS_COUNT &lt;int&gt; 6, 4, 7, 0, 1, 11, 15, 1, 10, 1, 17, 6, 0, 0, 51, 2, 3,…\n$ RETAILS_COUNT  &lt;int&gt; 26, 207, 17, 0, 84, 14, 52, 0, 460, 34, 263, 55, 37, 1,…\n$ FINSERV_COUNT  &lt;int&gt; 3, 18, 0, 0, 29, 4, 6, 0, 34, 4, 26, 4, 3, 6, 59, 3, 8,…\n$ ENTERTN_COUNT  &lt;int&gt; 0, 6, 3, 0, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0…\n$ FB_COUNT       &lt;int&gt; 4, 38, 4, 0, 38, 15, 5, 0, 20, 0, 9, 25, 0, 0, 9, 1, 3,…\n$ LR_COUNT       &lt;int&gt; 3, 11, 7, 0, 20, 0, 0, 0, 19, 2, 4, 4, 1, 1, 13, 0, 17,…"
  },
  {
    "objectID": "in-class/ice5.html#the-base-model",
    "href": "in-class/ice5.html#the-base-model",
    "title": "In-class Exercise 4 - Spatial Econometric Interaction Models (SIEM)",
    "section": "5.1 The Base Model",
    "text": "5.1 The Base Model\n\n\nCode\nbase_model &lt;- spflow(\n  spflow_formula = log(1 + TRIPS) ~\n    O_(BUSSTOP_COUNT +\n         AGE25_64) +\n    D_(SCHOOL_COUNT +\n         BUSINESS_COUNT +\n         RETAILS_COUNT +\n         FINSERV_COUNT) +\n         P_(log(DISTANCE + 1)),\n       spflow_networks = mpsz_multi_net)\n  \nbase_model\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_9)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd   t.stat  p.val\nrho_d                   0.680  0.004  192.553  0.000\nrho_o                   0.678  0.004  187.733  0.000\nrho_w                  -0.396  0.006  -65.591  0.000\n(Intercept)             0.410  0.065    6.266  0.000\n(Intra)                 1.313  0.081   16.263  0.000\nD_SCHOOL_COUNT          0.017  0.002    7.885  0.000\nD_SCHOOL_COUNT.lag1     0.002  0.004    0.551  0.581\nD_BUSINESS_COUNT        0.000  0.000    3.015  0.003\nD_BUSINESS_COUNT.lag1   0.000  0.000   -0.249  0.804\nD_RETAILS_COUNT         0.000  0.000   -0.306  0.759\nD_RETAILS_COUNT.lag1    0.000  0.000    0.152  0.880\nD_FINSERV_COUNT         0.002  0.000    6.787  0.000\nD_FINSERV_COUNT.lag1   -0.002  0.001   -3.767  0.000\nO_BUSSTOP_COUNT         0.002  0.000    6.807  0.000\nO_BUSSTOP_COUNT.lag1   -0.001  0.000   -2.364  0.018\nO_AGE25_64              0.000  0.000    7.336  0.000\nO_AGE25_64.lag1         0.000  0.000   -2.797  0.005\nP_log(DISTANCE + 1)    -0.050  0.007   -6.793  0.000\n\n--------------------------------------------------\nR2_corr: 0.6942944  \nObservations: 97969  \nModel coherence: Validated\n\n\n\nnote that many of the lag1 are statistically significant. this signifies that neighboring area can actually affect the number of trips as well.\n\n\n\nCode\nold_par &lt;- par(mfrow = c(1, 3),\n               mar = c(2,2,2,2))\nspflow_moran_plots(base_model)\n\n\n\n\n\nCode\npar(old_par)\n\n\n\n\nCode\ncorr_residual &lt;- pair_cor(base_model)\ncolnames(corr_residual) &lt;- substr(colnames(corr_residual), 1,3)\ncor_image(corr_residual)"
  },
  {
    "objectID": "in-class/ice5.html#working-with-model-control",
    "href": "in-class/ice5.html#working-with-model-control",
    "title": "In-class Exercise 4 - Spatial Econometric Interaction Models (SIEM)",
    "section": "5.2 Working with model control",
    "text": "5.2 Working with model control\nthe original code is for model_8\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_8\")\n  \nmle_model8 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model8\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: MLE  \nSpatial correlation structure: SDM (model_8)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\nrho_d                   0.689  0.003   196.832  0.000\nrho_o                   0.687  0.004   192.214  0.000\nrho_w                  -0.473  0.003  -142.469  0.000\n(Intercept)             1.086  0.049    22.275  0.000\n(Intra)                 0.840  0.075    11.255  0.000\nD_SCHOOL_COUNT          0.019  0.002     8.896  0.000\nD_SCHOOL_COUNT.lag1     0.019  0.004     5.130  0.000\nD_BUSINESS_COUNT        0.000  0.000     3.328  0.001\nD_BUSINESS_COUNT.lag1   0.000  0.000     1.664  0.096\nD_RETAILS_COUNT         0.000  0.000    -0.414  0.679\nD_RETAILS_COUNT.lag1    0.000  0.000    -0.171  0.864\nD_FINSERV_COUNT         0.002  0.000     6.150  0.000\nD_FINSERV_COUNT.lag1   -0.003  0.001    -4.601  0.000\nO_BUSSTOP_COUNT         0.003  0.000     7.676  0.000\nO_BUSSTOP_COUNT.lag1    0.000  0.000     0.552  0.581\nO_AGE25_64              0.000  0.000     6.870  0.000\nO_AGE25_64.lag1         0.000  0.000    -0.462  0.644\nP_log(DISTANCE + 1)    -0.125  0.005   -22.865  0.000\n\n--------------------------------------------------\nR2_corr: 0.6965974  \nObservations: 97969  \nModel coherence: Validated\n\n\nnext, change to model_1\n\n\nCode\nspflow_formula &lt;- log(1 + TRIPS) ~\n  O_(BUSSTOP_COUNT +\n         AGE25_64) +\n  D_(SCHOOL_COUNT +\n       BUSINESS_COUNT +\n       RETAILS_COUNT +\n       FINSERV_COUNT) +\n  P_(log(DISTANCE + 1))\n\nmodel_control &lt;- spflow_control(\n  estimation_method = \"mle\",\n  model = \"model_1\")\n  \nmle_model1 &lt;- spflow(\n  spflow_formula,\n  spflow_networks = mpsz_multi_net,\n  estimation_control = model_control)\n\nmle_model1\n\n\n--------------------------------------------------\nSpatial interaction model estimated by: OLS  \nSpatial correlation structure: SLX (model_1)\nDependent variable: log(1 + TRIPS)\n\n--------------------------------------------------\nCoefficients:\n                          est     sd    t.stat  p.val\n(Intercept)            11.384  0.069   164.255  0.000\n(Intra)                -6.006  0.112   -53.393  0.000\nD_SCHOOL_COUNT          0.093  0.003    28.599  0.000\nD_SCHOOL_COUNT.lag1     0.255  0.006    44.905  0.000\nD_BUSINESS_COUNT        0.001  0.000    10.036  0.000\nD_BUSINESS_COUNT.lag1   0.003  0.000    18.274  0.000\nD_RETAILS_COUNT         0.000  0.000    -1.940  0.052\nD_RETAILS_COUNT.lag1    0.000  0.000    -2.581  0.010\nD_FINSERV_COUNT         0.005  0.000    10.979  0.000\nD_FINSERV_COUNT.lag1   -0.016  0.001   -17.134  0.000\nO_BUSSTOP_COUNT         0.014  0.001    25.865  0.000\nO_BUSSTOP_COUNT.lag1    0.015  0.001    21.728  0.000\nO_AGE25_64              0.000  0.000    14.479  0.000\nO_AGE25_64.lag1         0.000  0.000    14.452  0.000\nP_log(DISTANCE + 1)    -1.281  0.008  -165.327  0.000\n\n--------------------------------------------------\nR2_corr: 0.2831458  \nObservations: 97969  \nModel coherence: Validated"
  },
  {
    "objectID": "take-home/the1.html",
    "href": "take-home/the1.html",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "",
    "text": "Illustration"
  },
  {
    "objectID": "take-home/the1.html#import-library",
    "href": "take-home/the1.html#import-library",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "2.1 Import Library",
    "text": "2.1 Import Library\n\npacman::p_load(tmap, sf, tidyverse, sfdep, knitr, Hmisc, mapview, DT)\n\nExplanations for the imported library:\n\ntmap for visualizing geospatial\nsf for handling geospatial data\ntidyverse for handling aspatial data\nsfdep for computing spatial weights, global and local spatial autocorrelation statistics, and\nknitr for creating html tables\nHmisc for summary statistics\nmapview for interactive map backgrouds\nDT library to create interactive html tables"
  },
  {
    "objectID": "take-home/the1.html#import-and-setup-the-data",
    "href": "take-home/the1.html#import-and-setup-the-data",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "2.2 Import and Setup the Data",
    "text": "2.2 Import and Setup the Data\nThe following section will import the required aspatial and geospatial dataset.\n\nAspatial\nthe following code will import all the origin destination bus data and show the summary statistics of the dataset. The process involved:\n\nimport the csv file using read_csv function from readr package\nusing mutate from dplyr package, transform georeference data type into factors for easing compatibility issue and more efficient processing.\nusing describe from hmisc package, display the summary statistics of the dataset.\n\n\nAugust 2023September 2023October 2023\n\n\n\n\nCode\n# Load each csv file\nodb8 &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202308.csv.gz\")\n\n# change georeference data type into factors\nodb8 &lt;- odb8 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n# check the dataframe\ndescribe(odb8)\n\n\nodb8 \n\n 7  Variables      5709512  Observations\n--------------------------------------------------------------------------------\nYEAR_MONTH \n       n  missing distinct    value \n 5709512        0        1  2023-08 \n                  \nValue      2023-08\nFrequency  5709512\nProportion       1\n--------------------------------------------------------------------------------\nDAY_TYPE \n       n  missing distinct \n 5709512        0        2 \n                                            \nValue               WEEKDAY WEEKENDS/HOLIDAY\nFrequency           3279836          2429676\nProportion            0.574            0.426\n--------------------------------------------------------------------------------\nTIME_PER_HOUR \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5709512        0       24    0.997    14.07    5.949        6        7 \n     .25      .50      .75      .90      .95 \n      10       14       18       21       22 \n\nlowest :  0  1  2  3  4, highest: 19 20 21 22 23\n--------------------------------------------------------------------------------\nPT_TYPE \n       n  missing distinct    value \n 5709512        0        1      BUS \n                  \nValue          BUS\nFrequency  5709512\nProportion       1\n--------------------------------------------------------------------------------\nORIGIN_PT_CODE \n       n  missing distinct \n 5709512        0     5067 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nDESTINATION_PT_CODE \n       n  missing distinct \n 5709512        0     5071 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nTOTAL_TRIPS \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5709512        0     3544    0.982    21.04    33.59        1        1 \n     .25      .50      .75      .90      .95 \n       2        4       13       38       74 \n\nlowest :     1     2     3     4     5, highest: 30799 31669 32508 33424 35049\n--------------------------------------------------------------------------------\n\n\n\n\n\n\nCode\n# Load each csv file\nodb9 &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202309.csv.gz\")\n\n# change georeference data type into factors\nodb9 &lt;- odb9 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n\n# check the dataframe\ndescribe(odb9)\n\n\nodb9 \n\n 7  Variables      5714196  Observations\n--------------------------------------------------------------------------------\nYEAR_MONTH \n       n  missing distinct    value \n 5714196        0        1  2023-09 \n                  \nValue      2023-09\nFrequency  5714196\nProportion       1\n--------------------------------------------------------------------------------\nDAY_TYPE \n       n  missing distinct \n 5714196        0        2 \n                                            \nValue               WEEKDAY WEEKENDS/HOLIDAY\nFrequency           3183300          2530896\nProportion            0.557            0.443\n--------------------------------------------------------------------------------\nTIME_PER_HOUR \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5714196        0       23    0.997    14.06     5.94        6        7 \n     .25      .50      .75      .90      .95 \n      10       14       18       21       22 \n\nlowest :  0  1  2  4  5, highest: 19 20 21 22 23\n--------------------------------------------------------------------------------\nPT_TYPE \n       n  missing distinct    value \n 5714196        0        1      BUS \n                  \nValue          BUS\nFrequency  5714196\nProportion       1\n--------------------------------------------------------------------------------\nORIGIN_PT_CODE \n       n  missing distinct \n 5714196        0     5067 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nDESTINATION_PT_CODE \n       n  missing distinct \n 5714196        0     5072 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nTOTAL_TRIPS \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5714196        0     3274    0.981    19.59    31.01        1        1 \n     .25      .50      .75      .90      .95 \n       2        4       12       35       69 \n\nlowest :     1     2     3     4     5, highest: 27356 28248 28510 30096 31674\n--------------------------------------------------------------------------------\n\n\n\n\n\n\nCode\n# Load each csv file\nodb10 &lt;- read_csv(\"../data/aspatial/origin_destination_bus_202310.csv.gz\")\n\n# change georeference data type into factors\nodb10 &lt;- odb10 %&gt;%\n  mutate(\n    ORIGIN_PT_CODE = as.factor(ORIGIN_PT_CODE),\n    DESTINATION_PT_CODE = as.factor(DESTINATION_PT_CODE)\n  )\n\n# check the dataframe\ndescribe(odb10)\n\n\nodb10 \n\n 7  Variables      5694297  Observations\n--------------------------------------------------------------------------------\nYEAR_MONTH \n       n  missing distinct    value \n 5694297        0        1  2023-10 \n                  \nValue      2023-10\nFrequency  5694297\nProportion       1\n--------------------------------------------------------------------------------\nDAY_TYPE \n       n  missing distinct \n 5694297        0        2 \n                                            \nValue               WEEKDAY WEEKENDS/HOLIDAY\nFrequency           3259419          2434878\nProportion            0.572            0.428\n--------------------------------------------------------------------------------\nTIME_PER_HOUR \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5694297        0       23    0.997    14.04    5.933        6        7 \n     .25      .50      .75      .90      .95 \n      10       14       18       21       22 \n\nlowest :  0  1  2  4  5, highest: 19 20 21 22 23\n--------------------------------------------------------------------------------\nPT_TYPE \n       n  missing distinct    value \n 5694297        0        1      BUS \n                  \nValue          BUS\nFrequency  5694297\nProportion       1\n--------------------------------------------------------------------------------\nORIGIN_PT_CODE \n       n  missing distinct \n 5694297        0     5073 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nDESTINATION_PT_CODE \n       n  missing distinct \n 5694297        0     5077 \n\nlowest : 01012 01013 01019 01029 01039, highest: 99139 99161 99171 99181 99189\n--------------------------------------------------------------------------------\nTOTAL_TRIPS \n       n  missing distinct     Info     Mean      Gmd      .05      .10 \n 5694297        0     3495    0.982    20.76    33.13        1        1 \n     .25      .50      .75      .90      .95 \n       2        4       12       37       73 \n\nlowest :     1     2     3     4     5, highest: 30985 31349 32355 35931 36668\n--------------------------------------------------------------------------------\n\n\n\n\n\nExplanations for each field in the data can be found in the following metadata.\n\n\n\n\n\n\nmetadata\n\n\n\n\n\n\nYEAR_MONTH: Represent year and Month in which the data is collected. Since it is a monthly data frame, only one unique value exist in each data frame.\nDAY_TYPE: Represent type of the day which classified as weekdays or weekends/holidays.\nTIME_PER_HOUR: Hour which the passenger trip is based on, in intervals from 0 to 23 hours.\nPT_TYPE: Type of public transport, Since it is bus data sets, only one unique value exist in each data frame (i.e. bus)\nORIGIN_PT_CODE: ID of origin bus stop\nDESTINATION_PT_CODE: ID of destination bus stop\nTOTAL_TRIPS: Number of trips which represent passenger volumes\n\n\n\n\n\n\nGeospatial\nthe following panel show the import process for the bus stop geospatial data. The geospatial layer of the data shows point location of bus stops across Singapore.\n\nImport and Check the DataSetup EPSG Code, CRS and Prepare the data for joining\n\n\nThe geospatial data is imported using st_read function from sf package. As previously done, while reading the data, categorical data that can serve as reference are converted into factors for easing compatibility issue and more efficient processing. The imported dataset is then checked using glimpse function from dplyr package that shows the columns, a glimpse of the values and the data type.\n\nbusstop &lt;- st_read(\n    dsn = \"../data/geospatial\",\n    layer = \"BusStop\"\n  ) %&gt;%\n  mutate(\n    BUS_STOP_N = as.factor(BUS_STOP_N),\n    BUS_ROOF_N = as.factor(BUS_ROOF_N),\n    LOC_DESC = as.factor(LOC_DESC)\n  )\n\nReading layer `BusStop' from data source `C:\\ameernoor\\ISSS624\\data\\geospatial' using driver `ESRI Shapefile'\nSimple feature collection with 5159 features and 3 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 3970.122 ymin: 26482.1 xmax: 48280.78 ymax: 52983.82\nProjected CRS: SVY21\n\n# check the output\nglimpse(busstop)\n\nRows: 5,159\nColumns: 4\n$ BUS_STOP_N &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411, 285…\n$ BUS_ROOF_N &lt;fct&gt; B06, B23, B01, B05, B05, B03, B02A, B02, B09, B01, B16, B02…\n$ LOC_DESC   &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPENDEN…\n$ geometry   &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.38),…\n\n\n\nCheck the unique values\nTo see more of the data characteristics, the following panel will show the number of distinct values in each column. it use n_distinct function from dplyr package.\n\nBUS_STOP_NBUS_ROOF_NLOC_DESCgeometry\n\n\ncount of unique/distinct values are:\n\n\nCode\nn_distinct(busstop$BUS_STOP_N)\n\n\n[1] 5144\n\n\n\n\ncount of unique/distinct values are:\n\n\nCode\nn_distinct(busstop$BUS_ROOF_N)\n\n\n[1] 97\n\n\n\n\ncount of unique/distinct values are:\n\n\nCode\nn_distinct(busstop$LOC_DESC)\n\n\n[1] 4554\n\n\n\n\ncount of unique/distinct values are:\n\n\nCode\nn_distinct(busstop$geometry)\n\n\n[1] 5158\n\n\n\n\n\nExplanations for each field in the data can be found in the following metadata.\n\n\n\n\n\n\nmetadata\n\n\n\n\n\n\nBUS_STOP_N: The unique identifier for each bus stop.\nBUS_ROOF_N: The identifier for the bus route or roof associated with the bus stop.\nLOC_DESC: Location description providing additional information about the bus stop’s surroundings.\ngeometry: The spatial information representing the location of each bus stop as a point in the SVY21 projected coordinate reference system.\n\n\n\n\n\n\n\nTo ensure that geospatial data from different sources can be processed together, both have to be projected using similar coordinate systems and be assigned the correct EPSG code based on CRS. The st_crs function is used to check for ESPG Code and Coordinate System of both geospatial files. For Singapore, the coordinate system is SVY21 with EPSG 3414 (source: epsg.io). The following code chunk output shows how the CRS was initially not 3414, then corrected using st_set_crs. Both function are from sf package. Simultaneously, the dataframe is also prepared for joining process. It involve standardization of the data type to factor and using tolower function from base R package.\n\nCurrent CRS of busstop dataset:Assign new EPSG codeConfirm the updated EPSG code after the assignment\n\n\n\n\nCode\n# Check the current Coordinate Reference System (CRS) of the busstop dataset\nprint(st_crs(busstop))\n\n\nCoordinate Reference System:\n  User input: SVY21 \n  wkt:\nPROJCRS[\"SVY21\",\n    BASEGEOGCRS[\"WGS 84\",\n        DATUM[\"World Geodetic System 1984\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ID[\"EPSG\",6326]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"Degree\",0.0174532925199433]]],\n    CONVERSION[\"unnamed\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"Degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1,\n                ID[\"EPSG\",9001]]]]\n\n\n\n\n\n# Assign a new EPSG code (Spatial Reference ID)\nbusstop &lt;- st_set_crs(\n   busstop, \n   3414\n) %&gt;%\n# Rename the bus stop origin column for easier joining with the main dataframe\nmutate(\n   ORIGIN_PT_CODE = as.factor(BUS_STOP_N)\n) %&gt;%\nselect(\n   ORIGIN_PT_CODE, \n   LOC_DESC,\n   geometry\n) %&gt;%\n# Change all column names to lowercase for consistency\nrename_with(\n   tolower, everything()\n)\n\n\n\n\n\nCode\nprint(st_crs(busstop))\n\n\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]"
  },
  {
    "objectID": "take-home/the1.html#check-for-duplicates",
    "href": "take-home/the1.html#check-for-duplicates",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.1 Check for Duplicates",
    "text": "3.1 Check for Duplicates\nIn this step, we inspect the dataset for duplicate entries. This precautionary step is crucial to avoid the inadvertent repetition of records, which could lead to the overcounting of passenger trips. By identifying and addressing duplicates at this stage, we ensure the accuracy and reliability of our analysis, laying the groundwork for more precise and trustworthy results in the subsequent analytical processes. Checking for duplicates is a fundamental practice that contributes to the integrity of the data and the overall robustness of the geospatial analysis.\n\nAspatial - Origin Destination BusGeospatial - Bus Stop\n\n\nthe following code is used to check duplicates and show how many duplicates exist in each odb.\n\n\nCode\n# Count the number of rows in each dataframe with duplicates\ncount_duplicate_rows &lt;- function(df, df_name) {\n  df %&gt;%\n    group_by_all() %&gt;%\n    filter(n() &gt; 1) %&gt;%\n    ungroup() %&gt;%\n    summarise(df_name = df_name, row_count = n())\n}\n\n# Apply the function to each dataframe\nduplicate1 &lt;- count_duplicate_rows(odb8, \"odb8\")\nduplicate2 &lt;- count_duplicate_rows(odb9, \"odb9\")\nduplicate3 &lt;- count_duplicate_rows(odb10, \"odb10\")\n\n# Combine the results\nall_duplicates &lt;- bind_rows(duplicate1, duplicate2, duplicate3)\n\n# Print the counts\nprint(all_duplicates)\n\n\n# A tibble: 3 × 2\n  df_name row_count\n  &lt;chr&gt;       &lt;int&gt;\n1 odb8            0\n2 odb9            0\n3 odb10           0\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ngroup_by_all from dplyr package to group a data frame by all of its variables. Essentially, it creates groups based on every column present in the data frame.\nfilter from dplyr package to subset a data frame, retaining all rows that satisfy your conditions. To be retained, the row must produce a value of TRUE for all conditions.\nungroup from dplyr package to remove grouping information from a data frame. When you have a grouped data frame (created using functions like group_by), ungroup will return it to its original, ungrouped state. This is useful when you’ve finished performing grouped operations (like summarization) and want to perform operations that don’t require the data to be grouped, or to prevent accidental misinterpretation or errors in subsequent data manipulations that are not intended to be group-wise operations.\nfilter from dplyr package to subset a data frame, retaining all rows that satisfy your conditions. To be retained, the row must produce a value of TRUE for all conditions.\nsummarise from sf package used to compute summary statistics or aggregate values for groups of data. When used on spatial data frames (such as those handled by sf), summarise can perform operations like calculating the mean, maximum, or sum of a particular variable for each group. This function is often used in combination with group_by to define the groups for which the summary statistics will be calculated. The result is a simplified representation of the data, focusing on key aggregated metrics.\nbind_rows from dplyr package to to combine two or more data frames by rows. It stacks the data frames on top of each other, effectively appending the rows of the second data frame to the first, the third to the combined first and second, and so on. This function is particularly useful when you have multiple data frames with the same variables and you want to create a single, combined data frame. It’s important that the columns in the data frames are compatible, either having the same names and types, or being able to be coerced into the same type.\n\n\n\n\n\nThe result shows that there are no duplicated data in the origin destination bus dataset. Note that the checking was based on a very loose criteria of duplicate, in which duplicated rows need to have the same value across all columns.\n\n\n\nthe following code is used to check duplicates and show how many duplicates exist in bus stop dataset and display the result.\n\n\nCode\n# Subset rows where origin_pt_code has duplicates\nduplicates &lt;- busstop[duplicated(busstop$origin_pt_code) | duplicated(busstop$origin_pt_code, fromLast = TRUE), ]\n\n# Display the rows with duplicate origin_pt_code\nkable(head(duplicates, n=32))\n\n\n\n\n\n\norigin_pt_code\nloc_desc\ngeometry\n\n\n\n\n149\n58031\nOPP CANBERRA DR\nPOINT (27089.69 47570.9)\n\n\n166\n62251\nBef Blk 471B\nPOINT (35500.54 39943.41)\n\n\n229\n51071\nMACRITCHIE RESERVOIR\nPOINT (28300.11 36045.9)\n\n\n280\n47201\nNA\nPOINT (22616.75 47793.68)\n\n\n341\n58031\nOPP CANBERRA DR\nPOINT (27111.07 47517.77)\n\n\n512\n22501\nBlk 662A\nPOINT (13489.09 35536.4)\n\n\n765\n82221\nBLK 3A\nPOINT (35323.6 33257.05)\n\n\n1359\n68091\nAFT BAKER ST\nPOINT (32164.11 42695.98)\n\n\n1527\n51071\nMACRITCHIE RESERVOIR\nPOINT (28305.37 36036.67)\n\n\n1660\n43709\nBLK 644\nPOINT (18963.42 36762.8)\n\n\n1995\n97079\nOPP ST. JOHN’S CRES\nPOINT (44144.57 38980.25)\n\n\n2093\n82221\nBlk 3A\nPOINT (35308.74 33335.17)\n\n\n2096\n97079\nOPP ST. JOHN’S CRES\nPOINT (44055.75 38908.5)\n\n\n2150\n22501\nBLK 662A\nPOINT (13488.02 35537.88)\n\n\n2296\n62251\nBEF BLK 471B\nPOINT (35500.36 39943.34)\n\n\n2724\n68099\nBEF BAKER ST\nPOINT (32154.9 42742.82)\n\n\n2843\n52059\nOPP BLK 65\nPOINT (30770.3 34460.06)\n\n\n3044\n67421\nCHENG LIM STN EXIT B\nPOINT (34548.54 42052.15)\n\n\n3189\n53041\nUpp Thomson Road\nPOINT (28105.8 37246.76)\n\n\n3193\n53041\nUpp Thomson Road\nPOINT (27956.34 37379.29)\n\n\n3260\n77329\nBEF PASIR RIS ST 53\nPOINT (40765.35 39452.18)\n\n\n3266\n77329\nPasir Ris Central\nPOINT (40728.15 39438.15)\n\n\n3269\n96319\nYusen Logistics\nPOINT (42187.23 34995.78)\n\n\n3270\n96319\nYUSEN LOGISTICS\nPOINT (42187.23 34995.78)\n\n\n3296\n52059\nBLK 219\nPOINT (30565.45 36133.15)\n\n\n3371\n43709\nBLK 644\nPOINT (18952.02 36751.83)\n\n\n3697\n68091\nAFT BAKER ST\nPOINT (32038.84 43298.68)\n\n\n3698\n68099\nBEF BAKER ST\nPOINT (32004.05 43320.34)\n\n\n4590\n47201\nW’LANDS NTH STN\nPOINT (22632.92 47934)\n\n\n5074\n67421\nCHENG LIM STN EXIT B\nPOINT (34741.77 42004.21)\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nduplicated from the base R package is used to identify duplicate elements in a vector or rows in a data frame. It returns a logical vector indicating which elements or rows are duplicates of elements or rows with smaller indices.\nkable from the knitr package creates simple tables from a data frame, matrix, or other table-like structures. The function provides a user-friendly way to display tables in a markdown format.\n\n\n\n\n\nThe result shows that there are some duplicated data in the geospatial bus stop dataset. This might interfere with the joining data process and generated double count on later on. Note that the checking was based on the origin_pt_code field only, because it will be the basis of reference for joining the dataset later on. At a glance, the table above also show that, the duplicated code are actually located near each other. Therefore, removing the duplicates can be considered safe as the remaining bus stop code can represent the deleted one.\n\nThe folowing code chunk will execute the duplicate removal and show the result where number of rows have reduced from 5161 to 5145.\n\n\nCode\n# Keep one row of the duplicates in the original dataset\nbusstop &lt;- busstop[!duplicated(busstop$origin_pt_code) | duplicated(busstop$origin_pt_code, fromLast = TRUE), ]\n\n# Display the resulting dataset\nglimpse(busstop)\n\n\nRows: 5,144\nColumns: 3\n$ origin_pt_code &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 66191, 23389, 54411,…\n$ loc_desc       &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 239, GRACE INDEPE…\n$ geometry       &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT (13228.59 44206.…"
  },
  {
    "objectID": "take-home/the1.html#categorical-peak-time-variable",
    "href": "take-home/the1.html#categorical-peak-time-variable",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.2 Categorical Peak Time Variable",
    "text": "3.2 Categorical Peak Time Variable\non the interest of analyzing the peak time, the following code will assign new column that categorize peak time, filter data that is not on peak time, and show a sample of the output.\n\n\nCode\n# Function to categorize and aggregate trips\ncategorize_and_aggregate &lt;- function(odb) {\n  odb &lt;- odb %&gt;%\n    # Categorize trips under periods based on day and timeframe\n    mutate(period = case_when(\n      DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 6 & TIME_PER_HOUR &lt;= 9 ~ \"Weekday morning peak\",\n      DAY_TYPE == \"WEEKDAY\" & TIME_PER_HOUR &gt;= 17 & TIME_PER_HOUR &lt;= 20 ~ \"Weekday evening peak\",\n      DAY_TYPE == \"WEEKENDS/HOLIDAY\" & TIME_PER_HOUR &gt;= 11 & TIME_PER_HOUR &lt;= 14 ~ \"Weekend/holiday morning peak\",\n      DAY_TYPE == \"WEEKENDS/HOLIDAY\" & TIME_PER_HOUR &gt;= 16 & TIME_PER_HOUR &lt;= 19 ~ \"Weekend/holiday evening peak\",\n      TRUE ~ \"non-peak\"\n    )) %&gt;%\n    # Only retain needed periods for analysis\n    filter(period != \"non-peak\") %&gt;%\n    # Compute the number of trips per origin bus stop per month for each period\n    group_by(YEAR_MONTH, period, ORIGIN_PT_CODE) %&gt;%\n    summarise(num_trips = sum(TOTAL_TRIPS)) %&gt;%\n    # Change all column names to lowercase\n    rename_with(tolower, everything()) %&gt;%\n    ungroup()\n\n  return(odb)\n}\n\n# Apply the function to each dataset\nodb8 &lt;- categorize_and_aggregate(odb8)\nodb9 &lt;- categorize_and_aggregate(odb9)\nodb10 &lt;- categorize_and_aggregate(odb10)\n\n# sample the result\nglimpse(odb10)\n\n\nRows: 20,072\nColumns: 4\n$ year_month     &lt;chr&gt; \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", \"2023-10\", …\n$ period         &lt;chr&gt; \"Weekday evening peak\", \"Weekday evening peak\", \"Weekda…\n$ origin_pt_code &lt;fct&gt; 01012, 01013, 01019, 01029, 01039, 01059, 01109, 01112,…\n$ num_trips      &lt;dbl&gt; 8000, 7038, 3398, 9089, 12095, 2212, 276, 43513, 25769,…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nmutate from dplyr package adds new variables or transforms existing ones. It’s often used in conjunction with functions like case_when for conditional transformation.\ncase_when from dplyr package is a vectorized form of multiple if_else statements, allowing for different computations or transformations based on specified conditions.\nfilter from dplyr package to subset rows based on specified conditions.\ngroup_by from dplyr package to group data by specified columns, useful for performing grouped operations like summarization.\nsummarise (or summarize) from dplyr package to calculate aggregate values for each group created by group_by.\nrename_with from dplyr package to rename columns based on a function, such as converting names to lowercase.\nungroup from dplyr package to remove the grouping structure from a data frame.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its contents."
  },
  {
    "objectID": "take-home/the1.html#choosing-the-month",
    "href": "take-home/the1.html#choosing-the-month",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.3 Choosing the Month",
    "text": "3.3 Choosing the Month\nIn order to decide which month is better to perform LISA or whether analyzing all month separately will yield interesting result, it is a good step to check the data distribution of each month. By comparing the data distribution for each month, we can make an educated guess whether the LISA result for each month would be starkly different or just similar.\n\n\nCode\n# Combine odb8, odb9, and odb10 into one dataframe\ncombined_data &lt;- bind_rows(\n  mutate(odb8, month = \"odb8\"),\n  mutate(odb9, month = \"odb9\"),\n  mutate(odb10, month = \"odb10\")\n)\n\n# Create a standard vertical box plot\nbus_boxplot &lt;- combined_data %&gt;%\n  ggplot(aes(x = period, y = num_trips, fill = period)) + # Assigning aesthetics for x and y axes, and fill color based on period\n  geom_boxplot() + # Adding the box plot layer\n  facet_wrap(~month, scales = 'free_x') + # Faceting by month, with free scales for x axis\n  labs(\n    title = \"Distribution of Trips across Peak Periods\",\n    subtitle = \"Comparison across different months\",\n    x = \"Period\",\n    y = \"Number of Trips\"\n  ) +\n  theme_minimal() + # Using a minimal theme for a cleaner look\n  theme(axis.text.x = element_blank(), axis.title.x = element_blank()) # Removing x-axis category labels and label  \nbus_boxplot\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nbind_rows from dplyr package combines data frames by rows, stacking them on top of each other.\nmutate from dplyr package adds new variables or modifies existing ones in a data frame.\nggplot from ggplot2 package creates a new ggplot graph, specifying its aesthetic mappings.\ngeom_boxplot from ggplot2 package adds a boxplot layer to the ggplot.\nfacet_wrap from ggplot2 package creates a facetted plot, splitting the data by one or more variables.\nlabs from ggplot2 package modifies plot labels, including title and axis labels.\ntheme_minimal from ggplot2 package applies a minimalistic theme to the plot.\ntheme and element_blank from ggplot2 package customize aspects of the plot’s theme, such as removing axis text and titles.\n\n\n\n\nThe box plot to show the data distribution was not too helpful as it shows that all peak time across months has extreme outliers. Therefore, the next code chunk modify the boxplot by log-transforming the number of trips.\n\n\nCode\n# Create a modified vertical box plot\nbus_boxplot &lt;- combined_data %&gt;%\n  ggplot(aes(x = period, y = log(num_trips), fill = period)) + # Modified aesthetics with log-transformed y-axis\n  geom_boxplot() + # Adding the box plot layer\n  facet_wrap(~month, scales = 'free_x') + # Faceting by month, with free scales for x axis\n  labs(\n    title = \"Distribution of Log-Transformed Trips\",\n    subtitle = \"Comparison across different months\",\n    y = \"Log(Number of Trips)\"\n  ) +\n  theme_minimal() + # Using a minimal theme for a cleaner look\n  theme(axis.text.x = element_blank(), axis.title.x = element_blank()) # Removing x-axis category labels and label\n\nbus_boxplot\n\n\n\n\n\n\nThe log-transformed box plot show that the distribution of each peak periods across months is quite similar. In general, number of trips in the weekday peaks are typically higher than weekend/holiday peak. The similarity also extend to extreme outliers. For example, the green box plot (Weekday morning peak) always have a single point extreme outlier on the top of the box plot. Based on this observation, it can be inferred that performing LISA on one of month is most likely enough to discover the pattern. The month October, as the latest data available, is chosen for the next processes."
  },
  {
    "objectID": "take-home/the1.html#extract-trip-numbers-into-wide-form-of-peak-period-categories",
    "href": "take-home/the1.html#extract-trip-numbers-into-wide-form-of-peak-period-categories",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.4 Extract Trip Numbers Into Wide Form of Peak Period Categories",
    "text": "3.4 Extract Trip Numbers Into Wide Form of Peak Period Categories\nPivoting data into a wide format before merging aspatial and geospatial datasets is beneficial for streamlined analysis. It helps organize information by transforming rows into columns, making it easier to align and combine trip count data across various peak periods. This wide format simplifies subsequent data integration steps, facilitating a more efficient join between datasets based on common identifiers or keys.\n\n\nCode\n# Extract data from odb10 and store as a separate dataframe\nodb10_wide &lt;- odb10 %&gt;%\n  # Pivot the data wider, treating each row as a bus stop code with peak period trips as columns\n  pivot_wider(\n    names_from = period,\n    values_from = num_trips\n  ) %&gt;%\n  select(2:6)\n\n\n# check the output\nDT::datatable(odb10_wide,\n              options = list(pageLength = 8),\n              rownames = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\npivot_wider from tidyr package reshapes data from a ‘long’ format to a ‘wider’ format, spreading key-value pairs across multiple columns.\nselect from dplyr package is used to subset specific columns from a data frame.\ndatatable from DT package creates an interactive table (data table) widget, offering functionalities like pagination. The options parameter allows customization of the table, such as setting the number of rows to display per page (pageLength)."
  },
  {
    "objectID": "take-home/the1.html#join-aspatial-and-geospatial-data",
    "href": "take-home/the1.html#join-aspatial-and-geospatial-data",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.5 Join Aspatial and Geospatial Data",
    "text": "3.5 Join Aspatial and Geospatial Data\nTo retain the geospatial property, use left_join by using busstop as the main dataframe and bus stop code as the reference.\n\n\nCode\nodb10_sf &lt;- left_join(busstop, odb10_wide, by = \"origin_pt_code\")\n\nglimpse(odb10_sf)\n\n\nRows: 5,144\nColumns: 7\n$ origin_pt_code                 &lt;fct&gt; 22069, 32071, 44331, 96081, 11561, 6619…\n$ loc_desc                       &lt;fct&gt; OPP CEVA LOGISTICS, AFT TRACK 13, BLK 2…\n$ `Weekday evening peak`         &lt;dbl&gt; 67, 5, 1740, 445, 199, 349, 432, 1285, …\n$ `Weekday morning peak`         &lt;dbl&gt; 50, NA, 2075, 411, 207, 405, 60, 3059, …\n$ `Weekend/holiday evening peak` &lt;dbl&gt; 10, NA, 589, 47, 77, 169, 82, 492, 2016…\n$ `Weekend/holiday morning peak` &lt;dbl&gt; 8, NA, 682, 110, 70, 177, 16, 1442, 204…\n$ geometry                       &lt;POINT [m]&gt; POINT (13576.31 32883.65), POINT …\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nleft_join from dplyr package merges two data frames together based on matching values in their columns. Specifically, left_join keeps all rows from the left data frame and adds matching rows from the right data frame. If there is no match, the right side will contain NA.\nglimpse from dplyr package provides a transposed summary of the data frame, giving a quick overview of its structure, including column types and the first few entries in each column."
  },
  {
    "objectID": "take-home/the1.html#creating-hexagon-spatial-grid",
    "href": "take-home/the1.html#creating-hexagon-spatial-grid",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "3.6 Creating Hexagon Spatial Grid",
    "text": "3.6 Creating Hexagon Spatial Grid\nodb10_sf represents a spatial point dataframe, which might not be optimal for spatial autocorrelation analysis where the definition of ‘areas’ requires the representation of spatial entities as polygons instead of individual points. To address this, the subsequent code sections transform these bus stops into a grid of hexagons.\n\n1. Generate Hexagon Grid2. Generate Attribute Dataframe using Hexagon Identifiers3. Join the grid and attribute dataframe\n\n\nThis code utilizes the st_make_grid function to create a hexagon grid based on the specified parameters. The resulting hexagon grid is then converted into a spatial dataframe (st_sf()) to maintain its geospatial properties. The rowid_to_column function is employed to assign a unique identifier (hex_id) to each hexagon, facilitating subsequent analyses or referencing.\nOutput: Spatial Polygons with Hexagonal Geometry and Hex_id Identification\n\n\nCode\nodb10_hex &lt;- st_make_grid(\n    odb10_sf,\n    cellsize = 500,\n    square = FALSE\n  ) %&gt;%\n  st_sf() %&gt;%\n  rowid_to_column(\"hex_id\")\n\n# check the output\nglimpse(odb10_hex)\n\n\nRows: 5,580\nColumns: 2\n$ hex_id   &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18…\n$ geometry &lt;POLYGON [m]&gt; POLYGON ((3720.122 26626.44..., POLYGON ((3720.122 27…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_make_grid from sf package creates a grid over a spatial object. In this code, it is used to generate a hexagonal grid over the odb10_sf spatial data, with each cell having a size of 500 units.\nst_sf from sf package converts the grid into an sf (simple features) object, which is a standard format for handling spatial data in R.\nrowid_to_column from tibble package adds a new column to a data frame that contains a unique identifier for each row.\nglimpse from dplyr package provides a transposed summary of the data frame, offering a quick look at its structure and contents.\n\n\n\n\n\n\nGiven that each hexagonal area may encompass multiple bus stops, the hex_id serves as the primary key for aggregation. The subsequent procedures outline how to organize attributes based on hex_id:\n\nUtilize the st_join() function with join = st_within to associate bus stop points with hexagon areas.\nThe st_set_geometry(NULL) argument eliminates the geospatial layer, focusing on attribute aggregation.\nEmploy group_by() to obtain a unique hex_id for each row.\nUtilize summarise() to calculate the aggregate count of bus stops and trips per peak period within each hexagon area.\nReplace all NA values with 0 using replace(is.na(.), 0).\n\nOutput: Attribute Dataframe, with Hex_id as the Primary Key\n\n\nCode\nodb10_stops &lt;- st_join(\n  odb10_sf, \n  odb10_hex, \n  join = st_within\n) %&gt;%\n  st_set_geometry(NULL) %&gt;%\n  group_by(hex_id) %&gt;%\n  summarise(\n    n_busstops = n(),\n    busstops_code = str_c(origin_pt_code, collapse = \",\"),\n    loc_desc = str_c(loc_desc, collapse = \",\"),\n    `Weekday morning peak` = sum(`Weekday morning peak`, na.rm = TRUE),\n    `Weekday evening peak` = sum(`Weekday evening peak`, na.rm = TRUE),\n    `Weekend/holiday morning peak` = sum(`Weekend/holiday morning peak`, na.rm = TRUE),\n    `Weekend/holiday evening peak` = sum(`Weekend/holiday evening peak`, na.rm = TRUE)\n  ) %&gt;%\n  ungroup() %&gt;%\n  mutate(across(where(is.numeric), ~ replace_na(., 0)),\n         across(where(is.character), ~ replace_na(., \"\")))\n\n# check the output\nglimpse(odb10_stops)\n\n\nRows: 1,524\nColumns: 8\n$ hex_id                         &lt;int&gt; 34, 65, 99, 127, 129, 130, 131, 159, 16…\n$ n_busstops                     &lt;int&gt; 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, …\n$ busstops_code                  &lt;chr&gt; \"25059\", \"25751\", \"26379\", \"25761\", \"25…\n$ loc_desc                       &lt;chr&gt; \"AFT TUAS STH BLVD\", \"BEF TUAS STH AVE …\n$ `Weekday morning peak`         &lt;dbl&gt; 103, 52, 78, 185, 1116, 53, 60, 64, 251…\n$ `Weekday evening peak`         &lt;dbl&gt; 390, 114, 291, 1905, 2899, 241, 368, 29…\n$ `Weekend/holiday morning peak` &lt;dbl&gt; 0, 26, 52, 187, 455, 76, 45, 21, 39, 69…\n$ `Weekend/holiday evening peak` &lt;dbl&gt; 56, 14, 100, 346, 634, 55, 49, 53, 132,…\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_join from sf package spatially joins two sf objects. st_within as the join method checks if geometries of the first object are within those of the second.\nst_set_geometry from sf package is used to remove or set the geometry column in an sf object.\ngroup_by from dplyr package to group the data by specified columns, allowing for grouped summaries.\nsummarise from dplyr package calculates summary statistics for each group.\nstr_c from stringr package concatenates character vectors.\nungroup from dplyr package removes grouping.\nmutate and across from dplyr package modify columns, applying functions across selected columns.\nreplace_na from tidyr package replaces NA values with specified values.\nglimpse from dplyr package provides a transposed summary of the data frame.\n\n\n\n\n\n\n\nUse left_join to combine the new odb10_stops attribute dataframe with the existing odb10_hex hexagon geospatial layer, linking them by hex_id to integrate attributes into the spatial polygon dataframe.\nEmploy filter to exclude hexagons without bus stops.\n\nOutput: Spatial Polygon Dataframe\n\n\nCode\nodb10_complete &lt;- odb10_hex %&gt;%\n  left_join(odb10_stops,\n            by = \"hex_id\"\n  ) %&gt;%\n  replace(is.na(.), 0)\n\nodb10_final &lt;- filter(odb10_complete,\n                       n_busstops &gt; 0)\n\n# check the output\nglimpse(odb10_final)\n\n\nRows: 1,524\nColumns: 9\n$ hex_id                         &lt;int&gt; 34, 65, 99, 127, 129, 130, 131, 159, 16…\n$ n_busstops                     &lt;dbl&gt; 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, …\n$ busstops_code                  &lt;chr&gt; \"25059\", \"25751\", \"26379\", \"25761\", \"25…\n$ loc_desc                       &lt;chr&gt; \"AFT TUAS STH BLVD\", \"BEF TUAS STH AVE …\n$ `Weekday morning peak`         &lt;dbl&gt; 103, 52, 78, 185, 1116, 53, 60, 64, 251…\n$ `Weekday evening peak`         &lt;dbl&gt; 390, 114, 291, 1905, 2899, 241, 368, 29…\n$ `Weekend/holiday morning peak` &lt;dbl&gt; 0, 26, 52, 187, 455, 76, 45, 21, 39, 69…\n$ `Weekend/holiday evening peak` &lt;dbl&gt; 56, 14, 100, 346, 634, 55, 49, 53, 132,…\n$ geometry                       &lt;POLYGON [m]&gt; POLYGON ((3970.122 27925.48...,…"
  },
  {
    "objectID": "take-home/the1.html#distribution-of-bus-stop",
    "href": "take-home/the1.html#distribution-of-bus-stop",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "4.1 Distribution of Bus Stop",
    "text": "4.1 Distribution of Bus Stop\nUnderstanding the spatial distribution of bus stops in Singapore is crucial for deciphering the accessibility and connectivity of public transportation. The “Distribution of Bus Stops” map provides a visual representation of the number of bus stops across different regions.\n\n\nCode\n# Plot the hexagon grid based on n_busstops\ntmap_mode(\"plot\")\nbusstop_map = tm_shape(odb10_final)+\n  tm_fill(\n    col = \"n_busstops\",\n    palette = \"Blues\",\n    style = \"cont\",\n    title = \"Number of Bus Stops\",\n    id = \"loc_desc\",\n    showNA = FALSE,\n    alpha = 0.6,\n    popup.format = list(\n      grid_id = list(format = \"f\", digits = 0)\n    )\n  )+\n  tm_borders(col = \"grey40\", lwd = 0.7)\nbusstop_map\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_mode from tmap package sets the mode of tmap to either plot static maps (\"plot\") or create interactive maps (\"view\").\ntm_shape from tmap package prepares the spatial data for plotting.\ntm_fill from tmap package fills polygons (like the hexagons in the grid) with colors based on a specified variable.\ntm_borders from tmap package adds borders around the polygons.\nThe popup.format within tm_fill allows customization of the format of the values shown in the interactive popups.\n\n\n\n\n\nFrom the map, we can infer that the central region, likely encompassing the Central Business District (CBD) and surrounding residential areas, which are known to be highly populated and active, has a higher number of bus stops. This correlates with the need for robust public transportation in densely populated areas to support the daily commute of residents and workers. Lighter shades are observed towards the periphery of the island, suggesting fewer bus stops, which could correspond to less urbanized or industrial areas, like the Western and North-Eastern regions where the population density is lower. The map reflects Singapore’s urban planning and transportation strategy, which aims to provide accessibility and connectivity, particularly in high-density regions where demand for public transit is greatest."
  },
  {
    "objectID": "take-home/the1.html#distribution-of-trips-across-peak-hours",
    "href": "take-home/the1.html#distribution-of-trips-across-peak-hours",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "4.2 Distribution of Trips Across Peak Hours",
    "text": "4.2 Distribution of Trips Across Peak Hours\nfind the ideal breaks for plotting the trips using summary\n\n\nCode\nsummary(odb10_final)\n\n\n     hex_id       n_busstops     busstops_code        loc_desc        \n Min.   :  34   Min.   : 1.000   Length:1524        Length:1524       \n 1st Qu.:1941   1st Qu.: 2.000   Class :character   Class :character  \n Median :2950   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :2814   Mean   : 3.375                                        \n 3rd Qu.:3735   3rd Qu.: 4.000                                        \n Max.   :5558   Max.   :11.000                                        \n Weekday morning peak Weekday evening peak Weekend/holiday morning peak\n Min.   :     0       Min.   :     0       Min.   :     0              \n 1st Qu.:   919       1st Qu.:  2148       1st Qu.:   390              \n Median :  7611       Median :  7216       Median :  2172              \n Mean   : 16839       Mean   : 16137       Mean   :  4987              \n 3rd Qu.: 22999       3rd Qu.: 16947       3rd Qu.:  6291              \n Max.   :386450       Max.   :542529       Max.   :109329              \n Weekend/holiday evening peak          geometry   \n Min.   :     0.0             POLYGON      :1524  \n 1st Qu.:   533.8             epsg:3414    :   0  \n Median :  2169.0             +proj=tmer...:   0  \n Mean   :  4999.7                                 \n 3rd Qu.:  5449.8                                 \n Max.   :150399.0                                 \n\n\n\nThe summary result confirmed that the trips data is right-skewed and contains extreme outliers. This knowledge is then used to customize the break in the comparison map.\n\nThe following code plot the comparison map. the map can be set on “plot” mode for lighter rendering, but was set on “view” mode for analysis.\n\n\nCode\n# Define the columns for which we want to find the global min and max\nvalue_columns &lt;- c(\"Weekday morning peak\", \"Weekday evening peak\", \"Weekend/holiday morning peak\", \"Weekend/holiday evening peak\")\n\n# Set tmap to interactive viewing mode for analysis and plot mode for rendering\ntmap_mode(\"plot\")\n\n# Define a function to create each map with a customized legend\ncreate_map &lt;- function(value_column) {\n  tm_shape(odb10_final) +\n    tm_fill(\n      col = value_column,\n      palette = \"-RdBu\",\n      style = \"fixed\",\n      title = value_column,\n      id = \"loc_desc\",\n      showNA = FALSE,\n      alpha = 0.6,\n      breaks = c(0, 500, 1000, 2000, 3000, 5000, 10000, 50000, 100000, 300000, 550000)\n    ) +\n    tm_borders(col = \"grey40\", lwd = 0.7) +\n    tm_layout(\n      legend.position = c(\"right\", \"bottom\"), # Adjust legend position\n      legend.frame = TRUE,\n      legend.width = 0.15, # Adjust the width of the legend\n      legend.height = 0.5  # Adjust the height of the legend\n    )\n}\n\n# Apply the function to each value column and store the maps\nmap_list &lt;- lapply(value_columns, create_map)\n\n# Combine the maps into a 2x2 grid\ncombined_map &lt;- tmap_arrange(map_list[[1]], map_list[[2]], map_list[[3]], map_list[[4]], ncol = 2, nrow = 2)\n\n# Show the combined map\ncombined_map\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_mode from tmap package sets the mode for creating maps. Here, \"plot\" mode is chosen for static map plotting.\ntm_shape from tmap package prepares spatial data for plotting.\ntm_fill from tmap package fills polygons with colors based on specified variables, with options for color palette, style, and legend customization.\ntm_borders from tmap package adds borders to the polygons.\ntm_layout from tmap package adjusts the layout of the map, including legend positioning and dimensions.\ntmap_arrange from tmap package arranges multiple tmap objects into a grid layout.\nlapply from base R applies a function over a list or vector.\n\n\n\n\n\nUsing the same classification scaling for all maps, it clearly shows that weekdays trips volume is higher in general than weekend/holiday. Nevertheless, at a glance, the crowded area are more or less the same across all days and time. This confirmed the previous finding on bus stops in which the area with most traffics are likely to encompassing the Central Business District (CBD) and surrounding residential areas, which are known to be highly populated and active the area of Singapore. At the same time, it also reflects Singapore’s urban planning and transportation strategy, in which the busiest area with potential high traffics are supported by more bus stops."
  },
  {
    "objectID": "take-home/the1.html#distribution-of-average-trips-per-bus-stop",
    "href": "take-home/the1.html#distribution-of-average-trips-per-bus-stop",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "4.3 Distribution of Average Trips per Bus Stop",
    "text": "4.3 Distribution of Average Trips per Bus Stop\nThe next distribution will see which bus stop is the busiest on average, in terms of number of trips per bus stop. To do that, firstly the following code will generate new columns of trip per bus stop for each hexagon.\n\n\nCode\n# Create a new dataframe with transformed columns\nodb10_final_avg &lt;- odb10_final %&gt;%\n  mutate(across(all_of(value_columns), ~ .x / n_busstops, .names = \"avg_{.col}\"))\n# check the summary for determining break points\nsummary(odb10_final_avg)\n\n\n     hex_id       n_busstops     busstops_code        loc_desc        \n Min.   :  34   Min.   : 1.000   Length:1524        Length:1524       \n 1st Qu.:1941   1st Qu.: 2.000   Class :character   Class :character  \n Median :2950   Median : 3.000   Mode  :character   Mode  :character  \n Mean   :2814   Mean   : 3.375                                        \n 3rd Qu.:3735   3rd Qu.: 4.000                                        \n Max.   :5558   Max.   :11.000                                        \n Weekday morning peak Weekday evening peak Weekend/holiday morning peak\n Min.   :     0       Min.   :     0       Min.   :     0              \n 1st Qu.:   919       1st Qu.:  2148       1st Qu.:   390              \n Median :  7611       Median :  7216       Median :  2172              \n Mean   : 16839       Mean   : 16137       Mean   :  4987              \n 3rd Qu.: 22999       3rd Qu.: 16947       3rd Qu.:  6291              \n Max.   :386450       Max.   :542529       Max.   :109329              \n Weekend/holiday evening peak          geometry    avg_Weekday morning peak\n Min.   :     0.0             POLYGON      :1524   Min.   :     0.0        \n 1st Qu.:   533.8             epsg:3414    :   0   1st Qu.:   395.2        \n Median :  2169.0             +proj=tmer...:   0   Median :  2609.4        \n Mean   :  4999.7                                  Mean   :  4520.1        \n 3rd Qu.:  5449.8                                  3rd Qu.:  6138.6        \n Max.   :150399.0                                  Max.   :119816.0        \n avg_Weekday evening peak avg_Weekend/holiday morning peak\n Min.   :     0.0         Min.   :    0.0                 \n 1st Qu.:   954.3         1st Qu.:  166.2                 \n Median :  2285.9         Median :  775.0                 \n Mean   :  4423.1         Mean   : 1351.3                 \n 3rd Qu.:  4575.0         3rd Qu.: 1659.1                 \n Max.   :136001.0         Max.   :43420.0                 \n avg_Weekend/holiday evening peak\n Min.   :    0.0                 \n 1st Qu.:  224.9                 \n Median :  713.6                 \n Mean   : 1381.3                 \n 3rd Qu.: 1473.2                 \n Max.   :39425.0                 \n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nmutate from dplyr package is used to add new columns to a data frame or modify existing ones.\nacross from dplyr package applies a function to a selection of columns, in this case, transforming specified columns by dividing each by n_busstops.\nall_of from dplyr package is used within across for selecting columns based on a character vector of column names.\nsummary from base R provides a summary of the object’s contents, typically giving minimum, maximum, mean, and other useful statistics.\n\n\n\n\nThe following code plot the comparison map. the map is set on “plot” mode for rendering, but was set on “view” mode for analysis.\n\n\nCode\n# Define the columns for which we want to find the global min and max\nvalue_columns &lt;- c(\"avg_Weekday morning peak\", \"avg_Weekday evening peak\", \"avg_Weekend/holiday morning peak\", \"avg_Weekend/holiday evening peak\")\n\n# Set tmap to interactive viewing mode\ntmap_mode(\"plot\")\n\n# Define a function to create each map with a customized legend\ncreate_map &lt;- function(value_column) {\n  tm_shape(odb10_final_avg) +\n    tm_fill(\n      col = value_column,\n      palette = \"-RdBu\",\n      style = \"fixed\",\n      title = value_column,\n      id = \"loc_desc\",\n      showNA = FALSE,\n      alpha = 0.6,\n      breaks = c(0, 100, 200, 300, 400, 500, 750, 1000, 1500, 5000, 10000, 50000, 140000)\n    ) +\n    tm_borders(col = \"grey40\", lwd = 0.7) +\n    tm_layout(\n      legend.position = c(\"right\", \"bottom\"), # Adjust legend position\n      legend.frame = TRUE,\n      legend.width = 0.15, # Adjust the width of the legend\n      legend.height = 0.5  # Adjust the height of the legend\n    )\n}\n\n# Apply the function to each value column and store the maps\nmap_list &lt;- lapply(value_columns, create_map)\n\n# Combine the maps into a 2x2 grid\ncombined_map &lt;- tmap_arrange(map_list[[1]], map_list[[2]], map_list[[3]], map_list[[4]], ncol = 2, nrow = 2)\n\n# Show the combined map\ncombined_map\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\ntmap_mode from tmap package sets the mode for creating maps. \"plot\" mode is used for static map plotting.\ntm_shape from tmap package prepares spatial data for plotting.\ntm_fill from tmap package fills polygons with colors based on specified variables, allowing for customized legends and color palettes.\ntm_borders from tmap package adds borders to the polygons.\ntm_layout from tmap package adjusts the layout of the map, including legend position and dimensions.\nlapply from base R applies a function over a list or vector.\ntmap_arrange from tmap package arranges multiple tmap objects into a grid layout.\n\n\n\n\n\nat a glance, using the average trips per bus stop shows slightly different insight. Comparatively to the total trips, average number of trips shows that the area around Jurong, Woodlands, and bus stops in Johor (part of Malaysia) is actually busier than what total trips suggest. In the context of transport policy, this might be the first lead to expand the number of bus stops in the particular area to cater for more commuters."
  },
  {
    "objectID": "take-home/the1.html#creating-a-spatial-matrix-based-on-distance",
    "href": "take-home/the1.html#creating-a-spatial-matrix-based-on-distance",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.1 Creating a Spatial Matrix Based on Distance",
    "text": "5.1 Creating a Spatial Matrix Based on Distance\nBefore we delve into the intricacies of global and local spatial autocorrelation statistics, a crucial preliminary step involves the creation of a spatial weights matrix tailored to our study area. This matrix essentially delineates the relationships between hexagonal spatial units based on their respective distances. In establishing this matrix, it’s imperative to bear in mind a few considerations.\nFirstly, it is essential to ensure that each feature has at least one neighbor, and conversely, no feature is designated as a neighbor to all other features. This ensures a meaningful and diverse representation of spatial relationships.\nFurthermore, for datasets exhibiting skewed distribution, a recommended guideline is to assign each feature a minimum of eight neighbors, a criterion we’ve slightly exceeded by opting for 12 neighbors in this context. This ensures a more robust and comprehensive understanding of spatial connectivity within the data.\nGiven the peculiarities of our study area, characterized by regions with a sparse distribution of bus stops, particularly in zones lacking significant residential or business presence, the preference leans towards employing distance-based methods over contiguity methods. This strategic choice aligns with the spatial reality of the data, allowing for a more nuanced exploration of spatial relationships while considering the unique characteristics of the geographical context.\nWe opt for the Adaptive Distance-Based (Fixed Number of Neighbors) approach instead of the Fixed-Distance Threshold method, a decision prompted by the right-skewed distribution inherent in our dataset. In this chosen method, each hexagon is assured of having a minimum of n neighbors, a critical prerequisite for subsequent statistical significance testing.\nTo implement this, we set each hexagon to be associated with precisely 12 neighbors, a configuration achieved through the application of provided R code. The process involves utilizing the st_knn function to acquire a comprehensive list of neighbors for each hexagon and subsequently employing st_weights to generate spatial weights that are row-standardized. This meticulous procedure ensures a standardized and well-defined spatial relationship framework, laying the groundwork for robust statistical analyses.\n\n\nCode\nwm_all &lt;- odb10_final %&gt;% \n  mutate(\n    nb = st_knn(geometry, k = 12),\n    wt = st_weights(nb, style = 'W'),\n    .before = 1\n  )\n\n# check the output\nkable(head(wm_all))\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nnb\nwt\nhex_id\nn_busstops\nbusstops_code\nloc_desc\nWeekday morning peak\nWeekday evening peak\nWeekend/holiday morning peak\nWeekend/holiday evening peak\ngeometry\n\n\n\n\n2, 4, 5, 8, 9, 12, 13, 16, 22, 23, 38, 39\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n34\n1\n25059\nAFT TUAS STH BLVD\n103\n390\n0\n56\nPOLYGON ((3970.122 27925.48…\n\n\n1, 3, 4, 5, 8, 9, 12, 13, 16, 22, 23, 38\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n65\n1\n25751\nBEF TUAS STH AVE 14\n52\n114\n26\n14\nPOLYGON ((4220.122 28358.49…\n\n\n5, 6, 7, 9, 10, 13, 14, 16, 17, 18, 24, 25\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n99\n1\n26379\nYONG NAM\n78\n291\n52\n100\nPOLYGON ((4470.122 30523.55…\n\n\n1, 2, 5, 8, 9, 12, 13, 16, 22, 23, 38, 39\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n127\n1\n25761\nOPP REC S’PORE\n185\n1905\n187\n346\nPOLYGON ((4720.122 28358.49…\n\n\n3, 6, 9, 10, 12, 13, 14, 16, 17, 24, 30, 31\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n129\n2\n25719,26389\nTHE INDEX,BEF TUAS STH AVE 5\n1116\n2899\n455\n634\nPOLYGON ((4720.122 30090.54…\n\n\n3, 5, 7, 9, 10, 11, 13, 14, 17, 18, 24, 25\n0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333, 0.08333333\n130\n1\n26369\nSEE HUP SENG\n53\n241\n76\n55\nPOLYGON ((4720.122 30956.57…\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nmutate from dplyr package is used to add new columns to a data frame or modify existing ones.\nst_knn from sfdep package computes k-nearest neighbors for spatial data. Here, it is used to find the nearest 12 neighbors for each geometry in odb10_final.\nst_weights from sfdep computes spatial weights. The style = 'W' argument specifies the type of weights to be calculated.\nThe .before = 1 argument in mutate specifies that the new columns should be added at the beginning of the data frame.\nkable from the knitr package creates simple tables from a data frame for markdown format output."
  },
  {
    "objectID": "take-home/the1.html#examining-global-spatial-association-globally-with-global-morans-i",
    "href": "take-home/the1.html#examining-global-spatial-association-globally-with-global-morans-i",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.2 Examining Global Spatial Association Globally with Global Moran’s I",
    "text": "5.2 Examining Global Spatial Association Globally with Global Moran’s I\nAssessing global spatial correlation involves scrutinizing the comprehensive spatial arrangement of a specific variable, such as the aggregated count of trips throughout the entire study region. This analysis furnishes a solitary metric that encapsulates how closely akin values aggregate or scatter across the geographic expanse.\nCalculate the Global Moran’s I statistic for peak time trip counts at the hexagonal level, employing simulated data to sidestep assumptions of normal distribution and randomness. The simulation count is established at 99+1, totaling 100 simulations, ensuring a robust evaluation of spatial relationships without reliance on normality or random distribution assumptions.\n\n\nCode\n# Set the seed to ensure reproducibility\nset.seed(1234)\n\n# define the value_columns\nvalue_columns &lt;- c(\"Weekday morning peak\", \"Weekday evening peak\", \"Weekend/holiday morning peak\", \"Weekend/holiday evening peak\")\n\n# Create a function to perform global Moran's I test\nperform_global_moran &lt;- function(data, value_column, k) {\n  # Compute spatial weights\n  nb &lt;- st_knn(data$geometry, k = k)\n  wt &lt;- st_weights(nb, style = 'W')\n\n  # Perform global Moran's I test\n  moran_result &lt;- global_moran_perm(data[[value_column]], nb, wt, nsim = 99)\n  \n  # Include the value_column in the result\n  result &lt;- list(\n    value_column = value_column,\n    moran_result = moran_result\n  )\n  \n  return(result)\n}\n\n# Apply the function for each time interval\nresults &lt;- lapply(value_columns, function(vc) perform_global_moran(wm_all, vc, k = 12))\n\n# Print the results\nprint(results)\n\n\n[[1]]\n[[1]]$value_column\n[1] \"Weekday morning peak\"\n\n[[1]]$moran_result\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.18577, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[2]]\n[[2]]$value_column\n[1] \"Weekday evening peak\"\n\n[[2]]$moran_result\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.044513, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[3]]\n[[3]]$value_column\n[1] \"Weekend/holiday morning peak\"\n\n[[3]]$moran_result\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.13802, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n[[4]]\n[[4]]$value_column\n[1] \"Weekend/holiday evening peak\"\n\n[[4]]$moran_result\n\n    Monte-Carlo simulation of Moran I\n\ndata:  x \nweights: listw  \nnumber of simulations + 1: 100 \n\nstatistic = 0.084176, observed rank = 100, p-value &lt; 2.2e-16\nalternative hypothesis: two.sided\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nset.seed from base R package is used to set the seed of R’s random number generator, ensuring reproducibility of results.\nst_knn from sfdep package computes k-nearest neighbors for spatial data, used here to create spatial weights.\nst_weights from sfdep package calculates spatial weights. The style = 'W' argument specifies the type of weights.\nglobal_moran_perm from fpdep package performs a permutation test for global Moran’s I, a measure of spatial autocorrelation.\nlapply from base R applies a function over a list or vector.\n\n\n\n\n\nFor all four time intervals, since the p-value for global Moran’s I is smaller than 0.05, we can reject the null hypothesis that the spatial patterns are random. Moreover, as the Moran’s I statistics are greater than 0, we can infer that the spatial distribution exhibits signs of clustering for all four time intervals, consistent with the choropleth maps plotted earlier."
  },
  {
    "objectID": "take-home/the1.html#assessing-local-autocorrelation-spatial-association",
    "href": "take-home/the1.html#assessing-local-autocorrelation-spatial-association",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.3 Assessing Local Autocorrelation Spatial Association",
    "text": "5.3 Assessing Local Autocorrelation Spatial Association\nDelving into local spatial relationships offers a nuanced exploration of spatial configurations at a granular level, pinpointing particular zones with pronounced or diminished spatial connections. The Local Moran’s I method classifies areas into distinct categories such as high-high, low-low, high-low, or low-high, delineating patterns of clustering or outlier behavior within specific regions.\nTo analyze passenger trip patterns originating at the hex level, we employ the Local Indicators of Spatial Association (LISA) through the local_moran function sourced from the sfdep package. This function automatically computes neighbor lists and weights, leveraging simulated data to enhance accuracy. The outcomes are then deconstructed for in-depth analysis and presented in an interactive datatable format, allowing for a comprehensive examination of the intricacies within the spatial relationships of passenger trips.\n\n\nCode\n# Create a function to perform local Moran's I analysis\nget_lisa &lt;- function(wm, value_column, k) {\n  # Compute spatial weights\n  nb &lt;- st_knn(wm$geometry, k = k)\n  wt &lt;- st_weights(nb, style = 'W')\n\n  # Perform local Moran's I analysis and create a new data frame\n  result &lt;- wm %&gt;% \n    mutate(\n      local_moran = local_moran(.data[[value_column]], nb, wt, nsim = 99),\n      .before = 1\n    ) %&gt;%\n    unnest(local_moran)\n  \n  return(result)\n}\n\n# Initialize a list to store results for each value_column\nlisa_results &lt;- list()\n\n# Apply the function for each time interval and store results in the list\nfor (vc in value_columns) {\n  lisa_results[[vc]] &lt;- get_lisa(wm_all, vc, k = 12)\n  \n  # Remove columns that don't belong to the specific time interval\n  unwanted_columns &lt;- setdiff(value_columns, vc)\n  lisa_results[[vc]] &lt;- lisa_results[[vc]][, !(names(lisa_results[[vc]]) %in% unwanted_columns)]\n}\n\n# show sample output in an interactive table\ndatatable(lisa_results[[\"Weekday morning peak\"]], \n          class = 'cell-border stripe', \n          options = list(pageLength = 5))\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nst_knn from sfdep package computes k-nearest neighbors for spatial data, used here for spatial weights calculation.\nst_weights from sfdep package creates spatial weights with the specified style ('W').\nlocal_moran from sfdep package performs local Moran’s I analysis, a measure of local spatial autocorrelation.\nmutate and unnest from dplyr and tidyr respectively, are used to modify and expand nested data within a data frame.\ndatatable from DT package creates an interactive table widget.\nThe for loop in base R iteratively applies the get_lisa function to each value column."
  },
  {
    "objectID": "take-home/the1.html#significant-local-morans-i-results-at-α-5",
    "href": "take-home/the1.html#significant-local-morans-i-results-at-α-5",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.4 Significant Local Moran’s I Results at α 5%",
    "text": "5.4 Significant Local Moran’s I Results at α 5%\nLeverage the fundamental functionalities of the tmap package to create choropleth maps illustrating the Local Moran’s I field and p-value field across all four time intervals. Only noteworthy values of Local Moran’s I at a significance level of α 5% are visualized. The provided code retrieves the pertinent Local Moran’s I values for the explicit purpose of generating maps.\n\n\nCode\nget_sig_lmi_map &lt;- function(lisa_table, title) {\n  \n  sig_lisa_table &lt;- lisa_table %&gt;%\n    filter(p_ii_sim &lt; 0.05)\n  \n  result &lt;- tm_shape(lisa_table) +\n    tm_polygons() +\n    tm_borders(alpha = 0.5) +\n    tm_shape(sig_lisa_table) +\n    tm_fill(\"ii\") + \n    tm_borders(alpha = 0.4) +\n    tm_layout(\n      main.title = title,\n      main.title.size = 1.3\n    )\n  \n  return(result)\n  \n}\n\nsig_lmi_1 &lt;- get_sig_lmi_map(lisa_results[[\"Weekday morning peak\"]], \"Weekday Morning\" )\nsig_lmi_2 &lt;- get_sig_lmi_map(lisa_results[[\"Weekday evening peak\"]], \"Weekday Afternoon\" )\nsig_lmi_3 &lt;- get_sig_lmi_map(lisa_results[[\"Weekend/holiday morning peak\"]], \"Weekend Morning\" )\nsig_lmi_4 &lt;- get_sig_lmi_map(lisa_results[[\"Weekend/holiday morning peak\"]], \"Weekend Afternoon\" )\n\ntmap_mode('view')\n\ntmap_arrange(\n  sig_lmi_1,\n  sig_lmi_2,\n  sig_lmi_3,\n  sig_lmi_4,\n  asp = 2,\n  nrow = 2,\n  ncol = 2\n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFunctions\n\n\n\n\n\n\nfilter from dplyr package to subset rows based on a condition, here filtering for statistically significant local Moran’s I results.\ntm_shape, tm_polygons, tm_borders, tm_fill, and tm_layout from tmap package are used to create and customize thematic maps.\ntmap_mode sets the tmap mode, here 'plot' is for static maps.\ntmap_arrange arranges multiple tmap objects in a grid layout.\n\n\n\n\n\nThe choropleth maps displaying Local Moran’s I reveal that darker orange and darker green areas signify outlier regions. To classify it into low-high or high-low cluster, further analysis is required using LISA. Similarly, the light green indicates either high-high or low-low regions. Notably, the the area around Tuas and Jurong is most likely a low-low area based on the previous geovisualization."
  },
  {
    "objectID": "take-home/the1.html#lisa-map-at-α-5",
    "href": "take-home/the1.html#lisa-map-at-α-5",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.5 LISA Map at α 5%",
    "text": "5.5 LISA Map at α 5%\nFor a more in-depth analysis, the subsequent code retrieves the meaningful Local Indicators of Spatial Association (LISA) for the specific purpose of creating maps.\n\n\nCode\nget_sig_lisa_map &lt;- function(lisatable, title) {\n  \n  sig_lisatable &lt;- lisatable  %&gt;%\n  filter(p_ii_sim &lt; 0.05)\n  \n  result &lt;- tm_shape(lisatable) +\n    tm_polygons(alpha = 0.5) +\n    tm_borders(alpha = 0.5) +\n    \n    tm_shape(sig_lisatable) +\n    tm_fill(\"median\",\n            id = \"loc_desc\",\n            palette = c(\"blue\", \"lightcoral\", \"lightblue\", \"red\"),\n            alpha= 0.7,\n            title = \"Cluster\") + \n    tm_borders(alpha = 0.4) +\n    tm_layout(main.title = title,\n              main.title.size = 1.5,\n              legend.position = c(\"left\", \"top\"))\n    \n  return(result)\n  \n}\n\nsig_lisa_1 &lt;- get_sig_lisa_map(lisa_results[[\"Weekday morning peak\"]],\"LISA categories generated on Weekday Morning at 95% CL\" )\nsig_lisa_2 &lt;- get_sig_lisa_map(lisa_results[[\"Weekday evening peak\"]], \"LISA categories generated on Weekday Afternoon at 95% CL\" )\nsig_lisa_3 &lt;- get_sig_lisa_map(lisa_results[[\"Weekend/holiday morning peak\"]], \"LISA categories generated on Weekend Morning at 95% CL\" )\nsig_lisa_4 &lt;- get_sig_lisa_map(lisa_results[[\"Weekend/holiday morning peak\"]], \"LISA categories generated on Weekend Afternoon at 95% CL\" )\n\n\nIn the ensuing panel, you’ll find a display featuring the noteworthy Local Indicators of Spatial Association (LISA) map corresponding to each peak time.\n\nWeekday morning peakWeekday evening peakWeekend/holiday morning peakWeekend/holiday evening peak\n\n\n\n\nCode\ntmap_mode('plot')\nsig_lisa_1\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nsig_lisa_2\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nsig_lisa_3\n\n\n\n\n\n\n\n\n\nCode\ntmap_mode('plot')\nsig_lisa_1\n\n\n\n\n\n\n\n\nThe preceding choropleth maps illustrate notable groupings and exceptional instances regarding passenger trips originating from each hexagon, applying a significance level of α 5%.\nCluster Interpretation:\nBlue regions (Low-Low Clusters): These areas signify locations where the number of total trips at bus stops is relatively low and is surrounded by other locations with similarly low trip counts. This indicates spatial clustering of lower activity.\nLight Blue regions (Low-High outliers): In these regions, bus stops experience a lower number of total trips compared to their neighbors, suggesting an outlier pattern where specific locations have lower activity amidst areas with higher trip counts.\nLight Coral regions (High-Low outliers): High-Low regions denote areas where bus stops have a higher number of total trips compared to their neighbors, standing out as outliers with higher activity within regions of lower overall trip counts.\nRed regions (High-High clusters): These regions represent clusters of higher activity, where bus stops experience a higher number of total trips and are surrounded by other locations with similarly high trip counts. This implies spatial clustering of higher activity zones."
  },
  {
    "objectID": "take-home/the1.html#findings-and-future-improvements",
    "href": "take-home/the1.html#findings-and-future-improvements",
    "title": "Take-home 1 - Geospatial Analytics for Public Goods",
    "section": "5.6 Findings and Future Improvements",
    "text": "5.6 Findings and Future Improvements\n\nGeneral ConcentrationWeekends vs. WeekdaysHigh and Low ClustersBordersMode of Transport InfluencePopulation Density CorrelationEconomic Activities and Employment HubsDemographic VariationsUrban Planning and Infrastructure DevelopmentSeasonal and Event-Based VariationsTechnological Advancements and Ride-Sharing Trends\n\n\nThe geographical arrangement unveils elevated concentrations of overall bus trips in the residential sectors situated in the East, North, and West, juxtaposed with diminished concentrations in the Southern sector of Singapore. Prominent clusters of heightened activity align with significant transportation hubs like Ang Mo Kio, Bedok, Clementi, Hougang, Toa Payoh, Woodlands, and more.\n\n\nSpecific hexagonal zones, notably in the vicinity of Bukit Timah and Woodlands Checkpoint, display unique trends on weekends. These areas fluctuate between instances of high-low outliers and elevated clusters, indicating dynamic shifts in bus trip patterns across varying days of the week.\n\n\nHigh Clusters: Within the North, East, and West regions, particularly in residential zones, there is a discernible prevalence of elevated concentrations of bus trips. These areas are indicative of heightened commuting activities and increased local engagements, reflecting a probable dependence on public transportation for daily travel.\nLow Clusters: Conversely, the western sectors of Singapore, predominantly consisting of industrial areas, demonstrate diminished concentrations of bus trips. This pattern hints at a lower reliance on public transportation within these industrial zones, potentially influenced by factors such as lower population density or the prevalence of alternative modes of transport. The observed lower bus trip concentrations in these regions align with a distinctive transportation landscape characterized by different travel patterns and demands.\n\n\nClusters of Low Passenger Trips: Examining the Western and Southern perimeters of Singapore, we discern notable concentrations of low passenger trips. Specifically, areas along these borders exhibit a distinct pattern of reduced public transportation usage. This phenomenon suggests a potential lower demand for bus services in these regions, indicating varying transportation preferences or alternative modes of commuting among residents.\nNoteworthy Outliers and Unique Transportation Needs: Within this context, noteworthy outliers such as Jurong Port, Pioneer Sector, and Tuas stand out, marking key gateways that play a crucial role in accommodating nearby migrant workers and tourists. These specific regions may harbor unique transportation requirements, contributing significantly to the distinctive spatial patterns observed. The presence of outliers indicates a deviation from the general trend, emphasizing the importance of understanding the specific dynamics influencing transportation demand in these particular locales.\n\n\nThe spatial distribution of bus trips may be influenced by the availability and efficiency of alternative modes of transportation, such as the MRT (Mass Rapid Transit) system or private vehicles. Areas with robust alternative public transportation networks might exhibit different bus trip patterns compared to regions heavily reliant on private vehicles. Analyzing the interplay between different modes of transport can offer insights into the dynamics of bus trip concentrations and outliers.\n\n\nExploring the correlation between bus trip patterns and population density can unveil insights into how transportation needs align with residential density. High-density residential areas may show increased reliance on public transportation, leading to concentrated bus trip clusters. On the other hand, lower-density regions might exhibit more scattered trip patterns.\n\n\nInvestigating the correlation between bus trip concentrations and major economic activities or employment hubs can shed light on commuter patterns. Areas with prominent business districts or industrial zones may experience higher bus trip concentrations during peak commuting hours, contributing to spatial clusters.\n\n\nAnalyzing demographic factors such as age groups, income levels, and cultural preferences may provide nuanced insights into bus trip patterns. Different demographic segments may exhibit varying transportation behaviors, influencing the distribution of bus trips across different regions.\n\n\nExamining the influence of urban planning and infrastructure development on bus trip patterns can highlight the impact of transportation policies and initiatives. Regions with well-planned transportation infrastructure may demonstrate more organized and efficient bus trip distributions.\n\n\nConsidering the impact of seasons and major events on bus trip patterns can uncover dynamic changes in spatial distributions. Certain regions may experience fluctuations in bus trip concentrations during holidays, festivals, or major events, reflecting shifts in travel behavior.\n\n\nAssessing the role of technological advancements and ride-sharing trends on bus trip patterns can provide insights into the evolving landscape of transportation preferences. The integration of technology-driven solutions may influence how people choose and utilize bus services."
  },
  {
    "objectID": "take-home/the2.html#correlation-analysis",
    "href": "take-home/the2.html#correlation-analysis",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.1 Correlation Analysis",
    "text": "6.1 Correlation Analysis\nBefore running the model, its a good practice to check collinearity between the variables to prevent bumping into multicollinearity problem in the model.\n\n\nCode\n# Calculate correlation\ncorrelation_matrix &lt;- cor(final_df[,3:18])\n\n# Generate correlation plot\ncorrplot.mixed(correlation_matrix,\n               lower = \"color\",      # Use ellipse for lower part\n               upper = \"number\",     # Display correlation numbers in the upper part\n               tl.pos = \"lt\",        # Place variable names to the left and top\n               tl.col = \"black\",     # Set variable names color to black\n               tl.cex = 0.7,         # Set variable names font size\n               number.cex = 0.4      # Set correlation numbers font size\n               )\n\n\n\n\n\nUpon examining the correlation matrix, using a conservative threshold of correlation value above 0.7, the highly correlated variables are as follows:\n\nall station count and train exit count for each push and pull respectively have a strong positive correlation, suggesting that areas with a higher number of stations also tend to have a higher count of train exits. This result is quite expected.\npush_hdb_sf_count and push_est_pop also show a strong positive correlation, which may imply that regions with a higher number of HDB (Housing Development Board) flats tend to have a larger estimated population, a logical relationship given that the data is derived from the same source. Nevertheless, this result might also be caused by many of the hexagonal grid actually do not have HDB in the vicinity.\npull_finance_count and pull_train_exit_count.\npull_fnb_count and pull_finance_count.\npull_fnb_count and pull_lnr_count.\npull_fnr_count and pull_retails_count\n\n\nthis finding will be considered as basis for eliminating some variables in the model. Nevertheless, for experimental and comparison purpose, models without variables elimination will also be run in the next section."
  },
  {
    "objectID": "take-home/the2.html#the-3-models-with-elimination",
    "href": "take-home/the2.html#the-3-models-with-elimination",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.3 The 3 Models With Elimination",
    "text": "6.3 The 3 Models With Elimination\n\nUnconstrainedOrigin ConstrainedDestination Constrained\n\n\n\n\nCode\nuncSIM2 &lt;- glm(formula = trips ~ \n                log(push_num_bus_stops) +\n                #log(push_station_count) +\n                log(push_trainexit_count) +\n                #log(push_hdb_sf_count) +\n                log(push_est_pop) +\n                #log(pull_station_count) +\n                log(pull_trainexit_count) +\n                log(pull_biz_count) +\n                log(pull_entertn_count) +\n                log(pull_fnb_count) +\n                #log(pull_finance_count) +\n                #log(pull_lnr_count) +\n                #log(pull_retails_count) +\n                log(pull_schools_sf_count) +\n                log(distance),\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(uncSIM2)\n\n\n\nCall:\nglm(formula = trips ~ log(push_num_bus_stops) + log(push_trainexit_count) + \n    log(push_est_pop) + log(pull_trainexit_count) + log(pull_biz_count) + \n    log(pull_entertn_count) + log(pull_fnb_count) + log(pull_schools_sf_count) + \n    log(distance), family = poisson(link = \"log\"), data = final_df, \n    na.action = na.exclude)\n\nCoefficients:\n                             Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                 1.322e+01  1.646e-03  8031.6   &lt;2e-16 ***\nlog(push_num_bus_stops)     3.832e-01  4.787e-04   800.5   &lt;2e-16 ***\nlog(push_trainexit_count)   1.644e-01  3.139e-04   523.7   &lt;2e-16 ***\nlog(push_est_pop)           1.297e-01  7.092e-05  1828.6   &lt;2e-16 ***\nlog(pull_trainexit_count)   7.795e-01  3.125e-04  2493.9   &lt;2e-16 ***\nlog(pull_biz_count)         7.339e-02  1.766e-04   415.7   &lt;2e-16 ***\nlog(pull_entertn_count)    -2.403e-01  7.956e-04  -302.0   &lt;2e-16 ***\nlog(pull_fnb_count)        -1.928e-01  2.581e-04  -747.1   &lt;2e-16 ***\nlog(pull_schools_sf_count)  3.026e-01  6.350e-04   476.4   &lt;2e-16 ***\nlog(distance)              -1.169e+00  1.851e-04 -6313.0   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 52803529  on 64875  degrees of freedom\nAIC: 53160249\n\nNumber of Fisher Scoring iterations: 7\n\n\nCode\nCalcRSquared(uncSIM2$data$trips, uncSIM2$fitted.values)\n\n\n[1] 0.1306422\n\n\n\n\n\n\nCode\norcSIM2 &lt;- glm(formula = trips ~\n                #log(pull_station_count) +\n                log(pull_trainexit_count) +\n                log(pull_biz_count) +\n                log(pull_entertn_count) +\n                log(pull_fnb_count) +\n                #log(pull_finance_count) +\n                #log(pull_lnr_count) +\n                #log(pull_retails_count) +\n                log(pull_schools_sf_count) +\n                log(distance) +\n                origin_hex,\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(orcSIM2)\n\n\n\nCall:\nglm(formula = trips ~ log(pull_trainexit_count) + log(pull_biz_count) + \n    log(pull_entertn_count) + log(pull_fnb_count) + log(pull_schools_sf_count) + \n    log(distance) + origin_hex, family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n                             Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)                13.5601125  0.0243194   557.585  &lt; 2e-16 ***\nlog(pull_trainexit_count)   0.8311186  0.0003245  2561.425  &lt; 2e-16 ***\nlog(pull_biz_count)         0.0971130  0.0001869   519.701  &lt; 2e-16 ***\nlog(pull_entertn_count)    -0.1844719  0.0008291  -222.507  &lt; 2e-16 ***\nlog(pull_fnb_count)        -0.1020034  0.0002716  -375.512  &lt; 2e-16 ***\nlog(pull_schools_sf_count)  0.2594574  0.0006662   389.468  &lt; 2e-16 ***\nlog(distance)              -1.2396219  0.0002135 -5806.644  &lt; 2e-16 ***\norigin_hex1003              2.6321831  0.0245529   107.204  &lt; 2e-16 ***\norigin_hex1004              3.4913499  0.0243933   143.127  &lt; 2e-16 ***\norigin_hex1011             -0.5583317  0.0386093   -14.461  &lt; 2e-16 ***\norigin_hex1012             -0.6221530  0.0399374   -15.578  &lt; 2e-16 ***\norigin_hex1013             -0.0154868  0.0288940    -0.536 0.591967    \norigin_hex1014              0.4643249  0.0264014    17.587  &lt; 2e-16 ***\norigin_hex1015             -0.1897484  0.0289102    -6.563 5.26e-11 ***\norigin_hex1016              1.1782364  0.0252049    46.746  &lt; 2e-16 ***\norigin_hex1018              1.6003976  0.0260518    61.431  &lt; 2e-16 ***\norigin_hex1019              3.0087133  0.0246199   122.206  &lt; 2e-16 ***\norigin_hex1023              1.7387247  0.0258759    67.195  &lt; 2e-16 ***\norigin_hex1024              2.9548088  0.0245801   120.211  &lt; 2e-16 ***\norigin_hex1025             -1.5886599  0.0547596   -29.012  &lt; 2e-16 ***\norigin_hex1033              0.6336535  0.0265924    23.828  &lt; 2e-16 ***\norigin_hex1034              1.4347431  0.0252096    56.913  &lt; 2e-16 ***\norigin_hex1035              1.9553158  0.0247813    78.903  &lt; 2e-16 ***\norigin_hex1036             -0.0553465  0.0278600    -1.987 0.046967 *  \norigin_hex1037              1.1454289  0.0251632    45.520  &lt; 2e-16 ***\norigin_hex1043             -0.2291721  0.0345369    -6.636 3.23e-11 ***\norigin_hex1045              2.4064097  0.0245920    97.853  &lt; 2e-16 ***\norigin_hex1046              2.5303041  0.0246862   102.499  &lt; 2e-16 ***\norigin_hex1053              1.7657206  0.0248481    71.061  &lt; 2e-16 ***\norigin_hex1054              1.1089895  0.0253902    43.678  &lt; 2e-16 ***\norigin_hex1055              1.9887126  0.0247348    80.401  &lt; 2e-16 ***\norigin_hex1056              0.7833670  0.0258494    30.305  &lt; 2e-16 ***\norigin_hex1064             -3.1189055  0.2511752   -12.417  &lt; 2e-16 ***\norigin_hex1066              2.4699636  0.0246914   100.033  &lt; 2e-16 ***\norigin_hex1067              2.4733643  0.0250513    98.732  &lt; 2e-16 ***\norigin_hex1074              1.3084588  0.0253222    51.672  &lt; 2e-16 ***\norigin_hex1075              0.8624572  0.0261699    32.956  &lt; 2e-16 ***\norigin_hex1076              0.7514178  0.0256649    29.278  &lt; 2e-16 ***\norigin_hex1077              0.7684923  0.0261874    29.346  &lt; 2e-16 ***\norigin_hex1079              1.9370069  0.0247098    78.390  &lt; 2e-16 ***\norigin_hex1085             -2.8197339  0.1434885   -19.651  &lt; 2e-16 ***\norigin_hex1087              2.0919066  0.0248643    84.133  &lt; 2e-16 ***\norigin_hex1088              1.0651208  0.0268976    39.599  &lt; 2e-16 ***\norigin_hex109              -1.5630311  0.1019469   -15.332  &lt; 2e-16 ***\norigin_hex1094             -1.0668937  0.0497927   -21.427  &lt; 2e-16 ***\norigin_hex1095             -0.8499649  0.0407394   -20.863  &lt; 2e-16 ***\norigin_hex1096              0.7163583  0.0315284    22.721  &lt; 2e-16 ***\norigin_hex1097              2.3207635  0.0244891    94.767  &lt; 2e-16 ***\norigin_hex1098             -0.2719177  0.0301170    -9.029  &lt; 2e-16 ***\norigin_hex1099              1.3026102  0.0251109    51.874  &lt; 2e-16 ***\norigin_hex110              -0.5973502  0.0756133    -7.900 2.79e-15 ***\norigin_hex1105             -1.1658159  0.0658351   -17.708  &lt; 2e-16 ***\norigin_hex1106             -2.1445537  0.0948277   -22.615  &lt; 2e-16 ***\norigin_hex1107             -0.3089214  0.0365418    -8.454  &lt; 2e-16 ***\norigin_hex1108              3.7729230  0.0243338   155.049  &lt; 2e-16 ***\norigin_hex1109              1.5277073  0.0262193    58.267  &lt; 2e-16 ***\norigin_hex111               1.6818593  0.0267544    62.863  &lt; 2e-16 ***\norigin_hex1116              0.6678164  0.0256017    26.085  &lt; 2e-16 ***\norigin_hex1117             -0.4596485  0.0297749   -15.437  &lt; 2e-16 ***\norigin_hex1118             -0.6429810  0.0307660   -20.899  &lt; 2e-16 ***\norigin_hex1119              0.6143705  0.0260403    23.593  &lt; 2e-16 ***\norigin_hex112              -2.4226747  0.0685892   -35.322  &lt; 2e-16 ***\norigin_hex1120              0.3248735  0.0274792    11.823  &lt; 2e-16 ***\norigin_hex1129              2.3981351  0.0246438    97.312  &lt; 2e-16 ***\norigin_hex1130              2.9762591  0.0245143   121.409  &lt; 2e-16 ***\norigin_hex1131              1.4001784  0.0261798    53.483  &lt; 2e-16 ***\norigin_hex1136             -0.1142536  0.0285752    -3.998 6.38e-05 ***\norigin_hex1138             -0.8795976  0.0373732   -23.536  &lt; 2e-16 ***\norigin_hex1139              1.4691385  0.0247430    59.376  &lt; 2e-16 ***\norigin_hex1141              1.3957032  0.0249913    55.848  &lt; 2e-16 ***\norigin_hex1148             -1.0618916  0.0569957   -18.631  &lt; 2e-16 ***\norigin_hex1149              0.5744042  0.0296594    19.367  &lt; 2e-16 ***\norigin_hex1150              3.0842311  0.0244665   126.059  &lt; 2e-16 ***\norigin_hex1151              1.7237379  0.0250245    68.882  &lt; 2e-16 ***\norigin_hex1158              0.0915149  0.0265761     3.444 0.000574 ***\norigin_hex1159              1.3891242  0.0248632    55.871  &lt; 2e-16 ***\norigin_hex1160              2.3071450  0.0245029    94.158  &lt; 2e-16 ***\norigin_hex1171              2.9932968  0.0245092   122.129  &lt; 2e-16 ***\norigin_hex1172              2.8742677  0.0244897   117.366  &lt; 2e-16 ***\norigin_hex1173              0.5496698  0.0271436    20.250  &lt; 2e-16 ***\norigin_hex1174             -2.7413506  0.2683616   -10.215  &lt; 2e-16 ***\norigin_hex1178              0.2061445  0.0263014     7.838 4.59e-15 ***\norigin_hex1179              1.0359993  0.0251507    41.192  &lt; 2e-16 ***\norigin_hex1180              1.9191626  0.0245945    78.032  &lt; 2e-16 ***\norigin_hex1181              1.1425914  0.0250748    45.567  &lt; 2e-16 ***\norigin_hex1183              0.1673654  0.0268546     6.232 4.60e-10 ***\norigin_hex1190             -0.8268382  0.0536401   -15.415  &lt; 2e-16 ***\norigin_hex1192              2.4335545  0.0249642    97.482  &lt; 2e-16 ***\norigin_hex1193              2.1781251  0.0247475    88.014  &lt; 2e-16 ***\norigin_hex1194              0.4077680  0.0278702    14.631  &lt; 2e-16 ***\norigin_hex1200              1.2530284  0.0251038    49.914  &lt; 2e-16 ***\norigin_hex1201              1.0083491  0.0252222    39.979  &lt; 2e-16 ***\norigin_hex1203              1.4957804  0.0249212    60.021  &lt; 2e-16 ***\norigin_hex1204              1.2149591  0.0251508    48.307  &lt; 2e-16 ***\norigin_hex1211             -1.2194108  0.0923335   -13.207  &lt; 2e-16 ***\norigin_hex1214              2.7686684  0.0245485   112.784  &lt; 2e-16 ***\norigin_hex1215             -0.3871613  0.0464658    -8.332  &lt; 2e-16 ***\norigin_hex1216             -1.2629433  0.0470366   -26.850  &lt; 2e-16 ***\norigin_hex1220              2.3037872  0.0245639    93.788  &lt; 2e-16 ***\norigin_hex1221              1.7547146  0.0246412    71.211  &lt; 2e-16 ***\norigin_hex1222              1.4577710  0.0260534    55.953  &lt; 2e-16 ***\norigin_hex1223             -0.4476813  0.0293855   -15.235  &lt; 2e-16 ***\norigin_hex1224              0.3127336  0.0264251    11.835  &lt; 2e-16 ***\norigin_hex1231             -3.1956826  0.1905340   -16.772  &lt; 2e-16 ***\norigin_hex1232             -1.8747531  0.1144070   -16.387  &lt; 2e-16 ***\norigin_hex1235              0.2400771  0.0277945     8.638  &lt; 2e-16 ***\norigin_hex1236              0.5630556  0.0277536    20.288  &lt; 2e-16 ***\norigin_hex1241              0.4198177  0.0261940    16.027  &lt; 2e-16 ***\norigin_hex1242              1.1795638  0.0251458    46.909  &lt; 2e-16 ***\norigin_hex1243              1.6830615  0.0247045    68.128  &lt; 2e-16 ***\norigin_hex1246              0.3510307  0.0258727    13.568  &lt; 2e-16 ***\norigin_hex1256              1.8885661  0.0254830    74.111  &lt; 2e-16 ***\norigin_hex1257              2.6108862  0.0247436   105.518  &lt; 2e-16 ***\norigin_hex1258              0.3132340  0.0281438    11.130  &lt; 2e-16 ***\norigin_hex1262              1.0427069  0.0255613    40.792  &lt; 2e-16 ***\norigin_hex1263              1.3293722  0.0247779    53.651  &lt; 2e-16 ***\norigin_hex1264              0.4840117  0.0269030    17.991  &lt; 2e-16 ***\norigin_hex1265             -0.2373854  0.0279158    -8.504  &lt; 2e-16 ***\norigin_hex1266              1.1274699  0.0254110    44.369  &lt; 2e-16 ***\norigin_hex1267             -0.8953263  0.0361145   -24.791  &lt; 2e-16 ***\norigin_hex1272             -3.1268043  0.1179927   -26.500  &lt; 2e-16 ***\norigin_hex1273              0.6565908  0.0269643    24.350  &lt; 2e-16 ***\norigin_hex1277              2.4373179  0.0245416    99.314  &lt; 2e-16 ***\norigin_hex1278              0.1175850  0.0278045     4.229 2.35e-05 ***\norigin_hex128               0.6462347  0.0329259    19.627  &lt; 2e-16 ***\norigin_hex1283              2.4578844  0.0245195   100.242  &lt; 2e-16 ***\norigin_hex1284              1.8082322  0.0246867    73.247  &lt; 2e-16 ***\norigin_hex1285              2.4708141  0.0244614   101.009  &lt; 2e-16 ***\norigin_hex1286              0.6551805  0.0262060    25.001  &lt; 2e-16 ***\norigin_hex1289             -1.4210240  0.0521212   -27.264  &lt; 2e-16 ***\norigin_hex129              -1.9450528  0.1905352   -10.208  &lt; 2e-16 ***\norigin_hex1293             -2.7169118  0.0923337   -29.425  &lt; 2e-16 ***\norigin_hex1294              2.2447941  0.0249321    90.036  &lt; 2e-16 ***\norigin_hex1295             -0.2598588  0.0317694    -8.180 2.85e-16 ***\norigin_hex1298              1.6130452  0.0250449    64.406  &lt; 2e-16 ***\norigin_hex1299              2.1218011  0.0249574    85.017  &lt; 2e-16 ***\norigin_hex130              -1.8958716  0.0649032   -29.211  &lt; 2e-16 ***\norigin_hex1304              2.4543036  0.0245251   100.073  &lt; 2e-16 ***\norigin_hex1305              1.8164295  0.0245785    73.903  &lt; 2e-16 ***\norigin_hex1307             -1.6586584  0.0446958   -37.110  &lt; 2e-16 ***\norigin_hex1308              1.2627279  0.0249820    50.545  &lt; 2e-16 ***\norigin_hex131              -0.7366404  0.0427948   -17.213  &lt; 2e-16 ***\norigin_hex1310             -3.0307212  0.1370065   -22.121  &lt; 2e-16 ***\norigin_hex1316             -1.3148473  0.0410248   -32.050  &lt; 2e-16 ***\norigin_hex1317              0.4748518  0.0266677    17.806  &lt; 2e-16 ***\norigin_hex1318              0.0436923  0.0286183     1.527 0.126829    \norigin_hex1319              2.6630487  0.0245136   108.636  &lt; 2e-16 ***\norigin_hex132              -1.3099830  0.0537417   -24.376  &lt; 2e-16 ***\norigin_hex1320              1.3913525  0.0257691    53.993  &lt; 2e-16 ***\norigin_hex1325              0.0774890  0.0271331     2.856 0.004292 ** \norigin_hex1326              1.9879602  0.0245679    80.917  &lt; 2e-16 ***\norigin_hex1327              1.7102827  0.0246387    69.415  &lt; 2e-16 ***\norigin_hex1328              0.4263893  0.0259708    16.418  &lt; 2e-16 ***\norigin_hex1329              0.5010581  0.0268264    18.678  &lt; 2e-16 ***\norigin_hex133              -1.5380573  0.0448291   -34.309  &lt; 2e-16 ***\norigin_hex1330              0.0402126  0.0255228     1.576 0.115129    \norigin_hex1331             -3.5321859  0.3024865   -11.677  &lt; 2e-16 ***\norigin_hex1333              0.0808432  0.0272230     2.970 0.002981 ** \norigin_hex1334              0.3978298  0.0268894    14.795  &lt; 2e-16 ***\norigin_hex1335             -0.0524424  0.0295148    -1.777 0.075598 .  \norigin_hex1336             -2.6832628  0.1099236   -24.410  &lt; 2e-16 ***\norigin_hex1337             -2.0162587  0.0543931   -37.068  &lt; 2e-16 ***\norigin_hex1338             -2.8189671  0.0849204   -33.195  &lt; 2e-16 ***\norigin_hex1339              2.7296074  0.0244932   111.444  &lt; 2e-16 ***\norigin_hex134               0.1123959  0.0336005     3.345 0.000823 ***\norigin_hex1340              1.1303555  0.0257728    43.859  &lt; 2e-16 ***\norigin_hex1341             -3.8017851  0.7075233    -5.373 7.73e-08 ***\norigin_hex1346              1.6345822  0.0249820    65.430  &lt; 2e-16 ***\norigin_hex1347              2.5871118  0.0244644   105.750  &lt; 2e-16 ***\norigin_hex1348              0.9011615  0.0250085    36.034  &lt; 2e-16 ***\norigin_hex1349              0.6287824  0.0255280    24.631  &lt; 2e-16 ***\norigin_hex1350              0.6568704  0.0266132    24.682  &lt; 2e-16 ***\norigin_hex1353              0.1440397  0.0262106     5.495 3.90e-08 ***\norigin_hex1354              0.1635457  0.0272028     6.012 1.83e-09 ***\norigin_hex1355              0.9723208  0.0256684    37.880  &lt; 2e-16 ***\norigin_hex1357             -0.0279887  0.0305753    -0.915 0.359981    \norigin_hex1358              1.3412937  0.0252558    53.108  &lt; 2e-16 ***\norigin_hex1359              1.9648736  0.0247547    79.374  &lt; 2e-16 ***\norigin_hex1360              2.0283940  0.0247837    81.844  &lt; 2e-16 ***\norigin_hex1361              2.9094347  0.0245354   118.581  &lt; 2e-16 ***\norigin_hex1362             -1.3389857  0.0512410   -26.131  &lt; 2e-16 ***\norigin_hex1368              0.5648215  0.0256345    22.034  &lt; 2e-16 ***\norigin_hex1369              0.3521212  0.0257037    13.699  &lt; 2e-16 ***\norigin_hex1370              1.3491132  0.0247355    54.541  &lt; 2e-16 ***\norigin_hex1371              0.6694200  0.0261345    25.614  &lt; 2e-16 ***\norigin_hex1372             -0.0331448  0.0275140    -1.205 0.228337    \norigin_hex1373             -1.7973124  0.0525182   -34.223  &lt; 2e-16 ***\norigin_hex1374              0.2665378  0.0287254     9.279  &lt; 2e-16 ***\norigin_hex1375              1.3242047  0.0254203    52.092  &lt; 2e-16 ***\norigin_hex1376              0.9306368  0.0271451    34.284  &lt; 2e-16 ***\norigin_hex1379             -1.0677416  0.0420664   -25.382  &lt; 2e-16 ***\norigin_hex1380              2.9829518  0.0244118   122.193  &lt; 2e-16 ***\norigin_hex1381              2.6590037  0.0244980   108.540  &lt; 2e-16 ***\norigin_hex1382              2.1538316  0.0250008    86.150  &lt; 2e-16 ***\norigin_hex1383             -0.5150259  0.0340932   -15.106  &lt; 2e-16 ***\norigin_hex1388              0.9516246  0.0250785    37.946  &lt; 2e-16 ***\norigin_hex1389              0.2393601  0.0257840     9.283  &lt; 2e-16 ***\norigin_hex1390              0.6627362  0.0251274    26.375  &lt; 2e-16 ***\norigin_hex1391              0.6885313  0.0255971    26.899  &lt; 2e-16 ***\norigin_hex1392              0.1888036  0.0288882     6.536 6.33e-11 ***\norigin_hex1393             -0.5832449  0.0284753   -20.483  &lt; 2e-16 ***\norigin_hex1394              0.6008593  0.0253666    23.687  &lt; 2e-16 ***\norigin_hex1395              0.6772073  0.0254362    26.624  &lt; 2e-16 ***\norigin_hex1396              1.9567311  0.0247345    79.109  &lt; 2e-16 ***\norigin_hex1397              1.5532127  0.0247611    62.728  &lt; 2e-16 ***\norigin_hex1398              0.8598673  0.0265336    32.407  &lt; 2e-16 ***\norigin_hex1400              2.1323290  0.0250531    85.112  &lt; 2e-16 ***\norigin_hex1401              2.2524716  0.0245303    91.824  &lt; 2e-16 ***\norigin_hex1402              2.4928473  0.0245933   101.363  &lt; 2e-16 ***\norigin_hex1404              2.4066330  0.0284271    84.660  &lt; 2e-16 ***\norigin_hex1410              1.2691508  0.0246277    51.534  &lt; 2e-16 ***\norigin_hex1411              0.4261868  0.0254976    16.715  &lt; 2e-16 ***\norigin_hex1412              0.7402423  0.0250205    29.585  &lt; 2e-16 ***\norigin_hex1413              1.5879648  0.0246881    64.321  &lt; 2e-16 ***\norigin_hex1414              0.7258208  0.0250369    28.990  &lt; 2e-16 ***\norigin_hex1415              0.4416192  0.0259034    17.049  &lt; 2e-16 ***\norigin_hex1416              1.0507831  0.0252748    41.574  &lt; 2e-16 ***\norigin_hex1417              1.1255775  0.0250517    44.930  &lt; 2e-16 ***\norigin_hex1418              1.9370633  0.0246875    78.463  &lt; 2e-16 ***\norigin_hex1419              1.3182416  0.0250718    52.579  &lt; 2e-16 ***\norigin_hex1422              2.5440560  0.0247092   102.960  &lt; 2e-16 ***\norigin_hex1423              3.5650023  0.0244377   145.881  &lt; 2e-16 ***\norigin_hex1430              1.0117867  0.0249182    40.604  &lt; 2e-16 ***\norigin_hex1431              1.1706581  0.0247047    47.386  &lt; 2e-16 ***\norigin_hex1432              1.2816680  0.0246915    51.907  &lt; 2e-16 ***\norigin_hex1433             -0.2511434  0.0289209    -8.684  &lt; 2e-16 ***\norigin_hex1434              1.3770674  0.0248100    55.505  &lt; 2e-16 ***\norigin_hex1435              1.8996665  0.0245513    77.375  &lt; 2e-16 ***\norigin_hex1436             -1.1129049  0.0330374   -33.686  &lt; 2e-16 ***\norigin_hex1437              2.0888153  0.0245978    84.919  &lt; 2e-16 ***\norigin_hex1438              2.4086532  0.0244476    98.523  &lt; 2e-16 ***\norigin_hex1439              2.9683307  0.0243938   121.684  &lt; 2e-16 ***\norigin_hex1440             -0.7967062  0.0314681   -25.318  &lt; 2e-16 ***\norigin_hex1442              1.9819139  0.0250768    79.034  &lt; 2e-16 ***\norigin_hex1443              3.1109090  0.0244804   127.078  &lt; 2e-16 ***\norigin_hex1444              2.5532749  0.0252695   101.042  &lt; 2e-16 ***\norigin_hex1452              0.1337540  0.0253849     5.269 1.37e-07 ***\norigin_hex1453              0.7284033  0.0251210    28.996  &lt; 2e-16 ***\norigin_hex1454             -0.5400082  0.0302578   -17.847  &lt; 2e-16 ***\norigin_hex1455              0.8184838  0.0255251    32.066  &lt; 2e-16 ***\norigin_hex1456              1.4465183  0.0249166    58.054  &lt; 2e-16 ***\norigin_hex1457              2.1719563  0.0245558    88.450  &lt; 2e-16 ***\norigin_hex1458              2.2289925  0.0244962    90.993  &lt; 2e-16 ***\norigin_hex1459              1.9307923  0.0246425    78.352  &lt; 2e-16 ***\norigin_hex1460              1.1354312  0.0249978    45.421  &lt; 2e-16 ***\norigin_hex1461             -0.1675051  0.0293481    -5.708 1.15e-08 ***\norigin_hex1464              3.1413848  0.0244527   128.468  &lt; 2e-16 ***\norigin_hex1465              3.0112269  0.0246434   122.192  &lt; 2e-16 ***\norigin_hex1472             -1.1371327  0.0306984   -37.042  &lt; 2e-16 ***\norigin_hex1473             -0.2820589  0.0260699   -10.819  &lt; 2e-16 ***\norigin_hex1474              0.8691706  0.0247906    35.061  &lt; 2e-16 ***\norigin_hex1475              1.9700503  0.0245637    80.202  &lt; 2e-16 ***\norigin_hex1476              1.4582636  0.0249804    58.376  &lt; 2e-16 ***\norigin_hex1477              2.7164313  0.0243779   111.430  &lt; 2e-16 ***\norigin_hex1478              1.1613254  0.0250061    46.442  &lt; 2e-16 ***\norigin_hex1479              1.3220928  0.0248627    53.176  &lt; 2e-16 ***\norigin_hex1480              2.9919888  0.0243656   122.796  &lt; 2e-16 ***\norigin_hex1481              0.5870939  0.0261571    22.445  &lt; 2e-16 ***\norigin_hex1482              0.3807482  0.0272531    13.971  &lt; 2e-16 ***\norigin_hex1485              1.4213089  0.0246762    57.598  &lt; 2e-16 ***\norigin_hex1494              0.0986690  0.0268243     3.678 0.000235 ***\norigin_hex1495              0.3723177  0.0254086    14.653  &lt; 2e-16 ***\norigin_hex1496              0.9154498  0.0246448    37.146  &lt; 2e-16 ***\norigin_hex1497              1.8256290  0.0247360    73.805  &lt; 2e-16 ***\norigin_hex1498              2.1249336  0.0245430    86.580  &lt; 2e-16 ***\norigin_hex1499              2.2929422  0.0244729    93.693  &lt; 2e-16 ***\norigin_hex150               1.3176506  0.0312671    42.142  &lt; 2e-16 ***\norigin_hex1500              2.2914082  0.0247667    92.520  &lt; 2e-16 ***\norigin_hex1501              2.4037238  0.0244803    98.190  &lt; 2e-16 ***\norigin_hex1502              1.9709324  0.0246289    80.025  &lt; 2e-16 ***\norigin_hex1506             -2.5735036  0.1111470   -23.154  &lt; 2e-16 ***\norigin_hex151              -1.5278044  0.0634473   -24.080  &lt; 2e-16 ***\norigin_hex1515             -0.8572689  0.0321006   -26.706  &lt; 2e-16 ***\norigin_hex1516              0.0481137  0.0250766     1.919 0.055026 .  \norigin_hex1517              1.0013990  0.0251109    39.879  &lt; 2e-16 ***\norigin_hex1518              1.2406845  0.0252480    49.140  &lt; 2e-16 ***\norigin_hex1519              2.4680416  0.0246630   100.070  &lt; 2e-16 ***\norigin_hex152              -1.5677602  0.0846644   -18.517  &lt; 2e-16 ***\norigin_hex1520              1.0483915  0.0251342    41.712  &lt; 2e-16 ***\norigin_hex1521              0.3884695  0.0265219    14.647  &lt; 2e-16 ***\norigin_hex1522              2.7133961  0.0244453   110.999  &lt; 2e-16 ***\norigin_hex1523              0.7359670  0.0283776    25.935  &lt; 2e-16 ***\norigin_hex1524              1.1907201  0.0258376    46.085  &lt; 2e-16 ***\norigin_hex1527              0.3372697  0.0289291    11.658  &lt; 2e-16 ***\norigin_hex153              -1.7803352  0.0481000   -37.013  &lt; 2e-16 ***\norigin_hex1535             -2.3771729  0.0759643   -31.293  &lt; 2e-16 ***\norigin_hex1536             -1.6908891  0.0402372   -42.023  &lt; 2e-16 ***\norigin_hex1537             -0.9081673  0.0287447   -31.594  &lt; 2e-16 ***\norigin_hex1538              0.8874804  0.0249273    35.603  &lt; 2e-16 ***\norigin_hex1539              1.3639118  0.0247114    55.194  &lt; 2e-16 ***\norigin_hex154               1.5629202  0.0258227    60.525  &lt; 2e-16 ***\norigin_hex1540              2.0334837  0.0245752    82.745  &lt; 2e-16 ***\norigin_hex1541              2.8305757  0.0246879   114.654  &lt; 2e-16 ***\norigin_hex1542              0.2480041  0.0281200     8.820  &lt; 2e-16 ***\norigin_hex1543              0.9781718  0.0310760    31.477  &lt; 2e-16 ***\norigin_hex1544              1.7776739  0.0250063    71.089  &lt; 2e-16 ***\norigin_hex1547             -1.9944079  0.0626280   -31.845  &lt; 2e-16 ***\norigin_hex155              -1.4294817  0.0407966   -35.039  &lt; 2e-16 ***\norigin_hex1556             -1.0175957  0.0584291   -17.416  &lt; 2e-16 ***\norigin_hex1557             -1.7160398  0.0391498   -43.833  &lt; 2e-16 ***\norigin_hex1558             -0.1216792  0.0299044    -4.069 4.72e-05 ***\norigin_hex1559              1.4750188  0.0246470    59.846  &lt; 2e-16 ***\norigin_hex156              -0.7071040  0.0455512   -15.523  &lt; 2e-16 ***\norigin_hex1560              2.3869414  0.0244610    97.581  &lt; 2e-16 ***\norigin_hex1561              2.2084062  0.0246081    89.743  &lt; 2e-16 ***\norigin_hex1562             -0.7221176  0.0307711   -23.467  &lt; 2e-16 ***\norigin_hex1563              0.9281044  0.0252030    36.825  &lt; 2e-16 ***\norigin_hex1564              0.3050754  0.0272829    11.182  &lt; 2e-16 ***\norigin_hex1565              0.1320352  0.0275845     4.787 1.70e-06 ***\norigin_hex1566             -0.3918583  0.0308578   -12.699  &lt; 2e-16 ***\norigin_hex1567             -2.4600254  0.0802302   -30.662  &lt; 2e-16 ***\norigin_hex1568             -1.6924713  0.0658350   -25.708  &lt; 2e-16 ***\norigin_hex1578             -3.2203973  0.7075233    -4.552 5.32e-06 ***\norigin_hex1580              0.1571991  0.0283398     5.547 2.91e-08 ***\norigin_hex1581             -1.1312646  0.0311104   -36.363  &lt; 2e-16 ***\norigin_hex1582              2.0148224  0.0244893    82.273  &lt; 2e-16 ***\norigin_hex1583             -0.0245776  0.0311649    -0.789 0.430329    \norigin_hex1584              0.6622910  0.0261199    25.356  &lt; 2e-16 ***\norigin_hex1585              1.2917550  0.0256944    50.274  &lt; 2e-16 ***\norigin_hex1586              0.3680036  0.0269867    13.636  &lt; 2e-16 ***\norigin_hex1589             -3.0001747  0.1144069   -26.224  &lt; 2e-16 ***\norigin_hex1590             -1.7031133  0.0623640   -27.309  &lt; 2e-16 ***\norigin_hex1600              1.7636144  0.0258318    68.273  &lt; 2e-16 ***\norigin_hex1601              0.5414917  0.0252314    21.461  &lt; 2e-16 ***\norigin_hex1602              1.6402854  0.0248869    65.910  &lt; 2e-16 ***\norigin_hex1603              2.2276162  0.0244989    90.927  &lt; 2e-16 ***\norigin_hex1604              0.8137756  0.0253395    32.115  &lt; 2e-16 ***\norigin_hex1605              1.8974919  0.0245440    77.310  &lt; 2e-16 ***\norigin_hex1606              2.1663820  0.0257309    84.194  &lt; 2e-16 ***\norigin_hex1607              0.7348072  0.0258563    28.419  &lt; 2e-16 ***\norigin_hex1608              2.2915036  0.0245761    93.241  &lt; 2e-16 ***\norigin_hex1609              1.8342380  0.0247898    73.992  &lt; 2e-16 ***\norigin_hex1610             -1.6127621  0.0668200   -24.136  &lt; 2e-16 ***\norigin_hex1622              0.7009907  0.0312169    22.456  &lt; 2e-16 ***\norigin_hex1623              1.8737596  0.0245174    76.426  &lt; 2e-16 ***\norigin_hex1624              0.9320891  0.0254397    36.639  &lt; 2e-16 ***\norigin_hex1625              2.1588773  0.0246090    87.727  &lt; 2e-16 ***\norigin_hex1626              2.6202367  0.0244192   107.303  &lt; 2e-16 ***\norigin_hex1627              1.1503499  0.0251113    45.810  &lt; 2e-16 ***\norigin_hex1628              2.7677479  0.0244323   113.282  &lt; 2e-16 ***\norigin_hex1629              1.5174792  0.0250804    60.504  &lt; 2e-16 ***\norigin_hex1630              1.3595671  0.0253333    53.667  &lt; 2e-16 ***\norigin_hex1631             -2.2457430  0.0639174   -35.135  &lt; 2e-16 ***\norigin_hex1642             -0.4763641  0.0362729   -13.133  &lt; 2e-16 ***\norigin_hex1643              1.8166879  0.0245748    73.925  &lt; 2e-16 ***\norigin_hex1644              0.0892849  0.0288839     3.091 0.001994 ** \norigin_hex1645              1.3303726  0.0248902    53.450  &lt; 2e-16 ***\norigin_hex1646              1.2976713  0.0256454    50.601  &lt; 2e-16 ***\norigin_hex1647              1.3358644  0.0248048    53.855  &lt; 2e-16 ***\norigin_hex1648              1.9332980  0.0246313    78.489  &lt; 2e-16 ***\norigin_hex1649              2.5653992  0.0244652   104.859  &lt; 2e-16 ***\norigin_hex1650              2.1164401  0.0247229    85.607  &lt; 2e-16 ***\norigin_hex1664             -3.0498439  0.1684249   -18.108  &lt; 2e-16 ***\norigin_hex1665              2.0716474  0.0245060    84.536  &lt; 2e-16 ***\norigin_hex1666              0.8970361  0.0251115    35.722  &lt; 2e-16 ***\norigin_hex1667              1.8748937  0.0262552    71.410  &lt; 2e-16 ***\norigin_hex1668              2.0541742  0.0246170    83.445  &lt; 2e-16 ***\norigin_hex1670              2.7042151  0.0244288   110.698  &lt; 2e-16 ***\norigin_hex1671              3.2791978  0.0246978   132.773  &lt; 2e-16 ***\norigin_hex1672              2.1348133  0.0248363    85.955  &lt; 2e-16 ***\norigin_hex1684              1.1105385  0.0268512    41.359  &lt; 2e-16 ***\norigin_hex1685              1.7821906  0.0247417    72.032  &lt; 2e-16 ***\norigin_hex1686              1.6402388  0.0247494    66.274  &lt; 2e-16 ***\norigin_hex1687              1.4411268  0.0252179    57.147  &lt; 2e-16 ***\norigin_hex1688              0.7945171  0.0255104    31.145  &lt; 2e-16 ***\norigin_hex1689              0.2612083  0.0269301     9.699  &lt; 2e-16 ***\norigin_hex1690              1.7842485  0.0250068    71.351  &lt; 2e-16 ***\norigin_hex1691              2.3393047  0.0245719    95.202  &lt; 2e-16 ***\norigin_hex1692              1.2142556  0.0254261    47.756  &lt; 2e-16 ***\norigin_hex1706              1.7493220  0.0249337    70.159  &lt; 2e-16 ***\norigin_hex1707              1.4742516  0.0246855    59.721  &lt; 2e-16 ***\norigin_hex1708              2.2339030  0.0245281    91.075  &lt; 2e-16 ***\norigin_hex1709              1.1728924  0.0250491    46.824  &lt; 2e-16 ***\norigin_hex1710              2.3600629  0.0245406    96.170  &lt; 2e-16 ***\norigin_hex1711              2.0214924  0.0246670    81.951  &lt; 2e-16 ***\norigin_hex1712              2.6826027  0.0244257   109.827  &lt; 2e-16 ***\norigin_hex1713              0.0860910  0.0271115     3.175 0.001496 ** \norigin_hex1714              2.3326583  0.0246127    94.775  &lt; 2e-16 ***\norigin_hex172              -0.0075079  0.0796004    -0.094 0.924856    \norigin_hex1727              1.8732881  0.0247309    75.747  &lt; 2e-16 ***\norigin_hex1728              1.8018078  0.0246471    73.104  &lt; 2e-16 ***\norigin_hex1729              1.2934965  0.0248150    52.126  &lt; 2e-16 ***\norigin_hex1730             -0.5165967  0.0313702   -16.468  &lt; 2e-16 ***\norigin_hex1731              1.7392638  0.0247741    70.205  &lt; 2e-16 ***\norigin_hex1732              2.4177908  0.0244686    98.812  &lt; 2e-16 ***\norigin_hex1733              2.0698033  0.0245972    84.148  &lt; 2e-16 ***\norigin_hex1734              1.9634097  0.0245637    79.931  &lt; 2e-16 ***\norigin_hex1735              2.6538870  0.0248586   106.760  &lt; 2e-16 ***\norigin_hex174              -1.6754749  0.0522533   -32.065  &lt; 2e-16 ***\norigin_hex1748              0.6677135  0.0258774    25.803  &lt; 2e-16 ***\norigin_hex1749              1.4664116  0.0246954    59.380  &lt; 2e-16 ***\norigin_hex175               0.6850372  0.0262486    26.098  &lt; 2e-16 ***\norigin_hex1750              0.7063964  0.0252243    28.005  &lt; 2e-16 ***\norigin_hex1751              0.4817352  0.0263549    18.279  &lt; 2e-16 ***\norigin_hex1753              2.3620423  0.0245000    96.410  &lt; 2e-16 ***\norigin_hex1754              2.5903613  0.0244255   106.051  &lt; 2e-16 ***\norigin_hex1755              2.0143111  0.0245861    81.929  &lt; 2e-16 ***\norigin_hex1756              1.7306927  0.0247484    69.932  &lt; 2e-16 ***\norigin_hex1757             -0.9450942  0.0343727   -27.495  &lt; 2e-16 ***\norigin_hex176               1.8718697  0.0249587    74.999  &lt; 2e-16 ***\norigin_hex1769              1.5006695  0.0248492    60.391  &lt; 2e-16 ***\norigin_hex1770              1.2100794  0.0260079    46.527  &lt; 2e-16 ***\norigin_hex1771              0.3575839  0.0261342    13.683  &lt; 2e-16 ***\norigin_hex1772              0.2762469  0.0336056     8.220  &lt; 2e-16 ***\norigin_hex1774              2.0934424  0.0245677    85.211  &lt; 2e-16 ***\norigin_hex1775              1.6085840  0.0247836    64.905  &lt; 2e-16 ***\norigin_hex1776              2.4788816  0.0244382   101.435  &lt; 2e-16 ***\norigin_hex1777              2.4490434  0.0245061    99.936  &lt; 2e-16 ***\norigin_hex1778              1.1526714  0.0259210    44.469  &lt; 2e-16 ***\norigin_hex1790              2.0622359  0.0246658    83.607  &lt; 2e-16 ***\norigin_hex1791              1.2993466  0.0249912    51.992  &lt; 2e-16 ***\norigin_hex1792              1.6507534  0.0250400    65.925  &lt; 2e-16 ***\norigin_hex1793             -0.3877622  0.0276445   -14.027  &lt; 2e-16 ***\norigin_hex1794              0.1572087  0.0365420     4.302 1.69e-05 ***\norigin_hex1795             -0.9912294  0.0407102   -24.348  &lt; 2e-16 ***\norigin_hex1796              2.4004201  0.0245518    97.770  &lt; 2e-16 ***\norigin_hex1797              2.3530255  0.0245054    96.021  &lt; 2e-16 ***\norigin_hex1798              2.4536114  0.0245069   100.119  &lt; 2e-16 ***\norigin_hex1799              0.9217268  0.0255342    36.098  &lt; 2e-16 ***\norigin_hex1800             -1.5450777  0.0361540   -42.736  &lt; 2e-16 ***\norigin_hex1811              1.4293518  0.0252335    56.645  &lt; 2e-16 ***\norigin_hex1812              2.3678770  0.0244663    96.781  &lt; 2e-16 ***\norigin_hex1813              2.0795360  0.0245072    84.854  &lt; 2e-16 ***\norigin_hex1817              2.0196173  0.0247466    81.612  &lt; 2e-16 ***\norigin_hex1818              2.1476130  0.0245799    87.373  &lt; 2e-16 ***\norigin_hex1819              2.3978398  0.0244761    97.967  &lt; 2e-16 ***\norigin_hex1820             -0.8280675  0.0407674   -20.312  &lt; 2e-16 ***\norigin_hex1832              1.9214133  0.0247477    77.640  &lt; 2e-16 ***\norigin_hex1833              1.4660489  0.0248948    58.890  &lt; 2e-16 ***\norigin_hex1834              1.8399694  0.0246189    74.738  &lt; 2e-16 ***\norigin_hex1835              1.1412603  0.0252629    45.175  &lt; 2e-16 ***\norigin_hex1837             -1.4633134  0.0654141   -22.370  &lt; 2e-16 ***\norigin_hex1839              1.6243337  0.0250595    64.819  &lt; 2e-16 ***\norigin_hex1840              3.2779039  0.0243620   134.550  &lt; 2e-16 ***\norigin_hex1841             -1.1408817  0.0420178   -27.152  &lt; 2e-16 ***\norigin_hex1842              1.2269591  0.0263349    46.591  &lt; 2e-16 ***\norigin_hex1853              1.8229167  0.0246920    73.826  &lt; 2e-16 ***\norigin_hex1854              2.2035891  0.0246283    89.474  &lt; 2e-16 ***\norigin_hex1855              2.2507660  0.0245483    91.687  &lt; 2e-16 ***\norigin_hex1858              0.1435487  0.0349610     4.106 4.03e-05 ***\norigin_hex1860              2.8281567  0.0255325   110.767  &lt; 2e-16 ***\norigin_hex1861              2.1134087  0.0246074    85.885  &lt; 2e-16 ***\norigin_hex1874              2.1826200  0.0249032    87.644  &lt; 2e-16 ***\norigin_hex1875              0.4631330  0.0271501    17.058  &lt; 2e-16 ***\norigin_hex1876              2.3831114  0.0260438    91.504  &lt; 2e-16 ***\norigin_hex1877              1.9026557  0.0246555    77.170  &lt; 2e-16 ***\norigin_hex1880             -1.1402046  0.0560937   -20.327  &lt; 2e-16 ***\norigin_hex1882              2.1598338  0.0246759    87.528  &lt; 2e-16 ***\norigin_hex1883              1.8661352  0.0256649    72.712  &lt; 2e-16 ***\norigin_hex1895              2.1354329  0.0246405    86.664  &lt; 2e-16 ***\norigin_hex1896              0.5597497  0.0260478    21.489  &lt; 2e-16 ***\norigin_hex1897              1.4094249  0.0257150    54.810  &lt; 2e-16 ***\norigin_hex1898             -3.3061371  0.1346584   -24.552  &lt; 2e-16 ***\norigin_hex1901             -1.2658042  0.0636330   -19.892  &lt; 2e-16 ***\norigin_hex1903              1.0383007  0.0256814    40.430  &lt; 2e-16 ***\norigin_hex1917              0.8519834  0.0257897    33.036  &lt; 2e-16 ***\norigin_hex1918              2.8984835  0.0248319   116.724  &lt; 2e-16 ***\norigin_hex1919              1.9852589  0.0247207    80.307  &lt; 2e-16 ***\norigin_hex1922             -0.1430547  0.0371579    -3.850 0.000118 ***\norigin_hex1924              0.7839374  0.0258462    30.331  &lt; 2e-16 ***\norigin_hex1937              1.4257258  0.0250933    56.817  &lt; 2e-16 ***\norigin_hex1938              2.2078071  0.0245897    89.786  &lt; 2e-16 ***\norigin_hex1939              3.0505337  0.0245212   124.404  &lt; 2e-16 ***\norigin_hex1942             -1.3176469  0.0527897   -24.960  &lt; 2e-16 ***\norigin_hex195              -2.1584408  0.0844110   -25.571  &lt; 2e-16 ***\norigin_hex1959              1.1828376  0.0256053    46.195  &lt; 2e-16 ***\norigin_hex196              -1.5936860  0.0484110   -32.920  &lt; 2e-16 ***\norigin_hex1960              3.0019627  0.0243717   123.174  &lt; 2e-16 ***\norigin_hex1961              1.7388923  0.0250985    69.283  &lt; 2e-16 ***\norigin_hex1962              2.5614102  0.0245679   104.258  &lt; 2e-16 ***\norigin_hex1964             -2.2508836  0.0913286   -24.646  &lt; 2e-16 ***\norigin_hex197              -2.1695370  0.1124162   -19.299  &lt; 2e-16 ***\norigin_hex1979              1.3378464  0.0253743    52.725  &lt; 2e-16 ***\norigin_hex1980             -0.0627252  0.0277126    -2.263 0.023610 *  \norigin_hex1981              2.4441162  0.0245709    99.472  &lt; 2e-16 ***\norigin_hex1982              1.1981101  0.0264434    45.308  &lt; 2e-16 ***\norigin_hex1983              2.6884166  0.0245698   109.420  &lt; 2e-16 ***\norigin_hex1984              1.4431275  0.0252687    57.111  &lt; 2e-16 ***\norigin_hex1985              1.7619358  0.0249600    70.590  &lt; 2e-16 ***\norigin_hex2001              1.7023603  0.0248671    68.458  &lt; 2e-16 ***\norigin_hex2002              2.4141544  0.0244882    98.584  &lt; 2e-16 ***\norigin_hex2003              2.0011659  0.0247025    81.011  &lt; 2e-16 ***\norigin_hex2004              2.8890242  0.0245364   117.744  &lt; 2e-16 ***\norigin_hex2005              2.6961429  0.0245409   109.863  &lt; 2e-16 ***\norigin_hex2006              1.2504322  0.0258235    48.422  &lt; 2e-16 ***\norigin_hex2007              0.0961059  0.0288412     3.332 0.000861 ***\norigin_hex2022              2.3587357  0.0248457    94.935  &lt; 2e-16 ***\norigin_hex2023              2.6767884  0.0244736   109.374  &lt; 2e-16 ***\norigin_hex2024              2.0506134  0.0246388    83.227  &lt; 2e-16 ***\norigin_hex2025              2.3127609  0.0246170    93.950  &lt; 2e-16 ***\norigin_hex2026              0.9264480  0.0267434    34.642  &lt; 2e-16 ***\norigin_hex2027              1.8922511  0.0245175    77.180  &lt; 2e-16 ***\norigin_hex2043              1.2929469  0.0253072    51.090  &lt; 2e-16 ***\norigin_hex2044              2.3628589  0.0245527    96.236  &lt; 2e-16 ***\norigin_hex2045             -2.0594812  0.0781914   -26.339  &lt; 2e-16 ***\norigin_hex2046              2.3478809  0.0245014    95.827  &lt; 2e-16 ***\norigin_hex2047              2.3041964  0.0247105    93.248  &lt; 2e-16 ***\norigin_hex2048              2.4329217  0.0246161    98.835  &lt; 2e-16 ***\norigin_hex2049             -0.5247959  0.0277140   -18.936  &lt; 2e-16 ***\norigin_hex2064              2.3278853  0.0246574    94.409  &lt; 2e-16 ***\norigin_hex2065              0.9218240  0.0255346    36.101  &lt; 2e-16 ***\norigin_hex2066              1.0033395  0.0316983    31.653  &lt; 2e-16 ***\norigin_hex2067              3.2875257  0.0243498   135.012  &lt; 2e-16 ***\norigin_hex2068              2.6629861  0.0250945   106.118  &lt; 2e-16 ***\norigin_hex2069              1.9234377  0.0247835    77.610  &lt; 2e-16 ***\norigin_hex2085              0.7444510  0.0258729    28.773  &lt; 2e-16 ***\norigin_hex2086              2.5350924  0.0245216   103.382  &lt; 2e-16 ***\norigin_hex2087              1.3514476  0.0251945    53.641  &lt; 2e-16 ***\norigin_hex2088              2.0826128  0.0246080    84.631  &lt; 2e-16 ***\norigin_hex2089              1.5534674  0.0250180    62.094  &lt; 2e-16 ***\norigin_hex2090              2.8204600  0.0244359   115.423  &lt; 2e-16 ***\norigin_hex2091             -1.9395889  0.0720928   -26.904  &lt; 2e-16 ***\norigin_hex2105             -1.2072495  0.1038905   -11.620  &lt; 2e-16 ***\norigin_hex2106             -0.3160206  0.0305463   -10.346  &lt; 2e-16 ***\norigin_hex2107              0.5966411  0.0258319    23.097  &lt; 2e-16 ***\norigin_hex2108              2.0266137  0.0247688    81.821  &lt; 2e-16 ***\norigin_hex2109              1.9839842  0.0245987    80.654  &lt; 2e-16 ***\norigin_hex2110              1.7207412  0.0252001    68.283  &lt; 2e-16 ***\norigin_hex2111             -0.8304882  0.0460739   -18.025  &lt; 2e-16 ***\norigin_hex2128              0.5574364  0.0273875    20.354  &lt; 2e-16 ***\norigin_hex2129              0.0849533  0.0281293     3.020 0.002527 ** \norigin_hex2130              2.0797930  0.0244996    84.891  &lt; 2e-16 ***\norigin_hex2131              2.3922485  0.0245848    97.306  &lt; 2e-16 ***\norigin_hex2132              1.9024660  0.0248837    76.454  &lt; 2e-16 ***\norigin_hex2148              1.0522235  0.0265156    39.683  &lt; 2e-16 ***\norigin_hex2149             -0.1395795  0.0286398    -4.874 1.10e-06 ***\norigin_hex215              -1.6669262  0.0859771   -19.388  &lt; 2e-16 ***\norigin_hex2150              1.8275647  0.0246018    74.286  &lt; 2e-16 ***\norigin_hex2151              2.7607038  0.0244354   112.980  &lt; 2e-16 ***\norigin_hex2152              2.8886769  0.0244756   118.022  &lt; 2e-16 ***\norigin_hex2153              2.0707230  0.0247940    83.517  &lt; 2e-16 ***\norigin_hex216               2.6724212  0.0247667   107.904  &lt; 2e-16 ***\norigin_hex217              -0.9757340  0.0316547   -30.824  &lt; 2e-16 ***\norigin_hex2171              1.4301856  0.0251523    56.861  &lt; 2e-16 ***\norigin_hex2172              1.9110394  0.0253564    75.367  &lt; 2e-16 ***\norigin_hex2173              1.9459471  0.0247163    78.731  &lt; 2e-16 ***\norigin_hex2174              2.3182855  0.0247180    93.789  &lt; 2e-16 ***\norigin_hex2191              1.0473898  0.0261373    40.073  &lt; 2e-16 ***\norigin_hex2192              0.5357768  0.0264220    20.278  &lt; 2e-16 ***\norigin_hex2193              1.7692774  0.0248884    71.089  &lt; 2e-16 ***\norigin_hex2194              2.0265991  0.0246933    82.071  &lt; 2e-16 ***\norigin_hex2195              1.8338960  0.0312866    58.616  &lt; 2e-16 ***\norigin_hex2212             -1.0615745  0.0834168   -12.726  &lt; 2e-16 ***\norigin_hex2213             -1.7674708  0.0450782   -39.209  &lt; 2e-16 ***\norigin_hex2214             -0.1016271  0.0341427    -2.977 0.002915 ** \norigin_hex2215              1.6648637  0.0250317    66.510  &lt; 2e-16 ***\norigin_hex2216              0.9465968  0.0263741    35.891  &lt; 2e-16 ***\norigin_hex2233             -1.4063157  0.0456495   -30.807  &lt; 2e-16 ***\norigin_hex2234             -0.1666826  0.0309422    -5.387 7.17e-08 ***\norigin_hex2235              0.5425173  0.0273453    19.840  &lt; 2e-16 ***\norigin_hex2236              0.5787772  0.0272235    21.260  &lt; 2e-16 ***\norigin_hex2237             -1.4470707  0.0586355   -24.679  &lt; 2e-16 ***\norigin_hex2256             -2.1189734  0.0556937   -38.047  &lt; 2e-16 ***\norigin_hex2257             -0.0536310  0.0303258    -1.768 0.076979 .  \norigin_hex2258             -0.4011252  0.0298273   -13.448  &lt; 2e-16 ***\norigin_hex2259             -0.6464485  0.0425994   -15.175  &lt; 2e-16 ***\norigin_hex2277             -0.2807268  0.0460474    -6.096 1.08e-09 ***\norigin_hex2278              0.5170458  0.0283666    18.227  &lt; 2e-16 ***\norigin_hex2279             -0.2399150  0.0307183    -7.810 5.71e-15 ***\norigin_hex2280             -2.4656806  0.1033925   -23.848  &lt; 2e-16 ***\norigin_hex2297              1.8739172  0.0257081    72.892  &lt; 2e-16 ***\norigin_hex23               -1.0297658  0.1014783   -10.148  &lt; 2e-16 ***\norigin_hex2300             -1.7722627  0.0642070   -27.602  &lt; 2e-16 ***\norigin_hex2301             -0.1714057  0.0302352    -5.669 1.44e-08 ***\norigin_hex2318              0.1491372  0.0302088     4.937 7.94e-07 ***\norigin_hex2319              1.2555021  0.0261455    48.020  &lt; 2e-16 ***\norigin_hex2322              0.8063213  0.0269649    29.903  &lt; 2e-16 ***\norigin_hex2337              2.0463763  0.0285311    71.724  &lt; 2e-16 ***\norigin_hex2341              1.7962855  0.0257698    69.705  &lt; 2e-16 ***\norigin_hex2343              0.4849166  0.0278982    17.382  &lt; 2e-16 ***\norigin_hex2361              1.1885320  0.0263314    45.137  &lt; 2e-16 ***\norigin_hex2364             -1.9770597  0.0688355   -28.722  &lt; 2e-16 ***\norigin_hex237              -2.6938760  0.1580490   -17.045  &lt; 2e-16 ***\norigin_hex2379              1.8772561  0.0295996    63.422  &lt; 2e-16 ***\norigin_hex238              -1.4993988  0.0565100   -26.533  &lt; 2e-16 ***\norigin_hex2384              1.1681416  0.0281194    41.542  &lt; 2e-16 ***\norigin_hex239              -2.3911291  0.1599662   -14.948  &lt; 2e-16 ***\norigin_hex2405              0.8798939  0.0280445    31.375  &lt; 2e-16 ***\norigin_hex2406             -0.6810551  0.0410102   -16.607  &lt; 2e-16 ***\norigin_hex2426              1.4116334  0.0356982    39.544  &lt; 2e-16 ***\norigin_hex2427              1.6500750  0.0263297    62.670  &lt; 2e-16 ***\norigin_hex2505              1.1732800  0.0436042    26.908  &lt; 2e-16 ***\norigin_hex257              -1.6669145  0.0614326   -27.134  &lt; 2e-16 ***\norigin_hex258              -0.9983065  0.0363431   -27.469  &lt; 2e-16 ***\norigin_hex259              -1.3494617  0.0470103   -28.706  &lt; 2e-16 ***\norigin_hex278              -0.2508771  0.0453375    -5.534 3.14e-08 ***\norigin_hex279              -1.7512839  0.0492015   -35.594  &lt; 2e-16 ***\norigin_hex280              -1.7090250  0.0512431   -33.351  &lt; 2e-16 ***\norigin_hex298              -3.6650928  0.3342161   -10.966  &lt; 2e-16 ***\norigin_hex299              -1.7456960  0.0551918   -31.630  &lt; 2e-16 ***\norigin_hex300               1.4596597  0.0257109    56.772  &lt; 2e-16 ***\norigin_hex320              -1.6652658  0.0681014   -24.453  &lt; 2e-16 ***\norigin_hex321              -1.1381095  0.0750995   -15.155  &lt; 2e-16 ***\norigin_hex322              -0.4385621  0.0526099    -8.336  &lt; 2e-16 ***\norigin_hex340              -0.3149927  0.0364508    -8.642  &lt; 2e-16 ***\norigin_hex341              -1.9541218  0.0503858   -38.783  &lt; 2e-16 ***\norigin_hex342              -1.3371274  0.0477334   -28.012  &lt; 2e-16 ***\norigin_hex363              -0.3962415  0.0441781    -8.969  &lt; 2e-16 ***\norigin_hex364              -0.0984321  0.0358740    -2.744 0.006073 ** \norigin_hex383              -0.6992145  0.0394623   -17.719  &lt; 2e-16 ***\norigin_hex384              -3.4229802  0.0574444   -59.588  &lt; 2e-16 ***\norigin_hex385              -0.5155180  0.0519929    -9.915  &lt; 2e-16 ***\norigin_hex404               0.1029474  0.0417117     2.468 0.013584 *  \norigin_hex405              -1.2700627  0.0542934   -23.393  &lt; 2e-16 ***\norigin_hex406               2.7457500  0.0243898   112.578  &lt; 2e-16 ***\norigin_hex407              -0.5843663  0.0514036   -11.368  &lt; 2e-16 ***\norigin_hex408               0.2474973  0.0332047     7.454 9.08e-14 ***\norigin_hex425              -2.3089189  0.0913289   -25.281  &lt; 2e-16 ***\norigin_hex426              -1.0282773  0.0381362   -26.963  &lt; 2e-16 ***\norigin_hex427              -1.2911206  0.0428842   -30.107  &lt; 2e-16 ***\norigin_hex428              -1.6426767  0.0815448   -20.144  &lt; 2e-16 ***\norigin_hex429               0.5980785  0.0331066    18.065  &lt; 2e-16 ***\norigin_hex44               -3.2117191  0.1407810   -22.814  &lt; 2e-16 ***\norigin_hex446              -1.0351350  0.0635396   -16.291  &lt; 2e-16 ***\norigin_hex447              -1.4580302  0.0506498   -28.787  &lt; 2e-16 ***\norigin_hex448              -0.4238060  0.0368807   -11.491  &lt; 2e-16 ***\norigin_hex449               1.7670916  0.0249828    70.732  &lt; 2e-16 ***\norigin_hex450               0.3339446  0.0310992    10.738  &lt; 2e-16 ***\norigin_hex46               -1.8508229  0.0906803   -20.410  &lt; 2e-16 ***\norigin_hex468              -0.1681665  0.0367133    -4.581 4.64e-06 ***\norigin_hex469               0.0294189  0.0298600     0.985 0.324512    \norigin_hex470               2.5076276  0.0246463   101.745  &lt; 2e-16 ***\norigin_hex471               0.8511944  0.0290079    29.343  &lt; 2e-16 ***\norigin_hex488              -1.5564748  0.0622783   -24.992  &lt; 2e-16 ***\norigin_hex489              -3.2117514  0.2511752   -12.787  &lt; 2e-16 ***\norigin_hex490               1.0886620  0.0267801    40.652  &lt; 2e-16 ***\norigin_hex491               1.2365224  0.0253193    48.837  &lt; 2e-16 ***\norigin_hex493              -3.0264202  0.1407825   -21.497  &lt; 2e-16 ***\norigin_hex494              -0.9896145  0.0636329   -15.552  &lt; 2e-16 ***\norigin_hex509              -0.7421607  0.0415228   -17.874  &lt; 2e-16 ***\norigin_hex510              -0.2611826  0.0345181    -7.567 3.83e-14 ***\norigin_hex511               0.5828642  0.0264391    22.046  &lt; 2e-16 ***\norigin_hex512               2.9598107  0.0244402   121.104  &lt; 2e-16 ***\norigin_hex513              -0.2851695  0.0340645    -8.371  &lt; 2e-16 ***\norigin_hex514              -0.3836016  0.0440073    -8.717  &lt; 2e-16 ***\norigin_hex515              -2.6869333  0.1394878   -19.263  &lt; 2e-16 ***\norigin_hex530              -1.7425731  0.0844097   -20.644  &lt; 2e-16 ***\norigin_hex531              -0.3469427  0.0315010   -11.014  &lt; 2e-16 ***\norigin_hex532              -0.5124109  0.0333650   -15.358  &lt; 2e-16 ***\norigin_hex533               2.9330131  0.0244481   119.969  &lt; 2e-16 ***\norigin_hex534               3.4920284  0.0244888   142.597  &lt; 2e-16 ***\norigin_hex536              -0.1157727  0.0348135    -3.326 0.000883 ***\norigin_hex537              -2.5045914  0.1394879   -17.956  &lt; 2e-16 ***\norigin_hex538              -2.7756458  0.2055618   -13.503  &lt; 2e-16 ***\norigin_hex539              -5.0291299  0.5778601    -8.703  &lt; 2e-16 ***\norigin_hex551              -1.6093486  0.0591275   -27.218  &lt; 2e-16 ***\norigin_hex552               0.4588130  0.0437636    10.484  &lt; 2e-16 ***\norigin_hex553              -0.7090617  0.0307319   -23.073  &lt; 2e-16 ***\norigin_hex554               2.8169835  0.0244858   115.046  &lt; 2e-16 ***\norigin_hex555               2.3278954  0.0251373    92.607  &lt; 2e-16 ***\norigin_hex559              -1.9550151  0.0963565   -20.289  &lt; 2e-16 ***\norigin_hex560              -0.1397139  0.0531610    -2.628 0.008586 ** \norigin_hex572              -3.7995270  0.2249200   -16.893  &lt; 2e-16 ***\norigin_hex573              -1.0955272  0.0497935   -22.001  &lt; 2e-16 ***\norigin_hex574              -0.4555562  0.0434485   -10.485  &lt; 2e-16 ***\norigin_hex575               3.7613865  0.0243241   154.636  &lt; 2e-16 ***\norigin_hex576               2.6070080  0.0246906   105.587  &lt; 2e-16 ***\norigin_hex578              -2.5144304  0.1099236   -22.874  &lt; 2e-16 ***\norigin_hex582              -2.3340725  0.1093278   -21.349  &lt; 2e-16 ***\norigin_hex583              -3.0168851  0.1976119   -15.267  &lt; 2e-16 ***\norigin_hex584              -0.1159236  0.0601605    -1.927 0.053992 .  \norigin_hex593              -1.2831452  0.0550819   -23.295  &lt; 2e-16 ***\norigin_hex594              -0.0581143  0.0354174    -1.641 0.100831    \norigin_hex595              -0.5434665  0.0312471   -17.393  &lt; 2e-16 ***\norigin_hex596               2.4020744  0.0245850    97.705  &lt; 2e-16 ***\norigin_hex597              -0.9546508  0.0636331   -15.002  &lt; 2e-16 ***\norigin_hex603              -2.0913294  0.1111469   -18.816  &lt; 2e-16 ***\norigin_hex604              -3.7285232  0.2683608   -13.894  &lt; 2e-16 ***\norigin_hex615              -1.7206821  0.0501210   -34.331  &lt; 2e-16 ***\norigin_hex616              -0.5596425  0.0377790   -14.814  &lt; 2e-16 ***\norigin_hex617               0.2384991  0.0297881     8.007 1.18e-15 ***\norigin_hex618               2.7815904  0.0245017   113.527  &lt; 2e-16 ***\norigin_hex620              -0.5688224  0.0404076   -14.077  &lt; 2e-16 ***\norigin_hex637              -1.1639594  0.0460741   -25.263  &lt; 2e-16 ***\norigin_hex638               2.5105192  0.0245595   102.222  &lt; 2e-16 ***\norigin_hex657               0.1912612  0.0290919     6.574 4.89e-11 ***\norigin_hex658               1.7005108  0.0250189    67.969  &lt; 2e-16 ***\norigin_hex659               2.0794393  0.0247947    83.866  &lt; 2e-16 ***\norigin_hex66               -2.1422479  0.1273342   -16.824  &lt; 2e-16 ***\norigin_hex660               3.1227237  0.0244316   127.815  &lt; 2e-16 ***\norigin_hex662               2.3871481  0.0252242    94.637  &lt; 2e-16 ***\norigin_hex67               -0.1423652  0.0347114    -4.101 4.11e-05 ***\norigin_hex677              -0.0407275  0.0329672    -1.235 0.216684    \norigin_hex678              -1.7046093  0.0498657   -34.184  &lt; 2e-16 ***\norigin_hex679               2.8590297  0.0244765   116.807  &lt; 2e-16 ***\norigin_hex68               -2.5431705  0.1313616   -19.360  &lt; 2e-16 ***\norigin_hex680               3.0885140  0.0244714   126.209  &lt; 2e-16 ***\norigin_hex681               2.3510160  0.0256078    91.809  &lt; 2e-16 ***\norigin_hex699              -0.1204823  0.0327079    -3.684 0.000230 ***\norigin_hex700               1.8953022  0.0249491    75.967  &lt; 2e-16 ***\norigin_hex701               1.9596770  0.0249678    78.488  &lt; 2e-16 ***\norigin_hex702               2.9741550  0.0244601   121.592  &lt; 2e-16 ***\norigin_hex704              -0.5314481  0.0400521   -13.269  &lt; 2e-16 ***\norigin_hex722               0.0589473  0.0300818     1.960 0.050047 .  \norigin_hex725              -1.2568030  0.0498287   -25.222  &lt; 2e-16 ***\norigin_hex741               0.4956821  0.0291744    16.990  &lt; 2e-16 ***\norigin_hex743               0.2289582  0.0271407     8.436  &lt; 2e-16 ***\norigin_hex744               2.4340131  0.0246142    98.887  &lt; 2e-16 ***\norigin_hex761              -0.2064889  0.0363391    -5.682 1.33e-08 ***\norigin_hex762               1.9666181  0.0251914    78.067  &lt; 2e-16 ***\norigin_hex763              -1.3345699  0.0366952   -36.369  &lt; 2e-16 ***\norigin_hex764               2.7396494  0.0244528   112.038  &lt; 2e-16 ***\norigin_hex765               1.7563527  0.0255290    68.798  &lt; 2e-16 ***\norigin_hex767               3.0552278  0.0244916   124.746  &lt; 2e-16 ***\norigin_hex772              -1.7316252  0.0759627   -22.796  &lt; 2e-16 ***\norigin_hex784              -0.8734757  0.0337005   -25.919  &lt; 2e-16 ***\norigin_hex785               1.9213691  0.0245969    78.114  &lt; 2e-16 ***\norigin_hex786               1.5431513  0.0249342    61.889  &lt; 2e-16 ***\norigin_hex787               2.0158009  0.0252415    79.861  &lt; 2e-16 ***\norigin_hex788               2.4202380  0.0247671    97.720  &lt; 2e-16 ***\norigin_hex789               0.4206242  0.0263435    15.967  &lt; 2e-16 ***\norigin_hex803              -1.5742601  0.0544462   -28.914  &lt; 2e-16 ***\norigin_hex804               2.7035287  0.0245570   110.092  &lt; 2e-16 ***\norigin_hex805               2.5126140  0.0244534   102.751  &lt; 2e-16 ***\norigin_hex806               2.0853992  0.0245911    84.803  &lt; 2e-16 ***\norigin_hex807               2.8276772  0.0245787   115.046  &lt; 2e-16 ***\norigin_hex808               1.1195161  0.0265237    42.208  &lt; 2e-16 ***\norigin_hex809               2.7952698  0.0244620   114.270  &lt; 2e-16 ***\norigin_hex810               2.1473264  0.0248285    86.486  &lt; 2e-16 ***\norigin_hex814              -0.2296575  0.0366332    -6.269 3.63e-10 ***\norigin_hex819               4.5017378  0.0297306   151.417  &lt; 2e-16 ***\norigin_hex824              -0.9213873  0.0453352   -20.324  &lt; 2e-16 ***\norigin_hex826               0.2840859  0.0261750    10.853  &lt; 2e-16 ***\norigin_hex827               2.3618523  0.0245130    96.351  &lt; 2e-16 ***\norigin_hex828               2.4476077  0.0244937    99.928  &lt; 2e-16 ***\norigin_hex829               2.5223796  0.0246249   102.432  &lt; 2e-16 ***\norigin_hex830               2.6059059  0.0247393   105.335  &lt; 2e-16 ***\norigin_hex831               3.2238862  0.0243901   132.180  &lt; 2e-16 ***\norigin_hex832               2.2312590  0.0249424    89.456  &lt; 2e-16 ***\norigin_hex835              -0.9998291  0.0379675   -26.334  &lt; 2e-16 ***\norigin_hex844              -2.3613916  0.0815455   -28.958  &lt; 2e-16 ***\norigin_hex846               1.8554558  0.0247565    74.948  &lt; 2e-16 ***\norigin_hex847               0.8023819  0.0257802    31.124  &lt; 2e-16 ***\norigin_hex848               2.0668426  0.0246737    83.767  &lt; 2e-16 ***\norigin_hex849               0.9526082  0.0254189    37.476  &lt; 2e-16 ***\norigin_hex850               1.8974201  0.0247955    76.523  &lt; 2e-16 ***\norigin_hex851               2.3701747  0.0245622    96.497  &lt; 2e-16 ***\norigin_hex852               2.0580008  0.0249389    82.522  &lt; 2e-16 ***\norigin_hex853               3.2597557  0.0244864   133.125  &lt; 2e-16 ***\norigin_hex854              -0.4587940  0.0354047   -12.959  &lt; 2e-16 ***\norigin_hex855              -1.1416993  0.0497213   -22.962  &lt; 2e-16 ***\norigin_hex856              -0.2629855  0.0301303    -8.728  &lt; 2e-16 ***\norigin_hex86               -1.2263385  0.0774244   -15.839  &lt; 2e-16 ***\norigin_hex866              -0.5929302  0.0399504   -14.842  &lt; 2e-16 ***\norigin_hex867               0.7480960  0.0269225    27.787  &lt; 2e-16 ***\norigin_hex868              -0.0530385  0.0299361    -1.772 0.076441 .  \norigin_hex869               2.8049562  0.0248892   112.698  &lt; 2e-16 ***\norigin_hex87               -1.4849528  0.0846660   -17.539  &lt; 2e-16 ***\norigin_hex870               2.9022076  0.0243956   118.964  &lt; 2e-16 ***\norigin_hex871               2.2384979  0.0248855    89.952  &lt; 2e-16 ***\norigin_hex872               0.6525271  0.0264989    24.625  &lt; 2e-16 ***\norigin_hex873               0.9369133  0.0261916    35.771  &lt; 2e-16 ***\norigin_hex874               0.6575867  0.0254971    25.791  &lt; 2e-16 ***\norigin_hex875              -2.3899351  0.0759632   -31.462  &lt; 2e-16 ***\norigin_hex876              -0.9945807  0.0397006   -25.052  &lt; 2e-16 ***\norigin_hex877              -1.7722661  0.0467875   -37.879  &lt; 2e-16 ***\norigin_hex88                0.4908393  0.0305183    16.083  &lt; 2e-16 ***\norigin_hex887               0.4371572  0.0276315    15.821  &lt; 2e-16 ***\norigin_hex888               1.7081171  0.0251422    67.938  &lt; 2e-16 ***\norigin_hex889              -1.2936854  0.0416151   -31.087  &lt; 2e-16 ***\norigin_hex89               -1.1587509  0.0551926   -20.995  &lt; 2e-16 ***\norigin_hex890               2.4484700  0.0244857    99.996  &lt; 2e-16 ***\norigin_hex891               0.7771021  0.0266454    29.165  &lt; 2e-16 ***\norigin_hex893               2.4445028  0.0245245    99.676  &lt; 2e-16 ***\norigin_hex894               0.5112246  0.0265117    19.283  &lt; 2e-16 ***\norigin_hex895               0.1346563  0.0285224     4.721 2.35e-06 ***\norigin_hex896              -0.3852104  0.0350069   -11.004  &lt; 2e-16 ***\norigin_hex897              -2.1058683  0.0683418   -30.814  &lt; 2e-16 ***\norigin_hex898              -0.6090592  0.0378157   -16.106  &lt; 2e-16 ***\norigin_hex90               -2.3849768  0.1346584   -17.711  &lt; 2e-16 ***\norigin_hex908               1.3033567  0.0269399    48.380  &lt; 2e-16 ***\norigin_hex909               1.6405595  0.0248380    66.050  &lt; 2e-16 ***\norigin_hex910              -0.2333915  0.0296477    -7.872 3.49e-15 ***\norigin_hex911               1.0199572  0.0256707    39.732  &lt; 2e-16 ***\norigin_hex912               2.1227281  0.0245752    86.377  &lt; 2e-16 ***\norigin_hex915               2.3497880  0.0245751    95.617  &lt; 2e-16 ***\norigin_hex917               1.6357916  0.0252458    64.795  &lt; 2e-16 ***\norigin_hex918              -1.4039549  0.0434665   -32.300  &lt; 2e-16 ***\norigin_hex919               1.1596518  0.0257793    44.984  &lt; 2e-16 ***\norigin_hex928               0.6220744  0.0276070    22.533  &lt; 2e-16 ***\norigin_hex929               2.1095589  0.0246145    85.704  &lt; 2e-16 ***\norigin_hex930               2.4872498  0.0243981   101.944  &lt; 2e-16 ***\norigin_hex931              -0.1920176  0.0293033    -6.553 5.65e-11 ***\norigin_hex932               0.2336480  0.0297760     7.847 4.27e-15 ***\norigin_hex933               2.1483979  0.0248167    86.571  &lt; 2e-16 ***\norigin_hex934              -0.4345971  0.0296290   -14.668  &lt; 2e-16 ***\norigin_hex935               3.0978178  0.0243948   126.987  &lt; 2e-16 ***\norigin_hex938              -3.8372164  0.2145778   -17.883  &lt; 2e-16 ***\norigin_hex939               3.0555964  0.0244839   124.800  &lt; 2e-16 ***\norigin_hex940              -2.0763301  0.0650026   -31.942  &lt; 2e-16 ***\norigin_hex949               0.4907256  0.0272477    18.010  &lt; 2e-16 ***\norigin_hex950               2.3248232  0.0246639    94.260  &lt; 2e-16 ***\norigin_hex951               3.1232486  0.0243559   128.234  &lt; 2e-16 ***\norigin_hex952               0.3744268  0.0319318    11.726  &lt; 2e-16 ***\norigin_hex953               1.2564945  0.0259142    48.487  &lt; 2e-16 ***\norigin_hex954              -0.4135686  0.0293012   -14.114  &lt; 2e-16 ***\norigin_hex955               1.7459891  0.0248226    70.339  &lt; 2e-16 ***\norigin_hex956               0.3503303  0.0266931    13.124  &lt; 2e-16 ***\norigin_hex957               2.2761950  0.0248147    91.728  &lt; 2e-16 ***\norigin_hex959              -0.7186104  0.0540868   -13.286  &lt; 2e-16 ***\norigin_hex961              -1.0733006  0.0383511   -27.986  &lt; 2e-16 ***\norigin_hex962               5.3400397  0.0245500   217.517  &lt; 2e-16 ***\norigin_hex970               1.1059920  0.0254284    43.494  &lt; 2e-16 ***\norigin_hex971               2.3095256  0.0244917    94.298  &lt; 2e-16 ***\norigin_hex972               1.8234786  0.0246442    73.992  &lt; 2e-16 ***\norigin_hex974               1.3170667  0.0252457    52.170  &lt; 2e-16 ***\norigin_hex975               1.0028160  0.0257236    38.984  &lt; 2e-16 ***\norigin_hex976              -0.4386002  0.0293625   -14.937  &lt; 2e-16 ***\norigin_hex977               2.7632484  0.0244774   112.890  &lt; 2e-16 ***\norigin_hex978               0.8637671  0.0251377    34.361  &lt; 2e-16 ***\norigin_hex982               0.2767054  0.0280697     9.858  &lt; 2e-16 ***\norigin_hex983               4.1655581  0.0244616   170.290  &lt; 2e-16 ***\norigin_hex984               5.0275855  0.0244660   205.493  &lt; 2e-16 ***\norigin_hex991               0.8829883  0.0257181    34.333  &lt; 2e-16 ***\norigin_hex992               1.4736751  0.0251163    58.674  &lt; 2e-16 ***\norigin_hex993               1.0445455  0.0252650    41.344  &lt; 2e-16 ***\norigin_hex994               0.4428299  0.0264828    16.721  &lt; 2e-16 ***\norigin_hex995               1.8541296  0.0248052    74.748  &lt; 2e-16 ***\norigin_hex996               1.0043219  0.0253002    39.696  &lt; 2e-16 ***\norigin_hex997              -0.3472078  0.0378250    -9.179  &lt; 2e-16 ***\norigin_hex998               2.6941669  0.0245016   109.959  &lt; 2e-16 ***\norigin_hex999               1.4142174  0.0247785    57.074  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 40799159  on 64063  degrees of freedom\nAIC: 41157502\n\nNumber of Fisher Scoring iterations: 7\n\n\nCode\nCalcRSquared(orcSIM2$data$trips, orcSIM2$fitted.values)\n\n\n[1] 0.2495688\n\n\n\n\n\n\nCode\ndecSIM2 &lt;- glm(formula = trips ~ \n                log(push_num_bus_stops) +\n                #log(push_station_count) +\n                log(push_trainexit_count) +\n                #log(push_hdb_sf_count) +\n                log(push_est_pop) +\n                log(distance) +\n                destination_hex,\n              family = poisson(link = \"log\"),\n              data = final_df,\n              na.action = na.exclude)\n\nsummary(decSIM2)\n\n\n\nCall:\nglm(formula = trips ~ log(push_num_bus_stops) + log(push_trainexit_count) + \n    log(push_est_pop) + log(distance) + destination_hex, family = poisson(link = \"log\"), \n    data = final_df, na.action = na.exclude)\n\nCoefficients:\n                            Estimate Std. Error   z value Pr(&gt;|z|)    \n(Intercept)                1.364e+01  1.545e-02   883.155  &lt; 2e-16 ***\nlog(push_num_bus_stops)    3.954e-01  4.961e-04   797.004  &lt; 2e-16 ***\nlog(push_trainexit_count)  2.908e-01  3.254e-04   893.745  &lt; 2e-16 ***\nlog(push_est_pop)          1.369e-01  7.656e-05  1788.468  &lt; 2e-16 ***\nlog(distance)             -1.254e+00  2.159e-04 -5807.140  &lt; 2e-16 ***\ndestination_hex1003        1.820e+00  1.559e-02   116.766  &lt; 2e-16 ***\ndestination_hex1004        9.171e-01  1.595e-02    57.488  &lt; 2e-16 ***\ndestination_hex1011       -7.199e-02  1.931e-02    -3.727 0.000194 ***\ndestination_hex1012        1.443e+00  1.634e-02    88.346  &lt; 2e-16 ***\ndestination_hex1013        5.925e-02  1.700e-02     3.486 0.000490 ***\ndestination_hex1014       -1.564e+00  2.192e-02   -71.343  &lt; 2e-16 ***\ndestination_hex1015        1.247e+00  1.583e-02    78.801  &lt; 2e-16 ***\ndestination_hex1016        1.292e+00  1.572e-02    82.163  &lt; 2e-16 ***\ndestination_hex1018       -1.958e-01  1.940e-02   -10.091  &lt; 2e-16 ***\ndestination_hex1019        3.184e-01  1.630e-02    19.538  &lt; 2e-16 ***\ndestination_hex1023       -6.483e-01  2.001e-02   -32.395  &lt; 2e-16 ***\ndestination_hex1024        4.190e-01  1.653e-02    25.350  &lt; 2e-16 ***\ndestination_hex1025       -3.474e+00  6.635e-02   -52.366  &lt; 2e-16 ***\ndestination_hex1033        4.395e-01  1.665e-02    26.394  &lt; 2e-16 ***\ndestination_hex1034        1.063e+00  1.591e-02    66.829  &lt; 2e-16 ***\ndestination_hex1035        8.725e-01  1.597e-02    54.615  &lt; 2e-16 ***\ndestination_hex1036        1.357e+00  1.574e-02    86.204  &lt; 2e-16 ***\ndestination_hex1037        1.451e-01  1.640e-02     8.847  &lt; 2e-16 ***\ndestination_hex1043        5.589e-01  1.867e-02    29.937  &lt; 2e-16 ***\ndestination_hex1045        2.917e-01  1.631e-02    17.888  &lt; 2e-16 ***\ndestination_hex1046        9.295e-01  1.627e-02    57.147  &lt; 2e-16 ***\ndestination_hex1053        9.792e-01  1.597e-02    61.309  &lt; 2e-16 ***\ndestination_hex1054        7.631e-01  1.603e-02    47.592  &lt; 2e-16 ***\ndestination_hex1055       -1.033e-01  1.721e-02    -6.001 1.96e-09 ***\ndestination_hex1056       -8.007e-01  1.875e-02   -42.710  &lt; 2e-16 ***\ndestination_hex1064       -2.858e+00  8.838e-02   -32.342  &lt; 2e-16 ***\ndestination_hex1066        1.424e+00  1.575e-02    90.424  &lt; 2e-16 ***\ndestination_hex1067        1.279e+00  1.652e-02    77.409  &lt; 2e-16 ***\ndestination_hex1074       -1.111e+00  2.034e-02   -54.609  &lt; 2e-16 ***\ndestination_hex1075        6.272e-01  1.638e-02    38.280  &lt; 2e-16 ***\ndestination_hex1076       -7.869e-02  1.665e-02    -4.725 2.30e-06 ***\ndestination_hex1077       -7.180e-01  1.831e-02   -39.213  &lt; 2e-16 ***\ndestination_hex1079        3.942e-01  1.632e-02    24.154  &lt; 2e-16 ***\ndestination_hex1085       -1.087e+00  5.822e-02   -18.673  &lt; 2e-16 ***\ndestination_hex1087        3.208e-01  1.638e-02    19.584  &lt; 2e-16 ***\ndestination_hex1088        1.091e+00  1.617e-02    67.460  &lt; 2e-16 ***\ndestination_hex109         4.893e-01  2.959e-02    16.535  &lt; 2e-16 ***\ndestination_hex1094       -3.832e+00  5.050e-02   -75.872  &lt; 2e-16 ***\ndestination_hex1095        1.050e-01  2.024e-02     5.188 2.12e-07 ***\ndestination_hex1096       -6.710e-02  2.118e-02    -3.168 0.001532 ** \ndestination_hex1097        7.035e-01  1.583e-02    44.450  &lt; 2e-16 ***\ndestination_hex1098       -1.606e+00  2.641e-02   -60.827  &lt; 2e-16 ***\ndestination_hex1099       -1.894e-01  1.706e-02   -11.099  &lt; 2e-16 ***\ndestination_hex110        -2.089e+00  1.017e-01   -20.543  &lt; 2e-16 ***\ndestination_hex1105        1.677e+00  1.753e-02    95.687  &lt; 2e-16 ***\ndestination_hex1106       -3.018e+00  8.619e-02   -35.018  &lt; 2e-16 ***\ndestination_hex1107        1.257e-01  1.692e-02     7.432 1.07e-13 ***\ndestination_hex1108        2.520e+00  1.542e-02   163.451  &lt; 2e-16 ***\ndestination_hex1109       -9.888e-01  2.583e-02   -38.278  &lt; 2e-16 ***\ndestination_hex111         1.446e+00  1.894e-02    76.342  &lt; 2e-16 ***\ndestination_hex1116       -1.225e-01  1.748e-02    -7.008 2.43e-12 ***\ndestination_hex1117        2.217e-01  1.671e-02    13.266  &lt; 2e-16 ***\ndestination_hex1118       -1.601e+00  2.324e-02   -68.896  &lt; 2e-16 ***\ndestination_hex1119       -8.526e-01  1.834e-02   -46.483  &lt; 2e-16 ***\ndestination_hex112        -9.961e-01  3.367e-02   -29.581  &lt; 2e-16 ***\ndestination_hex1120       -1.121e+00  2.251e-02   -49.777  &lt; 2e-16 ***\ndestination_hex1129       -1.023e-01  1.708e-02    -5.991 2.09e-09 ***\ndestination_hex1130        5.773e-01  1.621e-02    35.619  &lt; 2e-16 ***\ndestination_hex1131        1.919e+00  1.607e-02   119.428  &lt; 2e-16 ***\ndestination_hex1136        9.994e-01  1.596e-02    62.620  &lt; 2e-16 ***\ndestination_hex1138       -1.080e+00  2.253e-02   -47.963  &lt; 2e-16 ***\ndestination_hex1139       -4.534e-01  1.673e-02   -27.107  &lt; 2e-16 ***\ndestination_hex1141       -2.538e-01  1.703e-02   -14.905  &lt; 2e-16 ***\ndestination_hex1148       -8.993e-01  3.293e-02   -27.313  &lt; 2e-16 ***\ndestination_hex1149       -3.135e-01  2.010e-02   -15.595  &lt; 2e-16 ***\ndestination_hex1150        1.389e-02  1.660e-02     0.836 0.402974    \ndestination_hex1151       -1.089e-01  1.654e-02    -6.586 4.52e-11 ***\ndestination_hex1158       -1.314e+00  1.844e-02   -71.279  &lt; 2e-16 ***\ndestination_hex1159       -8.539e-01  1.756e-02   -48.623  &lt; 2e-16 ***\ndestination_hex1160        7.930e-01  1.581e-02    50.167  &lt; 2e-16 ***\ndestination_hex1171        5.379e-01  1.629e-02    33.018  &lt; 2e-16 ***\ndestination_hex1172        1.832e+00  1.554e-02   117.938  &lt; 2e-16 ***\ndestination_hex1173        1.273e+00  1.604e-02    79.414  &lt; 2e-16 ***\ndestination_hex1174       -1.651e+00  4.413e-02   -37.412  &lt; 2e-16 ***\ndestination_hex1178        1.129e+00  1.568e-02    71.983  &lt; 2e-16 ***\ndestination_hex1179        1.933e-01  1.609e-02    12.009  &lt; 2e-16 ***\ndestination_hex1180        2.706e-01  1.601e-02    16.900  &lt; 2e-16 ***\ndestination_hex1181       -7.080e-01  1.763e-02   -40.166  &lt; 2e-16 ***\ndestination_hex1183        8.902e-01  1.598e-02    55.717  &lt; 2e-16 ***\ndestination_hex1190       -9.508e-01  3.245e-02   -29.300  &lt; 2e-16 ***\ndestination_hex1192        9.017e-01  1.613e-02    55.919  &lt; 2e-16 ***\ndestination_hex1193        6.381e-01  1.614e-02    39.537  &lt; 2e-16 ***\ndestination_hex1194        9.285e-01  1.637e-02    56.730  &lt; 2e-16 ***\ndestination_hex1200       -1.615e-02  1.674e-02    -0.965 0.334747    \ndestination_hex1201       -3.467e-01  1.687e-02   -20.548  &lt; 2e-16 ***\ndestination_hex1203       -3.221e-01  1.716e-02   -18.769  &lt; 2e-16 ***\ndestination_hex1204       -3.952e-01  1.755e-02   -22.520  &lt; 2e-16 ***\ndestination_hex1211       -4.441e+00  2.778e-01   -15.988  &lt; 2e-16 ***\ndestination_hex1214       -4.055e-01  1.741e-02   -23.297  &lt; 2e-16 ***\ndestination_hex1215        2.094e-01  1.872e-02    11.183  &lt; 2e-16 ***\ndestination_hex1216        6.083e-01  1.819e-02    33.440  &lt; 2e-16 ***\ndestination_hex1220        2.460e-01  1.639e-02    15.008  &lt; 2e-16 ***\ndestination_hex1221        5.420e-01  1.581e-02    34.289  &lt; 2e-16 ***\ndestination_hex1222       -5.863e-01  1.953e-02   -30.018  &lt; 2e-16 ***\ndestination_hex1223       -8.459e-01  1.880e-02   -44.981  &lt; 2e-16 ***\ndestination_hex1224       -2.252e-01  1.713e-02   -13.149  &lt; 2e-16 ***\ndestination_hex1231       -1.629e+00  5.919e-02   -27.521  &lt; 2e-16 ***\ndestination_hex1232       -2.864e-01  2.876e-02    -9.958  &lt; 2e-16 ***\ndestination_hex1235        5.580e-01  1.633e-02    34.171  &lt; 2e-16 ***\ndestination_hex1236        2.950e-01  1.728e-02    17.068  &lt; 2e-16 ***\ndestination_hex1241       -1.144e+00  1.910e-02   -59.914  &lt; 2e-16 ***\ndestination_hex1242       -8.900e-01  1.763e-02   -50.493  &lt; 2e-16 ***\ndestination_hex1243        2.670e-01  1.608e-02    16.603  &lt; 2e-16 ***\ndestination_hex1246       -5.678e-01  1.741e-02   -32.616  &lt; 2e-16 ***\ndestination_hex1256       -6.781e-01  1.843e-02   -36.801  &lt; 2e-16 ***\ndestination_hex1257        7.409e-01  1.642e-02    45.122  &lt; 2e-16 ***\ndestination_hex1258        1.285e+00  1.611e-02    79.779  &lt; 2e-16 ***\ndestination_hex1262       -1.191e+00  1.970e-02   -60.455  &lt; 2e-16 ***\ndestination_hex1263        7.902e-01  1.566e-02    50.455  &lt; 2e-16 ***\ndestination_hex1264        1.025e-01  1.691e-02     6.062 1.34e-09 ***\ndestination_hex1265       -2.276e-02  1.707e-02    -1.334 0.182350    \ndestination_hex1266        1.772e-01  1.666e-02    10.636  &lt; 2e-16 ***\ndestination_hex1267       -1.259e+00  2.218e-02   -56.771  &lt; 2e-16 ***\ndestination_hex1272       -3.980e+00  1.122e-01   -35.480  &lt; 2e-16 ***\ndestination_hex1273        5.930e-01  1.682e-02    35.247  &lt; 2e-16 ***\ndestination_hex1277        6.939e-01  1.588e-02    43.703  &lt; 2e-16 ***\ndestination_hex1278        4.291e-01  1.642e-02    26.131  &lt; 2e-16 ***\ndestination_hex128         8.701e-01  2.680e-02    32.471  &lt; 2e-16 ***\ndestination_hex1283        1.337e+00  1.565e-02    85.407  &lt; 2e-16 ***\ndestination_hex1284        7.976e-01  1.574e-02    50.659  &lt; 2e-16 ***\ndestination_hex1285        3.892e-01  1.591e-02    24.464  &lt; 2e-16 ***\ndestination_hex1286       -5.010e-01  1.804e-02   -27.774  &lt; 2e-16 ***\ndestination_hex1289       -2.710e+00  4.249e-02   -63.794  &lt; 2e-16 ***\ndestination_hex129        -2.146e+00  1.136e-01   -18.898  &lt; 2e-16 ***\ndestination_hex1293       -3.701e+00  7.590e-02   -48.766  &lt; 2e-16 ***\ndestination_hex1294        3.085e-01  1.746e-02    17.669  &lt; 2e-16 ***\ndestination_hex1295       -1.774e+00  2.694e-02   -65.855  &lt; 2e-16 ***\ndestination_hex1298        1.904e-02  1.650e-02     1.154 0.248542    \ndestination_hex1299       -3.049e-01  1.759e-02   -17.334  &lt; 2e-16 ***\ndestination_hex130         3.691e-01  2.661e-02    13.869  &lt; 2e-16 ***\ndestination_hex1304        1.629e-01  1.633e-02     9.972  &lt; 2e-16 ***\ndestination_hex1305        3.402e-01  1.584e-02    21.471  &lt; 2e-16 ***\ndestination_hex1307       -1.144e+00  2.450e-02   -46.698  &lt; 2e-16 ***\ndestination_hex1308        2.565e-01  1.620e-02    15.836  &lt; 2e-16 ***\ndestination_hex131        -1.394e-01  2.875e-02    -4.850 1.23e-06 ***\ndestination_hex1310       -4.792e+00  1.896e-01   -25.272  &lt; 2e-16 ***\ndestination_hex1316       -1.346e+00  2.195e-02   -61.298  &lt; 2e-16 ***\ndestination_hex1317       -1.524e+00  2.010e-02   -75.794  &lt; 2e-16 ***\ndestination_hex1318       -1.574e+00  2.192e-02   -71.802  &lt; 2e-16 ***\ndestination_hex1319        1.256e+00  1.566e-02    80.259  &lt; 2e-16 ***\ndestination_hex132         8.724e-01  2.123e-02    41.101  &lt; 2e-16 ***\ndestination_hex1320       -8.939e-01  2.030e-02   -44.032  &lt; 2e-16 ***\ndestination_hex1324        3.803e-01  2.175e-02    17.486  &lt; 2e-16 ***\ndestination_hex1325       -1.469e+00  2.079e-02   -70.657  &lt; 2e-16 ***\ndestination_hex1326       -8.771e-02  1.623e-02    -5.404 6.51e-08 ***\ndestination_hex1327        1.615e-01  1.612e-02    10.019  &lt; 2e-16 ***\ndestination_hex1328        5.077e-02  1.655e-02     3.068 0.002157 ** \ndestination_hex1329        1.074e-01  1.749e-02     6.142 8.17e-10 ***\ndestination_hex133         3.963e-01  1.961e-02    20.211  &lt; 2e-16 ***\ndestination_hex1330        1.315e+00  1.611e-02    81.643  &lt; 2e-16 ***\ndestination_hex1331       -5.114e+00  2.587e-01   -19.773  &lt; 2e-16 ***\ndestination_hex1333       -1.728e+00  2.224e-02   -77.715  &lt; 2e-16 ***\ndestination_hex1334       -1.037e+00  2.007e-02   -51.667  &lt; 2e-16 ***\ndestination_hex1335        1.023e+00  1.623e-02    63.065  &lt; 2e-16 ***\ndestination_hex1336       -2.791e+00  5.788e-02   -48.223  &lt; 2e-16 ***\ndestination_hex1337       -2.541e+00  3.307e-02   -76.828  &lt; 2e-16 ***\ndestination_hex1338       -2.351e+00  3.067e-02   -76.667  &lt; 2e-16 ***\ndestination_hex1339        1.071e+00  1.573e-02    68.083  &lt; 2e-16 ***\ndestination_hex134         1.132e-01  1.919e-02     5.897 3.69e-09 ***\ndestination_hex1340       -3.359e-01  1.777e-02   -18.906  &lt; 2e-16 ***\ndestination_hex1341       -3.628e+00  9.744e-02   -37.233  &lt; 2e-16 ***\ndestination_hex1346        4.403e-02  1.683e-02     2.616 0.008899 ** \ndestination_hex1347        1.020e+00  1.570e-02    64.955  &lt; 2e-16 ***\ndestination_hex1348       -2.912e-01  1.655e-02   -17.592  &lt; 2e-16 ***\ndestination_hex1349        7.011e-01  1.614e-02    43.439  &lt; 2e-16 ***\ndestination_hex1350       -4.462e-01  1.972e-02   -22.630  &lt; 2e-16 ***\ndestination_hex1353       -2.573e-01  1.669e-02   -15.411  &lt; 2e-16 ***\ndestination_hex1354       -1.111e+00  1.937e-02   -57.379  &lt; 2e-16 ***\ndestination_hex1355       -7.977e-01  1.883e-02   -42.368  &lt; 2e-16 ***\ndestination_hex1357       -1.362e+00  2.405e-02   -56.636  &lt; 2e-16 ***\ndestination_hex1358        1.073e+00  1.573e-02    68.172  &lt; 2e-16 ***\ndestination_hex1359        9.121e-03  1.662e-02     0.549 0.583108    \ndestination_hex1360       -3.152e-01  1.693e-02   -18.616  &lt; 2e-16 ***\ndestination_hex1361       -2.021e-01  1.755e-02   -11.512  &lt; 2e-16 ***\ndestination_hex1362       -1.814e+00  3.278e-02   -55.350  &lt; 2e-16 ***\ndestination_hex1368       -8.491e-01  1.766e-02   -48.086  &lt; 2e-16 ***\ndestination_hex1369       -8.644e-01  1.746e-02   -49.491  &lt; 2e-16 ***\ndestination_hex1370        8.923e-01  1.571e-02    56.805  &lt; 2e-16 ***\ndestination_hex1371       -1.724e-02  1.705e-02    -1.011 0.312146    \ndestination_hex1372        4.358e-03  1.678e-02     0.260 0.795130    \ndestination_hex1373       -2.947e+00  3.646e-02   -80.820  &lt; 2e-16 ***\ndestination_hex1374       -1.697e+00  2.289e-02   -74.119  &lt; 2e-16 ***\ndestination_hex1375        2.666e-01  1.691e-02    15.766  &lt; 2e-16 ***\ndestination_hex1376       -1.300e+00  2.272e-02   -57.230  &lt; 2e-16 ***\ndestination_hex1379       -3.496e+00  6.508e-02   -53.722  &lt; 2e-16 ***\ndestination_hex1380        1.838e+00  1.551e-02   118.542  &lt; 2e-16 ***\ndestination_hex1381        2.155e+00  1.546e-02   139.374  &lt; 2e-16 ***\ndestination_hex1382        1.313e+00  1.589e-02    82.650  &lt; 2e-16 ***\ndestination_hex1383       -1.466e+00  2.467e-02   -59.417  &lt; 2e-16 ***\ndestination_hex1388       -2.182e-01  1.653e-02   -13.205  &lt; 2e-16 ***\ndestination_hex1389       -5.704e-01  1.687e-02   -33.811  &lt; 2e-16 ***\ndestination_hex1390       -1.887e-01  1.661e-02   -11.363  &lt; 2e-16 ***\ndestination_hex1391        7.366e-01  1.604e-02    45.927  &lt; 2e-16 ***\ndestination_hex1392        6.160e-01  1.962e-02    31.400  &lt; 2e-16 ***\ndestination_hex1393       -7.790e-01  1.750e-02   -44.511  &lt; 2e-16 ***\ndestination_hex1394       -3.450e-01  1.649e-02   -20.917  &lt; 2e-16 ***\ndestination_hex1395       -4.384e-01  1.680e-02   -26.096  &lt; 2e-16 ***\ndestination_hex1396        4.731e-01  1.614e-02    29.312  &lt; 2e-16 ***\ndestination_hex1397       -7.303e-01  1.704e-02   -42.849  &lt; 2e-16 ***\ndestination_hex1398       -9.493e-01  2.061e-02   -46.065  &lt; 2e-16 ***\ndestination_hex1400       -8.260e-01  1.886e-02   -43.794  &lt; 2e-16 ***\ndestination_hex1401        1.053e+00  1.563e-02    67.338  &lt; 2e-16 ***\ndestination_hex1402        3.544e-01  1.619e-02    21.890  &lt; 2e-16 ***\ndestination_hex1404       -1.725e-01  2.661e-02    -6.484 8.96e-11 ***\ndestination_hex1410        5.515e-01  1.576e-02    35.001  &lt; 2e-16 ***\ndestination_hex1411       -3.325e-01  1.673e-02   -19.880  &lt; 2e-16 ***\ndestination_hex1412        5.980e-01  1.582e-02    37.793  &lt; 2e-16 ***\ndestination_hex1413        2.651e-01  1.619e-02    16.371  &lt; 2e-16 ***\ndestination_hex1414       -2.926e-01  1.634e-02   -17.902  &lt; 2e-16 ***\ndestination_hex1415        2.339e-01  1.619e-02    14.446  &lt; 2e-16 ***\ndestination_hex1416       -5.198e-01  1.706e-02   -30.462  &lt; 2e-16 ***\ndestination_hex1417       -9.147e-02  1.629e-02    -5.616 1.96e-08 ***\ndestination_hex1418       -3.177e-02  1.627e-02    -1.953 0.050810 .  \ndestination_hex1419       -4.618e-01  1.710e-02   -27.005  &lt; 2e-16 ***\ndestination_hex1422        2.183e-01  1.645e-02    13.271  &lt; 2e-16 ***\ndestination_hex1423        7.811e-01  1.610e-02    48.521  &lt; 2e-16 ***\ndestination_hex1430        2.007e-01  1.605e-02    12.506  &lt; 2e-16 ***\ndestination_hex1431        8.229e-01  1.570e-02    52.402  &lt; 2e-16 ***\ndestination_hex1432        4.702e-01  1.583e-02    29.710  &lt; 2e-16 ***\ndestination_hex1433       -1.923e-01  1.781e-02   -10.795  &lt; 2e-16 ***\ndestination_hex1434        6.760e-01  1.580e-02    42.770  &lt; 2e-16 ***\ndestination_hex1435        2.192e-01  1.598e-02    13.718  &lt; 2e-16 ***\ndestination_hex1436       -8.665e-01  1.860e-02   -46.592  &lt; 2e-16 ***\ndestination_hex1437       -3.083e-01  1.654e-02   -18.645  &lt; 2e-16 ***\ndestination_hex1438        3.632e-01  1.585e-02    22.919  &lt; 2e-16 ***\ndestination_hex1439        1.115e+00  1.566e-02    71.211  &lt; 2e-16 ***\ndestination_hex1440        4.581e-01  1.643e-02    27.882  &lt; 2e-16 ***\ndestination_hex1442       -1.555e+00  2.245e-02   -69.248  &lt; 2e-16 ***\ndestination_hex1443        2.352e-01  1.633e-02    14.404  &lt; 2e-16 ***\ndestination_hex1444        1.190e+00  1.634e-02    72.827  &lt; 2e-16 ***\ndestination_hex1452        7.674e-01  1.562e-02    49.122  &lt; 2e-16 ***\ndestination_hex1453        2.073e-01  1.606e-02    12.907  &lt; 2e-16 ***\ndestination_hex1454       -1.056e+00  1.889e-02   -55.915  &lt; 2e-16 ***\ndestination_hex1455       -1.732e-01  1.678e-02   -10.325  &lt; 2e-16 ***\ndestination_hex1456        9.445e-02  1.630e-02     5.793 6.92e-09 ***\ndestination_hex1457        9.639e-01  1.590e-02    60.634  &lt; 2e-16 ***\ndestination_hex1458        1.657e+00  1.549e-02   106.969  &lt; 2e-16 ***\ndestination_hex1459       -8.522e-01  1.727e-02   -49.345  &lt; 2e-16 ***\ndestination_hex1460        4.428e-01  1.587e-02    27.895  &lt; 2e-16 ***\ndestination_hex1461        2.373e-01  1.659e-02    14.307  &lt; 2e-16 ***\ndestination_hex1464       -3.074e-01  1.680e-02   -18.302  &lt; 2e-16 ***\ndestination_hex1465       -4.844e-01  1.848e-02   -26.217  &lt; 2e-16 ***\ndestination_hex1472       -1.851e-01  1.682e-02   -11.001  &lt; 2e-16 ***\ndestination_hex1473        7.821e-01  1.571e-02    49.770  &lt; 2e-16 ***\ndestination_hex1474        5.384e-01  1.566e-02    34.377  &lt; 2e-16 ***\ndestination_hex1475        5.695e-01  1.582e-02    35.991  &lt; 2e-16 ***\ndestination_hex1476       -4.076e-01  1.681e-02   -24.244  &lt; 2e-16 ***\ndestination_hex1477        1.555e+00  1.547e-02   100.508  &lt; 2e-16 ***\ndestination_hex1478        9.113e-03  1.615e-02     0.564 0.572480    \ndestination_hex1479       -7.330e-01  1.697e-02   -43.186  &lt; 2e-16 ***\ndestination_hex1480        1.575e+00  1.548e-02   101.744  &lt; 2e-16 ***\ndestination_hex1481        2.011e-01  1.634e-02    12.308  &lt; 2e-16 ***\ndestination_hex1482        1.027e+00  1.600e-02    64.200  &lt; 2e-16 ***\ndestination_hex1485       -9.373e-01  1.966e-02   -47.689  &lt; 2e-16 ***\ndestination_hex1494        5.122e-01  1.586e-02    32.289  &lt; 2e-16 ***\ndestination_hex1495       -2.498e-01  1.636e-02   -15.266  &lt; 2e-16 ***\ndestination_hex1496       -3.775e-02  1.568e-02    -2.408 0.016050 *  \ndestination_hex1497       -4.067e-01  1.688e-02   -24.096  &lt; 2e-16 ***\ndestination_hex1498       -1.748e-01  1.644e-02   -10.633  &lt; 2e-16 ***\ndestination_hex1499        1.977e-01  1.591e-02    12.422  &lt; 2e-16 ***\ndestination_hex150         5.109e-01  2.932e-02    17.427  &lt; 2e-16 ***\ndestination_hex1500       -2.804e-01  1.739e-02   -16.127  &lt; 2e-16 ***\ndestination_hex1501        6.340e-01  1.577e-02    40.207  &lt; 2e-16 ***\ndestination_hex1502        5.355e-01  1.586e-02    33.766  &lt; 2e-16 ***\ndestination_hex1506       -5.790e+00  6.484e-02   -89.303  &lt; 2e-16 ***\ndestination_hex151         3.077e-01  2.609e-02    11.795  &lt; 2e-16 ***\ndestination_hex1515       -7.859e-01  2.050e-02   -38.337  &lt; 2e-16 ***\ndestination_hex1516       -1.055e-01  1.567e-02    -6.731 1.68e-11 ***\ndestination_hex1517       -1.626e-01  1.655e-02    -9.826  &lt; 2e-16 ***\ndestination_hex1518       -6.505e-01  1.712e-02   -37.985  &lt; 2e-16 ***\ndestination_hex1519       -2.917e-01  1.718e-02   -16.976  &lt; 2e-16 ***\ndestination_hex152         1.893e+00  2.031e-02    93.222  &lt; 2e-16 ***\ndestination_hex1520       -4.646e-01  1.670e-02   -27.820  &lt; 2e-16 ***\ndestination_hex1521       -4.624e-01  1.695e-02   -27.275  &lt; 2e-16 ***\ndestination_hex1522        3.561e-01  1.600e-02    22.253  &lt; 2e-16 ***\ndestination_hex1523        1.348e+00  1.586e-02    84.989  &lt; 2e-16 ***\ndestination_hex1524       -7.197e-01  1.909e-02   -37.700  &lt; 2e-16 ***\ndestination_hex1527       -2.529e+00  3.236e-02   -78.143  &lt; 2e-16 ***\ndestination_hex153         4.703e-01  1.978e-02    23.773  &lt; 2e-16 ***\ndestination_hex1535       -1.490e+00  5.260e-02   -28.317  &lt; 2e-16 ***\ndestination_hex1536       -1.505e+00  2.646e-02   -56.876  &lt; 2e-16 ***\ndestination_hex1537       -2.180e-02  1.633e-02    -1.335 0.181968    \ndestination_hex1538       -1.515e-02  1.608e-02    -0.942 0.346006    \ndestination_hex1539        1.898e-01  1.591e-02    11.927  &lt; 2e-16 ***\ndestination_hex154        -8.620e-01  3.063e-02   -28.142  &lt; 2e-16 ***\ndestination_hex1540       -3.641e-01  1.641e-02   -22.185  &lt; 2e-16 ***\ndestination_hex1541        2.411e-02  1.673e-02     1.441 0.149602    \ndestination_hex1542       -5.664e-01  1.796e-02   -31.538  &lt; 2e-16 ***\ndestination_hex1543       -7.980e-01  2.972e-02   -26.848  &lt; 2e-16 ***\ndestination_hex1544       -6.261e-01  1.766e-02   -35.456  &lt; 2e-16 ***\ndestination_hex1547       -6.388e-01  2.123e-02   -30.085  &lt; 2e-16 ***\ndestination_hex155        -1.271e-01  2.294e-02    -5.542 2.99e-08 ***\ndestination_hex1556       -1.949e+00  6.089e-02   -32.013  &lt; 2e-16 ***\ndestination_hex1557       -1.221e+00  2.190e-02   -55.753  &lt; 2e-16 ***\ndestination_hex1558        3.151e-01  1.960e-02    16.078  &lt; 2e-16 ***\ndestination_hex1559        5.733e-01  1.574e-02    36.420  &lt; 2e-16 ***\ndestination_hex156         3.782e-01  2.394e-02    15.794  &lt; 2e-16 ***\ndestination_hex1560        7.167e-01  1.572e-02    45.595  &lt; 2e-16 ***\ndestination_hex1561       -3.642e-02  1.652e-02    -2.205 0.027473 *  \ndestination_hex1562       -2.190e+00  2.259e-02   -96.917  &lt; 2e-16 ***\ndestination_hex1563       -1.088e+00  1.774e-02   -61.362  &lt; 2e-16 ***\ndestination_hex1564       -4.709e-01  1.727e-02   -27.263  &lt; 2e-16 ***\ndestination_hex1565        1.097e-01  1.644e-02     6.670 2.56e-11 ***\ndestination_hex1566       -1.613e+00  2.232e-02   -72.269  &lt; 2e-16 ***\ndestination_hex1567       -1.033e+00  2.303e-02   -44.844  &lt; 2e-16 ***\ndestination_hex1568       -2.894e-01  1.941e-02   -14.912  &lt; 2e-16 ***\ndestination_hex1578       -2.473e+00  1.002e-01   -24.680  &lt; 2e-16 ***\ndestination_hex1580       -2.447e+00  2.814e-02   -86.973  &lt; 2e-16 ***\ndestination_hex1581        3.804e-01  1.595e-02    23.849  &lt; 2e-16 ***\ndestination_hex1582        4.431e-01  1.575e-02    28.131  &lt; 2e-16 ***\ndestination_hex1583       -1.557e+00  2.505e-02   -62.155  &lt; 2e-16 ***\ndestination_hex1584       -1.179e+00  1.938e-02   -60.836  &lt; 2e-16 ***\ndestination_hex1585       -1.084e-01  1.698e-02    -6.386 1.70e-10 ***\ndestination_hex1586        5.422e-01  1.608e-02    33.725  &lt; 2e-16 ***\ndestination_hex1589       -1.440e+00  2.643e-02   -54.478  &lt; 2e-16 ***\ndestination_hex1590       -2.708e-01  2.011e-02   -13.466  &lt; 2e-16 ***\ndestination_hex1600       -3.104e-01  2.071e-02   -14.985  &lt; 2e-16 ***\ndestination_hex1601       -8.502e-01  1.681e-02   -50.583  &lt; 2e-16 ***\ndestination_hex1602       -4.098e-02  1.658e-02    -2.472 0.013441 *  \ndestination_hex1603        8.052e-01  1.575e-02    51.123  &lt; 2e-16 ***\ndestination_hex1604       -1.211e+00  1.834e-02   -66.037  &lt; 2e-16 ***\ndestination_hex1605       -3.573e-01  1.627e-02   -21.967  &lt; 2e-16 ***\ndestination_hex1606       -3.849e-01  2.015e-02   -19.100  &lt; 2e-16 ***\ndestination_hex1607        6.985e-01  1.583e-02    44.128  &lt; 2e-16 ***\ndestination_hex1608        1.536e-02  1.644e-02     0.934 0.350217    \ndestination_hex1609        4.989e-01  1.606e-02    31.069  &lt; 2e-16 ***\ndestination_hex1610       -1.334e+00  3.040e-02   -43.893  &lt; 2e-16 ***\ndestination_hex1622        7.555e-01  1.862e-02    40.579  &lt; 2e-16 ***\ndestination_hex1623        2.984e-01  1.583e-02    18.845  &lt; 2e-16 ***\ndestination_hex1624        8.727e-01  1.572e-02    55.526  &lt; 2e-16 ***\ndestination_hex1625        1.419e-01  1.623e-02     8.744  &lt; 2e-16 ***\ndestination_hex1626        1.905e+00  1.544e-02   123.372  &lt; 2e-16 ***\ndestination_hex1627       -9.835e-01  1.757e-02   -55.971  &lt; 2e-16 ***\ndestination_hex1628        1.233e+00  1.565e-02    78.747  &lt; 2e-16 ***\ndestination_hex1629       -1.583e+00  2.067e-02   -76.581  &lt; 2e-16 ***\ndestination_hex1630       -8.362e-01  1.895e-02   -44.126  &lt; 2e-16 ***\ndestination_hex1631       -1.476e+00  2.416e-02   -61.119  &lt; 2e-16 ***\ndestination_hex1642       -2.030e+00  3.516e-02   -57.743  &lt; 2e-16 ***\ndestination_hex1643       -6.661e-02  1.630e-02    -4.087 4.37e-05 ***\ndestination_hex1644       -8.422e-02  1.718e-02    -4.902 9.48e-07 ***\ndestination_hex1645       -1.793e-01  1.645e-02   -10.896  &lt; 2e-16 ***\ndestination_hex1646        1.844e-01  1.704e-02    10.819  &lt; 2e-16 ***\ndestination_hex1647       -4.838e-01  1.638e-02   -29.525  &lt; 2e-16 ***\ndestination_hex1648       -2.137e-01  1.629e-02   -13.118  &lt; 2e-16 ***\ndestination_hex1649        5.783e-01  1.581e-02    36.585  &lt; 2e-16 ***\ndestination_hex1650       -2.557e-01  1.691e-02   -15.121  &lt; 2e-16 ***\ndestination_hex1664       -3.938e+00  1.173e-01   -33.589  &lt; 2e-16 ***\ndestination_hex1665        5.698e-01  1.578e-02    36.120  &lt; 2e-16 ***\ndestination_hex1666        6.243e-01  1.578e-02    39.572  &lt; 2e-16 ***\ndestination_hex1667       -7.043e-01  2.188e-02   -32.184  &lt; 2e-16 ***\ndestination_hex1668       -3.608e-01  1.664e-02   -21.683  &lt; 2e-16 ***\ndestination_hex1670        2.815e-01  1.591e-02    17.697  &lt; 2e-16 ***\ndestination_hex1671       -2.205e-01  1.843e-02   -11.966  &lt; 2e-16 ***\ndestination_hex1672       -8.938e-01  1.910e-02   -46.787  &lt; 2e-16 ***\ndestination_hex1684        1.715e-01  1.785e-02     9.610  &lt; 2e-16 ***\ndestination_hex1685       -6.277e-01  1.750e-02   -35.872  &lt; 2e-16 ***\ndestination_hex1686       -1.443e-02  1.627e-02    -0.887 0.375198    \ndestination_hex1687        3.189e-01  1.664e-02    19.162  &lt; 2e-16 ***\ndestination_hex1688       -3.416e-01  1.663e-02   -20.541  &lt; 2e-16 ***\ndestination_hex1689       -9.492e-01  1.801e-02   -52.709  &lt; 2e-16 ***\ndestination_hex1690       -1.510e+00  1.971e-02   -76.596  &lt; 2e-16 ***\ndestination_hex1691        5.015e-01  1.587e-02    31.599  &lt; 2e-16 ***\ndestination_hex1692       -1.444e+00  2.034e-02   -71.031  &lt; 2e-16 ***\ndestination_hex1706       -3.315e-02  1.701e-02    -1.949 0.051283 .  \ndestination_hex1707       -9.336e-01  1.721e-02   -54.247  &lt; 2e-16 ***\ndestination_hex1708       -2.223e-01  1.644e-02   -13.524  &lt; 2e-16 ***\ndestination_hex1709        4.556e-01  1.593e-02    28.601  &lt; 2e-16 ***\ndestination_hex1710        4.099e-01  1.606e-02    25.525  &lt; 2e-16 ***\ndestination_hex1711        1.121e+00  1.564e-02    71.716  &lt; 2e-16 ***\ndestination_hex1712        3.051e-01  1.584e-02    19.262  &lt; 2e-16 ***\ndestination_hex1713       -1.990e+00  2.146e-02   -92.731  &lt; 2e-16 ***\ndestination_hex1714       -4.914e-01  1.723e-02   -28.522  &lt; 2e-16 ***\ndestination_hex172        -1.402e+00  4.682e-02   -29.935  &lt; 2e-16 ***\ndestination_hex1727        4.217e-01  1.616e-02    26.099  &lt; 2e-16 ***\ndestination_hex1728        3.777e-01  1.589e-02    23.771  &lt; 2e-16 ***\ndestination_hex1729        5.104e-01  1.582e-02    32.263  &lt; 2e-16 ***\ndestination_hex1730       -5.675e-01  1.751e-02   -32.417  &lt; 2e-16 ***\ndestination_hex1731        2.629e-01  1.608e-02    16.351  &lt; 2e-16 ***\ndestination_hex1732        1.618e-01  1.592e-02    10.162  &lt; 2e-16 ***\ndestination_hex1733       -9.137e-01  1.720e-02   -53.125  &lt; 2e-16 ***\ndestination_hex1734        6.821e-02  1.597e-02     4.272 1.94e-05 ***\ndestination_hex1735       -7.896e-01  2.052e-02   -38.488  &lt; 2e-16 ***\ndestination_hex174         2.168e-01  2.095e-02    10.348  &lt; 2e-16 ***\ndestination_hex1748       -5.865e-01  1.755e-02   -33.424  &lt; 2e-16 ***\ndestination_hex1749        5.916e-01  1.575e-02    37.553  &lt; 2e-16 ***\ndestination_hex175         1.025e-01  1.843e-02     5.558 2.72e-08 ***\ndestination_hex1750        4.054e-01  1.583e-02    25.618  &lt; 2e-16 ***\ndestination_hex1751        1.074e-01  1.643e-02     6.535 6.35e-11 ***\ndestination_hex1753        3.976e-01  1.589e-02    25.026  &lt; 2e-16 ***\ndestination_hex1754        1.557e+00  1.548e-02   100.590  &lt; 2e-16 ***\ndestination_hex1755        8.704e-01  1.565e-02    55.634  &lt; 2e-16 ***\ndestination_hex1756       -2.016e-01  1.620e-02   -12.450  &lt; 2e-16 ***\ndestination_hex1757       -2.266e+00  2.653e-02   -85.397  &lt; 2e-16 ***\ndestination_hex176        -1.107e+00  3.085e-02   -35.883  &lt; 2e-16 ***\ndestination_hex1769       -9.327e-02  1.651e-02    -5.648 1.63e-08 ***\ndestination_hex1770       -2.312e-01  1.694e-02   -13.653  &lt; 2e-16 ***\ndestination_hex1771        5.256e-01  1.600e-02    32.843  &lt; 2e-16 ***\ndestination_hex1772        1.688e+00  1.668e-02   101.202  &lt; 2e-16 ***\ndestination_hex1774       -2.981e-01  1.672e-02   -17.830  &lt; 2e-16 ***\ndestination_hex1775       -8.603e-01  1.715e-02   -50.173  &lt; 2e-16 ***\ndestination_hex1776        1.444e+00  1.549e-02    93.179  &lt; 2e-16 ***\ndestination_hex1777       -3.738e-01  1.669e-02   -22.397  &lt; 2e-16 ***\ndestination_hex1778       -1.297e+00  2.082e-02   -62.291  &lt; 2e-16 ***\ndestination_hex1790        6.689e-01  1.601e-02    41.772  &lt; 2e-16 ***\ndestination_hex1791        1.134e-01  1.629e-02     6.959 3.43e-12 ***\ndestination_hex1792        2.143e-01  1.674e-02    12.804  &lt; 2e-16 ***\ndestination_hex1793        1.910e-01  1.624e-02    11.756  &lt; 2e-16 ***\ndestination_hex1794        1.726e+00  1.685e-02   102.477  &lt; 2e-16 ***\ndestination_hex1795       -1.961e+00  2.628e-02   -74.603  &lt; 2e-16 ***\ndestination_hex1796        1.346e-01  1.616e-02     8.329  &lt; 2e-16 ***\ndestination_hex1797       -8.754e-02  1.618e-02    -5.410 6.29e-08 ***\ndestination_hex1798        1.150e-01  1.608e-02     7.149 8.74e-13 ***\ndestination_hex1799       -1.038e+00  1.824e-02   -56.886  &lt; 2e-16 ***\ndestination_hex1800       -2.393e+00  5.242e-02   -45.653  &lt; 2e-16 ***\ndestination_hex1811       -8.080e-02  1.695e-02    -4.768 1.87e-06 ***\ndestination_hex1812        1.036e+00  1.562e-02    66.311  &lt; 2e-16 ***\ndestination_hex1813        1.161e+00  1.559e-02    74.432  &lt; 2e-16 ***\ndestination_hex1817       -1.384e+00  1.925e-02   -71.855  &lt; 2e-16 ***\ndestination_hex1818       -2.309e-01  1.638e-02   -14.101  &lt; 2e-16 ***\ndestination_hex1819        1.598e+00  1.550e-02   103.081  &lt; 2e-16 ***\ndestination_hex1820       -3.233e+00  4.378e-02   -73.857  &lt; 2e-16 ***\ndestination_hex1832        1.127e+00  1.579e-02    71.374  &lt; 2e-16 ***\ndestination_hex1833       -1.772e-01  1.671e-02   -10.605  &lt; 2e-16 ***\ndestination_hex1834       -4.351e-01  1.664e-02   -26.154  &lt; 2e-16 ***\ndestination_hex1835       -2.246e-01  1.694e-02   -13.262  &lt; 2e-16 ***\ndestination_hex1837       -1.011e-01  2.049e-02    -4.936 7.96e-07 ***\ndestination_hex1839       -1.137e+00  1.905e-02   -59.670  &lt; 2e-16 ***\ndestination_hex1840        1.290e+00  1.556e-02    82.865  &lt; 2e-16 ***\ndestination_hex1841       -1.793e+00  2.692e-02   -66.608  &lt; 2e-16 ***\ndestination_hex1842       -7.451e-01  2.093e-02   -35.596  &lt; 2e-16 ***\ndestination_hex1853        1.138e-01  1.630e-02     6.982 2.92e-12 ***\ndestination_hex1854        4.847e-01  1.603e-02    30.228  &lt; 2e-16 ***\ndestination_hex1855        6.496e-01  1.590e-02    40.866  &lt; 2e-16 ***\ndestination_hex1858        7.503e-01  1.742e-02    43.063  &lt; 2e-16 ***\ndestination_hex1860       -3.826e-01  2.346e-02   -16.307  &lt; 2e-16 ***\ndestination_hex1861       -1.447e-01  1.646e-02    -8.789  &lt; 2e-16 ***\ndestination_hex1874       -7.988e-02  1.782e-02    -4.482 7.38e-06 ***\ndestination_hex1875       -1.827e+00  2.485e-02   -73.517  &lt; 2e-16 ***\ndestination_hex1876       -6.034e-01  2.641e-02   -22.847  &lt; 2e-16 ***\ndestination_hex1877        4.243e-01  1.600e-02    26.520  &lt; 2e-16 ***\ndestination_hex1880       -9.285e-02  2.064e-02    -4.498 6.86e-06 ***\ndestination_hex1882        8.949e-02  1.647e-02     5.435 5.48e-08 ***\ndestination_hex1883       -1.171e+00  2.441e-02   -47.963  &lt; 2e-16 ***\ndestination_hex1895        4.256e-01  1.619e-02    26.290  &lt; 2e-16 ***\ndestination_hex1896       -4.176e-01  1.709e-02   -24.433  &lt; 2e-16 ***\ndestination_hex1897       -1.121e+00  1.916e-02   -58.524  &lt; 2e-16 ***\ndestination_hex1898       -1.401e+00  2.823e-02   -49.630  &lt; 2e-16 ***\ndestination_hex1901       -5.893e-01  2.586e-02   -22.787  &lt; 2e-16 ***\ndestination_hex1903       -1.516e+00  2.276e-02   -66.599  &lt; 2e-16 ***\ndestination_hex1917       -4.536e-01  1.755e-02   -25.849  &lt; 2e-16 ***\ndestination_hex1918        1.032e+00  1.643e-02    62.844  &lt; 2e-16 ***\ndestination_hex1919        7.235e-01  1.591e-02    45.481  &lt; 2e-16 ***\ndestination_hex1922        4.706e-01  1.831e-02    25.707  &lt; 2e-16 ***\ndestination_hex1924       -2.092e+00  2.405e-02   -86.972  &lt; 2e-16 ***\ndestination_hex1937       -1.241e-01  1.702e-02    -7.295 2.98e-13 ***\ndestination_hex1938        6.859e-01  1.587e-02    43.218  &lt; 2e-16 ***\ndestination_hex1939       -2.030e-01  1.722e-02   -11.784  &lt; 2e-16 ***\ndestination_hex1942       -8.985e-01  2.507e-02   -35.833  &lt; 2e-16 ***\ndestination_hex195        -4.317e-01  3.345e-02   -12.907  &lt; 2e-16 ***\ndestination_hex1959       -3.700e-01  1.777e-02   -20.824  &lt; 2e-16 ***\ndestination_hex196         8.587e-01  1.827e-02    47.009  &lt; 2e-16 ***\ndestination_hex1960        1.907e+00  1.545e-02   123.443  &lt; 2e-16 ***\ndestination_hex1961       -7.145e-01  1.820e-02   -39.253  &lt; 2e-16 ***\ndestination_hex1962       -1.148e-03  1.643e-02    -0.070 0.944289    \ndestination_hex1964        9.918e-01  1.888e-02    52.536  &lt; 2e-16 ***\ndestination_hex197        -1.676e+00  8.774e-02   -19.106  &lt; 2e-16 ***\ndestination_hex1979       -1.440e-01  1.742e-02    -8.266  &lt; 2e-16 ***\ndestination_hex1980       -1.679e-01  1.661e-02   -10.108  &lt; 2e-16 ***\ndestination_hex1981       -2.366e-01  1.686e-02   -14.031  &lt; 2e-16 ***\ndestination_hex1982        3.835e-01  1.680e-02    22.827  &lt; 2e-16 ***\ndestination_hex1983        7.020e-02  1.642e-02     4.275 1.92e-05 ***\ndestination_hex1984        2.069e-01  1.647e-02    12.562  &lt; 2e-16 ***\ndestination_hex1985        3.201e-01  1.625e-02    19.696  &lt; 2e-16 ***\ndestination_hex2001        1.663e-02  1.659e-02     1.002 0.316257    \ndestination_hex2002        2.219e-01  1.602e-02    13.849  &lt; 2e-16 ***\ndestination_hex2003        7.095e-01  1.584e-02    44.785  &lt; 2e-16 ***\ndestination_hex2004        9.628e-01  1.580e-02    60.941  &lt; 2e-16 ***\ndestination_hex2005        1.149e-01  1.648e-02     6.972 3.13e-12 ***\ndestination_hex2006        1.201e+00  1.589e-02    75.544  &lt; 2e-16 ***\ndestination_hex2007       -2.633e+00  3.190e-02   -82.523  &lt; 2e-16 ***\ndestination_hex2022        6.782e-01  1.649e-02    41.120  &lt; 2e-16 ***\ndestination_hex2023        5.052e-01  1.595e-02    31.674  &lt; 2e-16 ***\ndestination_hex2024        8.905e-01  1.573e-02    56.592  &lt; 2e-16 ***\ndestination_hex2025       -2.039e-01  1.655e-02   -12.318  &lt; 2e-16 ***\ndestination_hex2026       -8.358e-01  1.892e-02   -44.170  &lt; 2e-16 ***\ndestination_hex2027        5.598e-01  1.586e-02    35.291  &lt; 2e-16 ***\ndestination_hex2043       -9.697e-01  1.868e-02   -51.913  &lt; 2e-16 ***\ndestination_hex2044        5.107e-03  1.643e-02     0.311 0.755973    \ndestination_hex2045       -2.918e-01  1.935e-02   -15.079  &lt; 2e-16 ***\ndestination_hex2046        9.570e-01  1.566e-02    61.126  &lt; 2e-16 ***\ndestination_hex2047       -8.085e-01  1.769e-02   -45.708  &lt; 2e-16 ***\ndestination_hex2048       -4.863e-01  1.734e-02   -28.043  &lt; 2e-16 ***\ndestination_hex2049       -4.254e+00  3.122e-02  -136.261  &lt; 2e-16 ***\ndestination_hex2064        3.625e-02  1.685e-02     2.151 0.031480 *  \ndestination_hex2065       -1.831e-01  1.706e-02   -10.737  &lt; 2e-16 ***\ndestination_hex2066       -2.138e+00  3.475e-02   -61.527  &lt; 2e-16 ***\ndestination_hex2067        2.241e+00  1.541e-02   145.384  &lt; 2e-16 ***\ndestination_hex2068       -5.406e-01  1.966e-02   -27.500  &lt; 2e-16 ***\ndestination_hex2069       -3.722e-01  1.725e-02   -21.576  &lt; 2e-16 ***\ndestination_hex2085       -3.250e-01  1.712e-02   -18.987  &lt; 2e-16 ***\ndestination_hex2086        1.325e+00  1.568e-02    84.517  &lt; 2e-16 ***\ndestination_hex2087        1.064e+00  1.575e-02    67.556  &lt; 2e-16 ***\ndestination_hex2088       -3.146e-02  1.625e-02    -1.935 0.052949 .  \ndestination_hex2089       -9.064e-01  1.769e-02   -51.239  &lt; 2e-16 ***\ndestination_hex2090        1.998e+00  1.547e-02   129.196  &lt; 2e-16 ***\ndestination_hex2091       -3.889e+00  6.354e-02   -61.200  &lt; 2e-16 ***\ndestination_hex2105        5.721e-01  7.693e-02     7.437 1.03e-13 ***\ndestination_hex2106       -1.296e+00  2.145e-02   -60.418  &lt; 2e-16 ***\ndestination_hex2107        1.288e+00  1.569e-02    82.052  &lt; 2e-16 ***\ndestination_hex2108        9.985e-01  1.592e-02    62.737  &lt; 2e-16 ***\ndestination_hex2109       -4.208e-01  1.653e-02   -25.461  &lt; 2e-16 ***\ndestination_hex2110       -9.886e-01  1.928e-02   -51.275  &lt; 2e-16 ***\ndestination_hex2111       -2.616e+00  3.619e-02   -72.287  &lt; 2e-16 ***\ndestination_hex2128        1.785e-01  1.776e-02    10.054  &lt; 2e-16 ***\ndestination_hex2129       -4.145e-02  1.811e-02    -2.289 0.022077 *  \ndestination_hex2130       -5.966e-01  1.616e-02   -36.912  &lt; 2e-16 ***\ndestination_hex2131       -3.796e-01  1.686e-02   -22.517  &lt; 2e-16 ***\ndestination_hex2132       -1.517e-01  1.689e-02    -8.980  &lt; 2e-16 ***\ndestination_hex2148       -5.872e-01  2.075e-02   -28.298  &lt; 2e-16 ***\ndestination_hex2149       -5.745e-01  1.864e-02   -30.828  &lt; 2e-16 ***\ndestination_hex215         6.392e-01  3.141e-02    20.347  &lt; 2e-16 ***\ndestination_hex2150       -1.127e+00  1.717e-02   -65.674  &lt; 2e-16 ***\ndestination_hex2151        1.394e+00  1.556e-02    89.619  &lt; 2e-16 ***\ndestination_hex2152        4.642e-01  1.608e-02    28.864  &lt; 2e-16 ***\ndestination_hex2153       -1.020e+00  1.887e-02   -54.041  &lt; 2e-16 ***\ndestination_hex216         7.374e-02  2.194e-02     3.362 0.000775 ***\ndestination_hex217         4.403e-01  1.767e-02    24.913  &lt; 2e-16 ***\ndestination_hex2171        7.323e-01  1.615e-02    45.339  &lt; 2e-16 ***\ndestination_hex2172       -8.631e-01  1.893e-02   -45.596  &lt; 2e-16 ***\ndestination_hex2173       -3.924e-01  1.692e-02   -23.193  &lt; 2e-16 ***\ndestination_hex2174        1.773e-01  1.669e-02    10.624  &lt; 2e-16 ***\ndestination_hex2191        1.021e+00  1.691e-02    60.402  &lt; 2e-16 ***\ndestination_hex2192       -5.261e-01  1.856e-02   -28.342  &lt; 2e-16 ***\ndestination_hex2193        2.147e-01  1.641e-02    13.089  &lt; 2e-16 ***\ndestination_hex2194        1.108e-01  1.631e-02     6.794 1.09e-11 ***\ndestination_hex2195       -8.111e-01  3.712e-02   -21.848  &lt; 2e-16 ***\ndestination_hex2212        7.666e-01  2.019e-02    37.959  &lt; 2e-16 ***\ndestination_hex2213        4.808e-01  1.725e-02    27.878  &lt; 2e-16 ***\ndestination_hex2214        1.586e+00  1.671e-02    94.950  &lt; 2e-16 ***\ndestination_hex2215       -3.437e-01  1.781e-02   -19.293  &lt; 2e-16 ***\ndestination_hex2216        5.635e-01  1.635e-02    34.468  &lt; 2e-16 ***\ndestination_hex2233        9.669e-01  1.805e-02    53.581  &lt; 2e-16 ***\ndestination_hex2234        1.044e+00  1.725e-02    60.520  &lt; 2e-16 ***\ndestination_hex2235        2.985e-01  1.770e-02    16.868  &lt; 2e-16 ***\ndestination_hex2236       -1.176e+00  2.034e-02   -57.829  &lt; 2e-16 ***\ndestination_hex2237        4.878e-01  1.906e-02    25.587  &lt; 2e-16 ***\ndestination_hex2256        3.765e-02  1.971e-02     1.910 0.056137 .  \ndestination_hex2257       -1.884e+00  3.003e-02   -62.744  &lt; 2e-16 ***\ndestination_hex2258        1.056e-01  1.694e-02     6.237 4.46e-10 ***\ndestination_hex2259        1.202e+00  1.826e-02    65.797  &lt; 2e-16 ***\ndestination_hex2277       -5.796e-01  2.889e-02   -20.060  &lt; 2e-16 ***\ndestination_hex2278       -6.657e-01  2.182e-02   -30.507  &lt; 2e-16 ***\ndestination_hex2279        2.666e-01  1.691e-02    15.762  &lt; 2e-16 ***\ndestination_hex2280       -1.609e+00  3.518e-02   -45.748  &lt; 2e-16 ***\ndestination_hex2297       -5.731e-01  2.210e-02   -25.925  &lt; 2e-16 ***\ndestination_hex23          1.005e-01  4.843e-02     2.076 0.037888 *  \ndestination_hex2300       -7.771e-01  2.495e-02   -31.153  &lt; 2e-16 ***\ndestination_hex2301       -3.996e-01  1.812e-02   -22.052  &lt; 2e-16 ***\ndestination_hex2318        1.387e+00  1.623e-02    85.492  &lt; 2e-16 ***\ndestination_hex2319        1.539e+00  1.607e-02    95.765  &lt; 2e-16 ***\ndestination_hex2322       -8.276e-02  1.789e-02    -4.626 3.72e-06 ***\ndestination_hex2337        1.366e+00  2.178e-02    62.710  &lt; 2e-16 ***\ndestination_hex2341        1.769e+00  1.602e-02   110.431  &lt; 2e-16 ***\ndestination_hex2343       -7.373e-01  1.982e-02   -37.208  &lt; 2e-16 ***\ndestination_hex2361        4.421e-01  1.755e-02    25.191  &lt; 2e-16 ***\ndestination_hex2364       -1.733e+00  3.327e-02   -52.089  &lt; 2e-16 ***\ndestination_hex237        -5.239e-01  3.230e-02   -16.221  &lt; 2e-16 ***\ndestination_hex2379        5.689e-01  2.931e-02    19.412  &lt; 2e-16 ***\ndestination_hex238         3.648e-02  2.117e-02     1.723 0.084874 .  \ndestination_hex2384        1.275e+00  1.661e-02    76.762  &lt; 2e-16 ***\ndestination_hex239         3.521e-02  3.329e-02     1.058 0.290182    \ndestination_hex2405        1.906e+00  1.597e-02   119.327  &lt; 2e-16 ***\ndestination_hex2406       -1.223e+00  2.837e-02   -43.116  &lt; 2e-16 ***\ndestination_hex2426        1.290e+00  1.881e-02    68.586  &lt; 2e-16 ***\ndestination_hex2427        1.418e+00  1.664e-02    85.210  &lt; 2e-16 ***\ndestination_hex2505        1.723e+00  2.371e-02    72.682  &lt; 2e-16 ***\ndestination_hex257         6.921e-01  2.124e-02    32.581  &lt; 2e-16 ***\ndestination_hex258        -6.213e-01  2.460e-02   -25.252  &lt; 2e-16 ***\ndestination_hex259         6.024e-01  1.940e-02    31.048  &lt; 2e-16 ***\ndestination_hex278         9.598e-01  2.158e-02    44.471  &lt; 2e-16 ***\ndestination_hex279         1.297e-01  1.976e-02     6.564 5.25e-11 ***\ndestination_hex280         6.281e-01  1.942e-02    32.346  &lt; 2e-16 ***\ndestination_hex298        -3.398e+00  1.333e-01   -25.485  &lt; 2e-16 ***\ndestination_hex299         3.152e-01  2.222e-02    14.188  &lt; 2e-16 ***\ndestination_hex300        -2.163e-01  2.266e-02    -9.547  &lt; 2e-16 ***\ndestination_hex320         9.249e-01  2.012e-02    45.964  &lt; 2e-16 ***\ndestination_hex321        -3.686e-01  2.743e-02   -13.439  &lt; 2e-16 ***\ndestination_hex322         1.420e+00  1.910e-02    74.339  &lt; 2e-16 ***\ndestination_hex340         2.095e+00  1.871e-02   111.943  &lt; 2e-16 ***\ndestination_hex341         7.450e-01  1.925e-02    38.703  &lt; 2e-16 ***\ndestination_hex342         1.433e+00  1.826e-02    78.520  &lt; 2e-16 ***\ndestination_hex363         7.891e-01  2.022e-02    39.017  &lt; 2e-16 ***\ndestination_hex364         2.191e+00  1.699e-02   128.990  &lt; 2e-16 ***\ndestination_hex383         1.156e+00  1.758e-02    65.752  &lt; 2e-16 ***\ndestination_hex384         3.975e-02  1.729e-02     2.300 0.021471 *  \ndestination_hex385         1.226e+00  2.128e-02    57.596  &lt; 2e-16 ***\ndestination_hex404         1.737e+00  2.123e-02    81.828  &lt; 2e-16 ***\ndestination_hex405         1.285e+00  1.831e-02    70.178  &lt; 2e-16 ***\ndestination_hex406         7.191e-01  1.607e-02    44.754  &lt; 2e-16 ***\ndestination_hex407         1.227e+00  1.741e-02    70.454  &lt; 2e-16 ***\ndestination_hex408         2.333e+00  1.591e-02   146.646  &lt; 2e-16 ***\ndestination_hex425        -1.634e-01  2.815e-02    -5.805 6.45e-09 ***\ndestination_hex426         5.617e-01  1.837e-02    30.585  &lt; 2e-16 ***\ndestination_hex427        -1.587e+00  2.770e-02   -57.282  &lt; 2e-16 ***\ndestination_hex428         2.596e-01  1.843e-02    14.082  &lt; 2e-16 ***\ndestination_hex429        -3.598e-02  2.733e-02    -1.316 0.188047    \ndestination_hex44          1.886e+00  2.604e-02    72.420  &lt; 2e-16 ***\ndestination_hex446         2.230e-01  2.680e-02     8.321  &lt; 2e-16 ***\ndestination_hex447        -5.877e-02  2.296e-02    -2.560 0.010470 *  \ndestination_hex448         3.064e-01  1.909e-02    16.049  &lt; 2e-16 ***\ndestination_hex449        -5.825e-01  1.706e-02   -34.154  &lt; 2e-16 ***\ndestination_hex450        -1.017e-01  1.932e-02    -5.266 1.40e-07 ***\ndestination_hex46          1.697e+00  2.503e-02    67.803  &lt; 2e-16 ***\ndestination_hex468         8.224e-01  1.828e-02    44.976  &lt; 2e-16 ***\ndestination_hex469        -4.570e-01  1.747e-02   -26.167  &lt; 2e-16 ***\ndestination_hex470         8.675e-02  1.669e-02     5.196 2.03e-07 ***\ndestination_hex471         2.596e-02  2.167e-02     1.198 0.231060    \ndestination_hex488        -9.092e-02  2.698e-02    -3.371 0.000750 ***\ndestination_hex489        -1.781e+00  4.962e-02   -35.883  &lt; 2e-16 ***\ndestination_hex490         5.388e-01  1.741e-02    30.945  &lt; 2e-16 ***\ndestination_hex491        -1.721e+00  2.127e-02   -80.904  &lt; 2e-16 ***\ndestination_hex493        -2.257e+00  5.166e-02   -43.696  &lt; 2e-16 ***\ndestination_hex494        -5.003e-01  2.660e-02   -18.811  &lt; 2e-16 ***\ndestination_hex509        -1.527e-01  2.109e-02    -7.242 4.43e-13 ***\ndestination_hex510         7.264e-01  1.810e-02    40.131  &lt; 2e-16 ***\ndestination_hex511         4.795e-02  1.660e-02     2.889 0.003864 ** \ndestination_hex512        -3.680e-02  1.643e-02    -2.239 0.025144 *  \ndestination_hex513         1.282e+00  1.689e-02    75.937  &lt; 2e-16 ***\ndestination_hex514         6.246e-01  1.922e-02    32.491  &lt; 2e-16 ***\ndestination_hex515        -5.124e-01  3.279e-02   -15.628  &lt; 2e-16 ***\ndestination_hex530        -8.141e-01  3.328e-02   -24.466  &lt; 2e-16 ***\ndestination_hex531         1.807e+00  1.633e-02   110.655  &lt; 2e-16 ***\ndestination_hex532         5.292e-01  1.760e-02    30.068  &lt; 2e-16 ***\ndestination_hex533         1.602e+00  1.557e-02   102.859  &lt; 2e-16 ***\ndestination_hex534         5.201e-01  1.651e-02    31.503  &lt; 2e-16 ***\ndestination_hex536        -3.868e-01  2.328e-02   -16.615  &lt; 2e-16 ***\ndestination_hex537        -8.113e-01  3.681e-02   -22.040  &lt; 2e-16 ***\ndestination_hex538        -1.511e+00  4.506e-02   -33.529  &lt; 2e-16 ***\ndestination_hex539        -4.790e+00  5.776e-01    -8.294  &lt; 2e-16 ***\ndestination_hex551         1.437e-01  2.336e-02     6.149 7.79e-10 ***\ndestination_hex552         1.900e+00  1.847e-02   102.881  &lt; 2e-16 ***\ndestination_hex553         1.356e-01  1.745e-02     7.770 7.85e-15 ***\ndestination_hex554        -1.534e-01  1.671e-02    -9.184  &lt; 2e-16 ***\ndestination_hex555         7.416e-01  1.698e-02    43.679  &lt; 2e-16 ***\ndestination_hex559        -1.743e+00  5.644e-02   -30.887  &lt; 2e-16 ***\ndestination_hex560         4.546e-01  2.221e-02    20.467  &lt; 2e-16 ***\ndestination_hex561        -1.607e+00  6.899e-02   -23.290  &lt; 2e-16 ***\ndestination_hex572        -2.958e-01  3.580e-02    -8.262  &lt; 2e-16 ***\ndestination_hex573         1.306e+00  1.824e-02    71.619  &lt; 2e-16 ***\ndestination_hex574        -6.975e-01  2.227e-02   -31.321  &lt; 2e-16 ***\ndestination_hex575         2.343e+00  1.543e-02   151.859  &lt; 2e-16 ***\ndestination_hex576         3.216e-01  1.652e-02    19.471  &lt; 2e-16 ***\ndestination_hex578        -3.255e+00  1.077e-01   -30.226  &lt; 2e-16 ***\ndestination_hex582        -2.042e+00  6.756e-02   -30.222  &lt; 2e-16 ***\ndestination_hex583        -3.616e+00  2.188e-01   -16.530  &lt; 2e-16 ***\ndestination_hex584        -5.996e-01  3.803e-02   -15.768  &lt; 2e-16 ***\ndestination_hex593        -1.004e+00  2.818e-02   -35.621  &lt; 2e-16 ***\ndestination_hex594         5.144e-01  2.019e-02    25.473  &lt; 2e-16 ***\ndestination_hex595         1.010e+00  1.632e-02    61.873  &lt; 2e-16 ***\ndestination_hex596         3.354e-01  1.611e-02    20.820  &lt; 2e-16 ***\ndestination_hex597        -3.075e-01  2.164e-02   -14.210  &lt; 2e-16 ***\ndestination_hex603        -1.801e+00  5.329e-02   -33.795  &lt; 2e-16 ***\ndestination_hex604        -6.618e-01  4.699e-02   -14.084  &lt; 2e-16 ***\ndestination_hex615        -5.080e-01  2.106e-02   -24.119  &lt; 2e-16 ***\ndestination_hex616         7.373e-01  1.740e-02    42.370  &lt; 2e-16 ***\ndestination_hex617        -4.542e-01  1.777e-02   -25.552  &lt; 2e-16 ***\ndestination_hex618         1.107e-02  1.646e-02     0.672 0.501279    \ndestination_hex620         4.811e-01  1.874e-02    25.668  &lt; 2e-16 ***\ndestination_hex637        -1.149e-01  1.863e-02    -6.166 7.00e-10 ***\ndestination_hex638         1.642e-01  1.629e-02    10.081  &lt; 2e-16 ***\ndestination_hex657         9.628e-01  1.672e-02    57.580  &lt; 2e-16 ***\ndestination_hex658         3.775e-01  1.636e-02    23.068  &lt; 2e-16 ***\ndestination_hex659         3.082e-01  1.627e-02    18.940  &lt; 2e-16 ***\ndestination_hex66          2.074e-01  4.607e-02     4.503 6.70e-06 ***\ndestination_hex660         9.656e-01  1.578e-02    61.192  &lt; 2e-16 ***\ndestination_hex662         4.212e-01  1.884e-02    22.358  &lt; 2e-16 ***\ndestination_hex67          1.216e+00  2.006e-02    60.632  &lt; 2e-16 ***\ndestination_hex677         8.061e-01  1.779e-02    45.325  &lt; 2e-16 ***\ndestination_hex678        -6.218e-01  2.054e-02   -30.279  &lt; 2e-16 ***\ndestination_hex679         7.214e-01  1.604e-02    44.987  &lt; 2e-16 ***\ndestination_hex68          1.151e+00  2.440e-02    47.170  &lt; 2e-16 ***\ndestination_hex680         2.347e+00  1.546e-02   151.753  &lt; 2e-16 ***\ndestination_hex681        -9.314e-01  2.348e-02   -39.670  &lt; 2e-16 ***\ndestination_hex699         4.832e-01  1.755e-02    27.530  &lt; 2e-16 ***\ndestination_hex700         2.533e-01  1.666e-02    15.206  &lt; 2e-16 ***\ndestination_hex701        -2.000e+00  2.440e-02   -81.958  &lt; 2e-16 ***\ndestination_hex702         6.558e-01  1.598e-02    41.043  &lt; 2e-16 ***\ndestination_hex704         5.482e-01  1.829e-02    29.966  &lt; 2e-16 ***\ndestination_hex722        -2.536e-01  1.803e-02   -14.067  &lt; 2e-16 ***\ndestination_hex725        -1.685e+00  3.082e-02   -54.674  &lt; 2e-16 ***\ndestination_hex741         1.087e+00  1.675e-02    64.901  &lt; 2e-16 ***\ndestination_hex743        -2.405e+00  2.587e-02   -92.999  &lt; 2e-16 ***\ndestination_hex744         6.311e-01  1.602e-02    39.405  &lt; 2e-16 ***\ndestination_hex761         1.211e+00  1.725e-02    70.195  &lt; 2e-16 ***\ndestination_hex762        -5.443e-01  1.976e-02   -27.545  &lt; 2e-16 ***\ndestination_hex763        -2.522e+00  2.543e-02   -99.197  &lt; 2e-16 ***\ndestination_hex764         1.127e+00  1.566e-02    71.952  &lt; 2e-16 ***\ndestination_hex765        -1.563e-01  1.779e-02    -8.786  &lt; 2e-16 ***\ndestination_hex767         1.524e-01  1.667e-02     9.139  &lt; 2e-16 ***\ndestination_hex772        -7.585e-01  3.774e-02   -20.098  &lt; 2e-16 ***\ndestination_hex784        -1.754e+00  2.500e-02   -70.149  &lt; 2e-16 ***\ndestination_hex785         1.309e-01  1.622e-02     8.069 7.09e-16 ***\ndestination_hex786         2.549e-01  1.604e-02    15.889  &lt; 2e-16 ***\ndestination_hex787        -1.705e-01  1.793e-02    -9.507  &lt; 2e-16 ***\ndestination_hex788        -1.451e+00  2.063e-02   -70.313  &lt; 2e-16 ***\ndestination_hex789        -1.797e+00  2.263e-02   -79.398  &lt; 2e-16 ***\ndestination_hex803        -1.183e-02  2.046e-02    -0.578 0.563232    \ndestination_hex804         2.102e-01  1.662e-02    12.647  &lt; 2e-16 ***\ndestination_hex805         1.599e+00  1.554e-02   102.923  &lt; 2e-16 ***\ndestination_hex806        -2.467e-01  1.633e-02   -15.110  &lt; 2e-16 ***\ndestination_hex807        -1.454e-01  1.674e-02    -8.682  &lt; 2e-16 ***\ndestination_hex808        -1.759e+00  2.488e-02   -70.720  &lt; 2e-16 ***\ndestination_hex809         2.003e-01  1.616e-02    12.394  &lt; 2e-16 ***\ndestination_hex810        -1.578e-01  1.747e-02    -9.036  &lt; 2e-16 ***\ndestination_hex814        -3.067e-02  2.456e-02    -1.249 0.211746    \ndestination_hex819         4.911e+00  2.020e-02   243.068  &lt; 2e-16 ***\ndestination_hex824         1.358e-01  2.023e-02     6.712 1.92e-11 ***\ndestination_hex826         3.010e-02  1.640e-02     1.835 0.066498 .  \ndestination_hex827        -3.385e-01  1.647e-02   -20.553  &lt; 2e-16 ***\ndestination_hex828         1.607e-01  1.600e-02    10.042  &lt; 2e-16 ***\ndestination_hex829        -2.995e-01  1.729e-02   -17.321  &lt; 2e-16 ***\ndestination_hex830        -1.162e+00  1.982e-02   -58.621  &lt; 2e-16 ***\ndestination_hex831         2.014e+00  1.548e-02   130.143  &lt; 2e-16 ***\ndestination_hex832         1.671e+00  1.563e-02   106.924  &lt; 2e-16 ***\ndestination_hex835        -7.990e-01  2.455e-02   -32.540  &lt; 2e-16 ***\ndestination_hex844        -4.331e-01  2.343e-02   -18.484  &lt; 2e-16 ***\ndestination_hex846        -1.376e-01  1.673e-02    -8.222  &lt; 2e-16 ***\ndestination_hex847         9.121e-01  1.589e-02    57.403  &lt; 2e-16 ***\ndestination_hex848        -2.566e-02  1.648e-02    -1.557 0.119442    \ndestination_hex849        -6.949e-01  1.730e-02   -40.160  &lt; 2e-16 ***\ndestination_hex850         1.725e-01  1.628e-02    10.593  &lt; 2e-16 ***\ndestination_hex851        -1.026e-01  1.643e-02    -6.246 4.21e-10 ***\ndestination_hex852        -1.826e-01  1.736e-02   -10.519  &lt; 2e-16 ***\ndestination_hex853         7.829e-02  1.718e-02     4.556 5.22e-06 ***\ndestination_hex854         9.375e-02  2.073e-02     4.522 6.12e-06 ***\ndestination_hex855        -3.810e-01  2.473e-02   -15.406  &lt; 2e-16 ***\ndestination_hex856        -1.871e+00  3.477e-02   -53.793  &lt; 2e-16 ***\ndestination_hex86         -3.034e-01  3.769e-02    -8.050 8.28e-16 ***\ndestination_hex866         5.648e-01  1.819e-02    31.054  &lt; 2e-16 ***\ndestination_hex867         1.369e+00  1.591e-02    86.097  &lt; 2e-16 ***\ndestination_hex868         1.012e+00  1.613e-02    62.736  &lt; 2e-16 ***\ndestination_hex869         2.031e+00  1.603e-02   126.700  &lt; 2e-16 ***\ndestination_hex87         -1.438e+00  8.838e-02   -16.275  &lt; 2e-16 ***\ndestination_hex870         1.464e+00  1.553e-02    94.253  &lt; 2e-16 ***\ndestination_hex871         1.468e+00  1.572e-02    93.409  &lt; 2e-16 ***\ndestination_hex872         2.962e-01  1.622e-02    18.256  &lt; 2e-16 ***\ndestination_hex873         4.825e-02  1.715e-02     2.813 0.004906 ** \ndestination_hex874        -1.738e+00  2.015e-02   -86.248  &lt; 2e-16 ***\ndestination_hex875        -1.284e+00  3.203e-02   -40.090  &lt; 2e-16 ***\ndestination_hex876        -6.069e-01  2.440e-02   -24.874  &lt; 2e-16 ***\ndestination_hex877         3.454e-01  2.073e-02    16.660  &lt; 2e-16 ***\ndestination_hex88          2.894e-01  2.262e-02    12.795  &lt; 2e-16 ***\ndestination_hex887        -2.916e-02  1.732e-02    -1.684 0.092149 .  \ndestination_hex888        -1.158e+00  2.037e-02   -56.871  &lt; 2e-16 ***\ndestination_hex889        -2.713e-01  1.986e-02   -13.661  &lt; 2e-16 ***\ndestination_hex89          7.000e-01  2.624e-02    26.672  &lt; 2e-16 ***\ndestination_hex890         6.200e-01  1.599e-02    38.768  &lt; 2e-16 ***\ndestination_hex891        -1.182e+00  2.084e-02   -56.705  &lt; 2e-16 ***\ndestination_hex893         6.986e-01  1.588e-02    43.980  &lt; 2e-16 ***\ndestination_hex894        -1.032e+00  1.917e-02   -53.825  &lt; 2e-16 ***\ndestination_hex895         7.779e-02  1.786e-02     4.354 1.33e-05 ***\ndestination_hex896        -1.733e+00  3.362e-02   -51.540  &lt; 2e-16 ***\ndestination_hex897        -1.736e+00  3.115e-02   -55.726  &lt; 2e-16 ***\ndestination_hex898         8.230e-02  2.075e-02     3.965 7.33e-05 ***\ndestination_hex90         -2.957e+00  5.002e-01    -5.912 3.38e-09 ***\ndestination_hex908         5.713e-01  1.843e-02    30.996  &lt; 2e-16 ***\ndestination_hex909        -1.409e-01  1.654e-02    -8.518  &lt; 2e-16 ***\ndestination_hex910        -8.612e-01  1.928e-02   -44.663  &lt; 2e-16 ***\ndestination_hex911         1.325e+00  1.575e-02    84.140  &lt; 2e-16 ***\ndestination_hex912        -4.502e-01  1.682e-02   -26.763  &lt; 2e-16 ***\ndestination_hex915         1.053e-01  1.636e-02     6.434 1.24e-10 ***\ndestination_hex917         1.169e+00  1.624e-02    72.014  &lt; 2e-16 ***\ndestination_hex918        -2.245e+00  4.269e-02   -52.576  &lt; 2e-16 ***\ndestination_hex919        -6.071e-01  2.105e-02   -28.835  &lt; 2e-16 ***\ndestination_hex928        -1.247e+00  2.282e-02   -54.649  &lt; 2e-16 ***\ndestination_hex929        -2.703e-01  1.672e-02   -16.165  &lt; 2e-16 ***\ndestination_hex930         6.317e-01  1.570e-02    40.225  &lt; 2e-16 ***\ndestination_hex931        -2.417e-01  1.832e-02   -13.195  &lt; 2e-16 ***\ndestination_hex932        -2.326e+00  2.870e-02   -81.046  &lt; 2e-16 ***\ndestination_hex933         2.618e-01  1.698e-02    15.421  &lt; 2e-16 ***\ndestination_hex934        -3.130e-01  1.727e-02   -18.123  &lt; 2e-16 ***\ndestination_hex935         2.029e+00  1.546e-02   131.189  &lt; 2e-16 ***\ndestination_hex938        -3.910e+00  1.748e-01   -22.376  &lt; 2e-16 ***\ndestination_hex939         2.183e+00  1.564e-02   139.587  &lt; 2e-16 ***\ndestination_hex940        -8.377e-01  2.396e-02   -34.955  &lt; 2e-16 ***\ndestination_hex949        -1.113e+00  2.097e-02   -53.066  &lt; 2e-16 ***\ndestination_hex950         6.651e-01  1.602e-02    41.509  &lt; 2e-16 ***\ndestination_hex951         1.515e+00  1.550e-02    97.789  &lt; 2e-16 ***\ndestination_hex952         9.299e-01  1.707e-02    54.485  &lt; 2e-16 ***\ndestination_hex953         2.831e-01  1.747e-02    16.203  &lt; 2e-16 ***\ndestination_hex954        -1.779e+00  2.288e-02   -77.751  &lt; 2e-16 ***\ndestination_hex955         1.023e+00  1.586e-02    64.485  &lt; 2e-16 ***\ndestination_hex956        -5.270e-01  1.776e-02   -29.665  &lt; 2e-16 ***\ndestination_hex957        -6.747e-02  1.743e-02    -3.871 0.000109 ***\ndestination_hex959         1.755e-02  2.670e-02     0.657 0.510913    \ndestination_hex961        -3.660e-02  1.934e-02    -1.892 0.058463 .  \ndestination_hex962         1.985e+00  1.597e-02   124.313  &lt; 2e-16 ***\ndestination_hex970         2.923e-01  1.643e-02    17.788  &lt; 2e-16 ***\ndestination_hex971         4.682e-01  1.591e-02    29.428  &lt; 2e-16 ***\ndestination_hex972        -4.232e-01  1.676e-02   -25.255  &lt; 2e-16 ***\ndestination_hex974        -6.480e-01  1.845e-02   -35.120  &lt; 2e-16 ***\ndestination_hex975        -1.460e+00  2.211e-02   -66.030  &lt; 2e-16 ***\ndestination_hex976        -7.905e-01  1.887e-02   -41.883  &lt; 2e-16 ***\ndestination_hex977        -2.957e-02  1.653e-02    -1.789 0.073557 .  \ndestination_hex978        -2.179e+00  1.867e-02  -116.734  &lt; 2e-16 ***\ndestination_hex982        -4.361e-01  1.864e-02   -23.400  &lt; 2e-16 ***\ndestination_hex983         6.683e+00  1.568e-02   426.168  &lt; 2e-16 ***\ndestination_hex984         4.502e+00  1.576e-02   285.630  &lt; 2e-16 ***\ndestination_hex991         2.699e-01  1.666e-02    16.199  &lt; 2e-16 ***\ndestination_hex992         5.355e-01  1.616e-02    33.128  &lt; 2e-16 ***\ndestination_hex993        -8.931e-01  1.797e-02   -49.700  &lt; 2e-16 ***\ndestination_hex994        -9.134e-01  1.890e-02   -48.335  &lt; 2e-16 ***\ndestination_hex995        -1.161e-01  1.715e-02    -6.769 1.30e-11 ***\ndestination_hex996        -7.516e-01  1.865e-02   -40.306  &lt; 2e-16 ***\ndestination_hex997         2.545e-03  2.005e-02     0.127 0.898985    \ndestination_hex998         2.747e-01  1.631e-02    16.837  &lt; 2e-16 ***\ndestination_hex999        -1.721e+00  1.809e-02   -95.128  &lt; 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 98559950  on 64884  degrees of freedom\nResidual deviance: 38046589  on 64063  degrees of freedom\nAIC: 38404932\n\nNumber of Fisher Scoring iterations: 8\n\n\nCode\nCalcRSquared(decSIM2$data$trips, decSIM2$fitted.values)\n\n\n[1] 0.3464084"
  },
  {
    "objectID": "take-home/the2.html#compare-the-result",
    "href": "take-home/the2.html#compare-the-result",
    "title": "Take-home 2 - Applied Spatial Interaction Models: A case study of Singapore public bus commuter flows",
    "section": "6.4 Compare The Result",
    "text": "6.4 Compare The Result\n\nPerformance Table\n\n\nCode\nmodel_list &lt;- list(\n  Unconstrained = uncSIM,\n  Unconstrained_with_Elimination = uncSIM2,\n  Origin_Constrained = orcSIM,\n  Origin_Constrained_with_Elimination = orcSIM2,\n  Destination_Constrained = decSIM,\n  Destination_Constrained_with_Elimination = decSIM2,\n  Doubly_Constrained = docSIM\n)\n\n# Compare performance with multiple metrics\ncompare_performance(model_list, metrics = c(\"AIC\", \"BIC\", \"RMSE\"))\n\n\n# Comparison of Model Performance Indices\n\nName                                     | Model |   AIC (weights) |   BIC (weights) |     RMSE\n-----------------------------------------------------------------------------------------------\nUnconstrained                            |   glm | 4.9e+07 (&lt;.001) | 4.9e+07 (&lt;.001) | 1692.464\nUnconstrained_with_Elimination           |   glm | 5.3e+07 (&lt;.001) | 5.3e+07 (&lt;.001) | 1760.563\nOrigin_Constrained                       |   glm | 3.9e+07 (&lt;.001) | 3.9e+07 (&lt;.001) | 1587.727\nOrigin_Constrained_with_Elimination      |   glm | 4.1e+07 (&lt;.001) | 4.1e+07 (&lt;.001) | 1624.736\nDestination_Constrained                  |   glm | 3.7e+07 (&lt;.001) | 3.7e+07 (&lt;.001) | 1485.920\nDestination_Constrained_with_Elimination |   glm | 3.8e+07 (&lt;.001) | 3.8e+07 (&lt;.001) | 1509.215\nDoubly_Constrained                       |   glm | 2.8e+07 (&gt;.999) | 2.8e+07 (&gt;.999) | 1267.730\n\n\n\n\nVisualized Fitted Value\n\n\nCode\n# Function to round fitted values and create a data frame\nround_and_rename &lt;- function(sim_data, sim_name) {\n  as.data.frame(sim_data$fitted.values) %&gt;%\n    round(digits = 0) %&gt;%\n    setNames(paste0(sim_name, \"_trips\"))\n}\n\n# Round and rename fitted values for each simulation\nuncSIM_fitted &lt;- round_and_rename(orcSIM, \"uncSIM\")\norcSIM_fitted &lt;- round_and_rename(orcSIM, \"orcSIM\")\ndecSIM_fitted &lt;- round_and_rename(decSIM, \"decSIM\")\ndocSIM_fitted &lt;- round_and_rename(docSIM, \"docSIM\")\nuncSIM2_fitted &lt;- round_and_rename(orcSIM2, \"uncSIM2\")\norcSIM2_fitted &lt;- round_and_rename(orcSIM2, \"orcSIM2\")\ndecSIM2_fitted &lt;- round_and_rename(decSIM2, \"decSIM2\")\n\n# Combine the rounded and renamed fitted values\nfinal_df_viz &lt;- final_df %&gt;%\n  cbind(uncSIM_fitted, orcSIM_fitted, decSIM_fitted, docSIM_fitted, uncSIM2_fitted, orcSIM2_fitted, decSIM2_fitted)\n\n# Create a function to generate a ggplot\ngenerate_ggplot &lt;- function(data, x_col, color, title) {\n  ggplot(data = data, aes(x = !!sym(x_col), y = trips)) +\n    geom_point(\n      size = data$trips / 10000,\n      alpha = .6,\n      shape = 21  # Change point shape\n    ) +\n    xlim(0, 50000) +\n    geom_smooth(\n      method = lm,\n      se = TRUE,\n      color = \"blue\"  # Change smooth line color\n    ) +\n    labs(title = title) +\n    theme(\n      plot.title = element_text(size = 10),\n      axis.text.x = element_blank(),\n      axis.ticks.x = element_blank(),\n      axis.text.y = element_blank(),\n      axis.title.y = element_blank()\n    )\n}\n\n# Generate ggplots for each simulation\np_unc &lt;- generate_ggplot(final_df_viz, \"uncSIM_trips\", \"black\", \"Unconstrained\")\np_orc &lt;- generate_ggplot(final_df_viz, \"orcSIM_trips\", \"black\", \"Origin-constrained\")\np_dec &lt;- generate_ggplot(final_df_viz, \"decSIM_trips\", \"black\", \"Destination-constrained\")\np_doc &lt;- generate_ggplot(final_df_viz, \"docSIM_trips\", \"black\", \"Doubly-constrained\")\np_unc2 &lt;- generate_ggplot(final_df_viz, \"uncSIM2_trips\", \"black\", \"Unconstrained with Elimination\")\np_orc2 &lt;- generate_ggplot(final_df_viz, \"orcSIM2_trips\", \"black\", \"Origin-constrained with Elimination\")\np_dec2 &lt;- generate_ggplot(final_df_viz, \"decSIM2_trips\", \"black\", \"Destination-constrained with Elimination\")\n\n# Combine the plots using patchwork\np_unc + p_unc2 + p_orc + p_orc2 + p_dec + p_dec2+ p_doc"
  }
]